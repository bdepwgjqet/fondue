cscope 15 $HOME/code/acmt -q 0000003327 0001551840
	@problems/ac_dream/2012_7_21/ac_dream_a.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	ga
,
	gb
,
	gc
,
	gd
,
	ge
,
	gf
,
	gg
,
	gh
,
	gi
,
	gj
,
	gk
,
	gm
;

36 
LL
 
	$ff
(
LL
 
a
,LL 
b
,LL 
c
,LL 
x
)

38  
a
*
x
*x+
b
*x+
c
;

39 
	}
}

41 
	$maö
()

43 
t
;

44 
LL
 
ªt
,
x
;

45 
	`sˇnf
("%d",&
t
);

46 
t
--)

48 
cö
>>
m
>>
a
>>
b
>>
c
>>
d
>>
e
>>
f
>>
g
>>
h
>>
i
>>
j
>>
k
;

49 
ªt
=0;

50 
x
=0;

51 ; 
ªt
<
m
;)

53 
x
++;

54 
LL
 
wi
=(
j
*
x
+
k
)%3;

55 if(
wi
==0)

56 
ªt
+=
	`ff
(
a
,
b
,
c
,
x
);

57 if(
wi
==1)

58 
ªt
+=
	`ff
(
d
,
e
,
f
,
x
);

60 
ªt
+=
	`ff
(
g
,
h
,
i
,
x
);

62 
cout
<<
x
<<
ídl
;

65 
	}
}

	@problems/ac_dream/2012_7_21/ac_dream_b.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	gm©
[
N
][N];

34 
	g˙t
[
N
][N],
	gn
,
	gm
;

35 
	gdú
[8][2]={{1,0},{-1,0},{0,1},{0,-1},{1,1},{-1,1},{1,-1},{-1,-1}};

37 
ölöe
 
	$ö
(
i
,
j
)

39  0<=
i
&&i<
n
&&0<=
j
&&j<n;

40 
	}
}

42 
	$maö
()

44 
t
;

45 
	`sˇnf
("%d",&
t
);

46 ; 
t
--; )

48 
x
,
y
;

49 
	`sˇnf
("%d%d",&
n
,&
m
);

50 
i
=0; i<
n
; i++)

51 
	`sˇnf
("%s",
m©
[
i
]);

52 
i
=0; i<
m
; i++)

54 
	`mem£t
(
˙t
,0,(cnt));

55 
u
=0; u<
n
; u++)

56 
v
=0; v<
n
; v++)

57 if(
m©
[
u
][
v
]=='b')

59 
˙t
[
u
][
v
]++;

60 
j
=0; j<8; j++)

62 
x
=
dú
[
j
][0]+
u
,
y
=dú[j][1]+
v
;

63 if(
	`ö
(
x
,
y
))

64 
˙t
[
x
][
y
]++;

67 
u
=1; u<
n
-1; u++)

68 
v
=1; v<
n
-1; v++)

70 if(
˙t
[
u
][
v
]>=5)

71 
m©
[
u
][
v
]='b';

73 
m©
[
u
][
v
]='w';

76 
w
=0,
b
=0;

77 
i
=0; i<
n
; i++)

78 
j
=0; j<
n
; j++)

80 if(
m©
[
i
][
j
]=='b')

81 
b
++;

83 
w
++;

85 
	`¥ötf
("%d %d\n",
b
,
w
);

88 
	}
}

	@problems/ac_dream/2012_7_21/ac_dream_h.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gm©
[
N
][N],
	gèg
[N],
	gnow
[N][N],
	gtmp
[N][N];

36 
LL
 
	$ˇlc
(
n
,
t
)

38 
LL
 
ªt
=0;

39 
	`mem£t
(
now
,0,(now));

40 
i
=0; i<
n
; i++)

41 
now
[
i
][i]=1;

42 
k
=0; k<
t
; k++)

44 
	`mem£t
(
tmp
,0,(tmp));

45 
i
=0; i<
n
; i++)

46 
j
=0; j<
n
; j++)

47 
u
=0; u<
n
; u++)

48 
tmp
[
i
][
j
]+=
now
[i][
u
]*
m©
[u][j];

49 
i
=0; i<
n
; i++)

50 
j
=0; j<
n
; j++)

51 
now
[
i
][
j
]=
tmp
[i][j];

53 
i
=0; i<
n
; i++)

54 if(
èg
[
i
]==1)

55 
ªt
+=
now
[0][
i
];

56  
ªt
;

57 
	}
}

59 
	$maö
()

61 
t
,
n
,
x
,
y
,
z
;

62 
	`sˇnf
("%d",&
t
);

63 ; 
t
--;)

65 
	`sˇnf
("%d",&
n
);

66 
	`mem£t
(
m©
,0,(mat));

67 
i
=0; i<
n
; i++)

69 
ii
,
â
;

70 
	`sˇnf
("%d%d%d%d%d",&
ii
,&
x
,&
y
,&
z
,&
â
);

71 
ii
-=1,
x
-=1,
y
-=1,
z
-=1;

72 
èg
[
ii
]=
â
;

73 
m©
[
ii
][
x
]++;

74 
m©
[
ii
][
y
]++;

75 
m©
[
ii
][
z
]++;

77 
	`sˇnf
("%d",&
x
);

78 
cout
<<
	`ˇlc
(
n
,
x
)<<
ídl
;

81 
	}
}

	@problems/ac_dream/2012_7_21/ac_dream_k.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
°rög
 
	gs
[
N
],
	gss
;

35 
	gbs
[
N
],
	gfs
[N],
	gbt
,
	g·
,
	gt›
,
	gnow
;

37 
	$maö
()

39 
t
,
ˇ
=1;

40 
	`sˇnf
("%d",&
t
);

41 
t
--)

43 
	`¥ötf
("Ca£ %d:\n",
ˇ
++);

44 
bt
=
·
=-1;

45 
t›
=1;

46 
now
=0;

47 
s
[0]=
	`°rög
("http://www.lightoj.com/");

48 
cö
>>
ss
)

50 if(
ss
=="QUIT")

52 if(
ss
=="VISIT")

54 
bs
[++
bt
]=
now
;

55 
cö
>>
s
[
t›
++];

56 
now
=
t›
-1;

57 
cout
<<
s
[
t›
-1]<<
ídl
;

58 
·
=-1;

60 if(
ss
=="BACK")

62 if(
bt
<0)

63 
	`puts
("Ignored");

66 
fs
[++
·
]=
now
;

67 
cout
<<
s
[
bs
[
bt
]]<<
ídl
;

68 
now
=
bs
[
bt
];

69 
bt
--;

74 if(
·
<0)

75 
	`puts
("Ignored");

78 
bs
[++
bt
]=
now
;

79 
cout
<<
s
[
fs
[
·
]]<<
ídl
;

80 
now
=
fs
[
·
];

81 
·
--;

87 
	}
}

	@problems/ac_dream/2012_8_11/hust_C.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

4 
	#N
 100011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gve˘‹
<> 
	gm©
[
N
];

8 
	gdp
[
N
],
	gd©
[N];

10 
	$maö
()

12 
m
,
n
,
x
;

13 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

15 
i
=0; i<
N
; i++)

16 
m©
[
i
].
	`˛ór
();

17 if(
m
==0&&
n
==0)

19 
i
=0; i<
m
; i++)

20 
j
=0; j<
n
; j++)

22 
	`sˇnf
("%d",&
x
);

23 
m©
[
i
].
	`push_back
(
x
);

25 
i
=0; i<
m
; i++)

28 
j
=0; j<
n
; j++)

30 
x
=
m©
[
i
][
j
];

31 if(
j
>=2)

32 
dp
[
j
]=
	`max
(
x
+dp[j-2],dp[j-1]);

33 if(
j
==1)

34 
dp
[
j
]=
	`max
(dp[0],
x
);

36 
dp
[
j
]=
x
;

38 
d©
[
i
]=
dp
[
n
-1];

40 
i
=0; i<
m
; i++)

42 if(
i
>=2)

43 
dp
[
i
]=
	`max
(dp[i-2]+
d©
[i],dp[i-1]);

44 if(
i
==1)

45 
dp
[
i
]=
	`max
(dp[0],
d©
[i]);

47 
dp
[
i
]=
d©
[0];

49 
	`¥ötf
("%d\n",
dp
[
m
-1]);

52 
	}
}

	@problems/ac_dream/2012_8_11/hust_D.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1111

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
][N],
	g˙t
[N][N];

8 
	gs1
[
N
],
	gs2
[N];

9 
	gn
,
	gl1
,
	gl2
;

11 
	$sﬁve
()

13 
ªt
=0;

14 
	`mem£t
(
dp
,0,(dp));

15 
	`mem£t
(
˙t
,0,(cnt));

16 
i
=1; i<=
l1
; i++)

17 
j
=1; j<=
l2
; j++)

19 if(
s1
[
i
]==
s2
[
j
])

20 
˙t
[
i
][
j
]=cnt[i-1][j-1]+1;

22 
˙t
[
i
][
j
]=0;

24 
i
=1; i<=
l1
; i++)

25 
j
=1; j<=
l2
; j++)

27 if(
s1
[
i
]==
s2
[
j
])

29 if(
˙t
[
i
][
j
]>=
n
)

31 
k
=
n
; k<=
˙t
[
i
][
j
]; k++)

32 
dp
[
i
][
j
]=
	`max
(dp[i][j],dp[i-
k
][j-k]+k);

35 
dp
[
i
][
j
]=
	`max
(dp[i][j],max(dp[i-1][j],dp[i][j-1]));

36 
ªt
=
	`max
‘ë,
dp
[
i
][
j
]);

38  
ªt
;

39 
	}
}

41 
	$maö
()

43 
	`sˇnf
("%d",&
n
)!=
EOF
)

45 if(
n
==0)

47 
	`sˇnf
("%s%s",
s1
+1,
s2
+1);

48 
l1
=
	`°æí
(
s1
+1);

49 
l2
=
	`°æí
(
s2
+1);

50 
ªt
=
	`sﬁve
();

51 
	`¥ötf
("%d\n",
ªt
);

54 
	}
}

	@problems/ac_dream/2012_8_11/hust_E.cpp

1 
	~<c°dio
>

2 
	#N
 1001

	)

4 
	snode
{ 
	my
,
	mm
,
	md
,
	mv
; }
	gno
[
N
];

5 
	gmo
[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};

7 
ölöe
 
	$is
(
y
){  ((y%4==0)&&(y%100))||(y%400==0); 
	}
}

8 
ölöe
 
	$equÆ
(
node
 
a
,nodê
b
){ á.
y
==b.y&&a.
m
==b.m&&a.
d
==b.d; 
	}
}

10 
	$ok
(
node
 
a
,nodê
b
)

12 
m
;

13 
a
.
d
++;

14 if(
	`is
(
a
.
y
)&&a.
m
==2)

15 
m
=
mo
[
a
.m]+1;

17 
m
=
mo
[
a
.m];

18 if(
a
.
d
>
m
)

19 
a
.
d
=1,a.
m
++;

21  
	`equÆ
(
a
,
b
);

22 if(
a
.
m
>12)

23 
a
.
m
=1,a.
y
++;

24  
	`equÆ
(
a
,
b
);

25 
	}
}

27 
	$maö
()

29 
n
;

30 
	`sˇnf
("%d",&
n
)!=
EOF
)

32 if(
n
==0)

34 
i
=0; i<
n
; i++)

35 
	`sˇnf
("%d%d%d%d",&
no
[
i
].
d
,&no[i].
m
,&no[i].
y
,&no[i].
v
);

36 
l
=0,
ªt
=0;

37 
node
 
now
=
no
[0];

38 
i
=1; i<
n
; i++)

40 if(
	`ok
(
now
,
no
[
i
]))

41 
l
++,
ªt
+=
no
[
i
].
v
-
now
.v;

42 
now
=
no
[
i
];

44 
	`¥ötf
("%d %d\n",
l
,
ªt
);

47 
	}
}

	@problems/ac_dream/2012_8_11/hust_K.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	tLL
;

4 
usög
 
«me•a˚
 
	g°d
;

5 
	$maö
()

7 
LL
 
n
;

9 
cö
>>
n
)

11 if(
n
==0)

13 
cout
<<
n
*“+1)*(2*n+1)/6<<
ídl
;

16 
	}
}

	@problems/acm_diy/2012/ACM_DIY_3.cpp

8 
	~<c°rög
>

9 
	~<c°dio
>

10 
	~<ve˘‹
>

11 
	~<£t
>

12 
	~<m≠
>

13 
	~<queue
>

14 
	~<°rög
>

15 
	~<s°ªam
>

16 
	~<cm©h
>

17 
	~<fun˘i⁄Æ
>

18 
	~<io°ªam
>

19 
	~<Æg‹ôhm
>

20 
	#N
 1010

	)

21 
	#M
 1000010

	)

22 
	#S
 1000100

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3fffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

36 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

37 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

38 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	gn
;

40 
	gbô
[
N
],
	gt›
,
	gtmp
[N],
	gç
,
	g¬
,
	gmm
;

41 
	ga
,
	g°
,
	ged
;

42 
	s™s
{ 
	mx
,
	my
,
	mz
; }
	gªt
[
N
];

44 
	$maö
()

46 
t
;

47 
	`sˇnf
("%d",&
t
);

48 ; 
t
--;)

50 
cö
>>
n
;

51 
t›
=0;

52 ; 
n
;Ç>>=1)

54 if(
n
&1)

55 
tmp
[
t›
]=1;

57 
tmp
[
t›
]=0;

58 
t›
++;

60 
ç
=0;

61 
i
=0; i<
t›
; i++)

62 if(
tmp
[
i
])

63 
bô
[
ç
++]=
i
;

64 
	`mem£t
(
m©
,-1,(mat));

65 
a
=
bô
[
ç
-1];

66 
¬
=
ç
+
bô
[tp-1];

67 
mm
=2*
bô
[
ç
-1]+4*(tp-1);

68 
°
=1,
ed
=2;

69 if(
¬
>100||
mm
>300||
a
>100)

70 
	`puts
("NO");

73 
t›
=0;

74 if(
ç
==0)

75 
t›
=0;

76 if(
a
>=2)

78 
ªt
[
t›
].
x
=
s
,ªt[t›].
y
=3,ªt[t›++].
z
=1;

79 
ªt
[
t›
].
x
=
s
,ªt[t›].
y
=3,ªt[t›++].
z
=1;

81 if(
a
==1)

83 
ªt
[
t›
].
x
=
s
,ªt[t›].
y
=
t
,ªt[t›++].
z
=1;

84 
ªt
[
t›
].
x
=
s
,ªt[t›].
y
=
t
,ªt[t›++].
z
=1;

86 if(
a
==0)

88 
ªt
[
t›
].
x
=
s
,ªt[t›].
y
=
t
,ªt[t›++].
z
=1;

90 
i
=3; i<=
a
)

92 
ªt
[
t›
].
x
=
i
,ªt[t›].
y
=i+1,ªt[t›++].
z
=1;

93 
ªt
[
t›
].
x
=
i
,ªt[t›].
y
=i+1,ªt[t›++].
z
=1;

99 
	}
}

	@problems/acm_diy/2012/ACM_DIY_4.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

38 
	gt
,
	gn
,
	gm
;

39 
	g˙t
[
N
];

41 
	$ok
()

43 
x
,
y
,
èg
=1;

44 
i
=0; i<
m
; i++)

46 
	`sˇnf
("%d%d",&
x
,&
y
);

47 if(
˙t
[
x
]==
öf
)

48 
˙t
[
x
]=
y
;

49 if(
˙t
[
x
]!=
y
)

50 
èg
=0;

52 if(
èg
==0)

54 
s
=0;

55 
i
=1; i<=
n
; i++)

57 if(
˙t
[
i
]==
öf
)

59 if(
˙t
[
i
]<0||˙t[i]>
n
-1)

61 
s
+=
˙t
[
i
];

63 if(
s
>
n
-1)

66 
	}
}

68 
	$maö
()

70 
	`sˇnf
("%d",&
t
);

71 ; 
t
--;)

73 
i
=0; i<
N
; i++)

74 
˙t
[
i
]=
öf
;

75 
	`sˇnf
("%d%d",&
n
,&
m
);

76 if(
	`ok
())

77 
	`puts
("YES");

79 
	`puts
("NO");

82 
	}
}

	@problems/acm_diy/2012/ACM_DIY_9.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	gd©
[
N
],
	gdes
[N];

41 
	$sﬁve
(
l
,
r
)

44 if(
r
-
l
<=1)

46 
i
=
l
; i<=
r
; i++)

47 if(
d©
[
i
]!=
des
[i])

51 
LL
 
s
=0;

52 
i
;

53 
i
=
l
; i<
r
; i++)

55 
s
+=
d©
[
i
];

56 if(
s
==
des
[
l
])

59 if(
i
>=
r
)

61 if(
i
>
l
)

63 
d©
[
i
+1]=dat[i]+dat[i+1];

64 
k
=
i
; k>=
l
+2; k--)

65 
d©
[
k
]=dat[k-1];

66 
d©
[
l
+1]=-(
s
-dat[l]);

67 
d©
[
l
]=
s
;

69  
	`sﬁve
(
l
+1,
r
);

70 
	}
}

72 
	$maö
()

74 
n
,
t
;

75 
	`sˇnf
("%d",&
t
);

76 ; 
t
--;)

78 
	`sˇnf
("%d",&
n
);

79 
i
=0; i<
n
; i++)

80 
cö
>>
d©
[
i
];

81 
i
=0; i<
n
; i++)

82 
cö
>>
des
[
i
];

83 if(
	`sﬁve
(0,
n
-1))

84 
	`puts
("yes");

86 
	`puts
("no");

89 
	}
}

	@problems/acm_diy/2012/ACM_DIY_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 31

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

37 
	gt
,
	gn
,
	gm
,
	g˙t
[
N
];

38 
	gp
[
N
][N];

39 
LL
 
	gªt
;

40 
LL
 
	gc
[
N
][N];

41 
LL
 
	gb
[
N
];

43 
	$öô
()

45 
c
[0][0]=c[1][0]=c[1][1]=1;

46 
b
[0]=1;

47 
i
=2; i<21; i++)

49 
c
[
i
][0]=c[i][i]=1;

50 
j
=1; j<
i
; j++)

51 
c
[
i
][
j
]=c[i-1][j-1]+c[i-1][j];

53 
i
=1; i<21; i++)

54 
b
[
i
]=b[i-1]<<1;

63 
	}
}

65 
	$maö
()

67 
	`öô
();

68 
	`sˇnf
("%d",&
t
);

69 
ˇ
=1; ca<=
t
; ca++)

71 
	`sˇnf
("%d%d",&
n
,&
m
);

72 
	`mem£t
(
˙t
,0,(cnt));

73 
ªt
=0.0;

74 
i
=0; i<
n
; i++)

76 
	`sˇnf
("%s",&
p
[
i
]);

77 
j
=0; j<
n
; j++)

78 if(
p
[
i
][
j
]=='1')

79 
˙t
[
i
]++;

81 
i
=0; i<
n
; i++)

83 
j
=
m
; j<=
˙t
[
i
]; j++)

85 
ªt
+=
c
[
˙t
[
i
]][
j
]*
b
[
n
-cnt[i]-1];

88 
	`¥ötf
("%.2lf\n",1.0*
ªt
/
b
[
n
]);

105 
	}
}

	@problems/acm_diy/2012/ACM_DIY_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	g£t
<> 
	g°
;

40 
	g£t
<>::
ôî©‹
 
ô
;

41 
	snode
{ 
	mx
,
	mi
; }
	gno
[
N
];

42 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
<b.x; 
	}
}

43 
	gªt
[
N
],
	gd©
[N];

45 
	$maö
()

47 
t
,
n
;

48 
	`sˇnf
("%d",&
t
);

49 
ˇ
=1; ca<=
t
; ca++)

51 
°
.
	`˛ór
();

52 
	`sˇnf
("%d",&
n
);

53 
i
=0; i<
n
; i++)

55 
	`sˇnf
("%d",&
no
[
i
].
x
);

56 
no
[
i
].i=i;

57 
d©
[
i
]=
no
[i].
x
;

59 
	`s‹t
(
no
,no+
n
,
cmp
);

60 
tmp
,
dis
;

61 
j
;

62 
i
=0; i<
n
; i=
j
)

70 
j
=
i
+1; j<
n
; j++)

71 if(
no
[
j
].
x
!Úo[
i
].x)

73 
k
=
i
; k<
j
; k++)

75 
°
.
	`ö£π
(
no
[
k
].
i
);

76 
ô
=
°
.
	`föd
(
no
[
k
].
i
);

77 
tmp
=-1;

78 
dis
=
öf
;

79 if(
ô
!=
°
.
	`begö
())

81 
ô
--;

82 if(
dis
>
no
[
k
].
i
-(*
ô
))

84 
dis
=
no
[
k
].
i
-(*
ô
);

85 
tmp
=*
ô
;

87 
ô
++;

89 
ô
++;

90 if(
ô
!=
°
.
	`íd
())

92 if(
dis
>(*
ô
)-
no
[
k
].
i
)

94 
dis
=(*
ô
)-
no
[
k
].
i
;

95 
tmp
=*
ô
;

98 
°
.
	`îa£
(
no
[
k
].
i
);

99 if(
tmp
==-1)

100 
ªt
[
no
[
k
].
i
]=0;

102 
ªt
[
no
[
k
].
i
]=
d©
[
tmp
];

104 
k
=
i
; k<
j
; k++)

105 
°
.
	`ö£π
(
no
[
k
].
i
);

107 
	`¥ötf
("%d",
ªt
[0]);

108 
i
=1; i<
n
; i++)

109 
	`¥ötf
(" %d",
ªt
[
i
]);

110 
	`puts
("");

113 
	}
}

	@problems/acm_icpc_contest/2013_changchun_online/1004.cpp

8 
	~<io°ªam
>

9 
	~<f°ªam
>

10 
	~<°rög.h
>

11 
	~<c°dio
>

12 
	~<Æg‹ôhm
>

13 
	~<°rög
>

14 
	~<ve˘‹
>

15 
	~<queue
>

16 
	~<ˇs£π
>

17 
	~<li°
>

18 
	~<iom™ù
>

19 
	~<m©h.h
>

20 
	~<deque
>

21 
	~<utûôy
>

22 
	~<m≠
>

23 
	~<£t
>

24 
	~<bô£t
>

25 
	~<numîic
>

26 
	~<˛imôs
>

27 
	~<c˘y≥
>

28 
	~<cm©h
>

29 
	~<c°dlib
>

30 
	~<s°ªam
>

32 
usög
 
«me•a˚
 
	g°d
;

34 
	#m¥
 
make_∑ú


	)

35 
	tuŒ
;

36 
	tŒ
;

37 
	g∑ú
 <, > 
	tpii
;

38 
	g∑ú
 <
	tŒ
,Ül> 
	t∂l
;

39 
	g∑ú
 <, > 
	tpdd
;

40 
	gve˘‹
 <> 
	tvi
;

41 
	gve˘‹
 <
	tŒ
> 
	tvŒ
;

42 
	gve˘‹
 <> 
	tvd
;

43 
	gve˘‹
 <
	t°rög
> 
	tvs
;

44 
	gm≠
 <
	t°rög
, > 
	tmpsi
;

45 
	gm≠
 <, > 
	tmpdi
;

46 
	gm≠
 <, > 
	tmpii
;

48 c⁄° 
	gpi
 = 
acos
(0.0) * 2.0;

49 c⁄° 
	gïs
 = 1e-12;

50 c⁄° 
	g°ï
[8][2] = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}, {1, -1}, {-1, 1}, {-1, -1}};

52 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$abs1
(
T
 
a
Ë{á < 0 ? -®:á;
	}
}

53 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
max1
(T 
a
, T 
b
, T 
c
 = -1234567, T 
d
 = -1234567) {

54 
T
 
™s
 = 
a
 > 
b
 ?á : b;

55 if(
	gc
 !-1234567Ë
™s
 = 
max1
◊ns, 
c
);

56 if(
	gd
 !-1234567Ë
™s
 = 
max1
◊ns, 
d
);

57  
	g™s
;

59 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
mö1
(T 
a
, T 
b
, T 
c
 = -1234567, T 
d
 = -1234567) {

60 
T
 
™s
 = 
a
 < 
b
 ?á : b;

61 if(
	gc
 !-1234567Ë
™s
 = 
mö
◊ns, 
c
);

62 if(
	gd
 !-1234567Ë
™s
 = 
mö
◊ns, 
d
);

63  
	g™s
;

65 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$gcd1
(
T
 
a
, T 
b
) {

66 if(
a
 < 
b
Ë
	`sw≠
(a, b);

67 if(
a
 % 
b
 == 0)  b;

68  
	`gcd1
(
b
, 
a
 % b);

69 
	}
}

70 
	gãm∂©e
 <
˛ass
 
	gT
> 
ölöe
 
T
 
	$lb
(
T
 
num
Ë{Çum & (-num); 
	}
}

71 
ölöe
 
	$jud
(
a
, 
b
){

72 if(
	`abs
(
a
Ë< 
ïs
 &&ábs(
b
) <Éps)  0;

73 if(
	`abs1
(
a
 - 
b
Ë/ábs1◊Ë< 
ïs
)  0;

74 if(
a
 < 
b
)  -1;

76 
	}
}

77 
	gãm∂©e
 <
ty≥«me
 
	gt
>

78 
ölöe
 
	$jud
(
t
 
a
,Å 
b
){

79 if(
a
 < 
b
)  -1;

80 if(
a
 =
b
)  0;

82 
	}
}

83 
	gãm∂©e
 <
ty≥«me
 
	gô
,Åy≥«mê
	gt1
>

84 
ölöe
 
	$föd
(
t1
 
vÆ
, 
ô
 
a
, 
«
, 
boﬁ
 
f_smÆl
 = 1, boﬁ 
f_lb
 = 1){

85 
be
 = 0, 
í
 = 
«
 - 1;

86 if(*
a
 <*◊ + 
«
 - 1)){

87 if(
f_lb
 =0Ë
be
 < 
í
){

88 
mid
 = (
be
 + 
í
 + 1) / 2;

89 if(
	`jud
(*(
a
 + 
mid
), 
vÆ
Ë!1Ë
be
 = mid;

90 
í
 = 
mid
 - 1;

91 }
be
 < 
í
){

92 
mid
 = (
be
 + 
í
) / 2;

93 if(
	`jud
(*(
a
 + 
mid
), 
vÆ
Ë!-1Ë
í
 = mid;

94 
be
 = 
mid
 + 1;

96 if(
f_smÆl
 && 
	`jud
(*(
a
 + 
be
), 
vÆ
) == 1) be--;

97 if(!
f_smÆl
 && 
	`jud
(*(
a
 + 
be
), 
vÆ
) == -1) be++;

99 if(
f_lb
Ë
be
 < 
í
){

100 
mid
 = (
be
 + 
í
 + 1) / 2;

101 if(
	`jud
(*(
a
 + 
mid
), 
vÆ
Ë!-1Ë
be
 = mid;

102 
í
 = 
mid
 - 1;

103 }
be
 < 
í
){

104 
mid
 = (
be
 + 
í
) / 2;

105 if(
	`jud
(*(
a
 + 
mid
), 
vÆ
Ë!1Ë
í
 = mid;

106 
be
 = 
mid
 + 1;

108 if(!
f_smÆl
 && 
	`jud
(*(
a
 + 
be
), 
vÆ
) == -1) be--;

109 if(
f_smÆl
 && 
	`jud
(*(
a
 + 
be
), 
vÆ
) == 1) be++;

111  
be
;

112 
	}
}

113 
ölöe
 
	$bônum
(
uŒ
 
nVÆue
){

114 
nVÆue
 = ((0xaaaaaaaaaaaaaaaaull &ÇValue)>>1) + (0x5555555555555555ull &ÇValue);

115 
nVÆue
 = ((0xccccccccccccccccull &ÇValue)>>2) + (0x3333333333333333ull &ÇValue);

116 
nVÆue
 = ((0xf0f0f0f0f0f0f0f0ull &ÇValue)>>4) + (0x0f0f0f0f0f0f0f0full &ÇValue);

117 
nVÆue
 = ((0xff00ff00ff00ff00ull &ÇValue)>>8) + (0x00ff00ff00ff00ffull &ÇValue);

118 
nVÆue
 = ((0xffff0000ffff0000ull &ÇValue)>>16) + (0x0000ffff0000ffffull &ÇValue);

119 
nVÆue
 = ((0xffffffff00000000ull &ÇValue)>>32) + (0x00000000ffffffffull &ÇValue);

120  
nVÆue
;

121 
	}
}

122 
	$pow
(
n
, 
m
, 
mod
 = 0){

123 
™s
 = 1;

124 
k
 = 
n
;

125 
m
){

126 if(
m
 & 1) {

127 
™s
 *
k
;

128 if(
mod
Ë
™s
 %= mod;

130 
k
 *= k;

131 if(
mod
Ë
k
 %= mod;

132 
m
 >>= 1;

134  
™s
;

135 
	}
}

140 
Œ
 
	gn
, 
	gm
;

141 
	gnˇ£
;

143 
	$maö
(){

144 
ios_ba£
::
	`sync_wôh_°dio
(0);

146 
	`sˇnf
("%d", &
nˇ£
);

147 
	`sˇnf
("%I64d%I64d", &
n
, &
m
) != -1) {

148 
Œ
 
a
 = 
m
, 
b
 = 
	`pow
(
n
, m - 1);

149 
Œ
 
gcd
 = 
	`__gcd
(
a
, 
b
);

150 
a
 /
gcd
; 
b
 /= gcd;

151 
	`¥ötf
("%I64d/%I64d\n", 
a
, 
b
);

155 
	}
}

	@problems/acm_icpc_contest/2013_changchun_online/1005.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 1001000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gs
[
N
];

9 
	gf
[
N
];

10 
	gÊag
[
N
];

12 
	$sﬁve
() {

13 
f
[0]=-1;

14 
l
=
	`°æí
(
s
),
p
;

15 
i
=1; i<
l
; i++) {

16 
p
=
f
[
i
-1];

17 ; 
p
>=0&&
s
[p+1]!=s[
i
];) {

18 
p
=
f
[p];

20 if(
s
[
p
+1]==s[
i
]) {

21 
f
[
i
]=
p
+1;

24 
f
[
i
]=-1;

33 
	`mem£t
(
Êag
,0,(flag));

34 
p
=
l
-1;

35 ; 
f
[
p
]!=-1;) {

36 
Êag
[
f
[
p
]]=1;

37 
p
=
f
[p];

39 
ªt
=0;

40 
i
=0; i<
l
; i++) {

41 if(
f
[
i
]!=-1) {

42 if(
f
[
i
]+f[i]<=i&&
Êag
[f[i]]&&i+f[i]<
l
) {

43 
ªt
=
	`max
‘ë,
f
[
i
]+1);

47  
ªt
;

48 
	}
}

50 
	$maö
() {

51 
n
;

52 
	`sˇnf
("%d",&
n
);

53 
i
=0; i<
n
; i++) {

54 
	`sˇnf
("%s",
s
);

55 
	`¥ötf
("%d\n",
	`sﬁve
());

58 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/a.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<io°ªam
>

5 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

8 
	gMOD
;

10 
LL
 
	$gmod
(
LL
 
x
) {

11  ((
x
%
MOD
)+MOD)%MOD;

12 
	}
}

14 
	snode
 {

15 
LL
 
	ma
,
	mb
,
	mc
,
	md
;

16 
node
(){}

17 
node
(
LL
 
a
,LL 
b
,LL 
c
,LL 
d
):a(a),b(b),c(c),d(d){}

18 
node
 
	m›î©‹
*“odê
	mx
) {

19  
node
(
gmod
(
a
*
x
.a+
b
*x.
c
),gmod◊*x.b+b*x.
d
),gmod(c*x.a+d*x.c),gmod(c*x.b+d*x.d));

23 
	$f
(
n
,
a
,
b
) {

24 
node
 
x
=
	`node
(
	`gmod
(2*
a
),gmod(
b
-1LL*a*a),1,0);

25 
node
 
ªt
=
	`node
(1,0,0,1);

26 
k
=
n
-1;

27 ; 
k
;) {

28 if(
k
&1)

29 
ªt
Ùë*
x
;

30 
x
=x*x;

31 
k
>>=1;

33  
	`gmod
(2LL*
a
*
ªt
.a+ªt.
b
*2LL);

34 
	}
}

36 
	$maö
() {

37 
a
,
b
,
n
;

38 
	`sˇnf
("%d%d%d%d",&
a
,&
b
,&
n
,&
MOD
)+1) {

39 
cout
<<
	`f
(
n
,
a
,
b
)<<
ídl
;

42 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/b.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

5 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

8 c⁄° 
	gN
 = 100111;

10 
LL
 
	gpos
[
N
],
	gS
,
	gT
,
	gdp
[51][N][2],
	gªtk
,
	gªtm
;

11 
	grk
[2][
N
],
	gn
,
	gm
,
	gtmp
[N],
	gƒk
[N],
	gsum
[N];

13 
ölöe
 
LL
 
	$B
(
i
) {

14  1LL<<
i
;

15 
	}
}

17 
	$sﬁve
(
LL
 
up
) {

18 
i
=0; i<=
m
; i++)

19 
j
=0; j<=
n
; j++)

20 
dp
[
i
][
j
][0]=dp[i][j][1]=0;

21 
dp
[0][0][0]=1;

22 
i
=0; i<
n
; i++)

23 
rk
[0][
i
]=i;

24 
i
=1; i<=
m
; i++) {

25 
now
=
i
&1,
¥e
Úow^1,
t›
=0;

26 
sum
[0]=0;

27 
j
=0; j<
n
; j++) {

28 if(
pos
[
rk
[
¥e
][
j
]]&
	`B
(
i
-1)) {

29 
rk
[
now
][
t›
++]Ùk[
¥e
][
j
];

30 
sum
[
j
+1]=sum[j]+1;

33 
sum
[
j
+1]=sum[j];

36 
j
=0; j<
n
; j++)

37 if((
pos
[
rk
[
¥e
][
j
]]&
	`B
(
i
-1))==0)

38 
rk
[
now
][
t›
++]Ùk[
¥e
][
j
];

39 
j
=0; j<=
n
; j++) {

41 
now°
=((
j
-
sum
[j])+(sum[
n
]-sum[j]))&1,
nx
=sum[j];

42 
s°
=(
S
&
	`B
(
i
-1))>0?1:0;

43 if(
now°
==
s°
) {

44 if((
up
&
	`B
(
i
-1))==0) {

45 
dp
[
i
][
nx
][1]+=dp[i-1][
j
][1];

46 
dp
[
i
][
nx
][0]+=dp[i-1][
j
][0];

49 
dp
[
i
][
nx
][0]+=dp[i-1][
j
][0]+dp[i-1][j][1];

53 
now°
=(
sum
[
j
]+(
n
-j-(sum[n]-sum[j])))&1;

54 
nx
=
j
+(
sum
[
n
]-sum[j]);

55 if(
now°
==
s°
) {

56 if((
up
&
	`B
(
i
-1))==0) {

57 
dp
[
i
][
nx
][1]+=dp[i-1][
j
][0]+dp[i-1][j][1];

60 
dp
[
i
][
nx
][0]+=dp[i-1][
j
][0];

61 
dp
[
i
][
nx
][1]+=dp[i-1][
j
][1];

66 
ªtk
=
ªtm
=0;

67 
i
=0; i<=
n
; i++) {

68 
ªtm
+=
dp
[
m
][
i
][0];

69 
ªtk
+=
dp
[
m
][
i
][1];

71 
ªtk
+=
ªtm
;

73 
	}
}

75 
	$maö
() {

76 
	`sˇnf
("%d%d%I64d%I64d",&
n
,&
m
,&
S
,&
T
)+1) {

78 
LL
 
nows
=0;

79 
i
=0; i<
n
; i++) {

80 
	`sˇnf
("%I64d",&
pos
[
i
]);

82 
nows
^=
pos
[
i
];

84 
LL
 
k
=
T
/
	`B
(
m
);

85 
LL
 
up
=
T
%
	`B
(
m
);

86 
	`sﬁve
(
up
);

87 
LL
 
ªt
=
k
*
ªtk
+
ªtm
;

88 if(
nows
==
S
)

89 
ªt
--;

91 
	`¥ötf
("%I64d\n",
ªt
);

94 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/c.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

7 c⁄° 
	gN
 = 1000010;

9 
	ga
[
N
],
	g˛o
[N];

10 
LL
 
	gsum
[
N
];

12 
	$maö
() {

13 
n
;

14 
T
=0;

15 
	`sˇnf
("%d",&
n
)+1) {

16 
T
++;

17 
i
=1; i<=
n
; i++)

18 
	`sˇnf
("%d",&
a
[
i
]);

19 if(
T
>=40) ;

20 
sum
[0]=0;

21 
i
=1; i<=
n
; i++)

22 
sum
[
i
]=sum[i-1]+
a
[i];

23 
id
=1;

24 
i
=1; i<=
n
; i++)

25 if(
sum
[
i
-1]+i-1<=
a
[i])

26 
id
=
i
;

27 
LL
 
âl
=0;

28 
˛o
[
id
]=0;

29 
j
=
id
+1; j<=
n
; j++) {

30 
˛o
[
j
]=˛o[j-1]+(
a
[j-1]-clo[j-1]<=0);

31 
âl
+=
	`max
(0,
a
[
j
]-
˛o
[j]);

33 
âl
+=
sum
[
id
-1]+id-1;

34 if(
âl
<
a
[
id
])

35 
	`puts
("Bad Rescue");

36 if(
âl
==
a
[
id
])

37 
	`¥ötf
("%d\n",
id
);

39 
	`puts
("Unknown");

42 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/d.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<queue
>

5 
	~<ve˘‹
>

6 
	~<utûôy
>

8 
usög
 
«me•a˚
 
	g°d
;

10 c⁄° 
	gN
 = 222;

11 c⁄° 
	göf
 = 0x3ffffff;

13 
	snode
 {

14 
	mx
,
	my
,
	md
;

15 
node
(){}

16 
node
(
x
,
y
,
d
):x(x),y(y),d(d){}

17 
boﬁ
 
	m›î©‹
<(c⁄° 
	mnode
 &
	ma
) const{

18  
	md
>
	ma
.d;

22 
	gvÆ
[
N
][N],
	gdis
[N][N],
	gid
[N][N],
	gvis
[N][N],
	ggood˙t
,
	gmidis
[N][N];

23 
	gve˘‹
<
	g∑ú
<,> > 
	gpo
;

24 
	gve˘‹
<
	g∑ú
<,> > 
	ggr
[
N
];

25 
	gqueue
<
	gnode
> 
	gq
;

26 
	gm
,
	gn
;

28 
	gdú
[4][2]={{-1,0},{0,-1},{1,0},{0,1}};

30 
	$öbﬂrd
(
x
,
y
) {

31  0<=
x
&&x<
m
&&0<=
y
&&y<
n
;

32 
	}
}

34 
	$gid
(
x
,
y
) {

35 if(
	`öbﬂrd
(
x
,
y
))

36  
id
[
x
][
y
];

38 
	}
}

40 
	$sﬁve
(
nid
,
x
,
y
) {

41 
i
=0; i<
m
; i++) {

42 
j
=0; j<
n
; j++) {

43 
vis
[
i
][
j
]=0;

44 
midis
[
i
][
j
]=
öf
;

47 ; !
q
.
	`em±y
();)

48 
q
.
	`p›
();

49 
dis
[
nid
][nid]=
vÆ
[nid][nid];

50 
midis
[
x
][
y
]=
vÆ
[x][y];

51 
q
.
	`push
(
	`node
(
x
,
y
,
vÆ
[x][y]));

52 
vis
[
x
][
y
]=1;

53 ; !
q
.
	`em±y
();) {

54 
node
 
now
=
q
.
	`‰⁄t
();

55 
q
.
	`p›
();

56 
vis
[
now
.
x
][now.
y
]=0;

57 
i
=0; i<4; i++) {

58 
xx
=
now
.
x
+
dú
[
i
][0],
yy
Úow.
y
+dir[i][1];

59 
nxid
=
	`gid
(
xx
,
yy
);

60 if(
nxid
==-1) {

61 if(
midis
[
xx
][
yy
]>midis[
now
.
x
][now.
y
]+
vÆ
[xx][yy] && val[xx][yy]>=0) {

62 
midis
[
xx
][
yy
]=midis[
now
.
x
][now.
y
]+
vÆ
[xx][yy];

63 if(!
vis
[
xx
][
yy
]) {

64 
vis
[
xx
][
yy
]=1;

65 
q
.
	`push
(
	`node
(
xx
,
yy
,
midis
[
now
.
x
][now.
y
]+
vÆ
[xx][yy]));

68 } if(
nxid
==0) {

69 
dis
[
nid
][0]=
	`mö
(dis[nid][0],
midis
[
now
.
x
][now.
y
]);

70 
dis
[0][
nid
]=dis[nid][0];

72 if(
midis
[
xx
][
yy
]>midis[
now
.
x
][now.
y
]+
vÆ
[xx][yy] && val[xx][yy]>=0) {

73 
midis
[
xx
][
yy
]=midis[
now
.
x
][now.
y
]+
vÆ
[xx][yy];

74 
dis
[
nid
][
nxid
]=dis[nxid][nid]=
	`mö
(dis[nid][nxid],
midis
[
xx
][
yy
]);

75 if(!
vis
[
xx
][
yy
]) {

76 
vis
[
xx
][
yy
]=1;

77 
q
.
	`push
(
	`node
(
xx
,
yy
,
midis
[
now
.
x
][now.
y
]+
vÆ
[xx][yy]));

83 
	}
}

85 
	gdp
[15][1<<14];

87 
ölöe
 
	$B
(
i
){

88  1<<
i
;

89 
	}
}

91 
	$dfs
(
now
,
°
) {

92 if(
dp
[
now
][
°
]>=0)

93  
dp
[
now
][
°
];

94 
sub
=0;

95 if(
now
>=1)

96 
sub
=
vÆ
[
po
[
now
-1].
fú°
][po[now-1].
£c⁄d
];

97 if(
°
==
	`B
(
good˙t
+1)-1) {

98  
dp
[
now
][
°
]=
dis
[now][0]-
sub
;

100 
ªt
=
öf
;

101 
i
=0; i<
gr
[
now
].
	`size
(); i++) {

102 
to
=
gr
[
now
][
i
].
fú°
;

103 if((
°
&
	`B
(
to
))==0) {

104 
ªt
=
	`mö
(
	`dfs
(
to
,
°
|
	`B
—o))+
gr
[
now
][
i
].
£c⁄d
-
sub
,ret);

107  
dp
[
now
][
°
]=
ªt
;

108 
	}
}

110 
	$maö
() {

111 
T
;

112 
	`sˇnf
("%d",&
T
);

113 
ˇ
=1; ca<=
T
; ca++) {

114 
	`sˇnf
("%d%d",&
m
,&
n
);

115 
i
=0; i<
m
; i++) {

116 
j
=0; j<
n
; j++) {

117 
	`sˇnf
("%d",&
vÆ
[
i
][
j
]);

120 
	`sˇnf
("%d",&
good˙t
);

121 
now
=1;

122 
	`mem£t
(
id
,-1,(id));

123 
po
.
	`˛ór
();

124 
i
=0; i<
good˙t
; i++) {

125 
x
,
y
;

126 
	`sˇnf
("%d%d",&
x
,&
y
);

127 
po
.
	`push_back
(
	`make_∑ú
(
x
,
y
));

128 
id
[
x
][
y
]=
now
++;

130 
i
=0; i<20; i++) {

131 
j
=0; j<20; j++) {

132 
dis
[
i
][
j
]=
öf
;

135 
dis
[0][0]=0;

136 
i
=0; i<
po
.
	`size
(); i++) {

137 
x
=
po
[
i
].
fú°
,
y
ıo[i].
£c⁄d
;

138 if(
vÆ
[
x
][
y
]<0) ;

139 
	`sﬁve
(
id
[
x
][
y
],x,y);

141 
i
=0; i<
N
; i++)

142 
gr
[
i
].
	`˛ór
();

143 
i
=0; i<
now
; i++) {

144 
j
=
i
+1; j<
now
; j++) {

145 if(
dis
[
i
][
j
]<
öf
) {

146 
gr
[
i
].
	`push_back
(
	`make_∑ú
(
j
,
dis
[i][j]));

147 
gr
[
j
].
	`push_back
(
	`make_∑ú
(
i
,
dis
[i][j]));

151 
	`mem£t
(
dp
,-1,(dp));

152 
	`dfs
(0,1);

153 if(
dp
[0][1]>=0 && dp[0][1]<
öf
)

154 
	`¥ötf
("%d\n",
dp
[0][1]);

156 
	`puts
("0");

159 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/e.cpp

1 
	~<c°dio
>

3 
	tLL
;

5 
	ga
[6],
	gn
,
	gmod
;

7 
LL
 
	$gmod
(
LL
 
x
,
MOD
) {

8  (
x
%
MOD
+MOD)%MOD;

9 
	}
}

11 
LL
 
	$f
(
LL
 
x
,
MOD
) {

12 
LL
 
ªt
=0;

13 
i
=
n
; i>=0; i--) {

14 
LL
 
now
=1;

15 
j
=0; j<
i
; j++)

16 
now
=
	`gmod
“ow*
x
,
MOD
);

17 
ªt
=
	`gmod
‘ë+gmod(
now
*
a
[
i
],
MOD
),MOD);

19  
ªt
;

20 
	}
}

22 
	$maö
() {

23 
T
;

24 
	`sˇnf
("%d",&
T
);

25 
ˇ
=1; ca<=
T
; ca++) {

26 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

27 
	`sˇnf
("%d",&
n
);

28 
i
=
n
; i>=0; i--)

29 
	`sˇnf
("%d",&
a
[
i
]);

30 
	`sˇnf
("%d",&
mod
);

31 
èg
=1;

32 
i
=0; i<
mod
&&
èg
; i++) {

33 if(
	`f
(
i
,
mod
)==0) {

34 
j
=
i
; j<
mod
*mod&&
èg
; j+=mod) {

35 if(
	`f
(
j
,
mod
*mod)==0) {

36 
	`¥ötf
("%d\n",
j
);

37 
èg
=0;

42 if(
èg
)

43 
	`puts
("No solution!");

46 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/f.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

4 
	~<Æg‹ôhm
>

6 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

9 c⁄° 
	gN
 = 70;

10 c⁄° 
LL
 
	göf
 = 0x7fffffffLL;

12 
LL
 
	gdp
[
N
][N];

13 
	g˙t
[
N
],
	gn
;

15 
ölöe
 
LL
 
	$B
(
i
) {

16  1LL<<
i
;

17 
	}
}

19 
LL
 
	$dfs
(
id
,
c
) {

20 if(
dp
[
id
][
c
]>=0)

21  
dp
[
id
][
c
];

22 if(
id
==
n
) {

23  
dp
[
id
][
c
]=
˙t
[
n
-c]*
	`B
(c);

25 
LL
 
ªt
=
öf
;

26 if(
c
<16)

27 
ªt
=
	`mö
‘ë,
	`dfs
(
id
+1,
c
+1));

28 
ªt
=
	`mö
‘ë,
	`dfs
(
id
+1,0)+
	`B
(
c
+1)*
˙t
[id-c]);

29  
dp
[
id
][
c
]=
ªt
;

30 
	}
}

32 
	$maö
() {

33 
T
;

34 
	`sˇnf
("%d",&
T
);

35 
ˇ
=1; ca<=
T
; ca++) {

36 
	`sˇnf
("%d",&
n
);

37 
i
=0; i<
n
; i++)

38 
	`sˇnf
("%d",&
˙t
[
i
]);

39 
	`mem£t
(
dp
,-1,(dp));

40 
cout
<<
	`dfs
(0,0)<<
ídl
;

43 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/g.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

5 
usög
 
«me•a˚
 
	g°d
;

7 c⁄° 
	göf
 = 10000000;

8 c⁄° 
	gN
 = 110;

9 
	gn
,
	gm
,
	gâl
,
	g°
,
	ged
;

11 
	gco°
[
N
],
	gß
[N],
	gdis
[N][N],
	gdp
[N][333],
	gi°o
[N][333],
	gvis°
;

13 
	$dfs
(
now
,
ª°
) {

14 if(
dp
[
now
][
ª°
]>=0)

15  
dp
[
now
][
ª°
];

16 if(
now
==
n
+1) {

17 
i°o
[
now
][
ª°
]=1;

18  
dp
[
now
][
ª°
]=0;

20 
ªt
=0,
ô
=0;

21 
i
=0; i<
n
+2; i++) {

22 if((
ß
[
i
]>ß[
now
]||i==
n
+1Ë&& 
ª°
>=
dis
[now][i]+
co°
[i]) {

23 
√xtv
=
	`dfs
(
i
,
ª°
-
dis
[
now
][i]-
co°
[i]);

24 if(
i°o
[
i
][
ª°
-
dis
[
now
][i]-
co°
[i]]) {

25 
ô
=1;

26 
ªt
=
	`max
‘ë,
√xtv
+
ß
[
i
]);

30 
i°o
[
now
][
ª°
]=
ô
;

31  
dp
[
now
][
ª°
]=
ªt
;

32 
	}
}

34 
	$maö
() {

35 
T
;

36 
	`sˇnf
("%d",&
T
);

37 
ˇ
=1; ca<=
T
; ca++) {

38 
	`¥ötf
("Ca£ #%d:\n",
ˇ
);

39 
	`sˇnf
("%d%d%d%d%d",&
n
,&
m
,&
âl
,&
°
,&
ed
);

40 
i
=0; i<
n
; i++)

41 
	`sˇnf
("%d",&
co°
[
i
]);

42 
co°
[
n
]=cost[n+1]=0;

43 
i
=0; i<
n
; i++)

44 
	`sˇnf
("%d",&
ß
[
i
]);

45 
ß
[
n
]=sa[n+1]=0;

46 
i
=0; i<
n
+2; i++) {

47 
j
=0; j<
n
+2; j++)

48 
dis
[
i
][
j
]=
öf
;

49 
dis
[
i
][i]=0;

51 
i
=0; i<
m
; i++) {

52 
u
,
v
,
l
;

53 
	`sˇnf
("%d%d%d",&
u
,&
v
,&
l
);

54 
dis
[
u
][
v
]=dis[v][u]=
	`mö
(dis[u][v],
l
);

56 
dis
[
n
][
°
]=dis[st][n]=0;

57 
dis
[
n
+1][
ed
]=dis[ed][n+1]=0;

58 
k
=0; k<
n
+2; k++)

59 
i
=0; i<
n
+2; i++)

60 
j
=0; j<
n
+2; j++)

61 
dis
[
i
][
j
]=
	`mö
(dis[i][
k
]+dis[k][j],dis[i][j]);

62 
	`mem£t
(
i°o
,0,(isto));

63 
	`mem£t
(
dp
,-1,(dp));

64 
	`¥ötf
("%d\n",
	`dfs
(
n
,
âl
));

67 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/h.cpp

1 
	~<c°dio
>

2 
	$maö
() {

3 
n
,
m
;

4 
	`sˇnf
("%d%d",&
m
,&
n
)+1) {

5 
ªt
=0,
k
=0;

6 
i
=0; i<
n
; i+=2) {

7 
ªt
+=2*(
m
-
k
);

8 if(
i
+1==
n
)

9 
ªt
-=
m
-
k
;

10 
k
++;

12 
	`¥ötf
("%d\n",
ªt
);

14 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/j.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

4 
usög
 
«me•a˚
 
	g°d
;

5 
	tLL
;

7 c⁄° 
	göf
 = 1000000001;

9 
	gèg
;

10 
	gve˘‹
<> 
	gvec
;

12 
LL
 
	$pow
(
LL
 
a
,LL 
b
) {

13 
LL
 
ªt
=1;

14 ; 
b
;) {

15 if(
a
>=
öf
)  inf;

16 if(
b
&1) {

17 
ªt
Ùë*
a
;

18 if(
ªt
>=
öf
)

19  
öf
;

21 
b
>>=1;

22 
a
=a*a;

24  
ªt
;

25 
	}
}

27 
	$dfs
(
c
,
a
,
b
,
l
,
r
,
k
) {

28 if(
c
==1) {

29 if(
l
>
r
)  0;

30 
now
=
	`max
(
	`mö
(
b
,
r
)-max(
a
,
l
)+1,0);

31 if(
now
>=
k
) {

32 
èg
=1;

33 
vec
.
	`push_back
(
	`max
(
a
,
l
)+
k
-1);

35  
now
;

37 
ªt
=0;

38 
LL
 
up
=
	`mö
(1LL*
b
,
r
/
	`pow
(
a
,
c
-1));

39 
LL
 
down
=
	`max
(1LL*
a
,
l
/
	`pow
(
b
,
c
-1));

40 
i
=
down
; i<=
up
&&(!
èg
); i++) {

41 
ªt
Ùë+
	`dfs
(
c
-1,
i
,
b
,(
l
+i-1)/i,
r
/i,
k
-ret);

42 if(
èg
) {

43 
vec
.
	`push_back
(
i
);

46  
ªt
;

47 
	}
}

49 
	$maö
() {

50 
a
,
b
,
l
,
r
,
k
,
ˇ
=1,
T
;

51 
	`sˇnf
("%d",&
T
);

52 
ˇ
=1; ca<=
T
; ca++) {

53 
	`sˇnf
("%d%d%d%d%d",&
a
,&
b
,&
l
,&
r
,&
k
);

54 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

55 
èg
=0;

56 
vec
.
	`˛ór
();

57 
i
=1; i<=30&&(!
èg
); i++) {

58 
now
=
	`dfs
(
i
,
a
,
b
,
l
,
r
,
k
);

59 
k
-=
now
;

61 if(
èg
) {

62 
™s
=1;

63 
i
=0; i<
vec
.
	`size
(); i++)

64 
™s
*=
vec
[
i
];

65 
	`¥ötf
("%d\n",
™s
);

66 
	`¥ötf
("%d",
vec
[vec.
	`size
()-1]);

67 
i
=
vec
.
	`size
()-2; i>=0; i--)

68 
	`¥ötf
(" %d",
vec
[
i
]);

69 
	`puts
("");

72 
	`puts
("-1");

76 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/k_tle.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<cm©h
>

4 
	~<m≠
>

5 
	~<utûôy
>

7 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
	gN
 = 20022;

9 c⁄° 
	göf
 = 1e10;

11 
	gve˘‹
<
	g∑ú
<,> > 
	gå
[
N
];

12 
	gve˘‹
<> 
	gtmp
[
N
];

14 
	gn
,
	gL
,
	gÀn
[
N
],
	ggΩ
[N];

15 
	gdp
[
N
],
	gdp1
[N],
	gdp2
[N];

17 
	gm≠
<,> 
	gmp
;

18 
	gm≠
<,> 
	gmps
[
N
];

20 
	$dfs
(
now
,
p
) {

21 
i
=0; i<
å
[
now
].
	`size
(); i++) {

22 
to
=
å
[
now
][
i
].
fú°
;

23 
l
=
å
[
now
][
i
].
£c⁄d
;

24 if(
p
!=
to
) {

25 
Àn
[
to
]ˆí[
now
]+
l
;

26 
gΩ
[
to
]=(
now
==0?to:grp[now]);

27 
	`dfs
(
to
,
now
);

30 
	}
}

32 
	$qt
(
x
) {

33  
x
*x;

34 
	}
}

36 
	$y
(
i
,
èg
) {

37  
dp
[
i
]+
	`sqπ
(dp[i])+1.0*
Àn
[i]*Àn[i]+
èg
*2.0*
L
*len[i];

38 
	}
}

40 
	$gëk
(
i
,
j
,
èg
) {

41  (
	`y
(
i
,
èg
)-y(
j
,èg))/(
Àn
[i]-len[j]);

42 
	}
}

44 
	$_xmu…
(
x1
,
y1
,
x2
,
y2
) {

45  
x1
*
y2
-
x2
*
y1
;

46 
	}
}

48 
	$xmu…
(
i
,
j
,
k
,
èg
) {

49  
	`_xmu…
(
Àn
[
j
]-Àn[
i
],
	`y
(j,
èg
)-y(i,èg),Àn[
k
]-len[j],y(k,tag)-y(j,tag));

50 
	}
}

52 
	$gë_vÆ
(
i
,
j
) {

53  
dp
[
i
]+
	`sqπ
(dp[i])+
	`qt
(
	`abs
(
Àn
[
j
]-Àn[i])-
L
);

54 
	}
}

56 
	$gao1
(
now
,
p
) {

57 
i
=0; i<
å
[
now
].
	`size
(); i++) {

58 
to
=
å
[
now
][
i
].
fú°
;

59 
l
=
å
[
now
][
i
].
£c⁄d
;

60 if(
to
==
p
) ;

61 
tmp
[
now
].
	`˛ór
();

62 ;
mp
.
	`size
()>=2;) {

63 if(
	`gëk
((++
mp
.
	`begö
())->
£c⁄d
,mp.begö()->£c⁄d,1)<=2.0*
Àn
[
to
]) {

64 
tmp
[
now
].
	`push_back
(
mp
.
	`begö
()->
£c⁄d
);

65 
mp
.
	`îa£
(mp.
	`begö
());

70 ; 
mp
.
	`size
()>=2;) {

71 if(
	`xmu…
((++
mp
.
	`rbegö
())->
£c⁄d
,mp.rbegö()->£c⁄d,
to
,1)<=0) {

72 
tmp
[
now
].
	`push_back
(
mp
.
	`rbegö
()->
£c⁄d
);

73 
mp
.
	`îa£
((--mp.
	`íd
()));

78 
dp
[
to
]=
	`gë_vÆ
(
mp
.
	`rbegö
()->
£c⁄d
,to);

79 
mp
[
Àn
[
to
]]=to;

80 
	`gao1
(
to
,
now
);

81 
mp
.
	`îa£
((--mp.
	`íd
()));

82 
j
=0; j<
tmp
[
now
].
	`size
(); j++) {

83 
x
=
tmp
[
now
][
j
];

84 
mp
[
Àn
[
x
]]=x;

87 if(
å
[
now
].
	`size
()==1) {

88 
dp1
[
gΩ
[
now
]]=
	`mö
(dp1[gΩ[now]],
dp
[now]);

90 
	}
}

92 
	$gë_v
(
i
,
now
) {

93 if(
mps
[
i
].
	`size
()<=0)  0;

94 ; 
mps
[
i
].
	`size
()>=2;) {

95 if(
	`gëk
(
mps
[
i
].
	`rbegö
()->
£c⁄d
,(++mps[i].rbegö())->£c⁄d,-1)>=2*
Àn
[
now
])

96 
mps
[
i
].
	`îa£
((--mps[i].
	`íd
()));

100 
dp
[
now
]=
	`gë_vÆ
(
mps
[
i
].
	`rbegö
()->
£c⁄d
,now);

101 ; 
mps
[
i
].
	`size
()>=2;) {

102 if(
	`xmu…
(
now
,
mps
[
i
].
	`begö
()->
£c⁄d
,(++mps[i].begin())->second,-1)<=0)

103 
mps
[
i
].
	`îa£
(mps[i].
	`begö
());

107  
dp
[
now
];

108 
	}
}

110 
	$mîge
(
i
,
j
) {

111 if(
mps
[
i
].
	`size
()<mps[
j
].size()) {

112 
	`mîge
(
j
,
i
);

113 
mps
[
i
]=mps[
j
];

115 ; 
mps
[
j
].
	`size
()>0;) {

116 
now
=
mps
[
j
].
	`begö
()->
£c⁄d
;

117 
mps
[
j
].
	`îa£
(mps[j].
	`begö
());

118 if(
mps
[
i
].
	`cou¡
(
Àn
[
now
])>0) {

119 if(
	`y
(
now
,-1)>=y(
mps
[
i
][
Àn
[now]],-1))

122 
mps
[
i
][
Àn
[
now
]]=now;

123 if(
mps
[
i
].
	`size
()<=2) ;

124 
m≠
<,>::
ôî©‹
 
ô
=
mps
[
i
].
	`föd
(
Àn
[
now
]),
l
,
r
;

125 if(
ô
!=(--
mps
[
i
].
	`íd
())&&ô!=mps[i].
	`begö
()) {

126 
l
=
ô
,l--;

127 
r
=
ô
,r++;

128 if(
	`xmu…
(
l
->
£c⁄d
,
ô
->£c⁄d,
r
->second,-1)<=0) {

129 
mps
[
i
].
	`îa£
(
ô
);

133 ; 
ô
!=(++
mps
[
i
].
	`begö
())&&it!=mps[i].begin();) {

134 
r
=
ô
,r--;

135 
l
=
r
,l--;

136 if(
	`xmu…
(
l
->
£c⁄d
,
r
->£c⁄d,
ô
->second,-1)<=0) {

137 
mps
[
i
].
	`îa£
(
r
);

141 ; 
ô
!=(--
mps
[
i
].
	`íd
())&&it!=(--(--mps[i].end()));) {

142 
l
=
ô
,l++;

143 
r
=
l
,r++;

144 if(
	`xmu…
(
ô
->
£c⁄d
,
l
->£c⁄d,
r
->second,-1)<=0) {

145 
mps
[
i
].
	`îa£
(
l
);

150 
	}
}

152 
	$gao2
(
now
,
p
) {

153 
mps
[
now
].
	`˛ór
();

154 
i
=0; i<
å
[
now
].
	`size
(); i++) {

155 
to
=
å
[
now
][
i
].
fú°
;

156 
l
=
å
[
now
][
i
].
£c⁄d
;

157 if(
to
==
p
)

159 
	`gao2
(
to
,
now
);

160 if(
now
==0) {

161 
dp2
[
to
]=
	`mö
(dp2[to],
	`gë_v
—o,
now
));

164 
	`mîge
(
now
,
to
);

167 if(
now
==0) ;

168 if(
å
[
now
].
	`size
()==1) {

169 
dp
[
now
]=0;

171 
dp
[
now
]=
	`gë_v
(now,now);

173 
mps
[
now
][
Àn
[now]]=now;

174 
	}
}

176 
	$maö
() {

177 
	`sˇnf
("%d%d",&
n
,&
L
)+1) {

178 
i
=0; i<
n
; i++) {

179 
å
[
i
].
	`˛ór
();

180 
dp1
[
i
]=
öf
;

181 
dp2
[
i
]=
öf
;

182 
Àn
[
i
]=0;

184 
i
=0; i<
n
-1; i++) {

185 
x
,
y
,
z
;

186 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

187 
å
[
x
-1].
	`push_back
(
	`make_∑ú
(
y
-1,
z
));

188 
å
[
y
-1].
	`push_back
(
	`make_∑ú
(
x
-1,
z
));

190 if(
å
[0].
	`size
()<=1) {

191 
	`puts
("-1");

194 
	`dfs
(0,-1);

195 
mp
.
	`˛ór
();

196 
mp
[0]=0;

197 
dp
[0]=0;

198 
	`gao1
(0,-1);

199 
mp
.
	`˛ór
();

200 
	`gao2
(0,-1);

201 
mi1
=
öf
,
mi2
=öf,
mid
;

202 
i
=0; i<
å
[0].
	`size
(); i++) {

203 
to
=
å
[0][
i
].
fú°
;

204 if(
dp2
[
to
]<
mi1
) {

205 
mi2
=
mi1
;

206 
mi1
=
dp2
[
to
];

207 
mid
=
to
;

208 } if(
dp2
[
to
]<
mi2
) {

209 
mi2
=
dp2
[
to
];

212 
ªt
=
öf
;

213 
i
=0; i<
å
[0].
	`size
(); i++) {

214 
to
=
å
[0][
i
].
fú°
;

215 if(
to
==
mid
)

216 
ªt
=
	`mö
‘ë,
dp1
[
to
]+
mi2
);

218 
ªt
=
	`mö
‘ë,
dp1
[
to
]+
mi1
);

220 
	`¥ötf
("%.2f\n",
ªt
);

223 
	}
}

	@problems/acm_icpc_contest/2013_changsha_invite/r.cpp

1 
	~<c°dio
>

2 
	~<˘ime
>

3 
	~<ve˘‹
>

4 
	~<Æg‹ôhm
>

6 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
	gN
 = 1000;

9 c⁄° 
	gMOD
 = 10;

11 
	sEdge
 {

12 
	mu
, 
	mv
, 
	mw
;

13 
Edge
() {}

14 
Edge
(
_u
, 
_v
, 
_w
Ë: 
u
(_u), 
v
(_v), 
w
(_w) {}

15 
boﬁ
 
	m›î©‹
 < (c⁄° 
	mEdge
 &
	mo
) const {

16  
	mw
 < 
	mo
.w;

20 
	sDisjoöt_Së
 {

21 
	mÁ
[
N
];

22 
öô
() {

23 
	mi
 = 0; i < 
	mN
; i++Ë
	mÁ
[
i
] = i;

25 
föd
(
x
) {

26 i‡(
	mÁ
[
x
] == x)  x;

27  
	mÁ
[
x
] = 
föd
(
Á
[x]);

29 
mîge
(
x
, 
y
) {

30 
	mfx
 = 
föd
(
x
), 
	mfy
 = föd(
y
);

31 i‡(
	mfx
 =
fy
)  0;

32 
	mÁ
[
fx
] = 
fy
;  1;

34 }
	gds
;

36 
	gve˘‹
<
	gEdge
> 
	gvec
;

37 
	gve˘‹
<
	g∑ú
<, > > 
	gåì
[
N
];

39 
	$maö
() {

40 
	`§™d
(
	`time
(
NULL
));

41 
n
 = 
N
, 
m
 = 
	`ønd
(Ë%Ç + 1, 
d
 =Ñand() %Ç;

42 
	`¥ötf
("%d %d\n", 
n
, 
MOD
*5);

43 
i
 = 0; i < 
n
; i++) {

44 
j
 = 0; j < 
i
; j++) {

45 
w
 = 
	`ønd
(Ë% 
MOD
 + 1;

46 
vec
.
	`push_back
(
	`Edge
(
i
, 
j
, 
w
));

49 
	`s‹t
(
vec
.
	`begö
(), vec.
	`íd
());

50 
ds
.
	`öô
();

51 
i
 = 0; i < 
vec
.
	`size
(); i++) {

52 
Edge
 
e
 = 
vec
[
i
];

53 i‡(
ds
.
	`mîge
(
e
.
u
,É.
v
)) {

54 
åì
[
e
.
u
].
	`push_back
(
	`make_∑ú
”.
v
,É.
w
));

57 
i
 = 0; i < 
n
; i++) {

58 
j
 = 0; j < 
åì
[
i
].
	`size
(); j++) {

59 
∑ú
<, > 
now
 = 
åì
[
i
][
j
];

60 
	`¥ötf
("%d %d %d\n", 
i
 + 1, 
now
.
fú°
 + 1,Çow.
£c⁄d
);

64 
	}
}

	@problems/acm_icpc_contest/2013_changsha_online/e.wa.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<°rög
>

4 
	~<m≠
>

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
	gday
[7][20]={"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};

10 
	gm≠
<
	g°rög
,> 
	ghash
;

11 
	ghour
[7]={8,8,8,8,8,4,4};

13 
	$maö
()

15 
°rög
 
fd
;

16 
v
;

17 
l
;

18 
hash
.
	`˛ór
();

19 
i
=0; i<7; i++) {

20 
hash
[
	`°rög
(
day
[
i
])]=i;

22 
cö
>>
fd
) {

23 
cö
>>
l
>>
v
;

24 
LL
 
L
=1LL*1000*
l
;

25 
cout
<<
l
<<" "<<
v
<<" "<<(1000*v)<<
ídl
;

26 
LL
 
V
=1LL*(1000*
v
);

27 
LL
 
x
=(5*8+2*4)*
V
;

28 
LL
 
y
=
L
/
x
;

29 
L
-=
y
*
x
;

30 
now
=
hash
[
fd
];

31 
cout
<<
fd
<<" "<<
now
<<" "<<
hour
[now]<<
ídl
;

32 
cout
<<
L
<<" "<<
V
<<
ídl
;

34 
L
-=
hour
[
now
]*
V
;

35 if(
L
<=0)

37 
now
=(now+1)%7;

39 
cout
<<
day
[
now
]<<
ídl
;

42 
	}
}

	@problems/acm_icpc_contest/2013_changsha_online/g.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

4 
	#MOD
 1000000007

	)

5 
	#N
 100001

	)

7 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

10 
	gp
[
N
],
	g∂
[N],
	gmp
[N],
	gt›
;

12 
	$öô
() {

13 
i
=0; i<
N
; i++) {

14 
p
[
i
]=i;

16 
t›
=0;

17 
i
=2; i<
N
; i++) {

18 if(
p
[
i
]==i) {

19 
∂
[
t›
++]=
i
;

21 
j
=0; j<
t›
&&
∂
[j]*
i
<
N
; j++) {

22 
p
[
∂
[
j
]*
i
]=pl[j];

23 if(
i
%
∂
[
j
]==0) {

35 
	}
}

37 
	$gë_f
(
x
) {

38 if(
x
<=1) {

41 
ªt
=0;

42 ;
x
>1;) {

43 
x
/=
p
[x];

44 
ªt
++;

46  
ªt
;

47 
	}
}

49 
	$maö
() {

50 
	`öô
();

51 
x
;

52 
	`sˇnf
("%d",&
x
)+1) {

53 
LL
 
ªt
=0;

54 if(
p
[
x
]==x) {

55 
ªt
++;

57 
i
=0; i<
t›
&&
x
-
∂
[i]>=pl[i]; i++) {

58 if(
p
[
x
-
∂
[
i
]]==x-pl[i]) {

59 
ªt
++;

62 
i
=0; i<
t›
&&
x
-
∂
[i]>=pl[i]; i++) {

63 
j
=
i
; j<
t›
&&
x
-
∂
[i]-pl[j]>=pl[j]; j++) {

64 if(
p
[
x
-
∂
[
i
]-∂[
j
]]==x-pl[i]-pl[j]) {

65 
ªt
++;

69 
c
=
	`gë_f
(
x
);

70 if(
c
==3) {

71 
ªt
++;

73 if(
c
==2) {

74 
ªt
++;

76 
i
=0; i<
t›
&&
x
-
∂
[i]>=2; i++) {

77 
c
=
	`gë_f
(
x
-
∂
[
i
]);

78 if(
c
==2) {

79 
ªt
++;

82 
ªt
Ùë%
MOD
;

83 
cout
<<
ªt
<<
ídl
;

86 
	}
}

	@problems/acm_icpc_contest/2013_changsha_online/g_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

5 
	#MOD
 1000000007

	)

6 
	#N
 80011

	)

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 
	gp
[
N
],
	g∂
[N],
	gmp
[N],
	gt›
;

12 
	gdp
[
N
][2];

14 
	$öô
() {

15 
i
=0; i<
N
; i++) {

16 
p
[
i
]=i;

18 
t›
=0;

19 
i
=2; i<
N
; i++) {

20 if(
p
[
i
]==i) {

21 
∂
[
t›
++]=
i
;

23 
j
=0; j<
t›
&&
∂
[j]*
i
<
N
; j++) {

24 
p
[
∂
[
j
]*
i
]=pl[j];

25 if(
i
%
∂
[
j
]==0) {

30 
	`mem£t
(
dp
,0,(dp));

31 
i
=0; i<
t›
; i++) {

32 
j
=0; j<=
i
&&
∂
[i]+∂[j]<
N
; j++) {

33 
dp
[
∂
[
i
]+∂[
j
]][0]++;

35 
j
=
∂
[
i
]; j<
N
; j++) {

36 
dp
[
j
][1]=(dp[j][1]+dp[j-
∂
[
i
]][0])%
MOD
;

39 
	}
}

41 
	$gë_f
(
x
) {

42 if(
x
<=1) {

45 
ªt
=0;

46 ;
x
>1;) {

47 
x
/=
p
[x];

48 
ªt
++;

50  
ªt
;

51 
	}
}

53 
	$maö
() {

54 
	`öô
();

55 
x
;

56 
	`sˇnf
("%d",&
x
)+1) {

57 
LL
 
ªt
=0;

58 if(
p
[
x
]==x) {

59 
ªt
++;

75 
ªt
Ùë+
dp
[
x
][0]+dp[x][1];

76 
c
=
	`gë_f
(
x
);

77 if(
c
==3) {

78 
ªt
++;

80 if(
c
==2) {

81 
ªt
++;

83 
i
=0; i<
t›
&&
x
-
∂
[i]>=2; i++) {

84 
c
=
	`gë_f
(
x
-
∂
[
i
]);

85 if(
c
==2) {

86 
ªt
++;

89 
ªt
Ùë%
MOD
;

90 
cout
<<
ªt
<<
ídl
;

93 
	}
}

	@problems/acm_icpc_contest/2013_changsha_online/g_dp_ok.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

5 
	#MOD
 1000000007

	)

6 
	#N
 80011

	)

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 
	gp
[
N
],
	g∂
[N],
	gmp
[N],
	gt›
;

12 
	gdp
[
N
][2];

14 
	$öô
() {

15 
i
=0; i<
N
; i++) {

16 
p
[
i
]=i;

18 
t›
=0;

19 
i
=2; i<
N
; i++) {

20 if(
p
[
i
]==i) {

21 
∂
[
t›
++]=
i
;

23 
j
=0; j<
t›
&&
∂
[j]*
i
<
N
; j++) {

24 
p
[
∂
[
j
]*
i
]=pl[j];

25 if(
i
%
∂
[
j
]==0) {

30 
	`mem£t
(
dp
,0,(dp));

31 
i
=0; i<
t›
; i++) {

32 
j
=0; j<=
i
&&
∂
[i]+∂[j]<
N
; j++) {

33 
dp
[
∂
[
i
]+∂[
j
]][0]++;

35 
j
=
∂
[
i
]; j<
N
; j++) {

36 
dp
[
j
][1]=(dp[j][1]+dp[j-
∂
[
i
]][0])%
MOD
;

39 
	}
}

41 
	$gë_f
(
x
) {

42 if(
x
<=1) {

45 
ªt
=0;

46 ;
x
>1;) {

47 
x
/=
p
[x];

48 
ªt
++;

50  
ªt
;

51 
	}
}

53 
	$maö
() {

54 
	`öô
();

55 
x
;

56 
	`sˇnf
("%d",&
x
)+1) {

57 
LL
 
ªt
=0;

58 if(
p
[
x
]==x) {

59 
ªt
++;

75 
ªt
Ùë+
dp
[
x
][0]+dp[x][1];

76 
c
=
	`gë_f
(
x
);

77 if(
c
==3) {

78 
ªt
++;

80 if(
c
==2) {

81 
ªt
++;

83 
i
=0; i<
t›
&&
x
-
∂
[i]>=2; i++) {

84 
c
=
	`gë_f
(
x
-
∂
[
i
]);

85 if(
c
==2) {

86 
ªt
++;

89 
ªt
Ùë%
MOD
;

90 
cout
<<
ªt
<<
ídl
;

93 
	}
}

	@problems/acm_icpc_contest/2013_chengdu_regional/a.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
 {

8 
	mf
,
	mt
,
	ml
;

9 
node
(
f
,
t
,
l
):f(f),t(t),l(l){}

12 c⁄° 
	gN
 = 100;

14 
	gsum
[
N
];

16 
	gve˘‹
<
	gnode
> 
	gvec
;

17 
	gèg
[
N
][N],
	gã
[N*N],
	gn
,
	gm
;

19 
	$maö
() {

20 
T
;

21 
	`sˇnf
("%d",&
T
);

22 
ˇ
=1; ca<=
T
; ca++) {

23 
	`¥ötf
("Ca£ #%d:\n",
ˇ
);

24 
	`sˇnf
("%d%d",&
n
,&
m
);

25 
vec
.
	`˛ór
();

26 
sum
[1]=0;

27 
	`mem£t
(
èg
,0,(tag));

28 
	`mem£t
(
ã
,0,(te));

29 
i
=0; i<
n
-1; i++) {

30 
vec
.
	`push_back
(
	`node
(
i
+1,i+2,i+1));

31 
ã
[
i
+1]=1;

32 
èg
[
i
+1][i+2]=tag[i+2][i+1]=1;

33 
sum
[
i
+2]=sum[i+1]+i+1;

35 
i
=
n
;;i++) {

36 if((
sum
[
n
]+
i
)%3==0) {

37 
èg
[
n
][1]=tag[1][n]=1;

38 
vec
.
	`push_back
(
	`node
(
n
,1,
i
));

39 
ã
[
i
]=1;

43 
ok
=1;

44 
i
=
n
; i<=
m
; i++) {

45 if(
ã
[
i
]==0) {

46 
ok
=1;

47 
u
=1; u<
n
&&
ok
; u++)

48 
v
=
u
+2; v<=
n
&&
ok
; v++) {

49 if(
èg
[
u
][
v
])

51 if((
sum
[
v
]-sum[
u
])%3==
i
%3) {

52 
vec
.
	`push_back
(
	`node
(
u
,
v
,
i
));

53 
èg
[
u
][
v
]=tag[v][u]=1;

54 
ok
=0;

59 if(
vec
.
	`size
()!=
m
)

60 
	`puts
("-1");

62 
i
=0; i<
vec
.
	`size
(); i++)

63 
	`¥ötf
("%d %d %d\n",
vec
[
i
].
f
,vec[i].
t
,vec[i].
l
);

67 
	}
}

	@problems/acm_icpc_contest/2013_chengdu_regional/b.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<°rög
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	$maö
() {

8 
T
;

9 
	`sˇnf
("%d",&
T
);

10 
ˇ
=1; ca<=
T
; ca++) {

11 
	`¥ötf
("Ca£ #%d:\n",
ˇ
);

12 
c
;

14 if(
c
=='<')

16 
c
=
	`gëch¨
();

17 if(
c
==' ' || c=='\n' || c=='\t') {

22 
˙t
=0;

24 
°rög
 
s
=
	`°rög
("");

25 if(
c
=='<') {

26 
s
.
	`push_back
(
c
);

28 
c
=
	`gëch¨
();

29 if(
c
=='\n') {

30 
s
.
	`push_back
(' ');

33 
s
.
	`push_back
(
c
);

34 if(
c
=='>') {

39 
c
=
	`gëch¨
();

40 if(
c
==' ' || c=='\n' || c=='\t') {

46 
s
.
	`push_back
(
c
);

48 
c
=
	`gëch¨
();

49 if(
c
=='\n' || c==' ' || c=='\t') {

50 if(
s
[s.
	`Àngth
()-1]!=' ')

51 
s
.
	`push_back
(' ');

54 if(
c
=='<')

56 
s
.
	`push_back
(
c
);

59 
j
=0; j<
˙t
-1; j++)

60 
	`¥ötf
(" ");

61 if((!(
s
[0]=='<'&&s[1]=='/'))&&
˙t
>0)

62 
	`¥ötf
(" ");

64 if(
s
[s.
	`Àngth
()-1]==' ' || s[s.length()-1]=='\t'|| s[s.length()-1]=='\n')

65 
s
.
	`îa£
(s.
	`íd
()-1);

69 
cout
<<
s
<<
ídl
;

70 if(
s
==
	`°rög
("</html>")) {

73 if(
s
[0]=='<') {

74 if(
s
[1]=='/')

75 
˙t
--;

76 if(
s
[s.
	`Àngth
()-2]=='/')

79 
˙t
++;

84 
	}
}

	@problems/acm_icpc_contest/2013_chengdu_regional/d.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

4 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gN
 = 111;

8 
	gn
,
	gm
,
	gB
,
	gK
,
	gR
,
	gâl
;

9 
	gm©
[7][
N
];

10 
	gdp
[
N
][6][5][221];

13 
	sedge
 {

14 
	mto
,
	mti
,
	mco
;

15 
edge
(){}

16 
edge
(
to
,
ti
,
co
):to(to),ti(ti),co(co){}

19 
	gve˘‹
<
	gedge
> 
	ggr
[
N
];

21 
	$dfs
(
now
,
k
,
b
,
t
) {

22 if(
dp
[
now
][
k
][
b
][
t
]>=-1)

23  
dp
[
now
][
k
][
b
][
t
];

24 
ªt
=-1,
tmp
;

26 if(
now
==0) {

27 if(
k
==0 && 
b
==0 && 
t
>=0) {

28 
ªt
=
	`max
‘ë,
R
);

32 if(
t
>=1 && 
now
!=
n
-1 &&Çow!=0) {

33 
ªt
=
	`max
‘ë,
	`dfs
(
now
,(
k
-1+
K
)%K,
b
,
t
-1));

34 if(
b
+1<=
B
) {

35 
tmp
=
	`dfs
(
now
,(
k
-1+
K
)%K,
b
+1,
t
-1);

36 if(
tmp
>=0) {

37 
ªt
=
	`max
‘ë,
tmp
+
m©
[
k
][
now
]);

40 if(
b
>=1) {

41 
tmp
=
	`dfs
(
now
,(
k
-1+
K
)%K,
b
-1,
t
-1);

42 
ªt
=
	`max
‘ë,
tmp
-
m©
[
k
][
now
]);

45 
i
=0; i<
gr
[
now
].
	`size
(); i++) {

46 
to
=
gr
[
now
][
i
].to;

47 
ti
=
gr
[
now
][
i
].ti;

48 
co
=
gr
[
now
][
i
].co;

49 if(
to
==
n
-1) ;

50 if(
t
-
ti
<0) ;

51 
ªt
=
	`max
‘ë,
	`dfs
(
to
,
k
,
b
,
t
-
ti
)-
co
);

52 if(
b
>=1 && 
now
!=
n
-1 &&Çow!=0) {

53 
ªt
=
	`max
‘ë,
	`dfs
(
to
,
k
,
b
-1,
t
-
ti
)-
co
-
m©
[k][
now
]);

55 if(
b
+1<=
B
 && 
now
!=
n
-1 &&Çow!=0) {

56 
tmp
=
	`dfs
(
to
,
k
,
b
+1,
t
-
ti
);

57 if(
tmp
>=0) {

58 
ªt
=
	`max
‘ë,
tmp
-
co
+
m©
[
k
][
now
]);

62 if(
ªt
<0)Ñet=-1;

63  
dp
[
now
][
k
][
b
][
t
]=
ªt
;

64 
	}
}

66 
	$maö
() {

67 
T
;

68 
	`sˇnf
("%d",&
T
);

69 
ˇ
=1; ca<=
T
; ca++) {

70 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

71 
	`sˇnf
("%d%d%d%d%d%d",&
n
,&
m
,&
B
,&
K
,&
R
,&
âl
);

72 
i
=0; i<
K
; i++) {

73 
j
=0; j<
n
; j++)

74 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

76 
i
=0; i<
n
; i++)

77 
gr
[
i
].
	`˛ór
();

78 
i
=0; i<
m
; i++) {

79 
x
,
y
,
u
,
v
;

80 
	`sˇnf
("%d%d%d%d",&
x
,&
y
,&
u
,&
v
);

81 
gr
[
y
-1].
	`push_back
(
	`edge
(
x
-1,
u
,
v
));

83 
i
=0; i<
n
; i++)

84 
j
=0; j<=
K
; j++)

85 
u
=0; u<=
B
; u++)

86 
v
=0; v<=
âl
; v++)

87 
dp
[
i
][
j
][
u
][
v
]=-2;

88 
ªt
=
	`dfs
(
n
-1,0,0,
âl
);

89 if(
ªt
<0)

90 
	`puts
("Forever Alone");

92 
	`¥ötf
("%d\n",
ªt
);

95 
	}
}

	@problems/acm_icpc_contest/2013_chengdu_regional/f.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

4 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gN
 = 100111;

8 
	gf
[
N
];

10 
	sedge
 {

11 
	mf
,
	mt
,
	mc
;

12 }
	ge
[
N
];

14 
	suföd
 {

15 
	mp
[
N
];

16 
öô
(
n
) {

17 
	mi
=0; i<
	mn
; i++)

18 
	mp
[
i
]=i;

20 
Á
(
x
) {

21 
	my
=
x
,
	mtmp
;

22 ; 
	mp
[
x
]!=x; 
	mx
=
p
[x]);

23 ; 
	mp
[
tmp
=
y
]!=y; 
	my
=
p
[y],p[tmp]=
x
);

24  
	mx
;

26 
isf
(
x
,
y
) {

27  
Á
(
x
)==Á(
y
);

29 
£tf
(
x
,
y
) {

30 
	mp
[
Á
(
y
)]=Á(
x
);

32 }
	guf
;

34 
	$cmp1
(
edge
 
a
,edgê
b
) {

35  
a
.
c
>
b
.c;

36 
	}
}

38 
	$cmp2
(
edge
 
a
,edgê
b
) {

39  
a
.
c
<
b
.c;

40 
	}
}

42 
	$maö
() {

43 
f
[0]=1,f[1]=1;

44 
i
=2; 
f
[i-1]<
N
; i++) {

45 
f
[
i
]=f[i-1]+f[i-2];

47 
T
;

48 
	`sˇnf
("%d",&
T
);

49 
ˇ
=1; ca<=
T
; ca++) {

50 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

51 
n
,
m
;

52 
	`sˇnf
("%d%d",&
n
,&
m
);

53 
i
=0; i<
m
; i++) {

54 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
c
);

55 
e
[
i
].
f
--,e[i].
t
--;

57 
	`s‹t
(
e
,e+
m
,
cmp1
);

58 
uf
.
	`öô
(
n
);

59 
L
=0,
R
=0;

60 
i
=0; i<
m
; i++) {

61 if(
uf
.
	`isf
(
e
[
i
].
f
,e[i].
t
)) {

64 
uf
.
	`£tf
(
e
[
i
].
f
,e[i].
t
);

65 if(
e
[
i
].
c
)

66 
R
++;

68 
	`s‹t
(
e
,e+
m
,
cmp2
);

69 
uf
.
	`öô
(
n
);

70 
ok
=0;

71 
i
=0; i<
m
; i++) {

72 if(
uf
.
	`isf
(
e
[
i
].
f
,e[i].
t
)) {

75 
uf
.
	`£tf
(
e
[
i
].
f
,e[i].
t
);

76 
ok
++;

77 if(
e
[
i
].
c
)

78 
L
++;

80 
ªt
=0;

81 
i
=1; 
f
[i]<=
R
; i++) {

82 if(
f
[
i
]>=
L
) {

83 
ªt
=1;

87 if(
ªt
&&(
ok
==
n
-1))

88 
	`puts
("Yes");

90 
	`puts
("No");

93 
	}
}

	@problems/acm_icpc_contest/2013_chengdu_regional/h.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<°rög
>

4 
	~<m≠
>

6 
usög
 
«me•a˚
 
	g°d
;

8 
	g¨r
[20][20]={"B","KB","MB","GB","TB","PB","EB","ZB","YB"};

9 
	gm≠
<
	g°rög
,> 
	gmp
;

11 
	$maö
() {

12 
T
;

13 
	`sˇnf
("%d",&
T
);

14 
mp
.
	`˛ór
();

15 
i
=0; i<9; i++) {

16 
mp
[
	`°rög
(
¨r
[
i
])]=i;

18 
ˇ
=1; ca<=
T
; ca++) {

19 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

20 
x
;

21 
s
[100];

22 
	`sˇnf
("%d[%s]",&
x
,
s
);

23 
s
[
	`°æí
(s)-1]=0;

24 
ªt
=1.0;

25 
n
=
mp
[
	`°rög
(
s
)];

26 
i
=0; i<
n
; i++) {

27 
ªt
*=1000;

28 
ªt
/=1024;

30 
	`¥ötf
("%.2lf%%\n",(1-
ªt
)*100);

33 
	}
}

	@problems/acm_icpc_contest/2013_chengdu_regional/j.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

4 
usög
 
«me•a˚
 
	g°d
;

5 
	tLL
;

7 
LL
 
	gp
,
	gm
;

9 
LL
 
	$gcd
(
LL
 
a
,LL 
b
) {

10  
b
?
	`gcd
(b,
a
%b):a;

11 
	}
}

13 
LL
 
	$f
(
LL
 
a
,LL 
b
) {

14 if(
a
<0||
b
<0)  0;

15 if(
a
+
b
<
p
)  0;

16 
LL
 
ªt
=(
a
/
m
)*(
b
/m)*m;

17 
LL
 
ma
=
a
%
m
,
mb
=
b
%m;

18 
ªt
+=(
ma
+1)*(
b
/
m
)+(
mb
+1)*(
a
/m);

19 if(
ma
>
p
) {

20 
ªt
+=
	`mö
(
p
+1,
mb
+1);

21 
LL
 
tmp
=(
p
+
m
-
ma
)%m;

22 if(
tmp
<=
mb
)

23 
ªt
+=
mb
-
tmp
+1;

26 
LL
 
tmp
=(
p
+
m
-
ma
)%m;

27 if(
tmp
<=
mb
)

28 
ªt
+=
	`mö
(
p
-
tmp
+1,
mb
-tmp+1);

30  
ªt
;

31 
	}
}

33 
	$maö
() {

34 
LL
 
a
,
b
,
c
,
d
;

35 
T
;

36 
	`sˇnf
("%d",&
T
);

37 
ˇ
=1; ca<=
T
; ca++) {

38 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

39 
cö
>>
a
>>
b
>>
c
>>
d
>>
m
>>
p
;

40 
LL
 
ªt
=
	`f
(
b
,
d
)-f(b,
c
-1)-f(
a
-1,d)+f(a-1,c-1);

41 
LL
 
„n
=(1LL*
b
-
a
+1)*(1LL*
d
-
c
+1);

42 
LL
 
g
=
	`gcd
(
ªt
,
„n
);

43 
cout
<<
ªt
/
g
<<"/"<<
„n
/g<<
ídl
;

45 
	}
}

	@problems/acm_icpc_contest/2013_nanjing_invite/e.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<ve˘‹
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

8 c⁄° 
	gN
 = 200010;

10 
	snode
 {

11 
LL
 
	mx
,
	my
;

12 
node
(){}

13 
node
(
LL
 
xx
,LL 
yy
):
x
(xx),
y
(yy){}

14 
node
 
	m›î©‹
+“odê
	ma
) {

15  
node
(
x
+
a
.x,
y
+a.y);

17 
node
 
	m›î©‹
-“odê
	ma
) {

18  
node
(
x
-
a
.x,
y
-a.y);

20 }
	gno
[
N
],
	gsum
[N];

22 
	gq
[
N
],
	gmx
[N],
	gmi
[N];

24 
LL
 
	$xmu…
(
node
 
a
,nodê
b
) {

25  
a
.
x
*
b
.
y
-b.x*a.y;

26 
	}
}

28 
	gve˘‹
<> 
	g™s
;

30 
	$maö
() {

31 
n
;

32 
	`sˇnf
("%d",&
n
)+1) {

33 if(
n
==0) ;

34 
i
=0; i<
n
; i++) {

35 
	`sˇnf
("%I64d%I64d",&
no
[
i
].
y
,&no[i].
x
);

38 
sum
[
n
-1]=
no
[n-1];

39 
i
=
n
-2; i>=0; i--) {

40 
sum
[
i
]=sum[i+1]+
no
[i];

42 
l
=0,
r
=-1;

43 
i
=0; i<
n
-1; i++) {

44 ; 
l
<=
r
 && 
no
[
q
[r]].
x
>Úo[
i
].x;Ñ--);

45 ; 
l
<=
r
-1 && 
	`xmu…
(
	`node
(
no
[
i
]-no[
q
[r]]),node(no[q[r]]-no[q[r-1]]))<=0;Ñ--);

46 
q
[++
r
]=
i
;

47 ; 
l
<=
r
-1 && 
	`xmu…
(
sum
[
i
+1],
	`node
(
no
[
q
[r]]-no[q[r-1]]))<=0;Ñ--);

48 
mx
[
i
]=
q
[
r
];

50 
l
=0,
r
=-1;

51 
™s
.
	`˛ór
();

52 
i
=
n
-2; i>=0; i--) {

53 ; 
l
<=
r
 && 
no
[
q
[r]].
x
<Úo[
i
+1].x;Ñ--);

54 ; 
l
<=
r
-1 && 
	`xmu…
(
	`node
(
no
[
i
+1]-no[
q
[r]]),node(no[q[r]]-no[q[r-1]]))<=0;Ñ--);

55 
q
[++
r
]=
i
+1;

56 ; 
l
<=
r
-1 && 
	`xmu…
(
sum
[
i
+1],
	`node
(
no
[
q
[l]]-no[q[l+1]]))>=0;Ü++);

57 
mi
[
i
]=
q
[
l
];

58 if(
	`xmu…
(
sum
[
i
+1],
no
[
mx
[i]]-no[
mi
[i]])>0) {

59 
™s
.
	`push_back
(
i
+1);

62 
	`¥ötf
("%d\n",
™s
.
	`size
());

63 
i
=
™s
.
	`size
()-1; i>=0; i--) {

64 
	`¥ötf
("%d\n",
™s
[
i
]);

68 
	}
}

	@problems/acm_icpc_contest/2013_nanjing_invite/g.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

5 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

8 c⁄° 
	gX
 = 8;

10 
	gve˘‹
<
	gLL
> 
	gvec
[8][1<<8];

12 
	g°
[10];

14 
	$cou¡
(
LL
 
x
) {

15 
ªt
=0;

16 ; 
x
; x^=(x&(-x)))

17 
ªt
++;

18  
ªt
;

19 
	}
}

21 
ölöe
 
	$B
(
i
,
èg
,
n
) {

22 if(
èg
) {

23 if(
i
<0)  0;

24 if(
i
>=
n
)  0;

26  1<<
i
;

27 
	}
}

29 
	$¥ess
(
¥e
,
n
) {

30 
now
=0;

31 
i
=0; i<
n
; i++) {

32 if(
¥e
&
	`B
(
i
,0,
n
)) {

33 
now
^=
	`B
(
i
-1,1,
n
);

34 
now
^=
	`B
(
i
+1,1,
n
);

35 
now
^=
	`B
(
i
,1,
n
);

38  
now
;

39 
	}
}

41 
	$öô
() {

42 
n
=1;Ç<=8;Ç++) {

43 
LL
 
°ï
=0;

44 
¥e
,
now
;

45 
i
=0; i<
	`B
(
n
,0,n); i++)

46 
vec
[
n
-1][
i
].
	`˛ór
();

47 
i
=0; i<
	`B
(
n
,0,n); i++) {

48 
°ï
=
i
;

49 
¥e
=
	`¥ess
(
i
,
n
);

50 
now
=
i
;

51 
i
=1; i<
n
; i++) {

52 
tmp
=
now
^
	`¥ess
(
¥e
,
n
);

53 
°ï
=(°ï<<
X
)|
¥e
;

54 
now
=
¥e
;

55 
¥e
=
tmp
;

57 
vec
[
n
-1][
¥e
].
	`push_back
(
°ï
);

60 
	}
}

62 
	$sﬁve
(
n
) {

63 
LL
 
°ï
=0;

64 
i
=1; i<
n
; i++) {

65 
°ï
=(°ï<<
X
)|
°
[
i
-1];

66 
°
[
i
]=°[i]^
	`¥ess
(°[i-1],
n
);

67 
°
[
i
+1]^=st[i-1];

69 
ªt
=1000;

70 
i
=0; i<
vec
[
n
-1][
°
[n-1]].
	`size
(); i++) {

71 
ªt
=
	`mö
‘ë,
	`cou¡
(
vec
[
n
-1][
°
[n-1]][
i
]^
°ï
));

73 if(
ªt
>=1000) {

74 
	`puts
("-1");

77 
	`¥ötf
("%d\n",
ªt
);

79 
	}
}

81 
	$maö
() {

82 
	`öô
();

83 
T
;

84 
	`sˇnf
("%d",&
T
);

85 
ˇ
=1; ca<=
T
; ca++) {

86 
n
;

87 
	`sˇnf
("%d",&
n
);

88 
i
=0; i<
n
; i++)

89 
	`sˇnf
("%d",&
°
[
i
]);

90 
	`sﬁve
(
n
);

93 
	}
}

	@problems/acm_icpc_contest/2013_nanjing_invite/j.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<io°ªam
>

4 
	~<m≠
>

5 
	~<£t
>

6 
	~<°rög
>

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 c⁄° 
	gN
 = 100100;

13 
	g¨r
[
N
],
	gA
[N],
	gB
[N];

14 
LL
 
	gSA
[
N
],
	gSB
[N];

15 
	gm≠
<,> 
	gmp
;

16 
	gm≠
<
	g°rög
,> 
	gsmp
;

18 
	$dig_cou¡
(
x
) {

19 if(
x
==0)  1;

20 
ªt
=0;

21 ; 
x
; x/=10)

22 
ªt
++;

23  
ªt
;

24 
	}
}

26 
LL
 
	$comb
(
n
) {

27 if(
n
<0)  0;

28  1LL*
n
*(n-1)/2;

29 
	}
}

31 
	$gí_ödex
(
A
[],
LL
 
SA
[],
˙t
,
n
) {

32 
SA
[0]=0;

33 
pos
=1;

34 
LL
 
∑ú
=0;

35 
mp
.
	`˛ór
();

36 
i
=1; i<=
n
; i++) {

37 
mp
[
¨r
[
i
]]++;

38 
∑ú
ıaú+
	`comb
(
mp
[
¨r
[
i
]])-comb(mp[arr[i]]-1);

39 ; 
∑ú
>=
˙t
 && 
pos
<=
i
;) {

40 
A
[
pos
]=
i
;

41 
∑ú
ıaú-
	`comb
(
mp
[
¨r
[
pos
]])+comb(mp[arr[pos]]-1);

42 
mp
[
¨r
[
pos
]]--;

43 
pos
++;

46 ; 
pos
<=
n
;Öos++) {

47 
A
[
pos
]=
n
+1;

49 
i
=1; i<=
n
; i++) {

50 
SA
[
i
]=SA[i-1]+
A
[i]-i;

52 
	}
}

54 
LL
 
	$ˇl
(
A
[],
LL
 
SA
[],
l
,
r
,
n
) {

55 
pos
=
	`uµî_bound
(
A
,A+
n
,
r
)-A-1;

56 if(
pos
<
l
)  0;

57  1LL*(
r
-
l
+1+r-
pos
+1)*’os-l+1)/2-
SA
[pos]+SA[l-1];

58 
	}
}

60 
LL
 
	$sﬁve
(
l
,
r
,
n
) {

61  
	`ˇl
(
A
,
SA
,
l
,
r
,
n
)-ˇl(
B
,
SB
,l,r,n);

62 
	}
}

64 
	$maö
() {

65 
m
,
n
;

66 
	`sˇnf
("%d%d",&
n
,&
m
)+1) {

67 
now
=1;

68 
smp
.
	`˛ór
();

69 
i
=1; i<=
n
; i++) {

70 
x
;

71 
	`sˇnf
("%d",&
x
);

72 
°rög
 
tmps
=
	`°rög
("");

73 ; 
x
; x/=10) {

74 
tmps
.
	`push_back
('0'+
x
%10);

76 
	`s‹t
(
tmps
.
	`begö
(),tmps.
	`íd
());

77 if(
smp
.
	`cou¡
(
tmps
)>0)

78 
¨r
[
i
]=
smp
[
tmps
];

80 
smp
[
tmps
]=
now
++;

81 
¨r
[
i
]=
smp
[
tmps
];

84 
	`gí_ödex
(
A
,
SA
,1,
n
);

85 
	`gí_ödex
(
B
,
SB
,2,
n
);

86 
LL
 
k
=0;

87 
i
=0; i<
m
; i++) {

88 
LL
 
l
,
r
;

89 
	`sˇnf
("%I64d%I64d",&
l
,&
r
);

90 
l
ˆ+
k
;

91 
r
Ù-
k
;

92 
k
=
	`sﬁve
(
l
,
r
,
n
);

93 
	`¥ötf
("%I64d\n",
k
);

97 
	}
}

	@problems/acm_icpc_contest/2013_nanjing_online/1004.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1001

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gve˘‹
<> 
	ggr
[
N
];

9 
	gm©
[
N
][N];

10 
	gvis
[
N
];

11 
	gÀn
[
N
];

12 
	gªt
;

14 
	$dfs
(
now
,
p
,
˙t
) {

15 
vis
[
now
]=1;

16 
Àn
[
now
]=
˙t
;

17 
i
=0; i<
gr
[
now
].
	`size
()&&
ªt
; i++) {

18 
to
=
gr
[
now
][
i
];

19 if(
to
==
p
) ;

20 if(
vis
[
to
]) {

21 if(
	`abs
(
Àn
[
now
]-Àn[
to
]+1)&1) {

22 
ªt
=0;

27 
	`dfs
(
to
,
now
,
˙t
+1);

29 
	}
}

31 
	$maö
() {

32 
n
;

33 
	`sˇnf
("%d",&
n
)+1) {

34 
i
=0; i<
n
; i++) {

35 
gr
[
i
].
	`˛ór
();

37 
i
=0; i<
n
; i++) {

38 
vis
[
i
]=0;

39 
Àn
[
i
]=0;

40 
j
=0; j<
n
; j++) {

41 
m©
[
i
][
j
]=0;

44 
i
=0; i<
n
; i++) {

45 
x
;

46 
	`sˇnf
("%d",&
x
)+1) {

47 if(
x
==0) ;

48 
m©
[
i
][
x
-1]=1;

51 
i
=0; i<
n
; i++) {

52 
j
=
i
+1; j<
n
; j++) {

53 if(
m©
[
i
][
j
]==0||mat[j][i]==0) {

54 
gr
[
i
].
	`push_back
(
j
);

55 
gr
[
j
].
	`push_back
(
i
);

59 
ªt
=1;

60 
i
=0; i<
n
&&
ªt
; i++) {

61 if(!
vis
[
i
]) {

62 
	`dfs
(
i
,-1,0);

65 if(
ªt
)

66 
	`puts
("YES");

68 
	`puts
("NO");

71 
	}
}

	@problems/acm_icpc_contest/2013_nanjing_online/1004_ok.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	~<io°ªam
>

5 
	~<Æg‹ôhm
>

7 
usög
 
«me•a˚
 
	g°d
;

9 c⁄° 
	gMAXN
=555;

11 
	gve˘‹
<> 
	gå
[
MAXN
];

12 
	gvis
[
MAXN
];

13 
	gdìp
[
MAXN
];

14 
	gm©
[
MAXN
][MAXN];

15 
	gèg
;

17 
	$dfs
(
now
,
p
,
˙t
) {

18 
vis
[
now
]=1;

19 
dìp
[
now
]=
˙t
;

20 
i
=0; i<
å
[
now
].
	`size
()&&
èg
; i++) {

21 
to
=
å
[
now
][
i
];

22 if(
to
==
p
) ;

23 if(
vis
[
to
]) {

24 if(
	`abs
(
dìp
[
now
]-dìp[
to
]+1)&1) {

25 
èg
=0;

30 
	`dfs
(
to
,
now
,
˙t
+1);

32 
	}
}

34 
	$öô
(
n
) {

35 
	`mem£t
(
dìp
,0,(deep));

36 
	`mem£t
(
vis
,0,(vis));

37 
	`mem£t
(
m©
,0,(mat));

38 
i
=0; i<
n
; i++) {

39 
å
[
i
].
	`˛ór
();

41 
i
=0; i<
n
; i++) {

42 
x
; 
	`sˇnf
("%d",&x)+1;) {

43 if(
x
==0) ;

44 
m©
[
i
][
x
-1]=1;

47 
i
=0; i<
n
; i++) {

48 
j
=
i
+1; j<
n
; j++) {

49 if(
m©
[
i
][
j
]==0||mat[j][i]==0) {

50 
å
[
i
].
	`push_back
(
j
);

51 
å
[
j
].
	`push_back
(
i
);

55 
	}
}

57 
	$sﬁve
(
n
) {

58 
èg
=1;

59 
i
=0; i<
n
&&
èg
; i++) {

60 if(!
vis
[
i
]) {

61 
	`dfs
(
i
,-1,0);

64 if(
èg
) {

65 
cout
<<"YES"<<
ídl
;

68 
cout
<<"NO"<<
ídl
;

70 
	}
}

72 
	$maö
() {

73 
n
;

74 
	`sˇnf
("%d",&
n
)+1) {

75 
	`öô
(
n
);

76 
	`sﬁve
(
n
);

79 
	}
}

	@problems/acm_icpc_contest/2013_nanjing_online/1006.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 1000000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gèg
[2][12];

9 
	gsc‹e
[2];

10 
	ghash
[2][12];

11 
	gdp
[2][1<<12];

12 
	gn
;

14 
	$B
(
i
) {

15  1<<
i
;

16 
	}
}

18 
	$add_age
(
köd
,
id
,
°
) {

19 
i
=0; i<2; i++) {

20 
j
=0; j<12; j++) {

21 if(
°
&
	`B
(12*
i
+
j
)) {

22 
èg
[
i
][
j
]=1;

25 
èg
[
i
][
j
]=0;

29 
ªt
=0;

30 if(
köd
==0) {

31 if(
id
-3>=0) {

32 if(
èg
[0][
id
-3]&&tag[1][id-4+id/3]&&tag[1][id-4+id/3+1]) {

33 
ªt
++;

36 if(
id
+3<=11) {

37 if(
èg
[0][
id
+3]&&tag[1][id+id/3]&&tag[1][id+id/3+1]) {

38 
ªt
++;

43 if(
id
-1>=(id/4)*4) {

44 if(
èg
[1][
id
-1]&&tag[0][id-1-id/4]&&tag[0][id-1-id/4+3]) {

45 
ªt
++;

48 if(
id
+1<=(id/4)*4+3) {

49 if(
èg
[1][
id
+1]&&tag[0][id-id/4]&&tag[0][id-id/4+3]) {

50 
ªt
++;

54  
ªt
;

55 
	}
}

57 
	$dfs
(
c
,
°
,
i_°
) {

58 if(
dp
[
c
][
°
]<
öf
) {

59  
dp
[
c
][
°
];

61 if(
°
==
	`B
(24-
n
)-1) {

62  
dp
[
c
][
°
]=0;

64 
ªt
=
öf
;

65 
k
=0; k<2; k++) {

66 
i
=0; i<12; i++) {

67 if((
i_°
&
	`B
(
k
*12+
i
))==0) {

68 
v
=
	`add_age
(
k
,
i
,
i_°
|
	`B
(k*12+i));

69 if(
c
==1) {

70 
v
=-v;

72 
x
=
	`dfs
((
c
+1)%2,
°
|
	`B
(
hash
[
k
][
i
]),
i_°
|B(k*12+i))+
v
;

73 if(
ªt
==
öf
) {

74 
ªt
=
x
;

77 if(
c
==0) {

78 
ªt
=
	`max
‘ë,
x
);

81 
ªt
=
	`mö
‘ë,
x
);

87  
dp
[
c
][
°
]=
ªt
;

88 
	}
}

91 
	$maö
() {

92 
T
;

93 
	`sˇnf
("%d",&
T
);

94 
ˇ
=1; ca<=
T
; ca++) {

95 
i_°
=0;

96 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

97 
	`mem£t
(
sc‹e
,0,(score));

98 
	`sˇnf
("%d",&
n
);

99 
i
=0; i<
n
; i++) {

100 
x
,
y
;

101 
	`sˇnf
("%d%d",&
x
,&
y
);

102 
x
--,
y
--;

103 if(
	`abs
(
y
-
x
)==1) {

104 
sc‹e
[
i
%2]+=
	`add_age
(0,
	`mö
(
x
,
y
)-mö(x,y)/4,
i_°
);

105 
i_°
|=
	`B
(
	`mö
(
x
,
y
)-min(x,y)/4);

108 
sc‹e
[
i
%2]+=
	`add_age
(1,
	`mö
(
x
,
y
),
i_°
);

109 
i_°
|=
	`B
(12+
	`mö
(
x
,
y
));

112 
c
=0;

113 
	`mem£t
(
hash
,-1,(hash));

114 
i
=0; i<2; i++)

115 
j
=0; j<12; j++) {

116 if((
i_°
&
	`B
(
i
*12+
j
))==0) {

117 
hash
[
i
][
j
]=
c
++;

120 
i
=0; i<2; i++) {

121 
j
=0; j<
	`B
(12); j++) {

122 
dp
[
i
][
j
]=
öf
;

125 
dñ
=
	`dfs
(
n
%2,0,
i_°
)+
sc‹e
[0]-score[1];

126 if(
dñ
>0) {

127 
	`puts
("Tom200");

130 
	`puts
("Jerry404");

133 
	}
}

	@problems/acm_icpc_contest/2013_nanjing_online/1006_ok.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

5 c⁄° 
	göf
=0x7ffff;

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gpos_to_id
[2][12];

9 
	gvis
[2][1<<12];

10 
	gn
;

12 
	$bö
(
i
Ë{  1<<i; 
	}
}

14 
	$go
(
köd
,
pos
,
now
)

16 
Êag
[2][12];

17 
i
=0; i<2; i++)

18 
j
=0; j<12; j++)

19 if(
now
&
	`bö
(12*
i
+
j
)Ë
Êag
[i][j]=1;

20 
Êag
[
i
][
j
]=0;

21 
ªt
=0;

22 if(
köd
==0)

24 if(
pos
-3>=0)

25 if(
Êag
[0][
pos
-3]&&flag[1][pos-4+pos/3]&&flag[1][pos-4+pos/3+1])

26 
ªt
++;

27 if(
pos
+3<=11)

28 if(
Êag
[0][
pos
+3]&&flag[1][pos+pos/3]&&flag[1][pos+pos/3+1])

29 
ªt
++;

33 if(
pos
-1>=(pos/4)*4)

34 if(
Êag
[1][
pos
-1]&&flag[0][pos-1-pos/4]&&flag[0][pos-1-pos/4+3])

35 
ªt
++;

36 if(
pos
+1<=(pos/4)*4+3)

37 if(
Êag
[1][
pos
+1]&&flag[0][pos-pos/4]&&flag[0][pos-pos/4+3])

38 
ªt
++;

40  
ªt
;

41 
	}
}

43 
	$dp
(
köd
,
now
,
öôül
)

45 if(
vis
[
köd
][
now
]<
öf
)

46  
vis
[
köd
][
now
];

47 if(
now
==
	`bö
(24-
n
)-1)

48  
vis
[
köd
][
now
]=0;

49 
ªt
=
öf
;

50 
k
=0; k<2; k++)

52 
i
=0; i<12; i++)

54 if((
öôül
&
	`bö
(
k
*12+
i
))==0)

56 
Êag
=(
köd
==1?-1:1);

57 
¥e_v
=
Êag
*
	`go
(
k
,
i
,
öôül
|
	`bö
(k*12+i));

58 
√xt_v
=
	`dp
((
köd
+1)%2,
now
|
	`bö
(
pos_to_id
[
k
][
i
]),
öôül
|bö(k*12+i))+
¥e_v
;

59 if(
ªt
==
öf
)

60 
ªt
=
√xt_v
;

63 if(
köd
==0)

64 
ªt
=
	`max
‘ë,
√xt_v
);

66 
ªt
=
	`mö
‘ë,
√xt_v
);

71  
vis
[
köd
][
now
]=
ªt
;

72 
	}
}

74 
	$sﬁve
()

76 
öôül
=0;

77 
¥e_v
[2]={0,0};

78 
	`sˇnf
("%d",&
n
);

79 
i
=0; i<
n
; i++)

81 
x
,
y
;

82 
	`sˇnf
("%d%d",&
x
,&
y
);

83 
x
--,
y
--;

84 if(
	`abs
(
y
-
x
)==1)

86 
¥e_v
[
i
%2]+=
	`go
(0,
	`mö
(
x
,
y
)-mö(x,y)/4,
öôül
);

87 
öôül
|=
	`bö
(
	`mö
(
x
,
y
)-min(x,y)/4);

91 
¥e_v
[
i
%2]+=
	`go
(1,
	`mö
(
x
,
y
),
öôül
);

92 
öôül
|=
	`bö
(12+
	`mö
(
x
,
y
));

95 
c
=0;

96 
	`mem£t
(
pos_to_id
,-1,(pos_to_id));

97 
i
=0; i<2; i++)

98 
j
=0; j<12; j++)

99 if((
öôül
&
	`bö
(
i
*12+
j
))==0)

100 
pos_to_id
[
i
][
j
]=
c
++;

101 
i
=0; i<2; i++)

102 
j
=0; j<
	`bö
(12); j++)

103 
vis
[
i
][
j
]=
öf
;

104 if(
	`dp
(
n
%2,0,
öôül
)+
¥e_v
[0]-pre_v[1]>0)

105 
	`puts
("Tom200");

107 
	`puts
("Jerry404");

108 
	}
}

111 
	$maö
()

113 
âl_ˇ£
;

114 
	`sˇnf
("%d",&
âl_ˇ£
);

115 
__
=1; __<=
âl_ˇ£
; __++)

117 
	`¥ötf
("Ca£ #%d: ",
__
);

118 
	`sﬁve
();

120 
	}
}

	@problems/acm_icpc_contest/2013_neerc/b.cpp

1 
	~<c°dio
>

3 
	$maö
() {

4 
n
,
k
;

5 
	`sˇnf
("%d%d",&
n
,&
k
)+1) {

6 
ø
=0,
rb
=0;

7 
i
=0; i<
n
; i++) {

8 
x
;

9 
	`sˇnf
("%d",&
x
);

10 if(
x
>=
k
)

11 
ø
+=
x
-
k
;

13 
rb
+=
k
-
x
;

15 
	`¥ötf
("%d %d\n",
ø
,
rb
);

18 
	}
}

	@problems/acm_icpc_contest/2013_neerc/c.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

5 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gN
 = 2000000;

8 
	snode
 {

9 
	mvÆ
;

10 
	m√xt
;

11 
öi
() {

12 
	m√xt
=-1;

13 
	mvÆ
=0;

15 }
	gno
[
N
];

17 
	gÀ
[
N
],
	gª
[N],
	gt›
,
	gç
;

18 
	gss
[100];

20 
	$add_À
(
now
,
v
) {

21 
no
[
t›
].
vÆ
=
v
;

22 
no
[
t›
].
√xt
=
À
[
now
];

23 
À
[
now
]=
t›
++;

24 
	}
}

26 
	$add_ª
(
now
,
v
) {

27 
no
[
t›
].
vÆ
=
v
;

28 
no
[
t›
].
√xt
=
ª
[
now
];

29 
ª
[
now
]=
t›
++;

30 
	}
}

32 
	$maö
() {

33 
n
,
m
;

34 
	`sˇnf
("%d%d",&
n
,&
m
)+1) {

35 
t›
=0,
ç
=2;

36 
i
=0; i<
n
+2; i++) {

37 
À
[
i
]=-1;

38 
ª
[
i
]=-1;

39 
no
[
i
].
	`öi
();

41 
i
=0; i<
n
; i++) {

42 
	`sˇnf
("%s",
ss
);

43 if(
	`°rcmp
(
ss
,"learn")==0) {

44 
c
,
p
;

45 
	`sˇnf
("%d%d",&
c
,&
p
);

46 
	`add_À
(
c
,
p
);

48 if(
	`°rcmp
(
ss
,"rollback")==0) {

49 
c
;

50 
	`sˇnf
("%d",&
c
);

51 
	`add_ª
(
c
,
no
[
À
[c]].
vÆ
);

52 
À
[
c
]=
no
[À[c]].
√xt
;

54 if(
	`°rcmp
(
ss
,"relearn")==0) {

55 
c
;

56 
	`sˇnf
("%d",&
c
);

57 
	`add_À
(
c
,
no
[
ª
[c]].
vÆ
);

58 
ª
[
c
]=
no
[ª[c]].
√xt
;

60 if(
	`°rcmp
(
ss
,"clone")==0) {

61 
x
;

62 
	`sˇnf
("%d",&
x
);

63 
À
[
ç
]ˆe[
x
];

64 
ª
[
ç
++]Ùe[
x
];

67 
c
;

68 
	`sˇnf
("%d",&
c
);

70 if(
À
[
c
]==-1)

71 
	`puts
("basic");

73 
	`¥ötf
("%d\n",
no
[
À
[
c
]].
vÆ
);

78 
	}
}

	@problems/acm_icpc_contest/2013_neerc/d.cpp

1 
	~<°rög
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	~<c°dio
>

6 
usög
 
«me•a˚
 
	g°d
;

8 
	göi
[1010];

10 
°rög
 
	gªt
;

11 
°rög
 
	gs
;

12 
°rög
 
	gxüo
,
	gz⁄g
,
	ghua
;

14 
	$uµî
(
x
) {

15 if('A'<=
x
 && 'Z'>=x)

16  
x
;

17  
x
-'a'+'A';

18 
	}
}

20 
	$smÆl
(
x
) {

21 if('a'<=
x
 && 'z'>=x)

22  
x
;

23  
x
-'A'+'a';

24 
	}
}

26 
	$is
(
x
) {

27  ('a'<=
x
 && 'z'>=x) || ('A'<=x && 'Z'>=x);

28 
	}
}

30 
	$maö
() {

31 
	`gës
(
öi
)!=
NULL
) {

32 
l
=
	`°æí
(
öi
);

33 
s
=
	`°rög
(
öi
);

34 
ªt
=
	`°rög
("");

35 
i
=0; i<
l
; ) {

36 if(
s
[
i
]=='(') {

37 
j
=
i
+1;

38 ; 
j
<
l
; j++)

39 if(
s
[
j
]==')')

41 
xüo
=
s
.
	`sub°r
(
i
+1,
j
-i-1);

42 
i
=
j
+1;

44 if(
s
[
i
]=='[') {

45 
j
=
i
+1;

46 ; 
j
<
l
; j++)

47 if(
s
[
j
]==']')

49 
z⁄g
=
s
.
	`sub°r
(
i
+1,
j
-i-1);

50 
i
=
j
+1;

52 if(
s
[
i
]=='{') {

53 
j
=
i
+1;

54 ; 
j
<
l
; j++)

55 if(
s
[
j
]=='}')

57 
hua
=
s
.
	`sub°r
(
i
+1,
j
-i-1);

58 
i
=
j
+1;

60 if(
s
[
i
]==',') {

61 
ful
=0;

62 if(
hua
.
	`Àngth
()>0)

63 
ªt
Ùë+
	`°rög
(" ")+
hua
;

64 if(
xüo
.
	`Àngth
()>0)

65 
ªt
Ùë+
	`°rög
(" ")+
xüo
;

66 if(
z⁄g
.
	`Àngth
()>0)

67 
ªt
Ùë+
	`°rög
(" ")+
z⁄g
;

68 
ªt
Ùë+
	`°rög
(",");

69 
j
=
i
+1;

70 ; 
j
<
l
; j++)

71 if(
s
[
j
]=='('||s[j]=='['||s[j]=='{')

73 
ªt
+=
s
.
	`sub°r
(
i
+1,
j
-i-2);

74 
i
=
j
;

77 
i
++;

79 
ful
=0;

80 if(
hua
.
	`Àngth
()>0)

81 
ªt
Ùë+
	`°rög
(" ")+
hua
;

82 if(
xüo
.
	`Àngth
()>0)

83 
ªt
Ùë+
	`°rög
(" ")+
xüo
;

84 if(
z⁄g
.
	`Àngth
()>0)

85 
ªt
Ùë+
	`°rög
(" ")+
z⁄g
;

86 
°rög
 
™s
=
ªt
.
	`sub°r
(1,ªt.
	`Àngth
()-1);

87 
™s
[0]=
	`uµî
(ans[0]);

88 
i
=1; i<
™s
.
	`Àngth
(); i++) {

89 if(
	`is
(
™s
[
i
]))

90 
™s
[
i
]=
	`smÆl
(ans[i]);

92 
cout
<<
™s
<<
ídl
;

96 
	}
}

	@problems/acm_icpc_contest/2013_neerc/f.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<ve˘‹
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

8 
	gve˘‹
<> 
	gªt
;

10 
	$maö
() {

11 
n
,
k
,
p
;

12 
	`sˇnf
("%d%d%d",&
n
,&
k
,&
p
)+1) {

13 
ªt
.
	`˛ór
();

14 
LL
 
sum
=0;

15 
i
=0; i<
n
-
k
; i++) {

16 
ªt
.
	`push_back
(1);

17 
sum
++;

19 
¥e
=1;

20 
pc
=0;

21 
i
=
n
-
k
; i<n; i++) {

22 if(100*
pc
>=
p
*
i
) {

23 
ªt
.
	`push_back
(
¥e
);

24 
sum
+=
¥e
;

27 
¥e
++;

28 
ªt
.
	`push_back
(
¥e
);

29 
sum
+=
¥e
;

30 
pc
=
i
;

33 
cout
<<
sum
<<
ídl
;

34 
	`¥ötf
("%d",
ªt
[0]);

35 
i
=1; i<
ªt
.
	`size
(); i++)

36 
	`¥ötf
(" %d",
ªt
[
i
]);

37 
	`puts
("");

40 
	}
}

	@problems/acm_icpc_contest/2013_neerc/h.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	~<ve˘‹
>

6 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
	gN
 = 2010;

10 
	gve˘‹
<> 
	gadj
[
N
];

11 
	gt
[
N
], 
	gd
[N];

12 
	ga
, 
	gb
, 
	gn
;

13 
	gvis
[
N
], 
	glök
[N];

15 
	$check
(
l
, 
r
) {

16 
now
 = 
t
[
r
] -Å[
l
];

17  
now
 >
a
 ||Çow <
b
;

18 
	}
}

20 
	$dfs
(
u
) {

21 
i
 = 0; i < 
adj
[
u
].
	`size
(); i++) {

22 
v
 = 
adj
[
u
][
i
];

23 i‡(!
vis
[
v
]) {

24 
vis
[
v
] = 1;

25 i‡(
lök
[
v
] =-1 || 
	`dfs
(link[v])) {

26 
lök
[
v
] = 
u
;

27 
lök
[
u
] = 
v
;

33 
	}
}

35 
	$öô
() {

36 
i
 = 0; i < 
N
; i++) {

37 
adj
[
i
].
	`˛ór
();

39 
	`mem£t
(
lök
, 0xff, Üink);

40 
	}
}

42 
	$maö
() {

43 ~
	`sˇnf
("%d%d", &
a
, &
b
)) {

44 
	`öô
();

45 
	`sˇnf
("%d", &
n
);

46 
c0
=0;

47 
i
 = 0; i < 
n
; i++) {

48 
	`sˇnf
("%d%d", 
t
 + 
i
, 
d
 + i);

49 if(
d
[
i
]==0)

50 
c0
++;

52 
i
 = 0; i < 
n
; i++) {

53 if(
d
[
i
]==1) ;

54 
j
 = 0; j < 
n
; j++) {

55 if(
d
[
j
]==0) ;

56 i‡(!
	`check
(
i
, 
j
)) ;

57 
adj
[
i
].
	`push_back
(
j
 + 
n
);

60 
ªt
 = 0;

61 
i
 = 0; i < 
n
; i++) {

62 if(
d
[
i
]) ;

63 
	`mem£t
(
vis
, 0,  vis);

64 i‡(
	`dfs
(
i
)Ë
ªt
++;

66 i‡(
ªt
 !
c0
) {

67 
	`puts
("Liar");

69 
	`puts
("NoÑeason");

70 
i
 = 0; i < 
n
; i++) {

71 i‡(
d
[
i
]) ;

72 
	`¥ötf
("%d %d\n", 
t
[
i
],Å[
lök
[i] - 
n
]);

77 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/a.cpp

1 
	~<c°dio
>

3 
	$maö
() {

4 
t
;

5 
	`sˇnf
("%d",&
t
);

6 
i
=1; i<=
t
; i++) {

7 
ªt
=0;

8 
j
=0; j<12; j++) {

9 
x
;

10 
	`sˇnf
("%lf",&
x
);

11 
ªt
+=
x
;

13 
y
=(
ªt
/12*100+0.5);

14 
	`¥ötf
("$%d",
y
/100);

15 if(
y
%100>0) {

16 
	`¥ötf
(".");

17 
x
=
y
%100;

18 if(
x
%10>0) {

19 if(
x
/10==0)

20 
	`¥ötf
("0%d\n",
x
);

22 
	`¥ötf
("%d\n",
x
);

25 
	`¥ötf
("%d\n",
x
/10);

28 
	`puts
("");

31 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/b.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<ve˘‹
>

4 
	~<queue
>

5 
	~<utûôy
>

7 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
	gN
 = 460;

9 c⁄° 
	göf
 = 0x3fffffff;

11 
	sedge
 {

12 
	mto
,
	mco°
,
	mÊow
,
	m™ti
;

13 
edge
(){}

14 
edge
(
t
,
c
,
f
,
a
):
to
—),
co°
(c),
Êow
(f),
™ti
(a){}

17 
	gve˘‹
<
	gedge
> 
	ggr
[
N
+2];

18 
	gqueue
<> 
	gq
;

19 
	g∑ú
<,> 
	g¥e
[
N
];

20 
	gdis
[
N
],
	gvis
[N],
	gmax_Êow
;

22 
	$ö£π
(
f
,
t
,
c
,
Êow
) {

23 
gr
[
f
].
	`push_back
(
	`edge
(
t
,
c
,
Êow
,gr[t].
	`size
()));

24 
gr
[
t
].
	`push_back
(
	`edge
(
f
,-
c
,0,gr[f].
	`size
()-1));

25 
	}
}

27 
	$•Á
(
n
,
s
,
t
) {

28 ; !
q
.
	`em±y
(); ) {

29 
q
.
	`p›
();

31 
i
=0; i<
n
; i++) {

32 
dis
[
i
]=
öf
,
vis
[i]=0;

33 
¥e
[
i
]=
	`make_∑ú
(-1,-1);

35 
q
.
	`push
(
s
);

36 
dis
[
s
]=0,
vis
[s]=1;

37 ; !
q
.
	`em±y
();) {

38 
now
=
q
.
	`‰⁄t
();

39 
q
.
	`p›
();

40 
vis
[
now
]=0;

41 
i
=0; i<
gr
[
now
].
	`size
(); i++) {

42 
to
=
gr
[
now
][
i
].to;

43 if(
gr
[
now
][
i
].
Êow
>0 && 
dis
[
to
]>dis[now]+gr[now][i].
co°
) {

44 
dis
[
to
]=dis[
now
]+
gr
[now][
i
].
co°
;

45 
¥e
[
to
]=
	`make_∑ú
(
now
,
i
);

46 if(!
vis
[
to
]) {

47 
vis
[
to
]=1;

48 
q
.
	`push
(
to
);

53  
¥e
[
t
].
fú°
>=0;

54 
	}
}

56 
	$mcmf
(
n
,
s
,
t
) {

57 
ªt
=0;

58 
max_Êow
=0;

59 ; 
	`•Á
(
n
,
s
,
t
);) {

60 
now_Êow
=
öf
;

61 
i
=
t
; 
¥e
[i].
fú°
 != -1; i=pre[i].first) {

62 
x
=
¥e
[
i
].
fú°
,
y
ıª[i].
£c⁄d
;

63 
now_Êow
=
	`mö
“ow_Êow,
gr
[
x
][
y
].
Êow
);

65 
i
=
t
; 
¥e
[i].
fú°
 != -1; i=pre[i].first) {

66 
x
=
¥e
[
i
].
fú°
,
y
ıª[i].
£c⁄d
;

67 
to
=
gr
[
x
][
y
].to;

68 
gr
[
x
][
y
].
Êow
-=
now_Êow
;

69 
gr
[
to
][gr[
x
][
y
].
™ti
].
Êow
+=
now_Êow
;

71 
max_Êow
+=
now_Êow
;

72 
ªt
+=
now_Êow
*
dis
[
t
];

74  
ªt
;

75 
	}
}

77 
	gÀn
[
N
][N];

79 
	snode
 {

80 
	mx
,
	my
,
	mb
,
	mp
;

81 
	mve˘‹
<> 
	mgp
;

82 
öô
() {

83 
	mgp
.
˛ór
();

85 }
	gno
[
N
];

87 
	$ˇl
(
x
,
y
) {

88  
	`sqπ
(
x
*x+
y
*y);

89 
	}
}

91 
	$maö
() {

92 
T
;

93 
	`sˇnf
("%d",&
T
);

94 
ˇ
=1; ca<=
T
; ca++) {

95 
n
,
m
;

96 
	`sˇnf
("%d%d",&
n
,&
m
);

97 
	`sˇnf
("%d%d",&
no
[0].
x
,&no[0].
y
);

98 
i
=1; i<
n
; i++) {

99 
no
[
i
].
	`öô
();

100 
	`sˇnf
("%d%d%d%d",&
no
[
i
].
x
,&no[i].
y
,&no[i].
b
,&no[i].
p
);

101 
j
=0; j<
m
; j++) {

102 
x
;

103 
	`sˇnf
("%d",&
x
);

104 
no
[
i
].
gp
.
	`push_back
(
x
);

107 
i
=0; i<
n
; i++) {

108 
j
=0; j<
n
; j++) {

109 
Àn
[
i
][
j
]=
	`ˇl
(
no
[i].
x
-no[j].x,no[i].
y
-no[j].y);

112 
ªt
=0;

113 
k
=0; k<
m
; k++) {

114 
i
=0; i<=3*
n
+1; i++) {

115 
gr
[
i
].
	`˛ór
();

117 
i
=1; i<
n
; i++) {

118 
	`ö£π
(0,
i
,1,
no
[i].
gp
[
k
]);

119 
	`ö£π
(
i
,
n
+i,0,
no
[i].
gp
[
k
]);

120 
	`ö£π
(
n
+
i
,3*n,0,
no
[i].
gp
[
k
]);

121 
	`ö£π
(0,2*
n
+
i
,0,
no
[i].
gp
[
k
]);

122 
j
=1; j<
n
; j++) {

123 if(
i
==
j
) ;

124 if(
no
[
i
].
b
+no[i].
p
+
Àn
[i][
j
]<=no[j].b) {

125 
	`ö£π
(2*
n
+
i
,n+
j
,0,
no
[i].
gp
[
k
]);

129 
ªt
+=
	`mcmf
(3*
n
+1,0,3*n);

131 
	`¥ötf
("%d\n",
ªt
);

134 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/c.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<°rög
>

4 
	~<c°rög
>

6 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
	gN
 = 1300;

10 
	gts
[
N
][N],
	gm©
[N][N];

11 
	g¥
[
N
][N],
	gƒ
[N][N],
	gtm¥
[N];

12 
	gdp
[
N
][N];

14 
	$m™achî
(
°rög
 
s
) {

15 
tm¥
[0]=0;

16 
mxr
=0,
mxi
=0;

17 
i
=1; i<
s
.
	`Àngth
(); i++) {

18 
tm¥
[
i
]=(
mxr
+
mxi
>i)?
	`mö
(mxr+mxi-i,tmpr[2*mxi-i]):0;

19 ; 
i
-
tm¥
[i]>=0&&i+tm¥[i]<
s
.
	`Àngth
();Åmpr[i]++)

20 if(
s
[
i
-
tm¥
[i]]!=s[i+tmpr[i]])

22 
tm¥
[
i
]--;

23 if(
i
+
tm¥
[i]>
mxr
+
mxi
) {

24 
mxr
=
tm¥
[
i
];

25 
mxi
=
i
;

28 
	}
}

30 
	$gëv
(
x
,
i
,
j
) {

31 if((
i
+
j
)&1)  0;

32 if(
m©
[
i
][
j
]=='#')

33  ((
x
+1)>>1)<<1;

34  1+((
x
>>1)<<1);

35 
	}
}

37 
	$sﬁve
(
m
,
n
) {

38 
°rög
 
s
;

39 
i
=0; i<
m
; i++) {

40 
s
=
	`°rög
("");

41 
j
=0; j<=
i
&&j<
n
; j++) {

42 
s
.
	`push_back
(
m©
[
i
-
j
][j]);

44 
	`m™achî
(
s
);

45 
j
=0; j<=
i
&&j<
n
; j++) {

46 
ƒ
[
i
-
j
][j]=
tm¥
[j];

48 
s
=
	`°rög
("");

49 
j
=0; j<
m
-
i
&&j<
n
; j++) {

50 
s
.
	`push_back
(
m©
[
i
+
j
][j]);

52 
	`m™achî
(
s
);

53 
j
=0; j<
m
-
i
&&j<
n
; j++) {

54 
¥
[
i
+
j
][j]=
tm¥
[j];

57 
i
=1; i<
n
; i++) {

58 
s
=
	`°rög
("");

59 
j
=0; 
m
-1-j>=0 && 
i
+j<
n
; j++) {

60 
s
.
	`push_back
(
m©
[
m
-1-
j
][
i
+j]);

62 
	`m™achî
(
s
);

63 
j
=0; 
m
-1-j>=0 && 
i
+j<
n
; j++) {

64 
ƒ
[
m
-1-
j
][
i
+j]=
tm¥
[j];

66 
s
=
	`°rög
("");

67 
j
=0; j<
m
&&
i
+j<
n
; j++) {

68 
s
.
	`push_back
(
m©
[
j
][
i
+j]);

70 
	`m™achî
(
s
);

71 
j
=0; j<
m
&&
i
+j<
n
; j++) {

72 
¥
[
j
][
i
+j]=
tm¥
[j];

75 
	`mem£t
(
dp
,0,(dp));

76 
ªt
=0;

77 
i
=1; i<
m
; i++) {

78 
j
=1; j<
n
; j++) {

79 
dp
[
i
][
j
]=(
ƒ
[i][j]>dp[i-1][j-1])?dp[i-1][j-1]+1:nr[i][j];

80 
ªt
=
	`max
‘ë,
	`gëv
(
dp
[
i
][
j
],i,j));

83 
	`mem£t
(
dp
,0,(dp));

84 
i
=
m
-2; i>=0; i--) {

85 
j
=
n
-2; j>=0; j--) {

86 
dp
[
i
][
j
]=(
ƒ
[i][j]>dp[i+1][j+1])?dp[i+1][j+1]+1:nr[i][j];

87 
ªt
=
	`max
‘ë,
	`gëv
(
dp
[
i
][
j
],i,j));

90 
	`mem£t
(
dp
,0,(dp));

91 
i
=
m
-2; i>=0; i--)

92 
j
=1; j<
n
; j++) {

93 
dp
[
i
][
j
]=(
¥
[i][j]>dp[i+1][j-1])?dp[i+1][j-1]+1:pr[i][j];

94 
ªt
=
	`max
‘ë,
	`gëv
(
dp
[
i
][
j
],i,j));

96 
	`mem£t
(
dp
,0,(dp));

97 
i
=1; i<
m
; i++)

98 
j
=
n
-2; j>=0; j--) {

99 
dp
[
i
][
j
]=(
¥
[i][j]>dp[i-1][j+1])?dp[i-1][j+1]+1:pr[i][j];

100 
ªt
=
	`max
‘ë,
	`gëv
(
dp
[
i
][
j
],i,j));

102 
	`¥ötf
("%d\n",
ªt
*(ret+1)/2);

103 
	}
}

105 
	$maö
() {

106 
T
;

107 
	`sˇnf
("%d",&
T
);

108 
ˇ
=1; ca<=
T
; ca++) {

109 
m
,
n
;

110 
	`sˇnf
("%d%d",&
m
,&
n
);

111 
	`mem£t
(
m©
,'#',(mat));

112 
i
=0; i<
m
; i++) {

113 
	`sˇnf
("%s",
ts
[
i
]);

114 
j
=0; j<
n
; j++)

115 
m©
[2*
i
+1][2*
j
+1]=
ts
[i][j];

117 
	`sﬁve
(2*
m
+1,2*
n
+1);

120 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/d.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<utûôy
>

5 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gN
 = 11110;

8 
	gve˘‹
<
	g∑ú
<,> > 
	gvec
;

9 
	gve˘‹
<> 
	g™s
;

11 
	suföd
 {

13 
	mp
[
N
];

15 
öô
() {}

17 
öô
(
n
) {

18 
	mi
=0; i<
	mn
; i++)

19 
	mp
[
i
]=i;

22 
run
(
x
) {

23 
	my
=
x
,
	mt
;

24 ; 
	mp
[
x
]!=x; 
	mx
=
p
[x]);

25 ; 
	mp
[
t
=
y
]!=y; 
	my
=
p
[y],p[t]=
x
);

26  
	mx
;

29 
isf
(
x
,
y
) {

30  
run
(
x
)=Ùun(
y
);

33 
mf
(
x
,
y
) {

34 
	mp
[
run
(
x
)]Ùun(
y
);

36 }
	guf
;

38 
	$maö
() {

39 
n
,
m
;

40 
	`sˇnf
("%d%d",&
n
,&
m
)+1) {

41 
uf
.
	`öô
(
n
);

42 
vec
.
	`˛ór
();

43 
™s
.
	`˛ór
();

44 
i
=0; i<
m
; i++) {

45 
x
,
y
;

46 
	`sˇnf
("%d%d",&
x
,&
y
);

47 
vec
.
	`push_back
(
	`make_∑ú
(
x
,
y
));

49 
™s
.
	`push_back
(
n
);

50 
now
=
n
;

51 
i
=
m
-1; i>0; i--) {

52 
x
=
vec
[
i
].
fú°
;

53 
y
=
vec
[
i
].
£c⁄d
;

54 if(
uf
.
	`isf
(
x
,
y
))

55 
™s
.
	`push_back
(
now
);

57 
now
--;

58 
™s
.
	`push_back
(
now
);

59 
uf
.
	`mf
(
x
,
y
);

62 
i
=
m
-1; i>=0; i--)

63 
	`¥ötf
("%d\n",
™s
[
i
]);

66 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/e.cpp

1 
	~<c°dio
>

2 
	~<utûôy
>

3 
	~<m≠
>

4 
	~<ve˘‹
>

6 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
	gN
 = 100010;

10 
	gve˘‹
<> 
	g∂
;

11 
	gm≠
<,> 
	glf
;

12 
	gm≠
<,> 
	grf
;

14 
	gp
[
N
];

16 
	$öô
() {

17 
i
=0; i<
N
; i++)

18 
p
[
i
]=i;

19 
∂
.
	`˛ór
();

20 
i
=2; i<
N
; i++) {

21 if(
p
[
i
]==i)

22 
∂
.
	`push_back
(
i
);

23 
j
=0; j<
∂
.
	`size
()&&
i
*∂[j]<
N
; j++) {

24 
p
[
i
*
∂
[
j
]]=pl[j];

25 if(
i
%
∂
[
j
]==0)

29 
	}
}

31 
gf
(
x
,
m≠
<,> &
mp
) {

32 
	gmp
.
˛ór
();

33 
	gi
=0; i<
	g∂
.
size
(); i++) {

34 if(
	gx
%
	g∂
[
i
]==0) {

35 
c
=0;

36 ; 
	gx
%
	g∂
[
i
]==0; x/=
∂
[i],
	gc
++);

37 
	gmp
[
∂
[
i
]]=
c
;

40 if(
	gx
>1)

41 
	gmp
[
x
]=1;

44 
	$maö
() {

45 
	`öô
();

46 
T
;

47 
	`sˇnf
("%d",&
T
);

48 
ˇ
=1; ca<=
T
; ca++) {

49 
l
,
r
;

50 
	`sˇnf
("%d%d",&
l
,&
r
);

51 if(
r
%
l
!=0) {

52 
	`puts
("0");

55 
	`gf
(
l
,
lf
);

56 
	`gf
(
r
,
rf
);

57 
m≠
<,>::
ôî©‹
 
ô
;

58 
ªt
=1;

59 
ô
=
rf
.
	`begö
(); it!Ùf.
	`íd
(); it++) {

60 
x
=
ô
->
fú°
,
y
=ô->
£c⁄d
,
z
;

61 if(
lf
.
	`cou¡
(
x
)>0)

62 
z
=
lf
[
x
];

64 
z
=0;

65 if(
z
==
y
)

68 
ªt
Ùë*(6+(
y
-
z
-1)*6);

70 
	`¥ötf
("%d\n",
ªt
);

73 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/f.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	~<ve˘‹
>

6 
usög
 
«me•a˚
 
	g°d
;

7 c⁄° 
	gN
 = 60;

9 
	snode
 {

10 
	ma
,
	mb
,
	mk
;

11 }
	gli
[
N
];

13 
	gve˘‹
<> 
	gvec
;

15 
	$ö_ønge
(
x
) {

16  0<
x
 && x<100;

17 
	}
}

19 
	$f
(
x
,
i
) {

20  
li
[
i
].
k
*(
x
-li[i].
a
)*(x-li[i].a)+li[i].
b
;

21 
	}
}

23 
	$gë_sﬁve
(
a
,
b
,
c
) {

24 if(
a
==0) {

25 if(
b
==0) ;

26 
x
=-1.0*
c
/
b
;

27 if(
	`ö_ønge
(
x
))

28 
vec
.
	`push_back
(
x
);

31 
dñè
=
b
*b-4*
a
*
c
;

32 if(
dñè
<0) ;

33 if(
dñè
==0) {

34 
x
=-1.0*
b
/(2.0*
a
);

35 if(
	`ö_ønge
(
x
));

36 
vec
.
	`push_back
(
x
);

39 
x
=(-1.0*
b
+
	`sqπ
(
dñè
))/(2.0*
a
);

40 if(
	`ö_ønge
(
x
))

41 
vec
.
	`push_back
(
x
);

42 
x
=(-1.0*
b
-
	`sqπ
(
dñè
))/(2.0*
a
);

43 if(
	`ö_ønge
(
x
))

44 
vec
.
	`push_back
(
x
);

45 
	}
}

47 
	$ff
(
x
) {

48  0.5*
x
*
	`sqπ
(1+x*x)+0.5*
	`log
(x+sqrt(1+x*x));

49 
	}
}

51 
	$öãgøti⁄
(
l
,
r
) {

52  
	`ff
(
r
)-ff(
l
);

53 
	}
}

55 
	$maö
() {

56 
T
;

57 
	`sˇnf
("%d",&
T
);

58 
ˇ
=1; ca<=
T
; ca++) {

59 
n
;

60 
vec
.
	`˛ór
();

61 
vec
.
	`push_back
(0);

62 
vec
.
	`push_back
(100);

63 
	`sˇnf
("%d",&
n
);

64 
li
[0].
a
=0;

65 
li
[0].
b
=100;

66 
li
[0].
k
=0;

67 
i
=1; i<=
n
; i++) {

68 
	`sˇnf
("%d%d%d",&
li
[
i
].
k
,&li[i].
a
,&li[i].
b
);

70 
i
=0; i<=
n
; i++) {

71 
j
=
i
+1; j<=
n
; j++) {

72 
	`gë_sﬁve
(
li
[
i
].
k
-li[
j
].k,2*÷i[j].k*li[j].
a
-li[i].k*li[i].a),li[i].k*li[i].a*li[i].a-li[j].k*li[j].a*li[j].a+li[i].
b
-li[j].b);

75 
	`s‹t
(
vec
.
	`begö
(),vec.
	`íd
());

76 
ªt
=0;

77 
i
=0; i<
vec
.
	`size
()-1; i++) {

78 
mid
=(
vec
[
i
]+vec[i+1])*0.5;

79 
nowi
=0;

80 
j
=1; j<=
n
; j++) {

81 if(
	`f
(
mid
,
j
)<f(mid,
nowi
))

82 
nowi
=
j
;

84 if(
li
[
nowi
].
k
==0) {

85 
ªt
+=
vec
[
i
+1]-vec[i];

88 
ªt
+=1.0/(2*
li
[
nowi
].
k
)*
	`öãgøti⁄
(2*li[nowi].k*(
vec
[
i
]-li[nowi].
a
),2*li[nowi].k*(vec[i+1]-li[nowi].a));

91 
	`¥ötf
("%.2lf\n",
ªt
);

94 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/g.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[7][1025];

8 
	gm©
[7][7];

9 
	gn
,
	gm
;

11 
ölöe
 
	$B
(
i
) {

12  1<<
i
;

13 
	}
}

15 
	$gn°
(
°
,
x
) {

16 if(
x
==0)

17  
°
;

18 if(
x
==1) {

19 if(
°
==1)

21 if(
°
==2)

23 if(
°
==3)

25  
°
;

27 if(
°
==0)

29 if(
°
==1)

32 
	}
}

34 
	$gf
(
x
,
i
) {

35 
ªt
=0;

36 if(
x
&
	`B
(2*
m
-1-2*
i
))

37 
ªt
+=2;

38 if(
x
&
	`B
(2*
m
-1-2*
i
-1))

39 
ªt
+=1;

40  
ªt
;

41 
	}
}

43 
	$tf
(&
°
, 
x
, 
i
) {

44 if(
x
&2) {

45 
°
|=
	`B
(2*
m
-1-2*
i
);

47 if(
x
&1) {

48 
°
|=
	`B
(2*
m
-1-2*
i
-1);

50 
	}
}

52 
	$dfs
(
id
,
°
) {

53 if(
dp
[
id
][
°
]>=0)

54  
dp
[
id
][
°
];

55 if(
id
==
n
)

56  
dp
[
id
][
°
]=0;

57 
ªt
=0;

58 
i
=0; i<
	`B
(
m
); i++) {

59 
èg
=1;

60 
j
=0; j<
m
&&
èg
; j++)

61 if((
i
&
	`B
(
j
))&&
m©
[
id
][j])

62 
èg
=0;

63 if(
èg
==0)

65 
now
=0;

66 
j
=0; j<
m
&&
èg
; j++) {

67 if(
m©
[
id
][
j
])

68 
now
=
	`gn°
(now,1);

69 if(
i
&
	`B
(
j
))

70 
now
=
	`gn°
(now,2);

72 
now
=
	`gn°
(now,0);

73 if(
now
<0)

74 
èg
=0;

76 if(
èg
==0)

78 
n°
=0,
c
=0;

79 
j
=0; j<
m
&&
èg
; j++) {

80 if(
i
&
	`B
(
j
)) {

81 
tmp
=
	`gn°
(
	`gf
(
°
,
j
),2);

82 if(
tmp
<0Ë
èg
=0;

83 
	`tf
(
n°
,
tmp
,
j
);

84 
c
++;

86 if(
m©
[
id
][
j
]) {

87 
	`tf
(
n°
,
	`gn°
(
	`gf
(
°
,
j
),1),j);

90 
	`tf
(
n°
,
	`gn°
(
	`gf
(
°
,
j
),0),j);

93 if(
èg
==0)

95 
ªt
=
	`max
‘ë,
	`dfs
(
id
+1,
n°
)+
c
);

97  
dp
[
id
][
°
]=
ªt
;

98 
	}
}

100 
	$maö
() {

101 
q
;

102 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
q
)+1) {

103 
	`mem£t
(
m©
,0,(mat));

104 
	`mem£t
(
dp
,-1,(dp));

105 
i
=0; i<
q
; i++) {

106 
x
,
y
;

107 
	`sˇnf
("%d%d",&
x
,&
y
);

108 
m©
[
x
][
y
]=1;

110 
	`¥ötf
("%d\n",
	`dfs
(0,0));

113 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/h.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

5 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gN
 = 23;

7 c⁄° 
	göf
 = 2000200;

9 
	gdp
[
N
][N][N][N];

10 
	ga
[
N
];

11 
	gb
[
N
];

12 
	gn
;

14 
	$dfs
(
Æ
,
¨
,
bl
,
br
) {

15 if(
dp
[
Æ
][
¨
][
bl
][
br
]>=0)

16  
dp
[
Æ
][
¨
][
bl
][
br
];

17 
c
=2*
n
-(
¨
-
Æ
+1+
br
-
bl
+1);

18 if(
c
==2*
n
)

19  
dp
[
Æ
][
¨
][
bl
][
br
]=0;

20 
ªt
;

21 if(
c
&1)

22 
ªt
=
öf
;

24 
ªt
=0;

25 if(
¨
>=
Æ
) {

26 if(
c
&1) {

27 
ªt
=
	`mö
‘ë,
	`dfs
(
Æ
+1,
¨
,
bl
,
br
));

28 
ªt
=
	`mö
‘ë,
	`dfs
(
Æ
,
¨
-1,
bl
,
br
));

31 
ªt
=
	`max
‘ë,
	`dfs
(
Æ
+1,
¨
,
bl
,
br
)+
a
[al]);

32 
ªt
=
	`max
‘ë,
	`dfs
(
Æ
,
¨
-1,
bl
,
br
)+
a
[ar]);

35 if(
br
>=
bl
) {

36 if(
c
&1) {

37 
ªt
=
	`mö
‘ë,
	`dfs
(
Æ
,
¨
,
bl
+1,
br
));

38 
ªt
=
	`mö
‘ë,
	`dfs
(
Æ
,
¨
,
bl
,
br
-1));

41 
ªt
=
	`max
‘ë,
	`dfs
(
Æ
,
¨
,
bl
+1,
br
)+
b
[bl]);

42 
ªt
=
	`max
‘ë,
	`dfs
(
Æ
,
¨
,
bl
,
br
-1)+
b
[br]);

45  
dp
[
Æ
][
¨
][
bl
][
br
]=
ªt
;

46 
	}
}

48 
	$maö
() {

49 
T
;

50 
	`sˇnf
("%d",&
T
);

51 
ˇ
=1; ca<=
T
; ca++) {

52 
	`sˇnf
("%d",&
n
);

53 if(
n
<=0) {

54 
	`puts
("0");

57 
i
=1; i<=
n
; i++)

58 
	`sˇnf
("%d",&
a
[
i
]);

59 
i
=1; i<=
n
; i++)

60 
	`sˇnf
("%d",&
b
[
i
]);

61 
	`mem£t
(
dp
,-1,(dp));

62 
	`¥ötf
("%d\n",
	`dfs
(1,
n
,1,n));

65 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/i.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	~<queue
>

5 
	~<°rög
>

6 
	~<utûôy
>

7 
	~<ve˘‹
>

8 
	~<queue
>

10 
usög
 
«me•a˚
 
	g°d
;

11 c⁄° 
	gN
 = 400;

12 c⁄° 
	göf
 = 0x3ffffff;

14 
°rög
 
	gm©
[
N
];

15 
	gcﬁ
[
N
],
	gvis
[N],
	glo›
,
	g˙t
[N],
	gdis
[N];

16 
	gve˘‹
<
	g∑ú
<,> > 
	ggr
[
N
];

17 
	gqueue
<> 
	gq
;

19 
	$dfs
(
now
,
c
,
n
) {

20 if(
lo›
) ;

21 
vis
[
now
]=1;

22 
cﬁ
[
now
]=
c
;

23 
i
=0; i<
n
; i++)

24 if(
m©
[
now
][
i
]=='1') {

25 if(
vis
[
i
]) {

26 if(
cﬁ
[
i
]==
c
) {

27 
lo›
=1;

32 
	`dfs
(
i
,1-
c
,
n
);

34 
	}
}

36 
	$•Á
(
°
,
n
) {

37 
	`mem£t
(
vis
,0,(vis));

38 
	`mem£t
(
˙t
,0,(cnt));

39 ; !
q
.
	`em±y
();)

40 
q
.
	`p›
();

41 
i
=0; i<=
n
; i++)

42 
dis
[
i
]=
öf
;

43 
q
.
	`push
(
°
);

44 
vis
[
°
]=1;

45 
dis
[
°
]=0;

46 
˙t
[
°
]++;

47 ; !
q
.
	`em±y
();) {

48 
now
=
q
.
	`‰⁄t
();

49 
vis
[
now
]=0;

50 if(
˙t
[
now
]>
n
+1)

52 
q
.
	`p›
();

53 
i
=0; i<
gr
[
now
].
	`size
(); i++) {

54 
to
=
gr
[
now
][
i
].
fú°
;

55 
é
=
gr
[
now
][
i
].
£c⁄d
;

56 if(
dis
[
to
]>
é
+dis[
now
]) {

57 
dis
[
to
]=
é
+dis[
now
];

58 if(!
vis
[
to
]) {

59 
vis
[
to
]=1;

60 
q
.
	`push
(
to
);

61 
˙t
[
to
]++;

67 
	}
}

69 
	$maö
() {

70 
T
;

71 
	`sˇnf
("%d",&
T
);

72 
ˇ
=1; ca<=
T
; ca++) {

73 
n
;

74 
	`sˇnf
("%d",&
n
);

75 
i
=0; i<
n
; i++) {

76 
cö
>>
m©
[
i
];

78 
	`mem£t
(
cﬁ
,0,(col));

79 
	`mem£t
(
vis
,0,(vis));

80 
lo›
=0;

81 
i
=0; i<
n
; i++) {

82 if(
m©
[
i
][i]=='1')

83 
lo›
=1;

84 if(!
vis
[
i
])

85 
	`dfs
(
i
,0,
n
);

87 if(
lo›
)

88 
	`puts
("No");

90 
i
=0; i<=
n
; i++)

91 
gr
[
i
].
	`˛ór
();

92 
i
=0; i<
n
; i++) {

93 if(
cﬁ
[
i
]) {

94 
gr
[0].
	`push_back
(
	`make_∑ú
(
i
+1,
N
-1));

95 
gr
[
i
+1].
	`push_back
(
	`make_∑ú
(0,0));

98 
gr
[
i
+1].
	`push_back
(
	`make_∑ú
(0,
N
-1));

99 
gr
[0].
	`push_back
(
	`make_∑ú
(
i
+1,0));

102 
i
=0; i<
n
; i++) {

103 
j
=
i
+1; j<
n
; j++) {

104 if(
m©
[
i
][
j
]=='1') {

105 if(
cﬁ
[
i
]) {

106 
gr
[
i
+1].
	`push_back
(
	`make_∑ú
(
j
+1,-
N
));

109 
gr
[
j
+1].
	`push_back
(
	`make_∑ú
(
i
+1,-
N
));

113 
gr
[
i
+1].
	`push_back
(
	`make_∑ú
(
j
+1,
N
-1));

114 
gr
[
j
+1].
	`push_back
(
	`make_∑ú
(
i
+1,
N
-1));

118 if(
	`•Á
(0,
n
))

119 
	`puts
("Yes");

121 
	`puts
("No");

125 
	}
}

	@problems/acm_icpc_contest/2013_tonhua_invite/j.cpp

1 
	~<c°dio
>

3 c⁄° 
	gMOD
 = 2011;

5 
	$f
(
a
,
b
) {

6 if(
b
<0)  0;

7 
ªt
=1;

8 ; 
b
;) {

9 if(
b
&1)

10 
ªt
Ùë*
a
%
MOD
;

11 
b
>>=1;

12 
a
˜*a%
MOD
;

14  
ªt
;

15 
	}
}

17 
	$möus
(
a
,
b
) {

18  ((
a
-
b
)%
MOD
+MOD)%MOD;

19 
	}
}

21 
	$maö
() {

22 
n
;

23 
	`sˇnf
("%d",&
n
)+1) {

24 if(
n
==0) ;

25 
	`¥ötf
("%d %d\n",(
	`möus
(
	`f
(6,
n
-1),1)*f(5,
MOD
-2)+1)%MOD,minus(f(6,n),1)*f(5,MOD-2)%MOD);

28 
	}
}

	@problems/baidu/2012_1st/astar_b.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 500010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffffffffffffLL

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	gªt
[
N
],
	gt›
;

41 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

43 
	$ok
(
LL
 
a
,LL 
b
,
l
)

45 if(
l
>50)  0;

46 
ªt
[
l
]=
a
;

47 if(
a
>=
öf
+1||a<=0)

49 if((
a
*
b
)%(a+b)==0)

51 
t›
=
l
;

54 
LL
 
g
=
	`gcd
(
a
,
b
);

55 if(
	`ok
(
a
*◊/
g
-1),
b
,
l
+1))

57 if(
	`ok
(
a
/
g
,
b
,
l
+1))

60 
	}
}

62 
	$maö
()

64 
a
,
b
;

65 
	`sˇnf
("%d%d",&
a
,&
b
)!=
EOF
)

67 if(
	`ok
((
LL
)
a
,(LL)
b
,0))

69 
i
=0; i<
t›
; i++)

70 
	`¥ötf
("%Œd ",
ªt
[
i
]);

71 
	`¥ötf
("%Œd\n",
b
);

74 
	`puts
("0");

77 
	}
}

	@problems/baidu/2012_1st/astar_c.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 1e12

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	slöe
{ 
	mk
,
	mb
; }
	gl
[
N
];

40 
	$cmp
(
löe
 
a
,löê
b
){ á.b==b.b?a.
k
<b.k:a.b<b.b; 
	}
}

42 
	$maö
()

44 
n
;

45 
x1
,
y1
,
x2
,
y2
;

46 
	`sˇnf
("%d",&
n
);

47 
i
=0; i<
n
; i++)

49 
	`sˇnf
("%lf%lf%lf%lf",&
x1
,&
y1
,&
x2
,&
y2
);

50 
l
[
i
].
k
=(
y2
-
y1
)/(
x2
-
x1
);

51 
l
[
i
].
b
=-
x1
*l[i].
k
+
y1
;

53 
	`s‹t
(
l
,l+
n
,
cmp
);

54 
i
=0; i<
n
; i++)

56 
ªt
=-
öf
;

57 
j
=0; j<
n
; j++)

59 if(
i
==
j
) ;

60 if(
l
[
i
].
k
=ˆ[
j
].k) ;

61 
ªt
=
	`max
‘ë,(
l
[
j
].
b
-l[
i
].b)/÷[i].
k
-l[j].k));

63 
	`¥ötf
("%.2lf\n",
ªt
);

66 
	}
}

	@problems/baidu/2012_qual/astar_a.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	gx
,
	ga
,
	gb
;

40 
LL
 
	gãn
[
N
];

41 
	gl
;

43 
	$öô
()

45 
ãn
[0]=1;

46 
i
=1; i<20; i++)

47 
ãn
[
i
]=ten[i-1]*10;

48 
	}
}

50 
	$gëÀn
(
LL
 
n
)

52 
ªt
=0;

53 if(
n
==0)  1;

54 ; 
n
;)

55 
n
/=10,
ªt
++;

56  
ªt
;

57 
	}
}

59 
LL
 
	$ˇlc
(
LL
 
n
,
 
)

61 
y
=
 
-
l
-1;

62 
LL
 
ªt
=0;

63 if(
y
<0)

64  
n
>=
x
;

65 
ªt
=(
n
/
ãn
[
 
-1])*ãn[
y
];

66 
ªt
+=
	`ˇlc
(
n
%
ãn
[
 
-1],ln-1);

67  
ªt
;

68 
	}
}

70 
	$maö
()

72 
t
,
œ
,
lb
;

73 
	`öô
();

74 
	`sˇnf
("%d",&
t
);

75 ; 
t
--;)

77 
cö
>>
x
>>
a
>>
b
;

78 
l
=
	`gëÀn
(
x
);

79 
œ
=
	`gëÀn
(
a
-1);

80 
lb
=
	`gëÀn
(
b
);

81 
cout
<<
	`ˇlc
(
b
,
lb
)-ˇlc(
a
-1,
œ
)<<
ídl
;

84 
	}
}

	@problems/baidu/2012_qual/astar_c.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	s£g
{ 
LL
 
	ml
,
	mr
; }
	g£
[
N
];

40 
	$cmp
(
£g
 
a
,£g 
b
){ á.
l
==b.l?a.
r
<b.r:a.l<b.l; 
	}
}

42 
	$maö
()

44 
n
;

45 
LL
 
ªt
=0,
¥e
,
l
,
r
,
Œ
,
º
,
∆
,
ƒ
,
∆l
,
ƒr
;

46 
	`sˇnf
("%d",&
n
);

47 
i
=0; i<
n
; i++)

49 
cö
>>
£
[
i
].
l
>>£[i].
r
;

51 
	`s‹t
(
£
,£+
n
,
cmp
);

52 
l
=
Œ
=
£
[0].l,
r
=
º
=£[0].r,
¥e
=0;

53 
i
=1; i<
n
; i++)

55 if(
£
[
i
].
r
<=
º
)

57 
∆
=
£
[
i
].
l
,
ƒ
=
	`mö
(£[i].
r
,r);

58 
∆l
=
Œ
,
ƒr
=
	`max
(
º
,
£
[
i
].
r
);

60 if((
ƒ
-
∆
)*(
ƒr
-
∆l
)>
ªt
)

61 
ªt
=(
ƒ
-
∆
)*(
ƒr
-
∆l
);

66 if(
£
[
i
].
l
>
r
)

68 
¥e
=0;

69 
l
=
£
[
i
].l;

70 
r
=
£
[
i
].r;

71 
Œ
=
£
[
i
].
l
;

72 
º
=
£
[
i
].
r
;

76 
∆
=
£
[
i
].
l
,
ƒ
=
r
;

77 
∆l
=
Œ
,
ƒr
=
£
[
i
].
r
;

78 if((
ƒ
-
∆
)*(
ƒr
-
∆l
)>
¥e
)

80 
¥e
=(
ƒ
-
∆
)*(
ƒr
-
∆l
);

81 
l
=
∆
,
r
=
ƒ
,
Œ
=
∆l
,
º
=
ƒr
;

84 
ªt
=
	`max
‘ë,
¥e
);

86 
cout
<<
ªt
<<
ídl
;

88 
	}
}

	@problems/bnu/bnu_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	gf
[
N
],
	gd
[N];

41 
	$maö
()

43 
n
;

44 
f
[0]=
d
[0]=0;

45 
f
[1]=2,
d
[1]=1;

46 
i
=2; i<21; i++)

48 
f
[
i
]=2*f[i-1]+2+
d
[i-1];

49 
d
[
i
]=2*
f
[i-1]+1;

51 
	`sˇnf
("%d",&
n
)!=
EOF
)

52 
cout
<<
f
[
n
]<<
ídl
;

54 
	}
}

	@problems/bnu/bnu_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	g∂i°
[
N
],
	gp
[N],
	gt›
;

41 
	$öô
()

43 
t›
=0;

44 
LL
 
i
=0; i<
N
; i++)

45 
p
[
i
]=i;

46 
i
=2; i<
N
; i++)

48 if(
p
[
i
]==i)

49 
∂i°
[
t›
++]=
i
;

50 
j
=0; j<
t›
&&
i
*
∂i°
[j]<
N
; j++)

52 
p
[
∂i°
[
j
]*
i
]=plist[j];

53 if(
i
%
∂i°
[
j
]==0)

57 
	}
}

59 
LL
 
	$gë
(
LL
 
id
)

61 
LL
 
x
=
id
,
˙t
,
ªt
=1;

62 
i
=0; i<
t›
&&
x
>1; i++)

64 if(
x
%
∂i°
[
i
]==0)

66 
˙t
=1;

67 ; 
x
%
∂i°
[
i
]==0; )

68 
˙t
++,
x
/=
∂i°
[
i
];

69 if(
i
==0)

70 
ªt
*=
˙t
-1;

72 
ªt
*=
˙t
;

75  
ªt
;

76 
	}
}

78 
LL
 
	$euœr
(
LL
 
n
,LL 
id
)

80 
LL
 
ªt
=1;

81 
ªt
=
	`gë
(
id
);

82 
ªt
*=
	`gë
(
id
+1);

83  
ªt
;

84 
	}
}

86 
	$ovî
(
LL
 
g
,LL &
ªt
)

88 
LL
 
i
,
eu
,
mx
=0;

89 
i
=0; ; i++)

91 
ªt
=
i
*(i+1)/2;

92 if(
ªt
>1000000000LL)

96 if(
ªt
==0)

97 
eu
=0;

98 if(
ªt
==1)

99 
eu
=1;

101 
eu
=
	`euœr
(
ªt
,
i
);

102 if(
eu
>=
g
)

106 
	}
}

108 
	$maö
()

110 
LL
 
x
,
g
,
ªt
;

111 
	`öô
();

112 
cö
>>
g
)

114 if(
g
>1024)

115 
	`puts
("Mmm...");

118 
	`ovî
(
g
,
ªt
);

119 
cout
<<
ªt
<<
ídl
;

123 
	}
}

	@problems/codeforces/beta_round/round1/BR1_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	$gë
(
LL
 
a
,LL 
b
)

36 
LL
 
ªt
=
a
/
b
;

37 if(
b
*
ªt
==
a
)

38  
ªt
;

39  
ªt
+1;

40 
	}
}

42 
	$maö
()

44 
LL
 
m
,
n
,
a
;

45 
	`sˇnf
("%I64d%I64d%I64d",&
m
,&
n
,&
a
)!=
EOF
)

47 
	`¥ötf
("%I64d\n",
	`gë
(
m
,
a
)*gë(
n
,a));

50 
	}
}

	@problems/codeforces/beta_round/round1/BR1_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
];

36 
	$gë_Æf
(
x
)

38 if(
x
==0)

40 if(
x
>26)

41 
	`gë_Æf
((
x
-1)/26);

42 
	`¥ötf
("%c",'A'+(
x
-1)%26);

43 
	}
}

45 
	$show
(
l
)

47 
c
=-1,
x
;

48 
i
=0; i<
l
; i++)

49 if(
s
[
i
]=='C')

51 
c
=
i
;

54 if(
s
[0]=='R'&&s[1]<='9'&&
c
>0)

56 
x
=0;

57 
i
=
c
+1; i<
l
; i++)

58 
x
*=10,x+=
s
[
i
]-'0';

59 
	`gë_Æf
(
x
);

60 
x
=0;

61 
i
=1; i<
c
; i++)

62 
x
*=10,x+=
s
[
i
]-'0';

63 
	`¥ötf
("%d\n",
x
);

67 
	`¥ötf
("R");

68 
i
=0; i<
l
; i++)

69 if(
s
[
i
]<='9')

71 
c
=
i
;

74 
x
=0;

75 
i
=
c
; i<
l
; i++)

76 
x
*=10,x+=
s
[
i
]-'0';

77 
	`¥ötf
("%dC",
x
);

78 
x
=0;

79 
i
=0; i<
c
; i++)

80 
x
*=26,x+=
s
[
i
]-'A'+1;

81 
	`¥ötf
("%d\n",
x
);

83 
	}
}

85 
	$maö
()

87 
n
,
l
;

88 
	`sˇnf
("%d",&
n
);

89 
i
=0; i<
n
; i++)

91 
	`sˇnf
("%s",
s
);

92 
l
=
	`°æí
(
s
);

93 
	`show
(
l
);

96 
	}
}

	@problems/codeforces/beta_round/round1/BR1_C.cpp

6 
	~<c°rög
>

7 
	~<c°dio
>

8 
	~<ve˘‹
>

9 
	~<£t
>

10 
	~<m≠
>

11 
	~<queue
>

12 
	~<°rög
>

13 
	~<s°ªam
>

14 
	~<cm©h
>

15 
	~<fun˘i⁄Æ
>

16 
	~<io°ªam
>

17 
	~<Æg‹ôhm
>

18 
	#N
 1010

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#ïs
 1e-4

	)

22 
	#öf
 0x3fffffff

	)

23 
	#MOD
 1000000007

	)

24 
	#PB
 
push_back


	)

25 
	#MP
 
make_∑ú


	)

26 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

27 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

28 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

30 
	tLL
;

31 
usög
 
«me•a˚
 
	g°d
;

33 
	spoöt
{ 
	mx
,
	my
; };

34 
	slöe
{ 
poöt
 
	ma
,
	mb
; };

36 
ölöe
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

38  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

39 
	}
}

41 
	$Àn
(
poöt
 
a
,poöà
b
){  
	`sqπ
(◊.
x
-b.x)*◊.x-b.x)+◊.
y
-b.y)*◊.y-b.y)); 
	}
}

43 
poöt
 
	$öãrs
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

45 
poöt
 
ªt
=
a
;

46 
up
,
dw
,
t
;

47 
up
=
	`xmu…
(
c
,
d
,c,
a
);

48 
dw
=
	`xmu…
(
a
,
b
,
c
,
d
);

49 
t
=
up
/
dw
;

50 
ªt
.
x
+=(
b
.x-
a
.x)*
t
;

51 
ªt
.
y
+=(
b
.y-
a
.y)*
t
;

52  
ªt
;

53 
	}
}

55 
poöt
 
	$gëp
(
poöt
 
a
,poöà
b
,poöà
c
){

56 
löe
 
u
,
v
;

57 
u
.
a
.
x
=◊.x+
b
.x)/2;

58 
u
.
a
.
y
=◊.y+
b
.y)/2;

59 
u
.
b
.
x
=u.
a
.x-a.
y
+b.y;

60 
u
.
b
.
y
=u.
a
.y+a.
x
-b.x;

61 
v
.
a
.
x
=◊.x+
c
.x)/2;

62 
v
.
a
.
y
=◊.y+
c
.y)/2;

63 
v
.
b
.
x
=v.
a
.x-a.
y
+
c
.y;

64 
v
.
b
.
y
=v.
a
.y+a.
x
-
c
.x;

65  
	`öãrs
(
u
.
a
,u.
b
,
v
.a,v.b);

66 
	}
}

68 
	$maö
()

70 
poöt
 
a
,
b
,
c
,
˚n
;

71 
pi
=
	`acos
(-1),
r
;

72 
	`sˇnf
("%lf%lf%lf%lf%lf%lf",&
a
.
x
,&a.
y
,&
b
.x,&b.y,&
c
.x,&c.y)!=
EOF
)

74 
˚n
=
	`gëp
(
a
,
b
,
c
);

75 
r
=
	`Àn
(
˚n
,
a
);

76 
si
,
tmp
;

77 
i
=3; i<=100; i++)

79 
si
=2*
pi
/
i
;

80 
tmp
=2*
	`asö
(
	`Àn
(
a
,
b
)/2/
r
);

81 
tmp
/=
si
;

82 if(
	`Ábs
(
tmp
-—mp+0.5))>
ïs
)

84 
tmp
=2*
	`asö
(
	`Àn
(
a
,
c
)/2/
r
);

85 
tmp
/=
si
;

86 if(
	`Ábs
(
tmp
-—mp+0.5))>
ïs
)

88 
	`¥ötf
("%.12lf\n",
i
*(
r
*r*
	`sö
(
si
)/2));

93 
	}
}

	@problems/codeforces/beta_round/round2/BR2_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
][N];

35 
	gsc
[
N
];

36 
°rög
 
	gªt
,
	gtmp
;

37 
	gm≠
<
	g°rög
,> 
	gmp
;

38 
	gm≠
<
	g°rög
,> 
	gmµ
;

39 
	gm≠
<
	g°rög
,>::
ôî©‹
 
ô
;

41 
	$maö
()

43 
n
,
r
,
ii
;

44 
	`sˇnf
("%d",&
n
)!=
EOF
)

46 
r
=0;

47 
mp
.
	`˛ór
();

48 
mµ
.
	`˛ór
();

49 
x
;

50 
i
=0; i<
n
; i++)

52 
	`sˇnf
("%s%d",
s
[
i
],&
sc
[i]);

53 
tmp
=
	`°rög
(
s
[
i
]);

54 if(
mp
.
	`cou¡
(
tmp
)>0)

55 
mp
[
tmp
]+=
sc
[
i
];

57 
mp
[
tmp
]=
sc
[
i
];

59 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++)

61 if(
ô
->
£c⁄d
>
r
)

62 
r
=
ô
->
£c⁄d
;

64 
i
=0; i<
n
; i++)

66 
tmp
=
	`°rög
(
s
[
i
]);

67 if(
mµ
.
	`cou¡
(
tmp
)>0)

68 
mµ
[
tmp
]+=
sc
[
i
];

70 
mµ
[
tmp
]=
sc
[
i
];

71 if(
mp
[
tmp
]==
r
&&
mµ
[tmp]>=r)

73 
ªt
=
tmp
;

77 
cout
<<
ªt
<<
ídl
;

80 
	}
}

	@problems/codeforces/beta_round/round2/BR2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gn
,
	gdú
[2][
N
][N];

35 
	snode
{ 
	mf
,
	mt
; }
	gdp
[
N
<<1][N],
	gm©
[N][N];

36 
ölöe
 
	$öbﬂrd
(
x
,
y
)

38  1<=
x
&&x<=
n
&&1<=
y
&&y<=n;

39 
	}
}

41 
	$show
(
x
,
y
,
i
)

43 if(
x
==1&&
y
==1)

45 if(
dú
[
i
][
x
][
y
]==1)

47 
	`show
(
x
,
y
-1,
i
);

48 
	`¥ötf
("R");

52 
	`show
(
x
-1,
y
,
i
);

53 
	`¥ötf
("D");

55 
	}
}

57 
	$maö
()

59 
èg
,
zx
,
zy
;

60 
	`sˇnf
("%d",&
n
)!=
EOF
)

62 
˙t
;

63 
èg
=0;

64 
i
=1; i<=2*
n
-1; i++)

65 
j
=1; j<=
n
; j++)

66 
dp
[
i
][
j
].
t
=dp[i][j].
f
=
öf
;

67 
i
=1; i<=
n
; i++)

68 
j
=1; j<=
n
; j++)

70 
x
;

71 
˙t
=0;

72 
	`sˇnf
("%d",&
x
);

73 if(
x
==0)

75 
m©
[
i
][
j
].
f
=m©[i][j].
t
=0;

76 
èg
=1;

77 
zx
=
i
,
zy
=
j
;

80 ; (!(
x
&1))&&x>0; )

81 
x
>>=1,
˙t
++;

82 
m©
[
i
][
j
].
t
=
˙t
;

83 
˙t
=0;

84 ; (
x
%5==0)&&(x>0);)

85 
x
/=5,
˙t
++;

86 
m©
[
i
][
j
].
f
=
˙t
;

88 
m
,
x
,
y
,
five
,
two
,
xx
,
yy
,
ni
,
nj
;

89 
dp
[1][1]=
m©
[1][1];

90 
i
=1; i<2*
n
-1; i++)

92 if(
i
>
n
)

93 
m
=2*
n
-
i
,
x
Ú,
y
=i-n+1;

95 
m
=
i
,
x
=i,
y
=1;

96 
j
=1; j<=
m
; j++)

98 
five
=
dp
[
i
][
j
].
f
,
two
=dp[i][j].
t
;

99 
xx
=
x
+1,
yy
=
y
;

100 if(
i
>=
n
)

101 
ni
=
i
+1,
nj
=
j
-1;

103 
ni
=
i
+1,
nj
=
j
;

104 if(
	`öbﬂrd
(
xx
,
yy
))

106 if(
two
+
m©
[
xx
][
yy
].
t
<
dp
[
ni
][
nj
].t)

107 
dp
[
ni
][
nj
].
t
=
two
+
m©
[
xx
][
yy
].t,
dú
[0][xx][yy]=0;

108 if(
five
+
m©
[
xx
][
yy
].
f
<
dp
[
ni
][
nj
].f)

109 
dp
[
ni
][
nj
].
f
=
five
+
m©
[
xx
][
yy
].f,
dú
[1][xx][yy]=0;

111 
xx
=
x
,
yy
=
y
+1;

112 if(
i
>=
n
)

113 
ni
=
i
+1,
nj
=
j
;

115 
ni
=
i
+1,
nj
=
j
+1;

116 if(
	`öbﬂrd
(
xx
,
yy
))

118 if(
two
+
m©
[
xx
][
yy
].
t
<
dp
[
ni
][
nj
].t)

119 
dp
[
ni
][
nj
].
t
=
two
+
m©
[
xx
][
yy
].t,
dú
[0][xx][yy]=1;

120 if(
five
+
m©
[
xx
][
yy
].
f
<
dp
[
ni
][
nj
].f)

121 
dp
[
ni
][
nj
].
f
=
five
+
m©
[
xx
][
yy
].f,
dú
[1][xx][yy]=1;

123 
x
--,
y
++;

126 
ªt
=
öf
;

127 
ªt
=
	`mö
‘ë,mö(
dp
[2*
n
-1][1].
t
,dp[2*n-1][1].
f
));

128 if(
èg
)

129 
ªt
=
	`mö
(ret,1);

130 
	`¥ötf
("%d\n",
ªt
);

131 if(
èg
&&
ªt
==1)

133 
i
=1; i<
zx
; i++)

134 
	`¥ötf
("D");

135 
i
=1; i<
zy
; i++)

136 
	`¥ötf
("R");

137 
i
=
zx
; i<
n
; i++)

138 
	`¥ötf
("D");

139 
i
=
zy
; i<
n
; i++)

140 
	`¥ötf
("R");

142 if(
dp
[2*
n
-1][1].
f
<dp[2*n-1][1].
t
)

143 
	`show
(
n
,n,1);

145 
	`show
(
n
,n,0);

146 
	`puts
("");

149 
	}
}

	@problems/codeforces/beta_round/round2/BR2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-6

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gx
[3],
	gy
[3],
	gr
[3],
	ga
[2],
	gb
[2],
	gc
[2],
	gd
[2],
	gxx0
,
	gyy0
,
	gk
,
	gØ
,
	gbb
,
	gcc
,
	gas
,
	gbs
,
	gcs
,
	gdñè
;

35 
ölöe
 
	$f
(
x
){  x*x; 
	}
}

37 
	$maö
()

39 
i
=0; i<3; i++)

40 
	`sˇnf
("%lf%lf%lf",&
x
[
i
],&
y
[i],&
r
[i]);

41 
i
=0; i<2; i++)

43 
a
[
i
]=
	`f
(
r
[2])-f(r[i]);

44 
b
[
i
]=-2*
	`f
(
r
[2])*
x
[i]+2*f(r[i])*x[2];

45 
c
[
i
]=-2*
	`f
(
r
[2])*
y
[i]+2*f(r[i])*y[2];

46 
d
[
i
]=
	`f
(
r
[2])*(f(
x
[i])+f(
y
[i]))-f(r[i])*(f(x[2])+f(y[2]));

48 
Ø
=
b
[0]*
a
[1]-b[1]*a[0];

49 
bb
=
c
[0]*
a
[1]-c[1]*a[0];

50 
cc
=
d
[0]*
a
[1]-d[1]*a[0];

51 if(
	`Ábs
(
Ø
)<
ïs
)

53 if(
	`Ábs
(
bb
)<
ïs
)

55 if(
	`Ábs
(
cc
)<
ïs
)

57 
Ø
=
c
[0]*
b
[1]-c[1]*b[0];

58 
bb
=
d
[0]*
b
[1]-d[1]*b[0];

59 
yy0
=-
bb
/
Ø
;

60 
xx0
=(-
d
[0]-
y
[0]*
c
[0])/
b
[0];

61 
	`¥ötf
("%.12l‡%.12lf\n",
xx0
,
yy0
);

69 
xx0
=0;

70 
yy0
=-
cc
/
bb
;

73 if(
	`Ábs
(
bb
)<
ïs
)

75 
yy0
=0;

76 
xx0
=-
cc
/
Ø
;

80 
xx0
=0;

81 
yy0
=-
cc
/
bb
;

83 if(
	`Ábs
(
a
[0])<
ïs
)

84 
a
[0]˜[1],
b
[0]=b[1],
c
[0]=c[1],
d
[0]=d[1];

85 
as
=
a
[0]*
	`f
(
bb
)+a[0]*f(
Ø
);

86 
bs
=-2*
xx0
*
bb
*
a
[0]+2*
Ø
*
yy0
*a[0]-
b
[0]*bb+
c
[0]*aa;

87 
cs
=
d
[0]+
b
[0]*
xx0
+
c
[0]*
yy0
+
a
[0]*
	`f
(xx0)+a[0]*f(yy0);

88 
dñè
=
	`f
(
bs
)-4*
as
*
cs
;

89 
rx
,
ry
,
tx
,
ty
;

90 if(
dñè
<-
ïs
)

94 
k
=(-
bs
-
	`sqπ
(
	`Ábs
(
dñè
)))/2/
as
;

95 
rx
=
xx0
-
bb
*
k
,
ry
=
yy0
+
Ø
*k;

96 
k
=(-
bs
+
	`sqπ
(
	`Ábs
(
dñè
)))/2/
as
;

97 
tx
=
xx0
-
bb
*
k
,
ty
=
yy0
+
Ø
*k;

98 if(
	`f
(
rx
-
x
[0])+f(
ry
-
y
[0])>f(
tx
-x[0])+f(
ty
-y[0]))

99 
rx
=
tx
,
ry
=
ty
;

101 
	`¥ötf
("%.12l‡%.12lf\n",
rx
,
ry
);

103 
	}
}

	@problems/codeforces/beta_round/round3/BR3A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	snode
{ 
	mx
,
	my
; }
	g°
,
	ged
;

34 
	gs
[4];

35 
	gªt
[10][10]={"L","R","U","D","LU","LD","RU","RD" };

37 
node
 
	$gë
()

39 
node
 
ªt
;

40 
ªt
.
y
=
s
[1]-'1';

41 
ªt
.
x
=
s
[0]-'a';

42  
ªt
;

43 
	}
}

45 
	$ˇl
()

47 if(
ed
.
x
==0&&ed.
y
==0)

49 if(
ed
.
y
==0)

51 if(
ed
.
x
>0)

53 
ed
.
x
--;

56 if(
ed
.
x
<0)

58 
ed
.
x
++;

62 if(
ed
.
x
==0)

64 if(
ed
.
y
<0)

66 
ed
.
y
++;

69 if(
ed
.
y
>0)

71 
ed
.
y
--;

75 if(
ed
.
x
>0&&ed.
y
<0)

77 
ed
.
x
--,ed.
y
++;

80 if(
ed
.
x
>0&&ed.
y
>0)

82 
ed
.
x
--,ed.
y
--;

85 if(
ed
.
x
<0&&ed.
y
<0)

87 
ed
.
x
++,ed.
y
++;

90 
ed
.
x
++,ed.
y
--;

92 
	}
}

94 
	$maö
()

96 
	`sˇnf
("%s",
s
);

97 
ed
=
	`gë
();

98 
	`sˇnf
("%s",
s
);

99 
°
=
	`gë
();

100 
ed
.
x
-=
°
.x,ed.
y
-=st.y;

101 
x
=
ed
.x,
y
=ed.y;

102 
ªs
=0;

103 ; 
	`ˇl
()>=0; )

105 
ªs
++;

107 
ed
.
x
=x,ed.
y
=y;

108 
	`¥ötf
("%d\n",
ªs
);

109 
i
=0; i<
ªs
; i++)

111 
id
=
	`ˇl
();

112 
	`¥ötf
("%s\n",
ªt
[
id
]);

115 
	}
}

	@problems/codeforces/beta_round/round3/BR3B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	mx
,
	mi
;

35 
‰õnd
 
	m›î©‹
<(
node
 
	ma
,nodê
	mb
){ á.
	mx
<b.x; }

36 }
	gno
;

37 
	gmu…i£t
<
	gnode
> 
	g°
[2];

38 
	gmu…i£t
<
	gnode
>::
ôî©‹
 
ô
;

39 
	g£t
<> 
	g™s
;

41 
	$maö
()

43 
n
,
v
;

44 
	`sˇnf
("%d%d",&
n
,&
v
)!=
EOF
)

46 
°
[0].
	`˛ór
();

47 
°
[1].
	`˛ór
();

48 
™s
.
	`˛ór
();

49 
i
=0; i<
n
; i++)

51 
x
,
y
;

52 
	`sˇnf
("%d%d",&
x
,&
y
);

53 
no
.
x
=
y
,no.
i
=i+1;

54 
°
[
x
-1].
	`ö£π
(
no
);

56 
ªt
=0;

57 if(
v
&1)

59 if(
°
[0].
	`size
()>0)

61 
ô
=
°
[0].
	`íd
();

62 
ô
--;

63 
ªt
+=
ô
->
x
;

64 
™s
.
	`ö£π
(
ô
->
i
);

65 
°
[0].
	`îa£
(
ô
);

66 
v
--;

71 
⁄e
=-1,
ov
=-1,
tv
=-1,
two
=-1;

72 if(
v
>1&&
°
[1].
	`size
()>0)

74 
ô
=
°
[1].
	`íd
();

75 
ô
--;

76 
⁄e
=
ô
->
x
;

77 
ov
=2;

79 if(
v
>0&&
°
[0].
	`size
()>0)

81 
ô
=
°
[0].
	`íd
();

82 
ô
--;

83 
two
=
ô
->
x
;

84 
tv
=1;

85 if(
v
>1&&
°
[0].
	`size
()>1)

87 
ô
--;

88 
tv
++;

89 
two
+=
ô
->
x
;

92 if(
ov
<0&&
tv
<0)

94 if(
⁄e
>=
two
)

96 
ªt
+=
⁄e
;

97 
ô
=
°
[1].
	`íd
();

98 
ô
--;

99 
™s
.
	`ö£π
(
ô
->
i
);

100 
°
[1].
	`îa£
(
ô
);

101 
v
-=
ov
;

105 
ªt
+=
two
;

106 
ô
=
°
[0].
	`íd
();

107 
ô
--;

108 
v
-=
tv
;

109 
i
=0; i<
tv
; i++)

111 
™s
.
	`ö£π
(
ô
->
i
);

112 
°
[0].
	`îa£
(
ô
);

113 
ô
--;

117 
	`¥ötf
("%d\n",
ªt
);

118 
£t
<>::
ôî©‹
 
sô
;

119 
sô
=
™s
.
	`begö
(); sô!˜ns.
	`íd
(); sit++)

120 
	`¥ötf
("%d ",*
sô
);

121 
	`puts
("");

124 
	}
}

	@problems/codeforces/beta_round/round3/BR3C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[3][3];

35 
	gc1
,
	gc2
,
	g≈
;

37 
	$ok
()

39 
a
=0,
b
=0;

40 
i
=0; i<3; i++)

42 if(
s
[
i
][0]==s[i][1]&&s[i][1]==s[i][2])

44 if(
s
[
i
][0]=='0')

45 
b
=1;

46 if(
s
[
i
][0]=='X')

47 
a
=1;

49 if(
s
[0][
i
]==s[1][i]&&s[1][i]==s[2][i])

51 if(
s
[0][
i
]=='0')

52 
b
=1;

53 if(
s
[0][
i
]=='X')

54 
a
=1;

57 if(
s
[0][0]==s[1][1]&&s[1][1]==s[2][2])

58 if(
s
[0][0]=='0')

59 
b
=1;

60 if(
s
[0][0]=='X')

61 
a
=1;

62 if(
s
[0][2]==s[1][1]&&s[1][1]==s[2][0])

63 if(
s
[0][2]=='0')

64 
b
=1;

65 if(
s
[0][2]=='X')

66 
a
=1;

67 if(
a
&&
b
)

69 if(
a
==0&&
b
==0)

71 
i
=0; i<3; i++)

72 
j
=0; j<3; j++)

73 if(
s
[
i
][
j
]=='.')

77 if(
a
)

79 if(
b
)

81 
	}
}

83 
	$maö
()

85 
i
=0; i<3; i++)

86 
	`sˇnf
("%s",
s
[
i
]);

87 
c1
=
c2
=0;

88 
i
=0; i<3; i++)

89 
j
=0; j<3; j++)

91 if(
s
[
i
][
j
]=='0')

92 
c2
++;

93 if(
s
[
i
][
j
]=='X')

94 
c1
++;

96 
èg
=
	`ok
();

97 if(
c1
==
c2
||c1==c2+1)

99 if(
èg
==0)

101 if(
c1
==
c2
)

102 
≈
=0;

104 
≈
=1;

105 if(
≈
==0)

106 
	`puts
("first");

108 
	`puts
("second");

110 if(
èg
==-1)

111 
	`puts
("illegal");

112 if(
èg
==-2)

113 
	`puts
("draw");

114 if(
èg
==1)

116 if(
c1
!=
c2
)

117 
	`puts
("the firstÖlayer won");

119 
	`puts
("illegal");

123 if(
c1
==
c2
)

124 
	`puts
("the secondÖlayer won");

126 
	`puts
("illegal");

130 
	`puts
("illegal");

132 
	}
}

	@problems/codeforces/beta_round/round3/BR3D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
];

35 
	snode
{ 
	mv
,
	mi
;

36 
‰õnd
 
	m›î©‹
 < (
node
 
	ma
,nodê
	mb
){ á.
	mv
==
b
.
v
?
a
.
i
<b.i:a.v<b.v; }

37 }
	gno
[
N
];

38 
	gmu…i£t
<
	gnode
> 
	g°
;

39 
	gmu…i£t
<
	gnode
>::
ôî©‹
 
ô
;

41 
	$maö
()

43 
Àn
,
˙t
;

44 
	`sˇnf
("%s",
s
)+1)

46 
°
.
	`˛ór
();

47 
LL
 
ªt
=0;

48 
Àn
=
	`°æí
(
s
);

49 
˙t
=0;

50 
i
=0; i<
Àn
; i++)

51 if(
s
[
i
]=='?')

53 
˙t
++;

55 
i
=0; i<
˙t
; i++)

57 
x
,
y
;

58 
	`sˇnf
("%d%d",&
x
,&
y
);

59 
no
[
i
].
v
=
x
-
y
;

60 
ªt
+=
y
;

62 
èg
=0,
t›
=0;

63 
num
=0;

64 
i
=0; i<
Àn
&&
èg
==0; i++)

66 if(
s
[
i
]=='(')

68 
num
++;

72 
num
--;

73 if(
s
[
i
]=='?')

75 
s
[
i
]=')';

76 
no
[
t›
].
i
=i;

77 
°
.
	`ö£π
(
no
[
t›
]);

78 
t›
++;

81 ; 
num
<0; )

83 if(
°
.
	`size
()<=0)

85 
èg
=1;

88 
ô
=
°
.
	`begö
();

89 
ªt
+=
ô
->
v
;

90 
s
[
ô
->
i
]='(';

91 
num
+=2;

92 
°
.
	`îa£
(
ô
);

95 if(
èg
==1||
num
>0)

96 
	`puts
("-1");

98 
	`¥ötf
("%I64d\n%s\n",
ªt
,
s
);

101 
	}
}

	@problems/codeforces/croc_cup/croc2013_qua/CROC2013_A.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gm≠
<,> 
	gmp
;

7 
	gm≠
<,>::
ôî©‹
 
ô
;

9 
	$maö
()

11 
n
;

12 
	`sˇnf
("%d",&
n
);

13 
i
=0; i<
n
; i++)

15 
x
;

16 
	`sˇnf
("%d",&
x
);

17 
mp
[
x
]++;

19 
ªt
=0,
˙t
=0;

20 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++)

22 if(
ô
->
fú°
==0) ;

23 if(
ô
->
£c⁄d
>2)

25 
	`puts
("-1");

28 
ªt
+=(
ô
->
£c⁄d
==2);

30 
	`¥ötf
("%d\n",
ªt
);

32 
	}
}

	@problems/codeforces/croc_cup/croc2013_qua/CROC2013_B.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	~<°rög
>

5 
	~<io°ªam
>

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gs
[111111];

10 
	gve˘‹
<
	g°rög
> 
	gªt
;

12 
	$maö
()

14 
	`gës
(
s
);

15 
èg
=0,
l
=
	`°æí
(
s
);

16 
i
=0; i<
l
; i++)

18 if(
s
[
i
]==' ')

20 if(
s
[
i
]=='"')

22 
°rög
 
now
="";

23 
i
++; i<
l
&&
s
[i]!='"'; i++)

24 
now
.
	`push_back
(
s
[
i
]);

25 
ªt
.
	`push_back
(
now
);

29 
°rög
 
now
="";

30 ; 
s
[
i
]!=' '&&i<
l
; i++)

31 
now
.
	`push_back
(
s
[
i
]);

32 
ªt
.
	`push_back
(
now
);

35 
i
=0; i<
ªt
.
	`size
(); i++)

37 
cout
<<"<";

38 
cout
<<
ªt
[
i
];

39 
cout
<<">"<<
ídl
;

42 
	}
}

	@problems/codeforces/croc_cup/croc2013_qua/CROC2013_C.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<£t
>

4 
	#N
 100101

	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
LL
 
	gù
[
N
];

10 
LL
 
	$B
(
i
){  1LL<<i; 
	}
}

12 
	g£t
<
	gLL
> 
	g°
;

13 
	gn
,
	gk
;

15 
	$ok
(
LL
 
x
)

17 
°
.
	`˛ór
();

18 
i
=0; i<
n
; i++)

20 
°
.
	`ö£π
(
x
&
ù
[
i
]);

22 if(
°
.
	`size
()==
k
)  1;

24 
	}
}

26 
	$maö
()

28 
	`sˇnf
("%d%d",&
n
,&
k
);

29 
i
=0; i<
n
; i++)

31 
a
,
b
,
c
,
d
;

32 
	`sˇnf
("%d.%d.%d.%d",&
a
,&
b
,&
c
,&
d
);

33 
ù
[
i
]=(
a
<<24LL)|(
b
<<16LL)|(
c
<<8LL)|
d
;

35 
LL
 
ªt
=0;

36 
i
;

37 
i
=31; i>=0; i--)

39 
ªt
|=
	`B
(
i
);

40 if(
	`ok
(
ªt
))

43 if(
i
>=0)

45 
	`¥ötf
("%d.%d.%d.%d\n",(
ªt
>>24),((ret>>16)&255),((ret>>8)&255),(ret&255));

49 
	`puts
("-1");

52 
	}
}

	@problems/codeforces/croc_cup/croc2013_qua/CROC2013_D.cpp

1 
	~<c°dio
>

3 
	$B
(
i
){  1<<i; 
	}
}

4 
	gèg
[10010];

5 
	gªt
[22][10010];

7 
	$maö
()

9 
n
,
k
,
t›
=0;

10 
	`sˇnf
("%d%d",&
n
,&
k
);

11 
i
=0; i<22; i++)

12 
j
=0; j<10010; j++)

13 
ªt
[
i
][
j
]=
n
;

14 
i
=0; 
n
-
	`B
(i)>=0; i++)

15 
èg
[
n
-
	`B
(
i
)]=1;

16 
i
=0; 
	`B
(i)<
n
; i++)

18 
j
=0; j<=
	`B
(
i
); j++)

19 
ªt
[
t›
][
j
]=
n
;

20 
j
=
	`B
(
i
)+1; j<
n
; j++)

22 if(
èg
[
n
-
j
])

23 
ªt
[
t›
][
n
-
j
]=n-j;

24 if((
j
-1)&
	`B
(
i
))

25 
ªt
[
t›
][
n
-
j
]Ú-
	`B
(
i
);

27 
ªt
[
t›
][
n
-
j
]=n;

29 
t›
++;

31 if(
t›
>
k
) ;;);

32 
i
=0; i<
k
; i++,
	`puts
(""))

33 
j
=1; j<=
n
; j++)

34 
	`¥ötf
("%d ",
ªt
[
i
][
j
]);

36 
	}
}

	@problems/codeforces/croc_cup/croc2013_qua/CROC2013_E.cpp

1 
	~<c°dio
>

2 
	~<utûôy
>

3 
	~<c°rög
>

4 
	~<°rög
>

5 
	~<ve˘‹
>

6 
	~<io°ªam
>

7 
	~<queue
>

9 
usög
 
«me•a˚
 
	g°d
;

10 c⁄° 
	gN
 = 100010;

12 
	gve˘‹
<> 
	gå
[
N
];

13 
	gqueue
<
	g∑ú
<,> > 
	gq
;

14 
°rög
 
	gs
[
N
];

15 
°rög
 
	gms
;

16 
	gf
[3*
N
];

18 
	$¸_Áû
() {

19 
f
[0]=-1;

20 
i
=1; i<
ms
.
	`Àngth
(); i++) {

21 
p
=
f
[
i
-1];

22 
p
!=-1&&
ms
[p+1]!=ms[
i
])

23 
p
=
f
[p];

24 if(
ms
[
p
+1]==ms[
i
])

25 
f
[
i
]=
p
+1;

27 
f
[
i
]=-1;

29 
	}
}

31 
	$maö
() {

32 
n
;

33 
	`sˇnf
("%d",&
n
);

34 
i
=1; i<
n
; i++) {

35 
x
;

36 
	`sˇnf
("%d",&
x
);

37 
x
--;

38 
å
[
x
].
	`push_back
(
i
);

39 
cö
>>
s
[
i
];

41 
cö
>>
ms
;

42 
	`¸_Áû
();

43 
q
.
	`push
(
	`make_∑ú
(0,0));

44 
ªt
=0;

45 ; !
q
.
	`em±y
();) {

46 
now
=
q
.
	`‰⁄t
().
fú°
;

47 
id
=
q
.
	`‰⁄t
().
£c⁄d
;

48 
q
.
	`p›
();

49 
i
=0; i<
å
[
now
].
	`size
(); i++) {

50 
to
=
å
[
now
][
i
];

51 
ii
=
id
;

52 
j
=0; j<
s
[
to
].
	`Àngth
(); j++) {

53 
pi
=
ii
-1;

54 ; 
pi
>=0&&
s
[
to
][
j
]!=
ms
[pi+1];)

55 
pi
=
f
[pi];

56 if(
pi
<0) {

57 
ii
=0;

58 if(
s
[
to
][
j
]==
ms
[
ii
])

59 
ii
++;

62 
ii
=
pi
+1+1;

63 if(
ii
>=
ms
.
	`Àngth
()) {

64 
ii
=
f
[
ms
.
	`Àngth
()-1]+1;

65 
ªt
++;

68 
q
.
	`push
(
	`make_∑ú
(
to
,
ii
));

71 
	`¥ötf
("%d\n",
ªt
);

73 
	}
}

	@problems/codeforces/div1_codes/cf_div1_r146/a.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
	$gcd
(
a
,
b
)

11  
b
?
	`gcd
(b,
a
%b):a;

12 
	}
}

14 
	$maö
()

16 
n
;

17 
	`sˇnf
("%d",&
n
);

18 if(
n
<=2)

20 
	`¥ötf
("%d\n",
n
);

23 if(
n
&1)

24 
cout
<<1LL*
n
*“-1)*“-2)<<
ídl
;

27 
LL
 
ªt
=1LL*(
n
-2)*(n-1)*(n-3);

28 
x
=
n
-2; x>=n-3; x--)

30 
ªt
=
	`max
‘ë,1LL*
n
*“-1)*
x
/
	`gcd
(x,n)/gcd(x,n-1));

32 
cout
<<
ªt
<<
ídl
;

35 
	}
}

	@problems/codeforces/div1_codes/cf_div1_r146/b.cpp

1 
	~<c°dio
>

2 
	#N
 100011

	)

4 
	gp
[
N
],
	gf
[N],
	gdp
[N];

6 
	$maö
()

8 
n
;

9 
	`sˇnf
("%d",&
n
)+1)

11 
i
=1; i<=
n
; i++)

12 
	`sˇnf
("%lf",&
p
[
i
]);

13 
i
=1; i<=
n
; i++)

15 
dp
[
i
]=dp[i-1]+(2*
f
[i-1]+1)*
p
[i];

16 
f
[
i
]=(f[i-1]+1)*
p
[i];

18 
	`¥ötf
("%.12lf\n",
dp
[
n
]);

21 
	}
}

	@problems/codeforces/div1_codes/cf_div1_r146/c.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	~<Æg‹ôhm
>

5 
	#N
 2000100

	)

6 
	#X
 26

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	snode
 {

11 
	mf
,
	ml
,
	mnum
,
	mnx
[
X
],
	mÊag
;

12 
node
() {

13 
	mf
=-1,
	ml
=0,
	mnum
=0,
	mÊag
=-1;

14 
	mi
=0; i<
	mX
; i++) {

15 
	mnx
[
i
]=-1;

18 }
	gno
[
N
];

20 
	gT
,
	gèû
,
	ghód
,
	gt›
;

21 
	gs
[
N
],
	gqs
[N];

22 
	gve˘‹
<> 
	gvec
[
N
];

24 
	$ö£π
(
x
,
l
) {

25 
p
=
èû
,
q
=
t›
++;

26 
èû
=
q
;

27 
no
[
q
].
l
=l;

28 
no
[
q
].
num
=1;

29 
p
!=-1 && 
no
[p].
nx
[
x
]==-1) {

30 
no
[
p
].
nx
[
x
]=
q
;

31 
p
=
no
[p].
f
;

33 if(
p
==-1) {

34 
no
[
q
].
f
=
hód
;

37 if(
no
[no[
p
].
nx
[
x
]].
l
==no[p].l+1) {

38 
no
[
q
].
f
Úo[
p
].
nx
[
x
];

41 
u
=
t›
++,
≈
=
no
[
p
].
nx
[
x
];

42 
no
[
u
]Úo[
≈
];

43 
no
[
u
].
num
=0;

44 
no
[
u
].
l
Úo[
p
].l+1;

45 
no
[
≈
].
f
Úo[
q
].f=
u
;

46 ; 
p
!=-1 && 
no
[p].
nx
[
x
]==
≈
;ÖÚo[p].
f
) {

47 
no
[
p
].
nx
[
x
]=
u
;

49 
	}
}

51 
	$buûd_ßm
(
s
[]) {

52 
l
=
	`°æí
(
s
);

53 
èû
=
hód
=0;

54 
t›
=1;

55 
i
=0; i<
l
; i++) {

56 
	`ö£π
(
s
[
i
]-'a',i+1);

58 
	}
}

60 
	$quîy
(
qs
[]) {

61 
Àn
=
	`°æí
(
qs
);

62 
ªt
=0;

63 
i
=0; i<
Àn
; i++)

64 
qs
[
Àn
+
i
]=qs[i];

65 
qs
[
Àn
+len]=0;

66 
now
=
hód
,
nowl
=0;

67 
i
=0; i<
Àn
+len; i++) {

68 
x
=
qs
[
i
]-'a';

69 
now
!=-1 && 
no
[now].
nx
[
x
]==-1) {

70 
now
=
no
[now].
f
;

71 
nowl
=
now
>=0?
no
[now].
l
:0;

73 if(
now
==-1) {

74 
now
=
hód
;

75 
nowl
=0;

78 
now
=
no
[now].
nx
[
x
];

79 
nowl
++;

80 if(
nowl
>=
Àn
) {

81 
p
=
now
;

82 ; 
no
[
p
].
f
>=0 &&Ço[no[p].f].
l
>=
Àn
;)

83 
p
=
no
[p].
f
;

84 if(
no
[
p
].
Êag
!=
T
) {

85 
no
[
p
].
Êag
=
T
;

86 
ªt
+=
no
[
p
].
num
;

90  
ªt
;

91 
	}
}

93 
	$maö
() {

94 
	`sˇnf
("%s",
s
);

95 
	`buûd_ßm
(
s
);

96 
i
=0; i<
t›
; i++) {

97 
vec
[
no
[
i
].
l
].
	`push_back
(i);

99 
i
=
N
-1; i>=0; i--) {

100 
j
=0; j<
vec
[
i
].
	`size
(); j++) {

102 
x
=
vec
[
i
][
j
];

103 if(
no
[
x
].
f
>=0)

104 
no
[no[
x
].
f
].
num
+=no[x].num;

107 
q
;

108 
	`sˇnf
("%d",&
q
);

109 
i
=0; i<
q
; i++) {

110 
	`sˇnf
("%s",
qs
);

111 
T
=
i
;

112 
	`¥ötf
("%d\n",
	`quîy
(
qs
));

115 
	}
}

	@problems/codeforces/div1_codes/cf_div1_r146/e.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	~<io°ªam
>

4 
	~<ve˘‹
>

5 
	~<Æg‹ôhm
>

6 
usög
 
«me•a˚
 
	g°d
;

8 
	~<ext/hash_m≠
>

9 
usög
 
«me•a˚
 
	g__gnu_cxx
;

11 
	tLL
;

13 c⁄° 
	gN
 = 2222;

14 c⁄° 
	gMOD
 = (1<<30) - 1;

16 ˛as†
	cnode
 {

17 
	mpublic
:

18 
a
,
	mb
,
	mc
;

20 
	$node
(){}

22 
	$node
(
Ø
,
bb
,
cc
):
	`a
◊a),
	`b
(bb),
	$c
(
cc
) {

23 if(
a
>
b
)

24 
	`sw≠
(
a
,
b
);

25 if(
a
>
c
)

26 
	`sw≠
(
a
,
c
);

27 if(
b
>
c
)

28 
	`sw≠
(
b
,
c
);

29 
	}
}

31 
boﬁ
 
	g›î©‹
<(c⁄° 
	gnode
 &
	gx
) const {

32  
	ga
<
	gx
.®|| (a==
x
.
a
 && (
b
<x.b || (b==x.b && 
c
<x.c)));

35 
boﬁ
 
	g›î©‹
==(c⁄° 
node
 &
x
) const {

36  
a
==
x
.a&&
b
==x.b&&
c
==x.c;

39 
	$›î©‹
()(c⁄° 
node
 &
x
) const {

40  (
x
.
a
*2222+x.
b
)*2222+x.
c
;

41 
	}
}

44 
	ghash_m≠
<
	gnode
,
	gLL
,node> 
	ghmp
[
N
];

45 
	gve˘‹
<> 
	g∂
;

46 
	gp
[
N
];

48 
	$öô
() {

49 
∂
.
	`˛ór
();

50 
i
=0; i<
N
; i++)

51 
p
[
i
]=i;

52 
i
=2; i<
N
; i++) {

53 if(
p
[
i
]==i)

54 
∂
.
	`push_back
(
i
);

55 
j
=0; j<
∂
.
	`size
()&&
i
*∂[j]<
N
; j++) {

56 
p
[
i
*
∂
[
j
]]=pl[j];

57 if(
i
%
∂
[
j
]==0)

61 
	}
}

63 
LL
 
	$dfs
(
id
,c⁄° 
node
 &
x
) {

64 if(
hmp
[
id
].
	`cou¡
(
x
)>0)

65  
hmp
[
id
][
x
];

66 if(
id
==
∂
.
	`size
())

68 
LL
 
ªt
=0;

69 
a
,
b
,
c
,
i
,
j
,
k
;

70 
a
=
x
.a,
i
=0;á;á/=
∂
[
id
],i++)

71 
b
=
x
.b,
j
=0; b; b/=
∂
[
id
],j++)

72 
c
=
x
.c,
k
=0; c; c/=
∂
[
id
],k++)

73 
ªt
=‘ë+1LL*
	`dfs
(
id
+1,
	`node
(
a
,
b
,
c
))*(
i
+
j
+
k
+1))&
MOD
;

74 
hmp
[
id
][
x
]=
ªt
;

75  
ªt
;

76 
	}
}

78 
	$maö
() {

79 
a
,
b
,
c
;

80 
	`öô
();

81 
	`ªvî£
(
∂
.
	`begö
(),∂.
	`íd
());

82 
	`sˇnf
("%d%d%d",&
a
,&
b
,&
c
);

83 
i
=0; i<
N
; i++)

84 
hmp
[
i
].
	`˛ór
();

85 
cout
<<
	`dfs
(0,
	`node
(
a
,
b
,
c
))<<
ídl
;

87 
	}
}

	@problems/codeforces/div1_codes/cf_r168_d1/a.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<£t
>

4 
	#M
 1000000000

	)

5 
	#N
 100101

	)

7 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

10 
LL
 
	gd©
[
N
];

11 
	g£t
<
	gLL
> 
	g°
;

13 
	$cmp
(
a
,
b
){ á<b; 
	}
}

15 
	$maö
()

17 
n
,
k
;

18 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

20 
°
.
	`˛ór
();

21 
i
=0; i<
n
; i++)

23 
x
;

24 
	`sˇnf
("%d",&
x
);

25 
°
.
	`ö£π
(1LL*
x
);

26 
d©
[
i
]=1LL*
x
;

28 
	`s‹t
(
d©
,d©+
n
,
cmp
);

29 
ªt
=0;

30 
i
=0; i<
n
; i++)

32 
LL
 
x
=
d©
[
i
];

33 
˙t
=0;

34 if(
°
.
	`cou¡
(
d©
[
i
])>0)

38 if(
°
.
	`cou¡
(
x
)==0)

40 
˙t
++;

41 
°
.
	`îa£
(
x
);

42 
x
=x*
k
;

43 if(
x
>
M
)

47 
ªt
+=
˙t
/2+(cnt&1);

49 
	`¥ötf
("%d\n",
ªt
);

52 
	}
}

	@problems/codeforces/div1_codes/cf_r168_d1/b.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<io°ªam
>

4 
	~<ve˘‹
>

5 
	#N
 100101

	)

6 
	#öf
 2000000000

	)

8 
	tLL
;

9 
usög
 
«me•a˚
 
	g°d
;

11 
LL
 
	gv
[
N
],
	gps
[N],
	gqs
[N];

12 
	gve˘‹
<> 
	gå
[
N
];

14 
	$dfs
(
now
,
p
)

16 
ps
[
now
]=
qs
[now]=0;

17 
i
=0; i<
å
[
now
].
	`size
(); i++)

19 
to
=
å
[
now
][
i
];

20 if(
to
==
p
)

22 
	`dfs
(
to
,
now
);

23 
ps
[
now
]=
	`max
’s[now],ps[
to
]);

24 
qs
[
now
]=
	`mö
(qs[now],qs[
to
]);

26 
LL
 
x
=
v
[
now
]-
ps
[now]-
qs
[now];

27 if(
x
>0)

28 
ps
[
now
]+=
x
;

30 
qs
[
now
]+=
x
;

31 
	}
}

33 
	$gao
(
n
)

35 
	`dfs
(0,-1);

36 
cout
<<
ps
[0]-
qs
[0]<<
ídl
;

37 
	}
}

39 
	$maö
()

41 
n
;

42 
	`sˇnf
("%d",&
n
);

43 
i
=0; i<
n
; i++)

44 
å
[
i
].
	`˛ór
();

45 
i
=0; i<
n
-1; i++)

47 
x
,
y
;

48 
	`sˇnf
("%d%d",&
x
,&
y
);

49 
x
--,
y
--;

50 
å
[
x
].
	`push_back
(
y
);

51 
å
[
y
].
	`push_back
(
x
);

53 
i
=0; i<
n
; i++)

55 
x
;

56 
	`sˇnf
("%d",&
x
);

57 
v
[
i
]=
x
;

59 
	`gao
(
n
);

61 
	}
}

	@problems/codeforces/div1_codes/cf_r168_d1/d.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	~<ve˘‹
>

5 
	#N
 200101

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gve˘‹
<> 
	gå
[
N
];

10 
	gve˘‹
<> 
	g™s
;

11 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

13 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
<b.x; 
	}
}

15 
	gt›
,
	gv
[
N
],
	gvis
[N];

17 
	$dfs
(
now
,& 
èg
)

19 if(
èg
==0) ;

20 
vis
[
now
]=
v
[now]=1;

21 
i
=0; i<
å
[
now
].
	`size
(); i++)

23 
to
=
å
[
now
][
i
];

24 if(
vis
[
to
]Ë
èg
=0;

25 if(!
v
[
to
])

26 
	`dfs
(
to
,
èg
);

28 
vis
[
now
]=0;

29 
™s
.
	`push_back
(
now
);

30 
	}
}

32 
	$gao
(
n
)

34 
	`mem£t
(
v
,0,(v));

35 
	`mem£t
(
vis
,0,(vis));

36 
™s
.
	`˛ór
();

37 
èg
=1;

38 
i
=0; i<
t›
&&
èg
; i++)

39 if(!
v
[
i
])

40 
	`dfs
(
i
,
èg
);

41 if(
èg
==0)

43 
	`puts
("-1");

46 
i
=
™s
.
	`size
()-1; i>=0; i--)

47 if(
™s
[
i
]<
n
)

48 
	`¥ötf
("%d ",
™s
[
i
]+1);

49 
	`puts
("");

50 
	}
}

52 
	$maö
()

54 
n
,
m
;

55 
	`sˇnf
("%d%d",&
n
,&
m
);

56 
t›
=
m
;

57 
i
=0; i<
n
; i++)

59 
j
=0; j<
m
; j++)

61 
x
;

62 
	`sˇnf
("%d",&
x
);

63 
no
[
j
].
x
=x,no[j].
y
=j;

65 
	`s‹t
(
no
,no+
m
,
cmp
);

66 
¥e
=-1;

67 
j
=0; j<
m
; j++)

69 if(
no
[
j
].
x
<0) ;

70 if(
j
>0&&
no
[j-1].
x
<no[j].x&&no[j-1].x>=0)

72 
¥e
=
t›
;

73 
t›
++;

75 if(
¥e
>=0)

76 
å
[
¥e
].
	`push_back
(
no
[
j
].
y
);

77 
å
[
no
[
j
].
y
].
	`push_back
(
t›
);

79 
t›
++;

81 
	`gao
(
m
);

83 
	}
}

	@problems/codeforces/div1_codes/cf_r168_d1/e.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	~<£t
>

5 
	~<utûôy
>

6 
	~<ve˘‹
>

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 c⁄° 
	gN
 = 200011;

13 
	spoöt
 {

14 
	mx
,
	my
;

16 
poöt
(){}

17 
poöt
 (
x
,
y
):x(x),y(y){}

19 
boﬁ
 
	m›î©‹
 < (c⁄° 
	mpoöt
 &
	ma
) const {

20  
	ma
.
	mx
==
x
?
y
<
a
.y:x<a.x;

23 
boﬁ
 
	m›î©‹
 =(c⁄° 
poöt
 &
a
) const {

24  
x
==
a
.x && 
y
==a.y;

26 }
	g°
;

28 
	g£t
<
	gpoöt
> 
	g°
;

29 
	gve˘‹
<
	gpoöt
> 
	gvec
[2][
N
];

30 
LL
 
	gªt
;

32 
	gdd
[4][2]={{1,-1},{-1,1},{1,1},{-1,-1}};

34 
	$go
(
x
,
y
,
d
) {

35 
tg
;

36 if(
d
&2Ë
tg
=1;

37 
tg
=0;

38 
	}
}

40 
	$maö
() {

41 
n
,
m
,
p
;

42 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
p
)+1) {

43 
i
=0; i<2; i++)

44 
j
=0; j<
m
+
n
+3; j++)

45 
vec
[
i
][
j
].
	`˛ór
();

46 
i
=0; i<
p
; i++) {

47 
x
,
y
;

48 
	`sˇnf
("%d%d",&
x
,&
y
);

49 
°
.
	`ö£π
(
	`poöt
(
x
,
y
));

51 
i
=0; i<=
m
+1; i++) {

52 
°
.
	`ö£π
(
	`poöt
(
i
,0));

53 
°
.
	`ö£π
(
	`poöt
(
i
,
n
+1));

55 
i
=0; i<=
n
+1; i++) {

56 
°
.
	`ö£π
(
	`poöt
(0,
i
));

57 
°
.
	`ö£π
(
	`poöt
(
m
+1,
i
));

59 
£t
<
poöt
>::
ôî©‹
 
ô
=
°
.
	`begö
(); it!=°.
	`íd
(); it++) {

60 
x
=
ô
->x,
y
=it->y;

61 
vec
[
x
+
y
].
	`push_back
(
	`poöt
(x,y));

62 
vec
[
m
+1-
x
+
y
].
	`push_back
(
	`poöt
(x,y));

64 
i
=0; i<2; i++) {

65 
j
=0; j<
m
+
n
+3; j++) {

66 
	`s‹t
(
vec
[
i
][
j
].
	`begö
(),vec[i][j].
	`íd
());

69 
dús
[10];

70 
	`sˇnf
("%d%d%s",&
°
.
x
,&°.
y
,
dús
);

71 
dú
;

72 if(
	`°rcmp
(
dús
,"NE")==0)

73 
dú
=1;

74 if(
	`°rcmp
(
dús
,"NW")==0)

75 
dú
=3;

76 if(
	`°rcmp
(
dús
,"SE")==0)

77 
dú
=2;

78 if(
	`°rcmp
(
dús
,"SW")==0)

79 
dú
=0;

80 
ªt
=0;

81 
	`go
(
°
.
x
,°.
y
,
dú
);

82 
	`go
(
°
.
x
,°.
y
,
dú
^1);

83 
cout
<<
ªt
/2<<
ídl
;

86 
	}
}

	@problems/codeforces/div1_codes/cf_r204_div1/a.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<cm©h
>

4 
	#öf
 1000000000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	$maö
() {

9 
n
;

10 
	`sˇnf
("%d",&
n
);

11 
sum
=0,
ze
=0;

12 
i
=0; i<2*
n
; i++) {

13 
x
;

14 
	`sˇnf
("%lf",&
x
);

15 
y
=(
x
*1000+0.5)%1000;

16 if(
y
==0) {

17 
ze
++;

19 
sum
+=
y
;

21 
ªt
=
öf
;

22 
i
=
	`mö
(2*
n
-
ze
,n); i>=
	`max
(n-ze,0); i--) {

23 
ªt
=
	`mö
‘ë,
	`abs
(
i
*1000-
sum
));

25 
	`¥ötf
("%.3lf\n",
ªt
*0.001);

27 
	}
}

	@problems/codeforces/div1_codes/cf_r204_div1/b.cpp

1 
	~<c°dio
>

2 
	#N
 4000

	)

4 
	gp
[
N
];

6 
	$maö
() {

7 
n
;

8 
	`sˇnf
("%d",&
n
);

9 
i
=0; i<
n
; i++) {

10 
	`sˇnf
("%d",&
p
[
i
]);

12 
c
=0;

13 
i
=0; i<
n
; i++) {

14 
j
=
i
+1; j<
n
; j++) {

15 if(
p
[
j
]<p[
i
]) {

16 
c
++;

20 if(
c
&1)

21 
	`¥ötf
("%.6lf\n",1.0*(2*
c
-1));

23 
	`¥ötf
("%.6lf\n",1.0*2*
c
);

24 
	}
}

	@problems/codeforces/div1_codes/cf_r204_div1/c.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

5 
	#N
 33

	)

6 
	#öf
 0x3fffffff

	)

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 
	gdpc
[
N
][N],
	gdpo
[N][N];

12 
	g˛
[
N
],
	g›
[N],
	gdif
[N];

14 
LL
 
	$gao
(
˙t
,
m
,
n
) {

15 
LL
 
ªt
=0;

16 
i
=0; i<
n
; i++) {

17 
x
=
	`mö
(
m
,
˙t
);

18 
ªt
Ùë+
dif
[
i
]*
x
;

19 
˙t
-=
x
;

21 
i
=0; i<
n
; i++) {

22 
ªt
Ùë+
˛
[
i
]*
m
;

24  
ªt
;

25 
	}
}

27 
	$maö
() {

28 
n
,
m
;

29 
	`sˇnf
("%d%d",&
n
,&
m
);

30 
i
=0; i<
n
; i++) {

31 
	`sˇnf
("%d",&
›
[
i
]);

33 
i
=0; i<
n
; i++) {

34 
	`sˇnf
("%d",&
˛
[
i
]);

36 
i
=0; i<
n
; i++) {

37 
dif
[
i
]=
›
[i]-
˛
[i];

39 
	`s‹t
(
dif
,dif+
n
);

40 
i
=0; i<=
n
+1; i++) {

41 
j
=0; j<=
n
+1; j++) {

42 
dpc
[
i
][
j
]=
dpo
[i][j]=
öf
;

45 
dpo
[0][0]=0;

46 
i
=1; i<=
n
; i++) {

47 
j
=0; j<
n
+1; j++) {

48 if(
j
>0)

49 
dpo
[
i
][
j
]=
	`mö
(dpo[i][j],dpo[i-1][j-1]+
›
[i-1]);

50 
dpo
[
i
][
j
]=
	`mö
(dpo[i][j],dpo[i-1][j+1]+
˛
[i-1]);

53 
dpc
[0][0]=0;

54 
i
=1; i<=
n
; i++) {

55 
j
=0; j<
n
+1; j++) {

56 if(
j
>0) {

57 
dpc
[
i
][
j
]=
	`mö
(dpc[i][j],dpc[i-1][j-1]+
˛
[
n
-i]);

59 
dpc
[
i
][
j
]=
	`mö
(dpc[i][j],dpc[i-1][j+1]+
›
[
n
-i]);

62 
LL
 
ªt
=(1LL<<61);

63 
i
=0; i<
n
+1; i++) {

64 
j
=0; j<
n
+1; j++) {

65 if(
dpo
[
n
][
i
]<
öf
 && 
dpc
[n][
j
]<inf) {

66 
LL
 
tmp
=
dpo
[
n
][
i
]+
dpc
[n][
j
];

67 
˙t
=
m
*
n
/2-“-
i
)/2-“-
j
)/2-i;

68 if(
˙t
>=0 && c¡<=(
m
-2)*
n
)

69 
ªt
=
	`mö
‘ë,
tmp
+
	`gao
(
˙t
,
m
-2,
n
));

73 
cout
<<
ªt
<<
ídl
;

74 
	}
}

	@problems/codeforces/div1_codes/cf_r204_div1/d.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#N
 100010

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gnum
[
N
],
	g√xt
[N],
	gid
[N],
	gnb
[N],
	g™s
[N];

10 
	gve˘‹
<> 
	gqr
[
N
];

11 
	gve˘‹
<> 
	gqi
[
N
];

13 
ölöe
 
	$lowbô
(
x
Ë{  x&(-x); 
	}
}

15 
	sbô
 {

16 
	m¨r
[
N
];

18 
bô
() {

19 
	mi
=0; i<
	mN
; i++) {

20 
	m¨r
[
i
]=0;

24 
add
(
id
,
x
) {

25 ; 
	mid
<
	mN
; id+=
lowbô
(
id
)) {

26 
¨r
[
id
]+=
x
;

30 
sum
(
id
) {

31 
	mªt
=0;

32 ; 
	mid
>0; id^=
lowbô
(
id
))

34 
ªt
+=
¨r
[
id
];

36  
	mªt
;

40 
	$sﬁve
(
n
) {

41 
bô
 
b1
,
b2
;

42 
i
=
n
; i>=1; i--) {

43 
b1
.
	`add
(
i
,1);

44 
b1
.
	`add
(
√xt
[
i
],-1);

45 
j
=0; j<
qr
[
i
].
	`size
(); j++) {

46 
r
=
qr
[
i
][
j
],
id
=
qi
[i][j];

47 
™s
[
id
]+=
b1
.
	`sum
(
r
);

49 
b2
.
	`add
(
i
,1);

50 
b2
.
	`add
(
nb
[
i
],-1);

51 
b2
.
	`add
(
√xt
[
i
],-1);

52 
b2
.
	`add
(
nb
[
√xt
[
i
]],1);

53 
j
=0; j<
qr
[
i
].
	`size
(); j++) {

54 
r
=
qr
[
i
][
j
],
id
=
qi
[i][j];

55 if(
b2
.
	`sum
(
r
)==0)

56 
™s
[
id
]++;

59 
	}
}

61 
	$maö
() {

62 
n
;

63 
	`sˇnf
("%d",&
n
);

64 
i
=1; i<=
n
; i++) {

65 
	`sˇnf
("%d",&
num
[
i
]);

67 
i
=0; i<
N
; i++) {

68 
id
[
i
]=
n
+1;

70 
√xt
[
n
+1]=n+1;

71 
i
=
n
; i>=1; i--) {

72 
√xt
[
i
]=
id
[
num
[i]];

73 
id
[
num
[
i
]]=i;

75 
nb
[
n
+1]=n+1;

76 
i
=
n
; i>=1; i--) {

77 if(
√xt
[
i
]==
n
+1) {

78 
nb
[
i
]=
n
+1;

80 if(
√xt
[√xt[
i
]]==
n
+1) {

81 
nb
[
i
]=
n
+1;

83 
x
=
√xt
[
i
],
y
=next[next[i]];

84 if(
y
-
x
==x-
i
) {

85 
nb
[
i
]Úb[
x
];

88 
nb
[
i
]=
y
;

91 
q
;

92 
	`sˇnf
("%d",&
q
);

93 
i
=0; i<
q
; i++) {

94 
x
,
y
;

95 
	`sˇnf
("%d%d",&
x
,&
y
);

96 if(
y
>
n
)

97 
y
=
n
;

98 
qr
[
x
].
	`push_back
(
y
);

99 
qi
[
x
].
	`push_back
(
i
);

101 
	`mem£t
(
™s
,0,(ans));

102 
	`sﬁve
(
n
);

103 
i
=0; i<
q
; i++) {

104 
	`¥ötf
("%d\n",
™s
[
i
]);

107 
	}
}

	@problems/codeforces/div1_codes/cf_r204_div1/e.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

4 
	#N
 3000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	g¨r
[
N
];

10 
	$maö
() {

11 
n
;

12 
	`sˇnf
("%d",&
n
);

13 
i
=0; i<
n
; i++) {

14 
	`sˇnf
("%d",&
¨r
[
i
]);

15 
¨r
[
i
]=
	`abs
(arr[i]);

17 
ªt
=0;

18 
i
=0; i<
n
; i++) {

19 
x
=0,
y
=0;

20 
j
=
i
+1; j<
n
; j++) {

21 if(
¨r
[
j
]<¨r[
i
]) {

22 
x
++;

25 
j
=0; j<
i
; j++) {

26 if(
¨r
[
j
]<¨r[
i
]) {

27 
y
++;

30 
ªt
+=
	`mö
(
x
,
y
);

32 
	`¥ötf
("%d\n",
ªt
);

34 
	}
}

	@problems/codeforces/div1_codes/cf_r219_div1/a.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

4 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gN
 = 601001;

8 
	ga
[
N
];

10 
	gn
;

12 
	$ok
(
c
) {

13 if(
c
>
n
/2)  0;

14 
i
=
c
-1; i>=0; i--) {

15 if(
a
[
i
]+a[i]>a[
n
-1-(
c
-1-i)])

19 
	}
}

21 
	$maö
() {

22 
	`sˇnf
("%d",&
n
)+1) {

23 
i
=0; i<
n
; i++) {

24 
	`sˇnf
("%d",&
a
[
i
]);

26 
	`s‹t
(
a
,a+
n
);

27 
l
=1,
r
=
n
;

28 ; 
l
<=
r
;) {

29 
mid
=(
l
+
r
)>>1;

30 if(
	`ok
(
mid
))

31 
l
=
mid
+1;

33 
r
=
mid
-1;

35 
	`¥ötf
("%d\n",
n
-
r
);

38 
	}
}

	@problems/codeforces/div1_codes/cf_r219_div1/b.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

5 
usög
 
«me•a˚
 
	g°d
;

7 c⁄° 
	gN
 = 50;

9 
	gs
[
N
][N];

11 
	g˙t
[
N
][N][N][N],
	gri
[N][N],
	gdn
[N][N];

12 
	gdp
[
N
][N][N][N],
	gsum
[N][N][N][N],
	gâl
[N][N][N][N];

14 
	$maö
() {

15 
n
,
m
,
q
;

16 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
q
)+1) {

17 
i
=1; i<=
n
; i++) {

18 
	`sˇnf
("%s",
s
[
i
]+1);

20 
	`mem£t
(
˙t
,0,(cnt));

21 
	`mem£t
(
dp
,0,(dp));

22 
	`mem£t
(
ri
,0,(ri));

23 
	`mem£t
(
sum
,0,(sum));

24 
	`mem£t
(
âl
,0,(ttl));

25 
i
=1; i<=
n
; i++) {

26 
j
=1; j<=
m
; j++) {

27 if(
j
==1Ë
ri
[
i
][j]=0;

29 if(
s
[
i
][
j
-1]=='0'Ë
ri
[i][j]=ri[i][j-1]+1;

30 
ri
[
i
][
j
]=0;

34 
i
=1; i<=
m
; i++)

35 
j
=
n
; j>=1; j--) {

36 if(
s
[
j
][
i
]=='1') {

37 
dn
[
j
][
i
]=j;

40 if(
j
==
n
Ë
dn
[j][
i
]=n;

42 
dn
[
j
][
i
]=(
s
[j+1][i]=='1')?j:dn[j+1][i];

45 
i
=1; i<=
m
; i++) {

46 
k
=1; k<=
i
; k++) {

47 
j
=1; j<=
n
; j++) {

48 if(
s
[
j
][
i
]=='1') ;

49 
now
=
	`mö
(
ri
[
j
][
i
],i-
k
);

50 
u
=
j
; u<=
dn
[j][
i
]; u++) {

51 
now
=
	`mö
“ow,mö(
ri
[
u
][
i
],i-
k
));

52 
˙t
[
j
][
k
][
i
][
u
]=
now
;

53 if(
u
>
j
Ë
sum
[j][
k
][
i
][u]+=sum[j][k][i][u-1]+
˙t
[j][k][i][u]+1;

54 
sum
[
j
][
k
][
i
][
u
]=
˙t
[j][k][i][u]+1;

59 
i
=1; i<=
m
; i++) {

60 
k
=1; k<=
i
; k++) {

61 
j
=1; j<=
n
; j++) {

62 if(
s
[
j
][
i
]=='1') ;

63 
u
=
j
; u<=
dn
[j][
i
]; u++) {

64 
v
=
j
; v<=
u
; v++) {

65 
âl
[
j
][
k
][
i
][
u
]+=
sum
[
v
][k][i][u];

71 
i
=1; i<=
n
; i++) {

72 
j
=1; j<=
m
; j++) {

73 
u
=
i
; u<=
n
; u++) {

74 
v
=
i
; v<=
u
; ) {

76 
x
=
	`mö
(
dn
[
v
][
j
],
u
);

77 
y
=(
s
[
v
][
j
]=='1')?0:
x
-v+1;

78 
dp
[
i
][
j
][
u
][j]+=
y
*(y-1)/2+y;

79 
v
=
x
+1;

81 
v
=
j
+1; v<=
m
; v++) {

82 
dp
[
i
][
j
][
u
][
v
]=dp[i][j][u][v-1];

83 
k
=
i
; k<=
u
;) {

84 
x
=
	`mö
(
dn
[
k
][
v
],
u
);

85 if(
k
==
x
&&
s
[k][
v
]=='1') {

86 
k
=
x
+1;

89 
dp
[
i
][
j
][
u
][
v
]+=
âl
[
k
][j][v][
x
];

90 
k
=
x
+1;

96 
i
=0; i<
q
; i++) {

97 
x
,
y
,
u
,
v
;

98 
	`sˇnf
("%d%d%d%d",&
x
,&
y
,&
u
,&
v
);

99 
	`¥ötf
("%d\n",
dp
[
x
][
y
][
u
][
v
]);

103 
	}
}

	@problems/codeforces/div1_codes/round129/R129D1_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1000010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
];

35 
LL
 
	gnob
[
N
],
	gnow
[N],
	gdpb
[N],
	gdpw
[N],
	g˙tb
[N],
	g˙tw
[N];

36 
	gn
,
	gk
;

38 
	$öô
()

40 
˙tb
[0]=
˙tw
[
n
]=0;

41 
i
=1; i<=
n
; i++)

42 
˙tb
[
i
]=˙tb[i-1]+(
s
[i-1]=='B');

43 
i
=
n
-1; i>=0; i--)

44 
˙tw
[
i
]=˙tw[i+1]+(
s
[i]=='W');

45 
nob
[0]=
now
[
n
]=1;

46 
LL
 
two
=1;

47 
i
=1; i<=
n
; i++)

49 
dpb
[
i
]=0;

50 if(
i
>=
k
&&
˙tw
[i]==cntw[i-k])

52 if(
i
==
k
||
s
[i-k-1]!='B')

53 
dpb
[
i
]=
nob
[
	`max
(i-
k
-1,0)];

55 
two
=1;

56 if(
s
[
i
-1]=='X')

57 
two
=2;

58 
nob
[
i
]=“ob[i-1]*
two
-
dpb
[i])%
MOD
;

60 
i
=
n
-1; i>=0; i--)

62 
dpw
[
i
]=0;

63 if(
i
+
k
<=
n
&&
˙tb
[i]==cntb[i+k])

65 if(
i
+
k
==
n
||
s
[i+k]!='W')

66 
dpw
[
i
]=
now
[
	`mö
(
n
,i+
k
+1)];

68 
two
=1;

69 if(
s
[
i
]=='X')

70 
two
=2;

71 
now
[
i
]=“ow[i+1]*
two
-
dpw
[i])%
MOD
;

73 
	}
}

75 
	$maö
()

77 
	`sˇnf
("%d%d%s",&
n
,&
k
,
s
)!=
EOF
)

79 
	`öô
();

80 
LL
 
ªt
=0,
two
=1,
tmp
;

81 
i
=0; i<
n
; i++)

83 if(
s
[
i
]=='X')

84 
two
=—wo*2)%
MOD
;

85 
tmp
=(
two
-
nob
[
i
+1])%
MOD
;

86 
ªt
=‘ë+
tmp
*
dpw
[
i
+1])%
MOD
;

88 
cout
<<(
ªt
%
MOD
+MOD)%MOD<<
ídl
;

91 
	}
}

	@problems/codeforces/div1_codes/round131/R131D1A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gd©
[
N
];

35 
	gm©
[3][3]={{0,1,2},{2,0,1},{1,2,0}},
	gö
[
N
],
	gtmp
[N],
	gnum
[3];

36 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

37 
	gt›
,
	gli°
[
N
],
	gq
[N],
	gâ
,
	gvis
[N];

39 
	$ö£π
(
f
,
t
)

41 
e
[
t›
].
f
=f,e[t›].
t
=t;

42 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

43 
	}
}

45 
	$sﬁve
(
n
)

47 
ªt
=
öf
,
˙t
,
now
;

48 
i
=0; i<3; i++)

50 
˙t
=0;

51 
j
=0; j<
n
; j++)

52 
tmp
[
j
]=
ö
[j];

53 
	`mem£t
(
vis
,0,(vis));

54 
now
=
i
;

55 
j
=0; j<
n
; )

57 
k
=-1;

58 
u
=0; u<
n
; u++)

59 if(
tmp
[
u
]==0&&!
vis
[u]&&
d©
[u]==
now
)

61 
k
=
u
;

64 if(
k
==-1)

66 
˙t
++,
now
=(now+1)%3;

69 
vis
[
k
]=1;

70 
u
=
li°
[
k
]; u!=-1; u=
e
[u].
n
)

71 if(!
vis
[
e
[
u
].
t
])

72 
tmp
[
e
[
u
].
t
]--;

73 
j
++;

75 
ªt
=
	`mö
‘ë,
˙t
);

77  
ªt
;

78 
	}
}

80 
	$maö
()

82 
n
;

83 
	`sˇnf
("%d",&
n
)!=
EOF
)

85 
t›
=0;

86 
i
=0; i<
n
; i++)

87 
li°
[
i
]=-1;

88 
	`mem£t
(
ö
,0,(in));

89 
i
=0; i<
n
; i++)

91 
	`sˇnf
("%d",&
d©
[
i
]);

92 
d©
[
i
]--;

94 
i
=0; i<
n
; i++)

96 
m
;

97 
	`sˇnf
("%d",&
m
);

98 
j
=0; j<
m
; j++)

100 
y
;

101 
	`sˇnf
("%d",&
y
);

102 
y
--;

103 
	`ö£π
(
y
,
i
);

104 
ö
[
i
]++;

107 
	`¥ötf
("%d\n",
	`sﬁve
(
n
)+n);

110 
	}
}

	@problems/codeforces/div1_codes/round131/R131D1B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 110

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gc
[
N
][N],
	gdp
[N][N];

35 
	ga
[10];

37 
	$sﬁve
()

39 
	`mem£t
(
c
,0,(c));

40 
c
[0][0]=1,c[1][1]=1,c[1][0]=1;

41 
i
=2; i<
N
; i++)

43 
c
[
i
][0]=1;

44 
j
=1; j<
i
; j++)

45 
c
[
i
][
j
]=(c[i-1][j]+c[i-1][j-1])%
MOD
;

46 
c
[
i
][i]=1;

48 
	`mem£t
(
dp
,0,(dp));

49 
i
=0; i<
N
; i++)

51 if(
i
<
a
[1])

53 
dp
[1][
i
]=1;

55 
âl
=0;

56 
i
=1; i<10; i++)

58 
âl
+=
a
[
i
];

59 if(
âl
==0)

60 
dp
[
i
][0]=1;

62 
âl
+=
a
[0];

63 if(
âl
==0)

64 
dp
[0][0]=1;

65 
âl
=
a
[1];

66 
i
=2; i<10; i++)

68 
j
=1; j<
N
; j++)

70 
k
=
âl
; k<=
j
; k++)

72 if(
j
-
k
<
a
[
i
])

74 
dp
[
i
][
j
]=(dp[i][j]+dp[i-1][
k
]*
c
[j][j-k])%
MOD
;

77 
âl
+=
a
[
i
];

79 
j
=1; j<
N
; j++)

81 
k
=
âl
; k<=
j
; k++)

83 if(
k
==0)

85 if(
j
-
k
>=
a
[0])

86 
dp
[0][
j
]=(dp[0][j]+dp[9][
k
]*
c
[j-1][j-k])%
MOD
;

89 
	}
}

91 
	$maö
()

93 
n
,
âl
,
eze
;

94 
	`sˇnf
("%d",&
n
)!=
EOF
)

96 
âl
=0;

97 
i
=0; i<10; i++)

99 
	`sˇnf
("%d",&
a
[
i
]);

100 
âl
+=
a
[
i
];

102 
	`sﬁve
();

103 
LL
 
ªt
=0;

104 
eze
=
âl
-
a
[0];

105 
i
=
âl
; i<=
n
; i++)

107 if(
i
==0) ;

108 
ªt
=‘ë+
dp
[0][
i
])%
MOD
;

110 
cout
<<((
ªt
%
MOD
)+MOD)%MOD<<
ídl
;

113 
	}
}

	@problems/codeforces/div1_codes/round131/R131D1C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 310

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gdp
[
N
<<1][N][N],
	gm©
[N][N];

36 
	$maö
()

38 
n
;

39 
	`sˇnf
("%d",&
n
)!=
EOF
)

41 
i
=1; i<=
n
; i++)

42 
j
=1; j<=
n
; j++)

43 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

44 
i
=0; i<=2*
n
; i++)

45 
j
=0; j<=
n
; j++)

46 
k
=0; k<=
n
; k++)

47 
dp
[
i
][
j
][
k
]=-
öf
;

48 
dp
[0][1][1]=0;

49 
ux
,
uy
,
vx
,
vy
,
tmp
,
m
;

50 
i
=1; i<=2*
n
-1; i++)

52 if(
i
>
n
)

53 
m
=2*
n
-
i
;

55 
m
=
i
;

56 
u
=1; u<=
m
; u++)

58 if(
i
<=
n
)

59 
ux
=
u
,
uy
=
i
-u+1;

61 
ux
=
i
-
n
+
u
,
uy
=n-u+1;

62 
v
=1; v<=
m
; v++)

64 if(
i
<=
n
)

65 
vx
=
v
,
vy
=
i
-v+1;

67 
vx
=
i
-
n
+
v
,
vy
=n-v+1;

68 if(
u
==
v
)

69 
tmp
=
m©
[
ux
][
uy
];

71 
tmp
=
m©
[
ux
][
uy
]+m©[
vx
][
vy
];

72 
w
=0; w<2; w++)

73 
s
=0; s<2; s++)

75 if(
i
<=
n
)

76 
dp
[
i
][
u
][
v
]=
	`max
(dp[i][u][v],dp[i-1][u-
w
][v-
s
]+
tmp
);

78 
dp
[
i
][
u
][
v
]=
	`max
(dp[i][u][v],dp[i-1][u+
w
][v+
s
]+
tmp
);

83 
	`¥ötf
("%d\n",
dp
[2*
n
-1][1][1]);

86 
	}
}

	@problems/codeforces/div1_codes/round140/R140D1A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	$pow
(
LL
 
a
,LL 
b
,LL 
mod
)

36 
LL
 
ªt
=1;

37 ; 
b
;)

39 if(
b
&1)

40 
ªt
Ùë*
a
%
mod
;

41 
a
=◊*a)%
mod
;

42 
b
>>=1;

44  
ªt
;

45 
	}
}

47 
	$maö
()

49 
n
,
m
;

50 
cö
>>
n
>>
m
;

51 
cout
<<(((
	`pow
(3,
n
,
m
)-1)+m)%m)<<
ídl
;

53 
	}
}

	@problems/codeforces/div1_codes/round140/R140D1B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gd©
[
N
];

35 
LL
 
	gsum
[
N
];

37 
	$cmp
(
a
,
b
){ á<b; 
	}
}

39 
	$maö
()

41 
n
;

42 
	`sˇnf
("%d",&
n
)!=
EOF
)

44 
sum
[0]=0;

45 
i
=1; i<=
n
; i++)

46 
	`sˇnf
("%d",&
d©
[
i
]);

47 
	`s‹t
(
d©
+1,d©+
n
+1,
cmp
);

48 
i
=1; i<=
n
; i++)

49 
sum
[
i
]=sum[i-1]+
d©
[i];

50 
m
;

51 
	`sˇnf
("%d",&
m
);

52 
LL
 
k⁄e
=0,
˙t
=1,
Àn
;

53 
i
=
n
-1; i>=1; i--)

55 
k⁄e
+=
˙t
*
d©
[
i
];

56 
˙t
++;

59 
i
=1; i<=
m
; i++)

61 
k
;

62 
	`sˇnf
("%d",&
k
);

63 if(
k
==1)

64 
	`¥ötf
("%I64d\n",
k⁄e
);

68 
˙t
=1;

69 
Àn
=
k
;

70 
LL
 
ªt
=0;

71 
LL
 
i
=
n
-1; i>=1;)

73 
ªt
+=
˙t
*(
sum
[
i
]-sum[
	`max
(i-
Àn
,0LL)]);

74 
i
=i-
Àn
;

75 
˙t
++;

76 
Àn
ˆí*
k
;

78 
	`¥ötf
("%I64d\n",
ªt
);

84 
	}
}

	@problems/codeforces/div1_codes/round140/R140D1C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#X
 1000000

	)

22 
	#S
 1000100

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3fffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gmod
;

35 
LL
 
	gm©
[2][2],
	gtmp
[2][2],
	gªt
[2][2];

37 
	$ok
(
LL
 
id
,LL 
l
,LL 
r
,LL 
k
)

39  
r
/
id
-(
l
-1)/id>=
k
;

40 
	}
}

42 
	$ˇl
(
LL
 
c
[][2],LL 
a
[][2],LL 
b
[][2])

44 
	`mem£t
(
tmp
,0,(tmp));

45 
i
=0; i<2; i++)

46 
j
=0; j<2; j++)

47 
k
=0; k<2; k++)

48 
tmp
[
i
][
j
]=—mp[i][j]+
a
[i][
k
]*
b
[k][j])%
mod
;

49 
i
=0; i<2; i++)

50 
j
=0; j<2; j++)

51 
c
[
i
][
j
]=
tmp
[i][j];

52 
	}
}

54 
LL
 
	$fib
(
LL
 
n
)

56 if(
n
<=2Ë 1%
mod
;

57 
m©
[0][0]=1;

58 
m©
[0][1]=1;

59 
m©
[1][0]=1;

60 
m©
[1][1]=0;

61 
ªt
[1][1]=ret[0][0]=1;

62 
ªt
[0][1]=ret[1][0]=0;

63 
n
--;

64 ; 
n
;)

66 if(
n
&1)

67 
	`ˇl
(
ªt
,ªt,
m©
);

68 
	`ˇl
(
m©
,mat,mat);

69 
n
>>=1LL;

71  
ªt
[0][0]%
mod
;

72 
	}
}

74 
	$maö
()

76 
LL
 
l
,
r
,
k
,
m
,
Àn
,
Œ
,
º
;

77 
LL
 
id
;

78 
cö
>>
m
>>
l
>>
r
>>
k
)

80 
mod
=
m
;

81 
Œ
=1,
º
=
r
;

82 
º
=1;

83 
LL
 
add
=0,
sq
=(LL)
	`sqπ
(1.0*
r
);

84 
LL
 
i
=1; i<=
sq
; i++)

85 if(
	`ok
(
i
,
l
,
r
,
k
))

86 
º
=
i
;

87 
LL
 
i
=1; i<=
sq
; i++)

88 if(
	`ok
(
r
/
i
,
l
,r,
k
))

89 
º
=
	`max
‘r,
r
/
i
);

90 
cout
<<
	`fib
(
º
)<<
ídl
;

93 
	}
}

	@problems/codeforces/div1_codes/round140/R140D1D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gd©
[
N
][N],
	gsc
[N],
	g§
[N],
	gtc
[N],
	gå
[N];

36 
	$gë
(
a
[],
n
)

38 
x
=
a
[0],
ªt
=0;

39 
i
=1; i<
n
; i++)

40 if(
a
[
i
]<
x
)

41 
x
=
a
[
i
],
ªt
=i;

42  
ªt
;

43 
	}
}

45 
	$maö
()

47 
n
,
m
;

48 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

50 
	`mem£t
(
sc
,0,(sc));

51 
	`mem£t
(
§
,0,(sr));

52 
	`mem£t
(
tc
,0,(tc));

53 
	`mem£t
(
å
,0,(tr));

54 
i
=0; i<
m
; i++)

55 
j
=0; j<
n
; j++)

57 
	`sˇnf
("%d",&
d©
[
i
][
j
]);

58 
sc
[
j
]+=
d©
[
i
][j];

59 
§
[
i
]+=
d©
[i][
j
];

63 
ic
,
ú
;

64 
ic
=
	`gë
(
sc
,
n
);

65 
ú
=
	`gë
(
§
,
m
);

66 if(
sc
[
ic
]>=0&&
§
[
ú
]>=0)

68 if(
sc
[
ic
]>
§
[
ú
])

70 
å
[
ú
]^=1;

71 
i
=0; i<
n
; i++)

73 
§
[
ú
]-=
d©
[ú][
i
];

74 
sc
[
i
]-=
d©
[
ú
][i];

75 
d©
[
ú
][
i
]=-dat[ir][i];

76 
§
[
ú
]+=
d©
[ú][
i
];

77 
sc
[
i
]+=
d©
[
ú
][i];

82 
tc
[
ic
]^=1;

83 
i
=0; i<
m
; i++)

85 
sc
[
ic
]-=
d©
[
i
][ic];

86 
§
[
i
]-=
d©
[i][
ic
];

87 
d©
[
i
][
ic
]=-dat[i][ic];

88 
sc
[
ic
]+=
d©
[
i
][ic];

89 
§
[
i
]+=
d©
[i][
ic
];

93 
ªt
=0;

94 
i
=0; i<
m
; i++)

95 if(
å
[
i
])

96 
ªt
++;

97 
	`¥ötf
("%d",
ªt
);

98 
i
=0; i<
m
; i++)

99 if(
å
[
i
])

100 
	`¥ötf
(" %d",
i
+1);

101 
	`puts
("");

102 
ªt
=0;

103 
i
=0; i<
n
; i++)

104 if(
tc
[
i
])

105 
ªt
++;

106 
	`¥ötf
("%d",
ªt
);

107 
i
=0; i<
n
; i++)

108 if(
tc
[
i
])

109 
	`¥ötf
(" %d",
i
+1);

110 
	`puts
("");

113 
	}
}

	@problems/codeforces/div1_codes/round145/R145D1A.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<£t
>

5 
	#N
 111

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gvis
[
N
];

10 
	snode
{ 
	mz
,
	ml
,
	mn
,
	mp
; }
	gno
[
N
];

11 
	gs
[
N
];

13 
	$maö
()

15 
n
,
k
;

16 
	`‰e›í
("öput.txt","r",
°dö
);

17 
	`‰e›í
("ouçut.txt","w",
°dout
);

18 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

20 
	`mem£t
(
vis
,0,(vis));

21 
i
=0; i<
k
; i++)

23 
x
;

24 
	`sˇnf
("%d",&
x
);

25 
vis
[
x
]=1;

27 
m
,
mx
=0,
lm
=0;

28 
	`sˇnf
("%d",&
m
);

29 
i
=0; i<
m
; i++)

31 
x
;

32 
	`sˇnf
("%s%d",&
s
,&
x
);

33 
no
[
i
].
n
=
x
;

34 
no
[
i
].
z
=0,no[i].
l
=0;

35 
j
=0; j<
x
; j++)

37 
y
;

38 
	`sˇnf
("%d",&
y
);

39 if(
y
==0)

40 
no
[
i
].
z
++;

41 if(
vis
[
y
])

42 
no
[
i
].
l
++;

44 
no
[
i
].
p
=
	`mö
(
k
,no[i].
l
+no[i].
z
);

45 
z
=
no
[
i
].
l
;

46 
no
[
i
].
l
=
	`mö
(
z
+
	`max
“o[i].
n
-z-“-
k
),0),k);

47 
mx
=
	`max
(
no
[
i
].
p
,mx);

48 
lm
=
	`max
÷m,
no
[
i
].
l
);

50 
i
=0; i<
m
; i++)

52 if(
no
[
i
].
l
>no[i].
p
)

54 if(
no
[
i
].
p
<
lm
)

56 
	`puts
("1");

60 
mxx
=0;

61 
j
=0; j<
m
; j++)

63 if(
j
==
i
) ;

64 
mxx
=
	`max
(mxx,
no
[
j
].
p
);

66 if(
no
[
i
].
l
>=
mxx
)

67 
	`puts
("0");

69 
	`puts
("2");

74 
	}
}

	@problems/codeforces/div1_codes/round145/R145D1B.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 201

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gsum
[
N
];

10 
	gdp
[
N
][40011][2],
	gd©
[N];

11 
	gn
,
	ga
,
	gb
;

13 
	$maö
()

15 
	`‰e›í
("öput.txt","r",
°dö
);

16 
	`‰e›í
("ouçut.txt","w",
°dout
);

18 
	`sˇnf
("%d%d%d",&
n
,&
a
,&
b
)+1)

20 
sum
[0]=0;

21 
d©
[0]=0;

22 
i
=1; i<=
n
; i++)

24 
	`sˇnf
("%d",&
d©
[
i
]);

25 
sum
[
i
]=
d©
[i]+sum[i-1];

27 
	`mem£t
(
dp
,0x3f,(dp));

28 
dp
[1][
d©
[1]][0]=0;

29 if(
b
>=
d©
[1])

30 
dp
[1][0][1]=0;

31 
i
=2; i<=
n
; i++)

33 
j
=0; j<=
a
; j++)

35 
bb
=
sum
[
i
]-
j
;

36 if(
bb
>
b
)

38 if(
j
>=
d©
[
i
])

39 
dp
[
i
][
j
][0]=
	`mö
(dp[i-1][j-
d©
[i]][0],dp[i-1][j-dat[i]][1]+min(dat[i],dat[i-1]));

40 
dp
[
i
][
j
][1]=
	`mö
(dp[i-1][j][0]+mö(
d©
[i],dat[i-1]),dp[i-1][j][1]);

43 
ªt
=
öf
;

44 
j
=0; j<=
a
; j++)

45 
ªt
=
	`mö
‘ë,mö(
dp
[
n
][
j
][0],dp[n][j][1]));

46 
	`¥ötf
("%d\n",
ªt
>=
N
*N?-1:ret);

49 
	}
}

	@problems/codeforces/div1_codes/round145/R145D1C.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1011

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gdp
[
N
];

9 
	gve˘‹
<> 
	gvec
;

11 
	$öô
()

13 
dp
[1]=1;

14 
dp
[2]=1;

15 
i
=3; i<
N
; i++)

17 
dp
[
i
]=
N
;

18 
j
=2; j<
i
; j++)

19 
dp
[
i
]=
	`mö
(dp[i],
	`max
(dp[
j
],dp[i-j])+1);

21 
	}
}

23 
	$maö
()

25 
	`‰e›í
("öput.txt","r",
°dö
);

26 
	`‰e›í
("ouçut.txt","w",
°dout
);

27 
	`öô
();

28 
n
;

29 
	`sˇnf
("%d",&
n
)+1)

31 
˙t
=1;

32 
	`¥ötf
("%d\n",
dp
[
n
]);

33 
d
;

34 
d
=2; d<
n
; d<<=1)

36 
vec
.
	`˛ór
();

37 
i
=1; i<=
n
; i+=
d
)

39 
l
=
i
,
r
=i+
d
-1,
m
=(l+r)/2;

40 
j
=
l
; j<=
m
&&j<=
n
; j++)

41 
vec
.
	`push_back
(
j
);

43 
	`¥ötf
("%d",
vec
.
	`size
());

44 
i
=0; i<
vec
.
	`size
(); i++)

45 
	`¥ötf
(" %d",
vec
[
i
]);

46 
	`puts
("");

47 
˙t
++;

49 
vec
.
	`˛ór
();

50 
l
=1,
r
ˆ+
d
-1,
m
=(l+r)/2;

51 
i
=1; i<=
m
; i++)

52 
vec
.
	`push_back
(
i
);

53 
	`¥ötf
("%d",
vec
.
	`size
());

54 
i
=0; i<
vec
.
	`size
(); i++)

55 
	`¥ötf
(" %d",
vec
[
i
]);

56 
	`puts
("");

57 if(
˙t
!=
dp
[
n
])

61 
	}
}

	@problems/codeforces/div1_codes/round145/R145D1D.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#N
 100011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	g°1
[
N
],
	g°2
[N];

9 
	gve˘‹
<> 
	g™s
;

10 
	gve˘‹
<> 
	g˙t
;

12 
	$maö
()

14 
m
,
n
;

15 
	`‰e›í
("öput.txt","r",
°dö
);

16 
	`‰e›í
("ouçut.txt","w",
°dout
);

17 
	`sˇnf
("%d",&
m
)+1)

19 
™s
.
	`˛ór
();

20 
˙t
.
	`˛ór
();

21 
i
=0; i<
m
; i++)

22 
	`sˇnf
("%d",&
°1
[
i
]);

23 
	`sˇnf
("%d",&
n
);

24 
i
=0; i<
n
; i++)

25 
	`sˇnf
("%d",&
°2
[
i
]);

26 
n1
=
m
-1,
n2
=
n
-1,
now
=0,
fú°
=1;

27 ; 
n1
>=0||
n2
>=0; )

29 
c
=0;

30 ; 
n1
>=0&&
°1
[n1]==
now
;Ç1--,
c
++)

31 
™s
.
	`push_back
(
n1
+1);

32 ; 
n2
>=0&&
°2
[n2]==
now
;Ç2--,
c
++)

33 
™s
.
	`push_back
(
n2
+1+
m
);

34 
now
^=1;

35 if(
c
>0)

37 if(
fú°
==0)

38 
˙t
.
	`push_back
(
c
);

40 
fú°
=0;

42 
i
=
™s
.
	`size
()-1; i>=0; i--)

43 
	`¥ötf
("%d ",
™s
[
i
]);

44 
	`puts
("");

45 
	`¥ötf
("%d\n",
˙t
.
	`size
());

46 
cc
=0;

47 
i
=
˙t
.
	`size
()-1; i>=0; i--)

49 
cc
+=
˙t
[
i
];

50 
	`¥ötf
("%d ",
cc
);

52 
	`puts
("");

55 
	}
}

	@problems/codeforces/div1_codes/round145/R145D1E.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#N
 100011

	)

5 
	#pii
 
∑ú
<,>

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	sedge
{ 
	mf
,
	mt
,
	mi
;

10 
edge
(
x
,
y
,
z
){ 
	mf
=x,
	mt
=y,
	mi
=z; }

11 
edge
(){;}

14 
	gve˘‹
<
	gedge
> 
	ge
;

15 
	gve˘‹
<> 
	gli
[
N
];

16 
	gve˘‹
<
	gpii
> 
	gå
[
N
];

17 
	gve˘‹
<> 
	g™s
;

18 
	gd‚
[
N
],
	gid
[N],
	glow
[N],
	gt›
,
	g°
[N],
	gvis
[N],
	gID
,
	gTI
,
	g¥e
[N],
	gö
[N];

20 
	$èr
(
now
)

22 
d‚
[
now
]=
low
[now]=
TI
++;

23 
°
[++
t›
]=
now
;

24 
vis
[
now
]=1;

25 
i
=0; i<
li
[
now
].
	`size
(); i++)

27 
to
=
li
[
now
][
i
];

28 if(!
d‚
[
to
])

30 
	`èr
(
to
);

31 
low
[
now
]=
	`mö
÷ow[now],low[
to
]);

33 if(
vis
[
to
])

34 
low
[
now
]=
	`mö
÷ow[now],
d‚
[
to
]);

36 if(
low
[
now
]==
d‚
[now])

38 ; 
t›
>=0; )

40 
x
=
°
[
t›
--];

41 
id
[
x
]=
ID
;

42 
vis
[
x
]=0;

43 if(
x
==
now
)

46 
ID
++;

48 
	}
}

50 
	$dfs
(
now
)

52 
vis
[
now
]=1;

53 
i
=0; i<
å
[
now
].
	`size
(); i++)

55 
to
=
å
[
now
][
i
].
fú°
,
id
Òr[now][i].
£c⁄d
;

56 if(!
vis
[
to
])

58 
	`dfs
(
to
);

59 if(
id
>0)

60 
™s
.
	`push_back
(
id
);

63 
	}
}

65 
	$maö
()

67 
n
,
m
;

68 
	`‰e›í
("öput.txt","r",
°dö
);

69 
	`‰e›í
("ouçut.txt","w",
°dout
);

70 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

72 
e
.
	`˛ór
();

73 
i
=0; i<
n
; i++)

75 
li
[
i
].
	`˛ór
();

76 
å
[
i
].
	`˛ór
();

78 
i
=0; i<
m
; i++)

80 
x
,
y
,
z
;

81 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

82 
y
--,
x
--;

83 if(
z
==0)

84 
li
[
x
].
	`push_back
(
y
);

86 
e
.
	`push_back
(
	`edge
(
x
,
y
,
i
));

88 
TI
=1;

89 
t›
=0;

90 
ID
=0;

91 
	`mem£t
(
d‚
,0,(dfn));

92 
	`mem£t
(
vis
,0,(vis));

93 
i
=0; i<
n
; i++)

94 if(!
d‚
[
i
])

95 
	`èr
(
i
);

96 
	`mem£t
(
¥e
,0,(pre));

97 
	`mem£t
(
ö
,0,(in));

98 
i
=0; i<
n
; i++)

99 
j
=0; j<
li
[
i
].
	`size
(); j++)

101 
to
=
li
[
i
][
j
];

102 if(
id
[
to
]==id[
i
]) ;

103 
ö
[
id
[
to
]]++;

104 
å
[
id
[
i
]].
	`push_back
(
	`make_∑ú
(id[
to
],0));

106 
i
=0; i<
e
.
	`size
(); i++)

108 
f
=
id
[
e
[
i
].f],
t
=id[e[i].t];

109 if(
f
!=
t
&&
ö
[t]==0&&t!=
id
[0])

111 
å
[
f
].
	`push_back
(
	`make_∑ú
(
t
,
e
[
i
].i+1));

114 
	`mem£t
(
vis
,0,(vis));

115 
™s
.
	`˛ór
();

116 
	`dfs
(
id
[0]);

117 
ªt
=1;

118 
i
=0; i<
ID
; i++)

119 if(!
vis
[
i
])

120 
ªt
=0;

121 if(
ªt
==0)

122 
	`puts
("-1");

125 
	`¥ötf
("%d\n",
™s
.
	`size
());

126 
i
=0; i<
™s
.
	`size
(); i++)

128 if(
i
>0Ë
	`¥ötf
(" ");

129 
	`¥ötf
("%d",
™s
[
i
]);

131 
	`puts
("");

135 
	}
}

	@problems/codeforces/div1_codes/round145/R145D1F.cpp

1 
	~<c°dio
>

2 
	#N
 100011

	)

3 
	#X
 26

	)

5 
	snode
{ 
	ml
,
	mr
,
	mc
,
	ma
;

6 
gm
(){  (
	ml
+
	mr
)>>1; }

7 
Àn
(){  
	mr
-
	ml
+1; }

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
	g˙t
[
X
];

15 
	s£gmít


17 
node
 
	mno
[
N
<<2];

18 
öô
(
id
,
l
,
r
)

20 
	mno
[
id
].
	ml
=
l
,no[id].
	mr
=
r
,no[id].
	mc
=0,no[id].
	ma
=0;

21 if(
	ml
==
r
) ;

22 
öô
(
L
(
id
),
l
,
no
[id].
gm
());

23 
öô
(
R
(
id
),
no
[id].
gm
()+1,
r
);

26 
down
(
id
)

28 
	mx
=
no
[
id
].
a
;

29 if(
	mx
>=0)

31 
no
[
L
(
id
)].
a
=
x
;

32 
	mno
[
R
(
id
)].
	ma
=
x
;

33 
	mno
[
L
(
id
)].
	mc
=
x
*
no
[L(id)].
Àn
();

34 
	mno
[
R
(
id
)].
	mc
=
x
*
no
[R(id)].
Àn
();

35 
	mno
[
id
].
	ma
=-1;

39 
upd©e
(
id
,
Œ
,
º
,
x
)

41 
	ml
=
no
[
id
].
l
,
	mr
Úo[id].
r
,
	mm
Úo[id].
gm
();

42 if(
	ml
>=
Œ
&&
r
<=
º
)

44 
no
[
id
].
a
=
x
;

45 
	mno
[
id
].
	mc
=
x
*
no
[id].
Àn
();

48 
down
(
id
);

49 if(
	mm
>=
Œ
&&
l
<=
º
)

50 
upd©e
(
L
(
id
),
Œ
,
º
,
x
);

51 if(
	mm
<
	mº
&&
	mr
>=
Œ
)

52 
upd©e
(
R
(
id
),
Œ
,
º
,
x
);

53 
	mno
[
id
].
	mc
=
no
[
L
(id)].
c
+no[
R
(id)].c;

56 
quîy
(
id
,
Œ
,
º
)

58 
	ml
=
no
[
id
].
l
,
	mr
Úo[id].
r
,
	mm
Úo[id].
gm
();

59 if(
	ml
>=
Œ
&&
r
<=
º
)

60  
no
[
id
].
c
;

61 
down
(
id
);

62 
	mªt
=0;

63 if(
	mm
>=
Œ
&&
l
<=
º
)

64 
ªt
+=
quîy
(
L
(
id
),
Œ
,
º
);

65 if(
	mm
<
	mº
&&
	mr
>=
Œ
)

66 
ªt
+=
quîy
(
R
(
id
),
Œ
,
º
);

67  
	mªt
;

69 }
	g£g
[
X
];

71 
	gs
[
N
];

73 
	$ok
()

75 
od
=0,
ev
=0;

76 
i
=0; i<
X
; i++)

78 if(
˙t
[
i
]&1)

79 
od
++;

81 
ev
++;

83  
od
<=1;

84 
	}
}

86 
	$maö
()

88 
n
,
m
;

89 
	`‰e›í
("öput.txt","r",
°dö
);

90 
	`‰e›í
("ouçut.txt","w",
°dout
);

91 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

93 
	`sˇnf
("%s",
s
);

94 
i
=0; i<
X
; i++)

95 
£g
[
i
].
	`öô
(1,1,
n
);

96 
i
=0; 
s
[i]; i++)

97 
£g
[
s
[
i
]-'a'].
	`upd©e
(1,i+1,i+1,1);

98 
i
=0; i<
m
; i++)

100 
l
,
r
;

101 
	`sˇnf
("%d%d",&
l
,&
r
);

102 
j
=0; j<
X
; j++)

103 
˙t
[
j
]=
£g
[j].
	`quîy
(1,
l
,
r
);

104 if(
	`ok
())

106 
∆
=
l
,
ƒ
=
r
;

107 
j
=0; j<
X
; j++)

109 
£g
[
j
].
	`upd©e
(1,
l
,
r
,0);

110 if(
˙t
[
j
]&1)

112 
x
=
˙t
[
j
]>>1,
mid
=(
∆
+
ƒ
)>>1;

113 
£g
[
j
].
	`upd©e
(1,
mid
,mid,1);

114 
£g
[
j
].
	`upd©e
(1,
∆
,∆+
x
-1,1);

115 
£g
[
j
].
	`upd©e
(1,
ƒ
-
x
+1,nr,1);

116 
∆
Úl+
x
;

117 
ƒ
Úr-
x
;

119 if(
˙t
[
j
]>0)

121 
x
=
˙t
[
j
]>>1;

122 
£g
[
j
].
	`upd©e
(1,
∆
,∆+
x
-1,1);

123 
£g
[
j
].
	`upd©e
(1,
ƒ
-
x
+1,nr,1);

124 
∆
Úl+
x
;

125 
ƒ
Úr-
x
;

130 
k
=1; k<=
n
; k++)

132 
ii
=-1;

133 
i
=0; i<
X
; i++)

135 if(
£g
[
i
].
	`quîy
(1,
k
,k)>0)

137 
ii
=
i
;

141 
s
[
k
-1]=
ii
+'a';

143 
s
[
n
]=0;

144 
	`¥ötf
("%s\n",
s
);

147 
	}
}

	@problems/codeforces/div1_codes/round162/R162D1A.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1000011

	)

5 
	snode
{ 
	ml
,
	mr
,
	mi
,
	mc
; }
	gno
[
N
];

7 
	gs
[
N
];

9 
	$maö
()

11 
	`sˇnf
("%s",
s
);

12 
l
=
	`°æí
(
s
),
t›
;

13 
i
=0; i<
N
; i++)

14 
no
[
i
].
l
Úo[i].
r
=-1,no[i].i=i;

15 
node
 *
À
,*
ri
;

16 
À
=&
no
[0],
ri
=&no[1];

17 
À
->
l
=-1,
ri
->
r
=-1;

18 
À
->
r
=1,
ri
->
l
=0;

19 
t›
=2;

20 
i
=0; i<
l
; i++)

22 
no
[
t›
].
c
=
i
;

23 
no
[
t›
].
l
=
À
->
i
;

24 
no
[
t›
].
r
=
ri
->
i
;

25 
À
->
r
=
no
[
t›
].
i
;

26 
ri
->
l
=
no
[
t›
].
i
;

27 if(
s
[
i
]=='l')

29 
ri
=&
no
[
t›
];

33 
À
=&
no
[
t›
];

35 
t›
++;

37 
node
 
now
;

38 
now
=
no
[0];

39 ;; 
now
=
no
[now.
r
])

41 if(
now
.
r
==-1)

43 if(
now
.
l
!=-1)

44 
	`¥ötf
("%d\n",
now
.
c
+1);

46 
	}
}

	@problems/codeforces/div1_codes/round162/R162D1B.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 100011

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gdp
[
N
],
	gp
[N],
	g∂
[N],
	gt›
;

10 
	$öô
()

12 
t›
=0;

13 
i
=0; i<
N
; i++)

14 
p
[
i
]=i;

15 
i
=2; i<
N
; i++)

17 if(
p
[
i
]==i)

18 
∂
[
t›
++]=
i
;

19 
j
=0; j<
t›
&&
i
*
∂
[j]<
N
; j++)

21 
p
[
i
*
∂
[
j
]]=pl[j];

22 if(
i
%
∂
[
j
]==0)

26 
	}
}

28 
	$gao
(
x
)

30 
ªt
=0,
z
=
x
;

31 ; 
x
>1;)

33 
y
=
p
[
x
];

34 
ªt
=
	`max
‘ë,
dp
[
y
]);

35 ; 
x
%
y
==0; x/=y);

37 
x
=
z
;

38 ; 
x
>1;)

40 
y
=
p
[
x
];

41 
dp
[
y
]=
ªt
+1;

42 ; 
x
%
y
==0; x/=y);

44 
	}
}

46 
	$maö
()

48 
n
;

49 
	`mem£t
(
dp
,0,(dp));

50 
dp
[1]=1;

51 
	`öô
();

52 
	`sˇnf
("%d",&
n
);

53 
i
=0; i<
n
; i++)

55 
x
;

56 
	`sˇnf
("%d",&
x
);

57 
	`gao
(
x
);

59 
ªt
=0;

60 
i
=0; i<
N
; i++)

61 
ªt
=
	`max
‘ë,
dp
[
i
]);

62 
	`¥ötf
("%d\n",
ªt
);

64 
	}
}

	@problems/codeforces/div1_codes/round162/R162D1C.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

4 
	~<Æg‹ôhm
>

5 
	#N
 100011

	)

6 
	#öf
 0x3fffffffffffffLL

	)

8 
	tLL
;

9 
usög
 
«me•a˚
 
	g°d
;

11 
LL
 
	gdp
[
N
];

12 
	gv
[
N
],
	gc
[N],
	gvis
[N];

14 
	snode
{ 
	mc
; 
LL
 
	mv
; }
	gno
[2];

16 
	$gao
(
LL
 
a
,LL 
b
,
n
)

18 
	`mem£t
(
dp
,0,(dp));

19 
	`mem£t
(
vis
,0,(vis));

20 
no
[0].
c
=no[1].c=-1;

21 
no
[0].
v
=no[1].v=0;

22 
LL
 
ªt
=0;

23 
i
=0; i<
n
; i++)

25 
LL
 
now
=
b
*
v
[
i
];

26 if(
vis
[
c
[
i
]])

27 
now
=
	`max
“ow,
dp
[
c
[
i
]]+
a
*
v
[i]);

29 if(
no
[0].
c
==c[
i
])

30 
now
=
	`max
“ow,
no
[1].
v
+
b
*v[
i
]);

32 
now
=
	`max
“ow,
no
[0].
v
+
b
*v[
i
]);

34 if(
vis
[
c
[
i
]])

35 
dp
[
c
[
i
]]=
	`max
(dp[c[i]],
now
);

37 
dp
[
c
[
i
]]=
now
;

38 
vis
[
c
[
i
]]=1;

40 if(
c
[
i
]==
no
[0].c)

41 
no
[0].
v
=
	`max
“o[0].v,
now
);

42 if(
c
[
i
]==
no
[1].c)

43 
no
[1].
v
=
	`max
“o[1].v,
now
);

46 if(
no
[1].
v
<
now
)

47 
no
[1].
v
=
now
,no[1].
c
=c[
i
];

49 if(
no
[0].
v
<no[1].v)

50 
	`sw≠
(
no
[0],no[1]);

51 
ªt
=
	`max
‘ë,
now
);

53 
cout
<<
ªt
<<
ídl
;

54 
	}
}

56 
	$maö
()

58 
n
,
q
;

59 
	`sˇnf
("%d%d",&
n
,&
q
);

60 
i
=0; i<
n
; i++)

61 
	`sˇnf
("%d",&
v
[
i
]);

62 
i
=0; i<
n
; i++)

63 
	`sˇnf
("%d",&
c
[
i
]);

64 
i
=0; i<
q
; i++)

66 
a
,
b
;

67 
	`sˇnf
("%d%d",&
a
,&
b
);

68 
	`gao
(
a
,
b
,
n
);

71 
	}
}

	@problems/codeforces/div1_codes/round162/R162D1D.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	#N
 1001001

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gÀ
,
	gri
,
	gœ
,
	glb
,
	g˙t
[
N
][10];

10 
	gß
[
N
],
	gsb
[N];

12 
	$gëx
(
s
)

14 if(
s
=='R')  2;

15 if(
s
=='G')  1;

17 
	}
}

19 
	$gë
(
a
,
b
)

21  3*
	`gëx
(
a
)+gëx(
b
);

22 
	}
}

24 
	$maö
()

26 
	`sˇnf
("%s%s",
ß
,
sb
);

27 
œ
=
	`°æí
(
ß
);

28 
lb
=
	`°æí
(
sb
);

29 
i
=1; i<
lb
; i++)

31 
j
=0; j<10; j++)

32 
˙t
[
i
][
j
]=cnt[i-1][j];

33 if(
sb
[
i
-1]!=sb[i])

34 
˙t
[
i
][
	`gë
(
sb
[i-1],sb[i])]++;

36 
À
=
ri
=0;

37 ; 
ri
!=
lb
-1&&
ß
[0]!=
sb
[ri];Ñi++);

38 
LL
 
ªt
=
ri
-
À
+1;

39 
i
=1; i<
œ
; i++)

41 if(
ß
[
i
-1]==
sb
[
À
])Üe++;

42 if(
ri
<
lb
-1)Ñi++;

43 ; 
ri
<
lb
-1&&
sb
[ri]!=
ß
[
i
]; )Ñi++;

44 if(
À
<=
ri
)

45 
ªt
+=
ri
-
À
+1-(
˙t
[ri][
	`gë
(
ß
[
i
],sa[i-1])]-cnt[le][get(sa[i],sa[i-1])]);

47 
cout
<<
ªt
<<
ídl
;

49 
	}
}

	@problems/codeforces/div1_codes/round162/R162D1E.cpp

1 
	~<c°dio
>

2 
	~<£t
>

3 
	#N
 200100

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

8 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

10 
	s£gmít_åì


12 
	mv
[
N
<<2];

13 
upd©e
(
id
,
l
,
r
,
p
,
x
)

15 if(
	ml
==
r
)

17 
v
[
id
]=
x
;

20 
	mm
=(
l
+
r
)>>1;

21 if(
	mp
<=
m
)

22 
upd©e
(
L
(
id
),
l
,
m
,
p
,
x
);

24 
upd©e
(
R
(
id
),
m
+1,
r
,
p
,
x
);

25 
	mv
[
id
]=
max
(
v
[
L
(id)],v[
R
(id)]);

28 
quîy
(
id
,
l
,
r
,
Œ
,
º
)

30 if(
	mŒ
<=
l
&&
r
<=
º
)

31  
v
[
id
];

32 
	mm
=(
l
+
r
)>>1,
	mªt
=0;

33 if(
	mŒ
<=
m
&&
º
>=
l
)

34 
ªt
=
max
‘ë,
quîy
(
L
(
id
),
l
,
m
,
Œ
,
º
));

35 if(
	mŒ
<=
r
&&
º
>
m
)

36 
ªt
=
max
‘ë,
quîy
(
R
(
id
),
m
+1,
r
,
Œ
,
º
));

37  
	mªt
;

39 }
	g±
,
	ght
;

41 
	gxtoy
[
N
],
	gytox
[N];

42 
	g£t
<> 
	g°
;

43 
	g£t
<> 
	g°x
;

44 
	g£t
<>::
ôî©‹
 
ô
;

46 
	$add
(
x
,
y
)

48 
xtoy
[
x
]=
y
,
ytox
[y]=x;

49 
°
.
	`ö£π
(
y
);

50 
°x
.
	`ö£π
(
x
);

51 
ô
=
°
.
	`begö
(); it!=°.
	`íd
(); it++)

53 
yy
=*
ô
,
xx
=
ytox
[yy];

54 
±
.
	`upd©e
(1,1,
N
-1,
xx
,0);

55 
ht
.
	`upd©e
(1,1,
N
-1,
yy
,0);

56 if(
yy
==
y
)

59 ;;
ô
--)

61 
yy
=*
ô
,
xx
=
ytox
[yy];

62 
l
=
±
.
	`quîy
(1,1,
N
-1,
xx
+1,N-1)+1;

63 
±
.
	`upd©e
(1,1,
N
-1,
xx
,
l
);

64 
ht
.
	`upd©e
(1,1,
N
-1,
yy
,
l
);

65 if(
ô
==
°
.
	`begö
())

68 
	}
}

70 
	$dñ
(
x
)

72 
˙t
=0,
xx
,
yy
;

73 
ô
=
°x
.
	`begö
(); it!=°x.
	`íd
(); it++)

75 
xx
=*
ô
,
yy
=
xtoy
[xx];

76 
±
.
	`upd©e
(1,1,
N
-1,
xx
,0);

77 
ht
.
	`upd©e
(1,1,
N
-1,
yy
,0);

78 
˙t
++;

79 if(
˙t
==
x
) ;

81 
dx
=
xx
;

82 if(
ô
!=
°x
.
	`begö
())

84 
ô
--;; it--)

86 
xx
=*
ô
,
yy
=
xtoy
[xx];

87 
l
=
ht
.
	`quîy
(1,1,
N
-1,
yy
+1,N-1)+1;

88 
±
.
	`upd©e
(1,1,
N
-1,
xx
,
l
);

89 
ht
.
	`upd©e
(1,1,
N
-1,
yy
,
l
);

90 if(
ô
==
°x
.
	`begö
())

94 
°
.
	`îa£
(
xtoy
[
dx
]);

95 
°x
.
	`îa£
(
dx
);

96 
	}
}

98 
	$maö
()

100 
n
,
m
;

101 
	`sˇnf
("%d%d",&
n
,&
m
);

102 
i
=0; i<
m
; i++)

104 
èg
;

105 
	`sˇnf
("%d",&
èg
);

106 if(
èg
==1)

108 
x
,
y
;

109 
	`sˇnf
("%d%d",&
x
,&
y
);

110 
	`add
(
x
,
N
-
i
+
y
-50);

114 
x
;

115 
	`sˇnf
("%d",&
x
);

116 
	`dñ
(
x
);

118 
	`¥ötf
("%d\n",
±
.
	`quîy
(1,1,
N
-1,1,N-1));

120 
	}
}

	@problems/codeforces/div1_codes/round170_div1/R170D1A.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<£t
>

4 
	~<c°rög
>

5 
	#N
 111

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	g£t
<> 
	gœ
[
N
];

10 
	g£t
<>::
ôî©‹
 
ô
;

12 
	gmp
[
N
][N];

13 
	gvis
[
N
];

14 
	gn
,
	gm
,
	gid
[
N
],
	gt›
,
	g˙t
[N];

16 
	$ok
(
i
,
j
)

18 
ô
=
œ
[
i
].
	`begö
(); it!ˆa[i].
	`íd
(); it++)

20 if(
œ
[
j
].
	`cou¡
(*
ô
)>0)

24 
	}
}

26 
	$dfs
(
now
)

28 
vis
[
now
]=1;

29 
id
[
now
]=
t›
;

30 
i
=0; i<
n
; i++)

31 if(!
vis
[
i
])

32 if(
mp
[
now
][
i
])

33 
	`dfs
(
i
);

34 
	}
}

36 
	$maö
()

38 
	`mem£t
(
mp
,0,(mp));

39 
	`sˇnf
("%d%d",&
n
,&
m
);

40 
i
=0; i<
n
; i++)

42 
k
;

43 
	`sˇnf
("%d",&
k
);

44 
j
=0; j<
k
; j++)

46 
x
;

47 
	`sˇnf
("%d",&
x
);

48 
x
--;

49 
œ
[
i
].
	`ö£π
(
x
);

52 
i
=0; i<
n
; i++)

54 
j
=0; j<
n
; j++)

56 if(
i
==
j
) ;

57 if(
	`ok
(
i
,
j
))

58 
mp
[
i
][
j
]=mp[j][i]=1;

61 
	`mem£t
(
vis
,0,(vis));

62 
	`mem£t
(
id
,-1,(id));

63 
t›
=0;

64 
i
=0; i<
n
; i++)

65 if(!
vis
[
i
])

67 
	`dfs
(
i
);

68 
t›
++;

70 
	`mem£t
(
˙t
,0,(cnt));

71 
i
=0; i<
n
; i++)

72 if(
œ
[
i
].
	`size
()>0)

73 
˙t
[
id
[
i
]]=1;

74 
ze
=0;

75 
i
=0; i<
t›
; i++)

76 if(
˙t
[
i
]==0)

77 
ze
++;

78 
	`¥ötf
("%d\n",
t›
-1+(
ze
==top));

80 
	}
}

	@problems/codeforces/div1_codes/round170_div1/R170D1B.cpp

1 
	~<c°dio
>

3 
	$maö
()

6 
	}
}

	@problems/codeforces/div1_codes/round170_div1/R170D1C.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	~<ve˘‹
>

4 
	~<£t
>

5 
	~<Æg‹ôhm
>

6 
	#X
 1000000001

	)

7 
	#N
 100101

	)

9 
usög
 
«me•a˚
 
	g°d
;

10 
	gn
,
	gm
;

12 
	snode
{ 
	ml
,
	mr
;

13 
node
(
Œ
,
º
){ 
	ml
=
mö
÷l,º),
	mr
=
max
(ll,rr); }

16 
	s£gmít
{ 
	mi
,
	ml
;

17 
£gmít
(
id
,
Œ
){ 
	mi
=id,
	ml
=ll; }

20 
	gm≠
<,
	gve˘‹
<
	gnode
> > 
	gxv
,
	gyv
;

21 
	gm≠
<,
	gve˘‹
<
	gnode
> >::
ôî©‹
 
ô
;

22 
	$cmp
(
node
 
a
,nodê
b
){ á.
l
==b.l?a.
r
<b.r:a.l<b.l; 
	}
}

23 
	gve˘‹
<
	g£gmít
> 
	g£g
;

25 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

27 
gëid
(&
id
,
m≠
<,
ve˘‹
<
node
> > 
v
)

29 ;;
	gid
++)

30 if(
	gv
.
cou¡
(
id
)==0)

34 
gao
(
n
,
m
,
m≠
<,
ve˘‹
<
node
> > 
v
,&
ªt
,
add
)

36 
	gô
=
v
.
begö
(); it!=v.
íd
(); it++)

38 
	gi
=
ô
->
fú°
;

39 
s‹t
(
v
[
i
].
begö
(),v[i].
íd
(),
cmp
);

40 
	gl
=0,
	gr
=0;

41 
	gÀn
=0;

42 
	gj
=0; j<
	gv
[
i
].
size
(); j++)

44 
	gx
=
v
[
i
][
j
].
l
,
	gy
=v[i][j].
r
;

45 if(
	gx
>
	gr
)

47 
	gÀn
+=
x
-
r
;

48 
	gl
=
x
,
	gr
=
y
;

50 if(
	gy
>
	gr
)

51 
	gr
=
y
;

53 if(
	gr
<
	gm
)

54 
	gÀn
+=
m
-
r
;

55 
	g£g
.
push_back
(
£gmít
(
i
+
add
,
Àn
));

56 
	gªt
^=
Àn
;

58 if(
	gv
.
size
()<
	gn
-1)

60 
	gid
=1;

61 if(
	gn
-1-
	gv
.
size
()>=2)

63 
gëid
(
id
,
v
);

64 
	g£g
.
push_back
(
£gmít
(
id
+
add
,
m
));

65 
	gid
++;

66 
gëid
(
id
,
v
);

67 
	g£g
.
push_back
(
£gmít
(
id
+
add
,
m
));

68 
	gid
++;

70 if((
	gn
-1-
	gv
.
size
())&1)

72 
gëid
(
id
,
v
);

73 
	g£g
.
push_back
(
£gmít
(
id
+
add
,
m
));

74 
	gªt
^=
m
;

79 
	$maö
()

81 
k
;

82 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
);

83 
i
=0; i<
k
; i++)

85 
x1
,
y1
,
x2
,
y2
;

86 
	`sˇnf
("%d%d%d%d",&
x1
,&
y1
,&
x2
,&
y2
);

87 if(
x1
==
x2
)

88 
xv
[
x1
].
	`push_back
(
	`node
(
y1
,
y2
));

90 
yv
[
y1
].
	`push_back
(
	`node
(
x1
,
x2
));

92 
ªt
=0;

93 
	`gao
(
n
,
m
,
xv
,
ªt
,0);

94 
	`gao
(
m
,
n
,
yv
,
ªt
,
X
);

96 if(
ªt
>0)

98 
	`puts
("FIRST");

99 
wei
=0,
now
=0,
nid
=0;

100 
wei
=30; wei>=0; wei--)

101 if(
ªt
&
	`B
(
wei
))

103 
i
=0; i<
£g
.
	`size
(); i++)

105 if((
£g
[
i
].
l
)&
	`B
(
wei
))

107 
now
=
£g
[
i
].
l
;

108 
nid
=
£g
[
i
].i;

113 
™s
=
now
-(
ªt
^now),
l
,
r
,
é
;

114 if(
nid
>=
X
)

116 
nid
-=
X
;

117 
	`¥ötf
("%d %d ",0,
nid
);

118 
	`s‹t
(
yv
[
nid
].
	`begö
(),yv[nid].
	`íd
(),
cmp
);

119 
l
=
r
=
é
=0;

120 
i
=0; i<
yv
[
nid
].
	`size
(); i++)

122 
x
=
yv
[
nid
][
i
].
l
,
y
=yv[nid][i].
r
;

123 if(
x
>
r
)

125 
é
+=
x
-
r
;

126 
l
=
x
,
r
=
y
;

128 if(
y
>
r
)

129 
r
=
y
;

130 if(
é
>=
™s
)

132 
	`¥ötf
("%d %d\n",
l
-(
é
-
™s
),
nid
);

136 if(
é
<
™s
)

137 
	`¥ötf
("%d %d\n",
™s
-
é
+
r
,
nid
);

141 
	`¥ötf
("%d %d ",
nid
,0);

142 
	`s‹t
(
xv
[
nid
].
	`begö
(),xv[nid].
	`íd
(),
cmp
);

143 
l
=
r
=
é
=0;

144 
i
=0; i<
xv
[
nid
].
	`size
(); i++)

146 
x
=
xv
[
nid
][
i
].
l
,
y
=xv[nid][i].
r
;

147 if(
x
>
r
)

149 
é
+=
x
-
r
;

150 
l
=
x
,
r
=
y
;

152 if(
y
>
r
)

153 
r
=
y
;

154 if(
é
>=
™s
)

156 
	`¥ötf
("%d %d\n",
nid
,
l
-(
é
-
™s
));

160 if(
é
<
™s
)

161 
	`¥ötf
("%d %d\n",
nid
,
™s
-
é
+
r
);

165 
	`puts
("SECOND");

167 
	}
}

	@problems/codeforces/div1_codes/round174_div1/R174D1A.cpp

1 
	~<c°dio
>

2 
	#X
 1<<18

	)

4 
	tLL
;

6 
	snode
{ 
LL
 
	mx
,
	ma
; 
	ml
,
	mr
;

7 
gl
(){  
	mr
-
	ml
+1; }

8 }
	gno
[
X
<<2];

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
	$down
(
id
)

15 if(
no
[
id
].
a
!=0)

17 
no
[
	`L
(
id
)].
a
+=no[id].a;

18 
no
[
	`R
(
id
)].
a
+=no[id].a;

19 
no
[
id
].
a
=0;

21 
	}
}

23 
	$öô
(
id
,
l
,
r
)

25 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
a
Úo[id].
x
=0;

26 if(
l
==
r
) ;

27 
m
=(
l
+
r
)>>1;

28 
	`öô
(
	`L
(
id
),
l
,
m
);

29 
	`öô
(
	`R
(
id
),
m
+1,
r
);

30 
	}
}

32 
	$up
(
id
)

34 
no
[
id
].
x
Úo[
	`L
(id)].x+no[
	`R
(id)].x+no[L(id)].
a
*no[L(id)].
	`gl
()+no[R(id)].a*no[R(id)].gl();

35 
	}
}

37 
	$add
(
id
,
l
,
r
,
Œ
,
º
,
x
)

39 if(
Œ
<=
l
&&
º
>=
r
)

41 
no
[
id
].
a
+=
x
;

44 
m
=(
l
+
r
)>>1;

45 
	`down
(
id
);

46 if(
Œ
<=
m
&&
º
>=
l
)

47 
	`add
(
	`L
(
id
),
l
,
m
,
Œ
,
º
,
x
);

48 if(
Œ
<=
r
&&
º
>=
m
+1)

49 
	`add
(
	`R
(
id
),
m
+1,
r
,
Œ
,
º
,
x
);

50 
	`up
(
id
);

51 
	}
}

53 
LL
 
	$ˇl
(
id
,
l
,
r
,
Œ
,
º
)

55 if(
Œ
<=
l
&&
º
>=
r
)

56  
no
[
id
].
x
+no[id].
a
*(
r
-
l
+1);

57 
m
=(
l
+
r
)>>1;

58 
	`down
(
id
);

59 
LL
 
ªt
=0;

60 if(
Œ
<=
m
&&
º
>=
l
)

61 
ªt
+=
	`ˇl
(
	`L
(
id
),
l
,
m
,
Œ
,
º
);

62 if(
Œ
<=
r
&&
º
>=
m
+1)

63 
ªt
+=
	`ˇl
(
	`R
(
id
),
m
+1,
r
,
Œ
,
º
);

64 
	`up
(
id
);

65  
ªt
;

66 
	}
}

68 
	$upd©e
(
id
,
l
,
r
,
p
,
x
)

70 if(
l
==
r
)

72 
no
[
id
].
a
=0,no[id].
x
=x;

75 
m
=(
l
+
r
)>>1;

76 
	`down
(
id
);

77 if(
p
>
m
)

78 
	`upd©e
(
	`R
(
id
),
m
+1,
r
,
p
,
x
);

80 
	`upd©e
(
	`L
(
id
),
l
,
m
,
p
,
x
);

81 
	`up
(
id
);

82 
	}
}

84 
	$maö
()

86 
n
,
˙t
=1;

87 
	`öô
(1,1,
X
);

88 
	`sˇnf
("%d",&
n
);

89 
i
=0; i<
n
; i++)

91 
t
;

92 
	`sˇnf
("%d",&
t
);

93 if(
t
==1)

95 
a
,
x
;

96 
	`sˇnf
("%d%d",&
a
,&
x
);

97 
	`add
(1,1,
X
,1,
a
,
x
);

99 if(
t
==2)

101 
˙t
++;

102 
x
;

103 
	`sˇnf
("%d",&
x
);

104 
	`upd©e
(1,1,
X
,
˙t
,
x
);

108 if(
˙t
>=2)

110 
	`upd©e
(1,1,
X
,
˙t
,0);

111 
˙t
--;

114 
LL
 
sum
=
	`ˇl
(1,1,
X
,1,
˙t
);

115 
	`¥ötf
("%.12lf\n",1.0*
sum
/
˙t
);

118 
	}
}

	@problems/codeforces/div1_codes/round174_div1/R174D1B.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<ve˘‹
>

4 
	~<c°rög
>

5 
	#N
 200011

	)

7 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

10 
	ga
[
N
],
	gvis
[N<<1],
	gv
[N<<1],
	gT
;

11 
LL
 
	gdp
[
N
<<1];

12 
	gèg
[
N
<<1],
	gn
;

14 
	gve˘‹
<> 
	gå
[
N
<<1];

16 
ölöe
 
	$gë
(
i
){  i>
n
?i-n:i; 
	}
}

18 
	$dfs
(
now
)

20 
vis
[
now
]=1;

21 
v
[
now
]=
T
;

22 
dp
[
now
]=
a
[
	`gë
(now)];

23 
i
=0; i<
å
[
now
].
	`size
(); i++)

25 
to
=
å
[
now
][
i
];

26 if(
to
==1||to==
n
+1)

28 
èg
[
now
]=1;

31 if(
vis
[
to
])

33 if(
v
[
to
]==
T
)

35 
èg
[
now
]=1;

38 
èg
[
now
]=
	`max
—ag[now],èg[
to
]);

39 
dp
[
now
]+=dp[
to
];

42 if(
v
[
to
]==
T
)

44 
èg
[
now
]=1;

47 
	`dfs
(
to
);

48 
dp
[
now
]+=dp[
to
];

49 
èg
[
now
]=
	`max
—ag[now],èg[
to
]);

51 
	}
}

53 
	$maö
()

55 
	`sˇnf
("%d",&
n
);

56 
i
=2; i<=
n
; i++)

57 
	`sˇnf
("%d",&
a
[
i
]);

58 
i
=2; i<=
n
; i++)

60 if(
a
[
i
]+i>
n
) ;

64 
å
[
i
].
	`push_back
(
n
+
a
[i]+i);

67 
i
=
n
+2; i<=n+n; i++)

69 
ii
=
i
-
n
;

70 if(
ii
-
a
[ii]<=0);

74 
å
[
i
].
	`push_back
(
ii
-
a
[ii]);

77 
	`mem£t
(
èg
,0,(tag));

78 
	`mem£t
(
dp
,0,(dp));

79 
	`mem£t
(
vis
,0,(vis));

80 
	`mem£t
(
v
,0,(v));

81 
i
=1; i<=
n
+n; i++)

83 if(
i
==1||i==
n
+1) ;

84 if(!
vis
[
i
])

86 
T
=
i
;

87 
	`dfs
(
i
);

91 
i
=1; i<
n
; i++)

94 if(
èg
[
n
+
i
+1]==1)

95 
	`puts
("-1");

97 
cout
<<
dp
[
n
+
i
+1]+i<<
ídl
;

100 
	}
}

	@problems/codeforces/div1_codes/round174_div1/R174D1C.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#MOD
 1000000007

	)

5 
	#N
 303

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gm©
[
N
][N];

10 
	ga
[
N
],
	g˙t
[N],
	gvis
[N],
	gb
[N];

11 
	gn
,
	gq
,
	gt
;

12 
	gdp
[100100];

14 
	$dfs
(
now
,
x
)

16 
vis
[
now
]=1;

17 
˙t
[
now
]=0;

18 
i
=0; i<
n
; i++)

19 if(
m©
[
now
][
i
])

21 if(!
vis
[
i
])

22 
	`dfs
(
i
,
x
+
a
[
now
]);

23 
˙t
[
now
]=
	`max
(˙t[now],˙t[
i
]+1);

25 
	}
}

27 
	$gao
()

29 
i
=0; i<
n
; i++)

30 if(
m©
[
i
][i])

32 
	`mem£t
(
vis
,0,(vis));

33 
	`mem£t
(
˙t
,0,(cnt));

34 
	`mem£t
(
dp
,0,(dp));

35 
i
=0; i<
n
; i++)

36 if(!
vis
[
i
])

38 
	`dfs
(
i
,0);

40 
âl
=
t
;

41 
i
=0; i<
n
; i++)

43 
âl
-=
˙t
[
i
]*
a
[i];

44 if(
âl
<0)  0;

46 
i
=0; i<
n
; i++)

48 
b
[
i
]=
a
[i];

49 
j
=0; j<
n
; j++)

50 if(
m©
[
j
][
i
])

51 
b
[
i
]+=
a
[
j
];

53 
dp
[0]=1;

54 
i
=0; i<
n
; i++)

55 
j
=
b
[
i
]; j<=
âl
; j++)

56 
dp
[
j
]=(dp[j]+dp[j-
b
[
i
]])%
MOD
;

57  
dp
[
âl
];

58 
	}
}

60 
	$maö
()

62 
	`sˇnf
("%d%d%d",&
n
,&
q
,&
t
);

63 
i
=0; i<
n
; i++)

64 
	`sˇnf
("%d",&
a
[
i
]);

65 
i
=0; i<
q
; i++)

67 
x
,
y
;

68 
	`sˇnf
("%d%d",&
x
,&
y
);

69 
x
--,
y
--;

70 
m©
[
x
][
y
]=1;

72 
i
=0; i<
n
; i++)

73 
j
=0; j<
n
; j++)

74 
k
=0; k<
n
; k++)

75 if(
m©
[
j
][
i
]&&m©[i][
k
])

76 
m©
[
j
][
k
]=1;

77 
	`¥ötf
("%d\n",
	`gao
());

79 
	}
}

	@problems/codeforces/div1_codes/round176_div1/R176D1A.cpp

1 
	~<c°dio
>

2 
	#N
 100101

	)

4 
	g™s
[
N
];

6 
	$maö
()

8 
n
;

9 
	`sˇnf
("%d",&
n
)+1)

11 if((
n
%4==1)||(n%4==0))

13 
m
=0,
l
=1,
r
=
n
;

14 ; 
l
<
r
;)

16 
™s
[
l
]=l+1;

17 
™s
[
l
+1]=
n
-
m
;

18 
™s
[
r
]=
n
-
m
-1;

19 
™s
[
r
-1]=
m
+1;

20 
l
+=2,
r
-=2;

21 
m
+=2;

23 if(
l
==
r
)

24 
™s
[
l
]=l;

25 
i
=1; i<=
n
; i++)

26 
	`¥ötf
("%d ",
™s
[
i
]);

27 
	`puts
("");

30 
	`puts
("-1");

33 
	}
}

	@problems/codeforces/div1_codes/round176_div1/R176D1B.cpp

1 
	~<c°dio
>

2 
	#N
 2000101

	)

4 
	g™s
[
N
];

5 
	gn
;

7 
	$maö
()

9 
	`sˇnf
("%d",&
n
)+1)

11 
i
=1; i<=
n
; i++)

12 
™s
[
i
]=i;

13 
i
=2; i<=
n
; i++)

15 
d
=
n
%
i
;

16 if(
d
==0Ëd=
i
;

17 
™s
[
n
+
i
-1]˜ns[n+i-1-
d
];

18 
j
=
n
+
i
-1-
d
; j-i>=i-1; j-=i)

19 
™s
[
j
]˜ns[j-
i
];

21 
i
=
n
; i<=n+n-1; i++)

22 
	`¥ötf
("%d ",
™s
[
i
]);

23 
	`puts
("");

26 
	}
}

	@problems/codeforces/div1_codes/round176_div1/R176D1C.cpp

1 
	~<c°dio
>

2 
	#N
 1000100

	)

4 
	gp
[
N
],
	gt
[N],
	gn
,
	g°
[N];

6 
	$maö
()

8 
	`sˇnf
("%d",&
n
);

9 
i
=0; i<
n
; i++)

10 
	`sˇnf
("%d",&
p
[
i
]);

11 
m
;

12 
	`sˇnf
("%d",&
m
);

13 
i
=0; i<
m
; i++)

15 
x
;

16 
	`sˇnf
("%d",&
x
);

17 
t
[
x
-1]=1;

19 
t›
=-1;

20 
i
=
n
-1; i>=0; i--)

22 if(
t›
<0||
t
[
i
]||
p
[i]!=
°
[top])

23 
°
[++
t›
]=
p
[
i
],p[i]=-p[i];

24 --
t›
;

26 if(
t›
==-1)

28 
	`puts
("YES");

29 
i
=0; i<
n
; i++)

30 
	`¥ötf
("%d ",
p
[
i
]);

31 
	`puts
("");

33 
	`puts
("NO");

35 
	}
}

	@problems/codeforces/div1_codes/round180_div1/R180D1A.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1101

	)

5 
	ga
[
N
],
	gb
[N];

6 
	gœ
,
	glb
;

8 
	$ok
(
l
)

10 
i
=0; i<
l
; i++)

11 if(
b
[
i
]!=
a
[
œ
-
l
+i])

14 
	}
}

16 
	$gao
(
l
)

18 
ü
=0,
ib
=
l
,
ø
=
œ
-l,
˙t
=0;

19 
i
=0; i<
œ
; i++)

20 
˙t
+=
a
[
i
]-'0';

21 ; 
ü
<=
ø
&&
ib
<
lb
; ib++)

23 
èg
=0;

24 if(
b
[
ib
]=='0')

26 if(
˙t
&1)

28 if(
ü
==
ø
)  0;

29 ; 
ü
<
ø
; ia++)

31 if(
a
[
ü
]=='1')

33 
ü
++;

34 
˙t
^=1;

35 
èg
=1;

39 if(
èg
==0)  0;

44 if(
˙t
&1)

45 
˙t
^=1;

48 if(
ü
==
ø
)  0;

49 ; 
ü
<
ø
; ia++)

50 if(
a
[
ü
]=='1')

52 
ü
++;

53 
èg
=1;

56 if(
èg
==0)  0;

60  
ib
>=
lb
;

61 
	}
}

63 
	$maö
()

65 
	`sˇnf
("%s%s",
a
,
b
);

66 
œ
=
	`°æí
(
a
);

67 
lb
=
	`°æí
(
b
);

68 
i
=0; i<=
œ
&&i<=
lb
; i++) {

69 if(
	`ok
(
i
))

71 if(
	`gao
(
i
))

73 
	`puts
("YES");

78 
	`puts
("NO");

80 
	}
}

	@problems/codeforces/div1_codes/round180_div1/R180D1B.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gve˘‹
<> 
	ga
;

8 
	gve˘‹
<> 
	gb
;

10 
	$cmp
(
a
,
b
){ á<b; 
	}
}

11 
	gn
,
	gm
;

13 
	$gao
()

15 if(
n
>
m
)

17 
i
=0; i<
n
; i++)

19 if(
a
[
n
-
i
-1]>
b
[
m
-i-1])  1;

22 
	}
}

24 
	$maö
()

26 
k
;

27 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)+1)

29 
i
=0; i<
n
; i++)

31 
x
;

32 
	`sˇnf
("%d",&
x
);

33 
a
.
	`push_back
(
x
);

35 
i
=0; i<
m
; i++)

37 
x
;

38 
	`sˇnf
("%d",&
x
);

39 
b
.
	`push_back
(
x
);

41 
	`s‹t
(
a
.
	`begö
(),a.
	`íd
(),
cmp
);

42 
	`s‹t
(
b
.
	`begö
(),b.
	`íd
(),
cmp
);

43 if(
	`gao
())

44 
	`puts
("YES");

46 
	`puts
("NO");

49 
	}
}

	@problems/codeforces/div1_codes/round180_div1/R180D1C.cpp

1 
	~<c°dio
>

2 
	#N
 100010

	)

4 
	snode
{ 
	mv
,
	mi
; }
	gno
[
N
];

5 
	ga
[
N
],
	gb
[N],
	gèg
[N];

7 
	$cmp
(
node
 
a
,nodê
b
){ á.
v
<b.v; 
	}
}

9 
	$maö
()

11 
n
;

12 
	`sˇnf
("%d",&
n
);

13 
i
=0; i<
n
; i++)

15 
	`sˇnf
("%d",&
no
[
i
].
v
);

16 
no
[
i
].i=i;

18 
	`s‹t
(
no
,no+
n
,
cmp
);

19 
i
=1; i<
n
; i++)

21 if(
no
[
i
].
v
==no[i-1].v+1)

22 
èg
[
i
]=1;

24 
ai
=-1,
bi
=-1;

25 
i
=0; i<
n
; i++)

27 
x
=
no
[
i
].
v
,
id
=no[i].i;

28 if(
èg
[
i
])

33 if(
ai
==-1)

35 
ai
=
x
/2;

36 
bi
=
x
-
ai
;

39 
ai
++,
bi
-
x
-ai;

40 
a
[
id
]=
ai
;

41 
b
[
id
]=
bi
;

45 
	}
}

	@problems/codeforces/div1_codes/round94/round94_div1_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 101000

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gd©
[
N
];

32 
	$cmp
(
a
,
b
){ á<b; 
	}
}

34 
	$put_YES
(
n
)

36 
j
=0,
¥e
=0,
now
;

37 
i
=0; i<
n
; i=
j
)

39 ; 
j
<
n
&&
d©
[j]==d©[
i
]; j++);

40 if(
d©
[
j
]-d©[
i
]>1)

42 
now
=
j
-
i
;

44 if(
j
==
n
)

45  
now
==
¥e
;

46 if(
now
<=
¥e
)

48 
now
-=
¥e
;

49 
¥e
=
now
;

52 
	}
}

54 
	$maö
()

56 
n
;

57 
	`sˇnf
("%d",&
n
)!=
EOF
)

59 
i
=0; i<
n
; i++)

60 
	`sˇnf
("%d",&
d©
[
i
]);

61 
	`s‹t
(
d©
,d©+
n
,
cmp
);

62 if(
	`put_YES
(
n
))

63 
	`puts
("YES");

65 
	`puts
("NO");

68 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r167/R167D2A.cpp

1 
	~<c°dio
>

3 
	$maö
()

5 
n
;

6 
	`sˇnf
("%d",&
n
)+1)

8 
s
=0;

9 
i
=0; i<
n
; i++)

11 
x
;

12 
	`sˇnf
("%d",&
x
);

13 
s
+=
x
;

15 
ªt
=0;

16 
i
=1; i<=5; i++)

18 if((
s
+
i
)%(
n
+1)!=1)

19 
ªt
++;

21 
	`¥ötf
("%d\n",
ªt
);

24 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r167/R167D2B.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<m≠
>

4 
	#N
 101000

	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
	g¨r
[
N
];

10 
	gm≠
<,> 
	gmp
;

11 
	gm≠
<,>::
ôî©‹
 
ô
;

13 
	$f
(
x
) {

14 if(
x
==0)  0;

15 if(
x
&1Ë 
	`f
(x>>1)+1;

16  
	`f
(
x
>>1);

17 
	}
}

19 
	$maö
() {

20 
n
;

21 
	`sˇnf
("%d",&
n
);

22 
i
=0; i<
n
; i++) {

23 
	`sˇnf
("%d",&
¨r
[
i
]);

24 
¨r
[
i
]=
	`f
(arr[i]);

26 
i
=0; i<
n
; i++)

27 
mp
[
¨r
[
i
]]++;

28 
LL
 
ªt
=0;

29 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++) {

30 
x
=
ô
->
£c⁄d
;

31 
ªt
Ùë+1LL*
x
*(x-1)/2;

33 
cout
<<
ªt
<<
ídl
;

35 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r167/R167D2C.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	#N
 100100

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	ga
[
N
];

11 
	$maö
() {

12 
n
;

13 
	`sˇnf
("%d",&
n
);

14 
i
=1; i<=
n
; i++) {

15 
	`sˇnf
("%d",&
a
[
i
]);

17 
m
;

18 
LL
 
now
=0;

19 
	`sˇnf
("%d",&
m
);

20 
i
=1; i<=
m
; i++) {

21 
w
,
h
;

22 
	`sˇnf
("%d%d",&
w
,&
h
);

23 
LL
 
™s
=
	`max
(1LL*
a
[
w
],
now
);

24 
cout
<<
™s
<<
ídl
;

25 
now
=
™s
+
h
;

28 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r167/R167D2D.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<m≠
>

4 
	#N
 100010

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	ga
[
N
],
	gb
[N];

10 
	gm≠
<,> 
	gmp
;

11 
	gm≠
<,>::
ôî©‹
 
ô
;

13 
	$maö
() {

14 
n
,
m
,
two
;

15 
	`sˇnf
("%d",&
n
);

16 
i
=0; i<
n
; i++) {

17 
	`sˇnf
("%d",&
a
[
i
]);

18 
mp
[
a
[
i
]]++;

20 
i
=0; i<
n
; i++) {

21 
	`sˇnf
("%d",&
b
[
i
]);

22 
mp
[
b
[
i
]]++;

24 
two
=0;

25 
i
=0; i<
n
; i++)

26 if(
a
[
i
]==
b
[i])

27 
two
++;

28 
	`sˇnf
("%d",&
m
);

29 
LL
 
ªt
=1;

30 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++) {

31 
i
=1; i<=
ô
->
£c⁄d
; i++) {

32 
x
=
i
;

33 ; 
two
>0&&(!(
x
&1));)

34 
x
>>=1,
two
--;

35 
ªt
Ùë*
x
%
m
;

38 
cout
<<
ªt
<<
ídl
;

40 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r167/R167D2E.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#N
 300101

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gve˘‹
<> 
	ggr
[
N
];

9 
	gªt
[
N
];

11 
	$dfs
(
x
) {

12 
˙t
=0;

13 
i
=0; i<
gr
[
x
].
	`size
(); i++)

14 if(
ªt
[
gr
[
x
][
i
]]==ret[x])

15 
˙t
++;

16 if(
˙t
>=2) {

17 
ªt
[
x
]^=1;

18 
i
=0; i<
gr
[
x
].
	`size
(); i++)

19 if(
ªt
[
gr
[
x
][
i
]]==ret[x])

20 
	`dfs
(
gr
[
x
][
i
]);

22 
	}
}

24 
	$maö
() {

25 
n
,
m
;

26 
	`mem£t
(
ªt
,0,(ret));

27 
	`sˇnf
("%d%d",&
n
,&
m
);

28 
i
=0; i<
m
; i++) {

29 
x
,
y
;

30 
	`sˇnf
("%d%d",&
x
,&
y
);

31 
x
--,
y
--;

32 
gr
[
x
].
	`push_back
(
y
);

33 
gr
[
y
].
	`push_back
(
x
);

35 
i
=0; i<
n
; i++)

36 
	`dfs
(
i
);

37 
i
=0; i<
n
; i++)

38 
	`¥ötf
("%d",
ªt
[
i
]);

39 
	`puts
("");

41 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r211/a.cpp

1 
	~<c°dio
>

3 
	$døw
(
x
) {

4 if(
x
>=5) {

5 
x
-=5;

6 
	`¥ötf
("-O|");

9 
	`¥ötf
("O-|");

11 
i
=0; i<
x
; i++)

12 
	`¥ötf
("O");

13 
	`¥ötf
("-");

14 
i
=0; i<4-
x
; i++)

15 
	`¥ötf
("O");

16 
	`puts
("");

17 
	}
}

19 
	$maö
() {

20 
n
;

21 
	`sˇnf
("%d",&
n
)+1) {

22 if(
n
==0)

23 
	`puts
("O-|-OOOO");

24 ; 
n
;) {

25 
x
=
n
%10;

26 
	`døw
(
x
);

27 
n
/=10;

31 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r211/b.cpp

1 
	~<c°dio
>

2 c⁄° 
	gN
 = 1000000;

4 
	g¨r
[
N
],
	gsum
[N];

6 
	$maö
() {

7 
n
,
k
;

8 
	`sˇnf
("%d%d",&
n
,&
k
)+1) {

9 
i
=1; i<=
n
; i++) {

10 
	`sˇnf
("%d",&
¨r
[
i
]);

12 
sum
[1]=
¨r
[1];

13 
sum
[0]=0;

14 
i
=2; i<=
n
; i++)

15 
sum
[
i
]=sum[i-1]+
¨r
[i];

16 
mi
=
sum
[
k
],
id
=k;

17 
i
=
k
+1; i<=
n
; i++) {

18 if(
sum
[
i
]-sum[i-
k
]<
mi
) {

19 
mi
=
sum
[
i
]-sum[i-
k
];

20 
id
=
i
;

23 
	`¥ötf
("%d\n",
id
-
k
+1);

26 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r211/c.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<°rög
>

4 
	~<io°ªam
>

6 c⁄° 
	gN
 = 201111;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gèg
[
N
];

11 
	$maö
() {

12 
°rög
 
s
;

13 
cö
>>
s
) {

14 
pc
=1;

15 
¥e
=
s
[0];

16 
	`mem£t
(
èg
,0,(tag));

17 
i
=1; i<
s
.
	`Àngth
(); i++) {

18 if(
s
[
i
]==
¥e
) {

19 
pc
++;

22 if(
pc
>=3) {

23 
j
=
i
-
pc
+2; j<i; j++) {

24 
èg
[
j
]=1;

27 
¥e
=
s
[
i
];

28 
pc
=1;

31 if(
pc
>=3) {

32 
j
=
s
.
	`Àngth
()-
pc
+2; j<s.length(); j++)

33 
èg
[
j
]=1;

35 
°rög
 
ss
=
	`°rög
("");

36 
i
=0; i<
s
.
	`Àngth
(); i++) {

37 if(
èg
[
i
]) ;

38 
ss
.
	`push_back
(
s
[
i
]);

40 
pc
=0;

41 
	`mem£t
(
èg
,0,(tag));

42 
i
=0; i<
ss
.
	`Àngth
()-1; ) {

43 if(
ss
[
i
]==ss[i+1]) {

44 
pc
++;

45 if((
pc
&1)==0) {

46 
èg
[
i
]=1;

48 
i
+=2;

51 
pc
=0;

52 
i
++;

55 
i
=0; i<
ss
.
	`Àngth
(); i++) {

56 if(
èg
[
i
]) ;

57 
	`¥ötf
("%c",
ss
[
i
]);

59 
	`puts
("");

62 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r211/d.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

5 c⁄° 
	gN
 = 100111;

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gb
[
N
],
	gp
[N],
	gâl
;

10 
	gn
,
	gm
,
	gu£
;

12 
	$ok
(
k
) {

13 if(
k
>
m
)  0;

14 
tmp
=
âl
;

15 
u£
=0;

16 
i
=0; i<
k
; i++) {

17 if(
b
[
n
-1-
i
]>=
p
[
k
-i-1]) {

21 if(
b
[
n
-1-
i
]+
tmp
>=
p
[
k
-i-1]) {

22 
tmp
-=
p
[
k
-
i
-1]-
b
[
n
-1-i];

23 
u£
+=
p
[
k
-
i
-1]-
b
[
n
-1-i];

30 
	}
}

32 
	$maö
() {

33 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
âl
)+1) {

34 
l
=1,
r
=
n
;

35 
i
=0; i<
n
; i++) {

36 
	`sˇnf
("%d",&
b
[
i
]);

38 
i
=0; i<
m
; i++) {

39 
	`sˇnf
("%d",&
p
[
i
]);

41 
	`s‹t
(
b
,b+
n
);

42 
	`s‹t
(
p
,p+
m
);

43 ; 
l
<=
r
;) {

44 
mid
=(
l
+
r
)>>1;

45 if(
	`ok
(
mid
))

46 
l
=
mid
+1;

48 
r
=
mid
-1;

50 
	`ok
(
r
);

51 
LL
 
ªt
=0,
r2
=0;

52 
i
=0; i<
r
; i++) {

53 
ªt
+=
p
[
i
];

55 if(
ªt
>=
âl
)

56 
cout
<<
r
<<" "<<
ªt
-
âl
<<
ídl
;

58 
cout
<<
r
<<" "<<0<<
ídl
;

60 
	}
}

	@problems/codeforces/div2_codes/cf_div2_r211/e.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	~<cm©h
>

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 c⁄° 
	gN
 = 511;

11 
	gv
[
N
][N],
	gs
[N][N],
	gd
[N],
	gnx
[N],
	gsum
[N][N],
	gmxl
[N][N],
	gmxlc
[N][N],
	gmxr
[N][N],
	gmxrc
[N][N];

13 
	$maö
() {

14 
m
,
n
,
r
;

15 
	`sˇnf
("%d%d%d",&
m
,&
n
,&
r
)+1) {

16 
i
=1; i<=
m
; i++) {

17 
s
[
i
][0]=0;

18 
j
=1; j<=
n
; j++) {

19 
	`sˇnf
("%d",&
v
[
i
][
j
]);

20 
s
[
i
][
j
]=s[i][j-1]+
v
[i][j];

23 
i
=0; i<=
r
; i++) {

24 
j
=0;

25 ; 
j
<=
r
; j++)

26 if(
i
*i+
j
*j>
r
*r)

28 
d
[
i
]=
j
-1;

30 
i
=0; i<2*
r
+1; i++) {

31 
now
=0;

32 
j
=0; j<=
r
&&j<=
i
; j++) {

33 if(
i
-
j
>
r
) ;

34 
now
=
	`max
“ow,
d
[
j
]+d[
i
-j]+1);

36 
nx
[
i
]=
now
;

38 
i
=
r
+1; i<=
m
-r; i++) {

39 
mxl
[
i
][
r
]=0;

40 
mxlc
[
i
][
r
]=0;

41 
mxr
[
i
][
n
-
r
+1]=0;

42 
mxrc
[
i
][
n
-
r
+1]=0;

43 
j
=
r
+1; j<=
n
-r; j++) {

44 
sum
[
i
][
j
]=0;

45 
k
=-
r
; k<=r; k++) {

46 
sum
[
i
][
j
]+=
s
[i+
k
][j+
d
[
	`abs
(k)]]-s[i+k][j-d[abs(k)]-1];

48 if(
sum
[
i
][
j
]>
mxl
[i][j-1]) {

49 
mxl
[
i
][
j
]=
sum
[i][j];

50 
mxlc
[
i
][
j
]=1;

51 } if(
sum
[
i
][
j
]==
mxl
[i][j-1]) {

52 
mxl
[
i
][
j
]=mxl[i][j-1];

53 
mxlc
[
i
][
j
]=mxlc[i][j-1]+1;

55 
mxl
[
i
][
j
]=mxl[i][j-1];

56 
mxlc
[
i
][
j
]=mxlc[i][j-1];

59 
j
=
n
-
r
; j>=r+1; j--) {

60 if(
sum
[
i
][
j
]>
mxr
[i][j+1]) {

61 
mxr
[
i
][
j
]=
sum
[i][j];

62 
mxrc
[
i
][
j
]=1;

63 } if(
sum
[
i
][
j
]==
mxr
[i][j+1]) {

64 
mxr
[
i
][
j
]=mxr[i][j+1];

65 
mxrc
[
i
][
j
]=mxrc[i][j+1]+1;

67 
mxr
[
i
][
j
]=mxr[i][j+1];

68 
mxrc
[
i
][
j
]=mxrc[i][j+1];

72 
LL
 
ªt
=0,
rc
=0;

73 
i
=
r
+1; i<=
m
-r; i++) {

74 
j
=
r
+1; j<=
n
-r; j++) {

75 
k
=
r
+1; k<=
m
-r; k++) {

76 
now
;

77 if(
	`abs
(
k
-
i
)>2*
r
) {

78 
now
=
sum
[
i
][
j
]+
mxr
[
k
][
r
+1];

79 if(
ªt
<
now
) {

80 
ªt
=
now
;

81 
rc
=
mxrc
[
k
][
r
+1];

82 } if(
ªt
==
now
) {

83 
rc
+=
mxrc
[
k
][
r
+1];

86 
y
=
j
+
nx
[
	`abs
(
k
-
i
)];

87 if(
y
<=
n
-
r
) {

88 
now
=
sum
[
i
][
j
]+
mxr
[
k
][
y
];

89 if(
ªt
<
now
) {

90 
ªt
=
now
;

91 
rc
=
mxrc
[
k
][
y
];

92 } if(
ªt
==
now
) {

93 
rc
+=
mxrc
[
k
][
y
];

96 
y
=
j
-
nx
[
	`abs
(
k
-
i
)];

97 if(
y
>=
r
+1) {

98 
now
=
sum
[
i
][
j
]+
mxl
[
k
][
y
];

99 if(
ªt
<
now
) {

100 
ªt
=
now
;

101 
rc
=
mxlc
[
k
][
y
];

102 } if(
ªt
==
now
) {

103 
rc
+=
mxlc
[
k
][
y
];

110 
cout
<<
ªt
<<" "<<
rc
/2<<
ídl
;

113 
	}
}

	@problems/codeforces/div2_codes/cf_r254_d2/a.cpp

1 
	~<c°dio
>

3 
	gs
[1001][1001],
	gr
[1001][1001];

5 
	$maö
() {

6 
n
,
m
;

7 
	`sˇnf
("%d%d",&
n
,&
m
)+1) {

8 
i
=0; i<
n
; i++) {

9 
	`sˇnf
("%s",
s
[
i
]);

11 
i
=0; i<
n
; i++) {

12 
j
=0; j<
m
; j++) {

13 if(
s
[
i
][
j
]=='-') {

14 
r
[
i
][
j
]='-';

16 if((
i
+
j
)&1) {

17 
r
[
i
][
j
]='B';

19 
r
[
i
][
j
]='W';

24 
i
=0; i<
n
; i++,
	`puts
("")) {

25 
j
=0; j<
m
; j++) {

26 
	`¥ötf
("%c",
r
[
i
][
j
]);

31 
	}
}

	@problems/codeforces/div2_codes/cf_r254_d2/b.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<Æg‹ôhm
>

4 
	~<c°rög
>

5 
	~<io°ªam
>

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gve˘‹
<> 
	gå
[55];

10 
	gvis
[55];

12 
	$dfs
(
now
) {

13 
vis
[
now
]=1;

14 
ªt
=1;

15 
i
=0; i<
å
[
now
].
	`size
(); i++) {

16 
to
=
å
[
now
][
i
];

17 if(
vis
[
to
]) {

20 
ªt
Ùë+
	`dfs
(
to
);

22  
ªt
;

23 
	}
}

25 
	$maö
() {

26 
n
,
m
;

27 
	`sˇnf
("%d%d",&
n
,&
m
)+1) {

28 
i
=0; i<
n
; i++) {

29 
å
[
i
].
	`˛ór
();

31 
i
=0; i<
m
; i++) {

32 
x
,
y
;

33 
	`sˇnf
("%d%d",&
x
,&
y
);

34 
å
[
x
-1].
	`push_back
(
y
-1);

35 
å
[
y
-1].
	`push_back
(
x
-1);

37 
™s
=0;

38 
	`mem£t
(
vis
,0,(vis));

39 
i
=0; i<
n
; i++) {

40 if(!
vis
[
i
]) {

41 
™s
˜ns+(
	`dfs
(
i
)-1);

44 
cout
<<(1LL<<
™s
)<<
ídl
;

47 
	}
}

	@problems/codeforces/div2_codes/cf_r254_d2/c.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

4 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gN
 = 1001;

8 
	gv
[
N
];

10 
	$maö
() {

11 
n
,
m
;

12 
	`sˇnf
("%d%d",&
n
,&
m
)+1) {

13 
ªt
=0;

14 
i
=0; i<
n
; i++)

15 
	`sˇnf
("%d",&
v
[
i
]);

16 
i
=0; i<
m
; i++) {

17 
x
,
y
,
z
;

18 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

19 
ªt
=
	`max
‘ë,1.0*(
v
[
x
-1]+v[
y
-1])/
z
);

21 
	`¥ötf
("%.13lf\n",
ªt
);

24 
	}
}

	@problems/codeforces/div2_codes/round103/round103_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	snode


41 
	mx
,
	my
,
	mi
;

42 
‰õnd
 
	m›î©‹
<(
node
 
	ma
,nodê
	mb
)

44  
	ma
.
	my
>
	mb
.y;

46 }
	gp
[
N
];

47 
	g¥i‹ôy_queue
<
	gnode
> 
	gq
;

48 
	gcho
[
N
],
	gn
,
	gm
;

50 
	$cmp
(
node
 
a
,nodê
b
)

52  
a
.
x
>
b
.x;

53 
	}
}

55 
	$maö
()

57 
x
,
y
,
l
,
r
,
ªt
;

58 
	`sˇnf
("%d%d",&
n
,&
m
);

59 
	`mem£t
(
cho
,0,(0));

60 
i
=0; i<
m
; i++)

62 
	`sˇnf
("%d%d",&
x
,&
y
);

63 
p
[
i
].
x
=x,p[i].
y
=y;

64 
p
[
i
].i=i+1;

66 
	`s‹t
(
p
,p+
m
,
cmp
);

67 
j
=0;

68 
i
=1; i<=
n
; i++)

70 ; 
n
+1-
p
[
j
].
x
<=
i
&&j<
m
; j++)

71 
q
.
	`push
(
p
[
j
]);

72 ; !
q
.
	`em±y
()&&q.
	`t›
().
y
<
i
; )

73 
q
.
	`p›
();

74 if(!
q
.
	`em±y
())

76 
cho
[
q
.
	`t›
().
i
]=1;

77 
q
.
	`p›
();

80 
ªt
=0;

81 
i
=1; i<=
m
; i++)

82 if(
cho
[
i
])

83 
ªt
++;

84 
	`¥ötf
("%d\n",
ªt
);

85 
i
=1; i<=
m
; i++)

86 if(
cho
[
i
])

87 
	`¥ötf
("%d ",
i
);

88 
	`puts
("");

90 
	}
}

	@problems/codeforces/div2_codes/round105/round105_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gªt
[
N
],
	gt›
,
	gn
,
	ga
,
	gb
;

41 
	$ok
()

43 
now
,
s
,
¬n
=
n
;

44 
t›
=0;

45 if(
b
==0)

47 
ªt
[0]=2;

48 
t›
=1;

49 if(
n
==1)

51 if(
a
==0)

57 
ªt
[1]=1,
t›
=2,
now
=3,
s
=3,
n
-=2;

61 if(
n
==1)

64 
ªt
[0]=1,ªt[1]=2,
now
=3,
t›
=2,
s
=3,
b
--,
n
-=2;

66 
j
=1; j<=
b
; j++)

68 if(
s
+1>50000)

70 
ªt
[
t›
++]=
s
+1,
now
=s+2,s+=s+1;

72 
j
=1; j<=
a
; j++)

74 if(
now
>50000)

76 
ªt
[
t›
++]=
now
,
s
+=now,now++;

78 
j
=1; j<=
n
-
a
-
b
; j++)

79 
ªt
[
t›
++]=1;

80 if(
t›
>
¬n
)

83 
	}
}

85 
	$maö
()

87 
	`sˇnf
("%d%d%d",&
n
,&
a
,&
b
);

88 if(
	`ok
())

90 
i
=0; i<
t›
; i++)

91 
	`¥ötf
("%d ",
ªt
[
i
]);

92 
	`puts
("");

95 
	`puts
("-1");

97 
	}
}

	@problems/codeforces/div2_codes/round105/round105_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gdp
[
N
][N][2];

41 
	$dfs
(
w
,
b
,
u
)

44 if(
dp
[
w
][
b
][
u
]>=0)

45  
dp
[
w
][
b
][
u
];

46 
ªt
=0;

47 if(
w
==0)

48  
dp
[
w
][
b
][
u
]=0;

49 if(
u
==0)

51 
ªt
+=1.0*
w
/(w+
b
);

52 if(
b
>0)

53 
ªt
+=1.0*
b
/(
w
+b)*
	`dfs
(w,b-1,
u
^1);

57 if(
b
>0)

59 
ªt
+=1.0*
b
/(
w
+b)*w/(w+b-1)*
	`dfs
(w-1,b-1,
u
^1);

60 if(
b
>1)

61 
ªt
+=1.0*
b
/(
w
+b)*(b-1)/(w-1+b)*
	`dfs
(w,b-2,
u
^1);

64  
dp
[
w
][
b
][
u
]=
ªt
;

65 
	}
}

67 
	$maö
()

69 
w
,
b
;

70 
	`sˇnf
("%d%d",&
w
,&
b
);

71 
i
=0; i<=
w
; i++)

72 
j
=0; j<=
b
; j++)

73 
dp
[
i
][
j
][0]=dp[i][j][1]=-1;

74 
	`¥ötf
("%.9lf\n",
	`dfs
(
w
,
b
,0));

76 
	}
}

	@problems/codeforces/div2_codes/round105/round105_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gdp
[111][11000],
	gn
,
	gd©
[111][111],
	glsum
[111][111],
	grsum
[111][111],
	gbe°_s
[111][111];

41 
	$dfs
(
id
,
m
)

43 
ªt
=0,
a
,
b
;

44 if(
dp
[
id
][
m
]>=0)

45  
dp
[
id
][
m
];

46 if(
id
==
n
)

47  
dp
[
id
][
m
]=0;

48 if(
m
==0)

49  
dp
[
id
][
m
]=0;

50 
i
=0; i<=
d©
[
id
][0]&&i<=
m
; i++)

51 
ªt
=
	`max
‘ë,
	`dfs
(
id
+1,
m
-
i
)+
be°_s
[id][i]);

52  
dp
[
id
][
m
]=
ªt
;

53 
	}
}

55 
	$maö
()

57 
m
,
tmp
=0;

58 
	`mem£t
(
dp
,-1,(dp));

59 
	`sˇnf
("%d%d",&
n
,&
m
);

60 
i
=0; i<
n
; i++)

62 
	`sˇnf
("%d",&
d©
[
i
][0]);

63 
lsum
[
i
][0]=0;

64 
rsum
[
i
][
d©
[i][0]+1]=0;

65 
j
=1; j<=
d©
[
i
][0]; j++)

67 
	`sˇnf
("%d",&
d©
[
i
][
j
]);

68 
lsum
[
i
][
j
]ˆsum[i][j-1]+
d©
[i][j];

70 
j
=
d©
[
i
][0]+1; j>=1; j--)

71 
rsum
[
i
][
j
]Ùsum[i][j+1]+
d©
[i][j];

73 
i
=0; i<
n
; i++)

75 
j
=0; j<=
d©
[
i
][0]; j++)

77 
tmp
=0;

78 
k
=0; k<=
j
; k++)

79 
tmp
=
	`max
—mp,
lsum
[
i
][
k
]+
rsum
[i][
d©
[i][0]+1-
j
+k]);

80 
be°_s
[
i
][
j
]=
tmp
;

94 
	`¥ötf
("%d\n",
	`dfs
(0,
m
));

96 
	}
}

	@problems/codeforces/div2_codes/round105/round105_div2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	$maö
()

32 
f
,
c
,
t
,
a
,
b
,
l
; 
ªt
=0;

33 
	`sˇnf
("%lf%lf%lf%lf%lf",&
a
,&
b
,&
t
,&
f
,&
c
)!=
EOF
)

35 
l
=
a
*
t
;

36 
ªt
=0;

37 ; 
l
<
c
&&
a
<
b
; )

39 
x
=
l
/(
b
-
a
);

40 if(
l
+
a
*
x
>=
c
) ;

41 
ªt
++;

42 
l
ˆ+
a
*(
x
+
f
+x);

44 
	`¥ötf
("%d\n",
ªt
);

47 
	}
}

	@problems/codeforces/div2_codes/round107/round107_div2_E.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	~<cm©h
>

5 
	~<queue
>

6 
	#ïs
 1e-8

	)

7 
	#öf
 0x3fffffff

	)

8 
	#N
 200011

	)

9 
	tLL
;

10 
usög
 
«me•a˚
 
	g°d
;

12 
	s£gåì
{ 
	ml
,
	mr
; 
LL
 
	mlx
,
	mrx
,
	mmx
; }
	g£g
[
N
<<2],
	gªt
;

13 
	gn
,
	gm
,
	gc
,
	gx
[
N
];

14 
LL
 
	gvÆ
[
N
],
	gsum
;

16 
	$L
(
i
){  i<<1; 
	}
}

17 
	$R
(
i
){  i<<1|1; 
	}
}

19 
	$buûd
(
id
,
l
,
r
)

21 
m
=(
l
+
r
)>>1;

22 
£g
[
id
].
l
ˆ,£g[id].
r
=r;

23 if(
l
==
r
)

25 
£g
[
id
].
mx
=£g[id].
lx
=£g[id].
rx
=
	`max
(0LL,
vÆ
[
l
]-val[l-1]);

28 
	`buûd
(
	`L
(
id
),
l
,
m
);

29 
	`buûd
(
	`R
(
id
),
m
+1,
r
);

30 
£g
[
id
].
mx
=
	`max
(max(£g[
	`L
(id)].mx,£g[
	`R
(id)].mx),£g[L(id)].
rx
+£g[R(id)].
lx
);

31 
£g
[
id
].
lx
=
	`max
(£g[
	`L
(id)].lx,£g[
	`R
(id)].lx+
vÆ
[
m
]-vÆ[
l
-1]);

32 
£g
[
id
].
rx
=
	`max
(£g[
	`R
(id)].rx,£g[
	`L
(id)].rx+
vÆ
[
r
]-vÆ[
m
]);

33 
	}
}

35 
	$quîy
(
id
,
Œ
,
º
)

37 
l
=
£g
[
id
].l,
r
=£g[id].r,
m
=(l+r)>>1;

38 if(
l
>=
Œ
&&
r
<=
º
)

40 if(
ªt
.
mx
==-1)

41 
ªt
=
£g
[
id
],
sum
=
vÆ
[
r
]-vÆ[
l
-1];

44 
ªt
.
mx
=
	`max
‘ë.mx,max(
£g
[
id
].mx,£g[id].
lx
+ªt.
rx
));

45 
ªt
.
lx
=
	`max
‘ë.lx,
sum
+
£g
[
id
].lx);

46 
ªt
.
rx
=
	`max
(
£g
[
id
].rx,
vÆ
[
r
]-vÆ[
l
-1]+ret.rx);

47 
sum
+=
vÆ
[
r
]-vÆ[
l
-1];

51 if(
m
>=
Œ
)

52 
	`quîy
(
	`L
(
id
),
Œ
,
º
);

53 if(
m
+1<=
º
)

54 
	`quîy
(
	`R
(
id
),
Œ
,
º
);

55 
	}
}

57 
	$maö
()

59 
p
;

60 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
c
);

61 
i
=0; i<
n
; i++)

62 
	`sˇnf
("%d",&
x
[
i
]);

63 
vÆ
[0]=0;

64 
i
=1; i<
n
; i++)

66 
	`sˇnf
("%d",&
p
);

67 
vÆ
[
i
]=vÆ[i-1]+(
x
[i]-x[i-1])*50LL-1LL*
p
*
c
;

74 
	`buûd
(1,1,
n
-1);

75 
l
,
r
;

76 
º
=0;

77 
i
=0; i<
m
; i++)

79 
	`sˇnf
("%d%d",&
l
,&
r
);

80 
ªt
.
mx
=-1;

81 
sum
=0;

82 
	`quîy
(1,
l
,
r
-1);

83 
º
+=
ªt
.
mx
;

86 
	`¥ötf
("%.6lf\n",
º
/100);

88 
	}
}

	@problems/codeforces/div2_codes/round108/round108_A.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 110

	)

4 
	gs
[
MAXN
][MAXN];

5 
	gmax
[
MAXN
];

7 
	$maö
()

9 
	`mem£t
(
max
,0,(max));

10 
n
,
m
,
i
,
j
,
ªt
;

11 
	`sˇnf
("%d%d",&
n
,&
m
);

12 
i
=0; i<
n
; i++)

13 
	`sˇnf
("%s",
s
[
i
]);

14 
j
=0; j<
m
; j++)

15 
i
=0; i<
n
; i++)

16 if(
s
[
i
][
j
]>
max
[j])

17 
max
[
j
]=
s
[
i
][j];

18 
ªt
=
i
=0; i<
n
; i++)

20 
j
=0; j<
m
; j++)

21 if(
s
[
i
][
j
]==
max
[j])

23 
ªt
++;

27 
	`¥ötf
("%d\n",
ªt
);

29 
	}
}

	@problems/codeforces/div2_codes/round108/round108_B.cpp

1 
	~<c°dio
>

2 
	tLL
;

3 
	gn
,
	gm
;

5 
ölöe
 
	$öbﬂrd
(
x
,
y
)

7  1<=
x
&&x<=
n
&&1<=
y
&&y<=
m
;

8 
	}
}

10 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

11 
ölöe
 
	$abs
(
a
){ á>0?a:-a; 
	}
}

13 
LL
 
	$ˇl
(&
x
,&
y
,
dx
,
dy
)

15 
LL
 
mul
=0; 
absx
,
absy
,
xx
,
yy
;

16 
absx
=
	`abs
(
dx
); 
absy
˜bs(
dy
);

17 if(
dx
>=0&&
dy
>=0)

18 
xx
=
n
-
x
,
yy
=
m
-
y
;

19 if(
dx
>0)

20 
xx
=
n
-
x
,
yy
=
y
-1;

21 if(
dy
>0)

22 
xx
=
x
-1,
yy
=
m
-
y
;

24 
xx
=
x
-1,
yy
=
y
-1;

26 if(
dx
==0)

27 
mul
=
yy
/
absy
;

28 if(
dy
==0)

29 
mul
=
xx
/
absx
;

31 
mul
=
	`mö
(
xx
/
absx
,
yy
/
absy
);

32 
x
=x+
mul
*
dx
,
y
=y+mul*
dy
;

33  
mul
;

34 
	}
}

36 
	$maö
()

38 
x
,
y
,
k
,
i
,
dx
,
dy
; 
LL
 
ªt
=0;

39 
	`sˇnf
("%d%d",&
n
,&
m
);

40 
	`sˇnf
("%d%d",&
x
,&
y
);

41 
	`sˇnf
("%d",&
k
);

42 
i
=0; i<
k
; i++)

44 
	`sˇnf
("%d%d",&
dx
,&
dy
);

45 
ªt
+=
	`ˇl
(
x
,
y
,
dx
,
dy
);

47 
	`¥ötf
("%I64d\n",
ªt
);

49 
	}
}

	@problems/codeforces/div2_codes/round108/round108_C.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	tLL
;

4 
	#M
 1000000007

	)

5 
	#MAXN
 110

	)

6 
	gs
[
MAXN
][MAXN],
	gèg
[200];

8 
	$maö
()

10 
i
,
n
,
m
,
j
; 
LL
 
ªt
=1,
˙t
;

11 
	`sˇnf
("%d%d",&
n
,&
m
);

12 
i
=0; i<
n
; i++)

13 
	`sˇnf
("%s",
s
[
i
]);

14 
j
=0; j<
m
; j++)

16 
	`mem£t
(
èg
,0,(tag));

17 
i
=0; i<
n
; i++)

18 
èg
[
s
[
i
][
j
]]=1;

19 
˙t
=
i
=0; i<200; i++)

20 if(
èg
[
i
])

21 
˙t
++;

22 
ªt
Ùë*
˙t
%
M
;

24 
	`¥ötf
("%I64d\n",
ªt
);

26 
	}
}

	@problems/codeforces/div2_codes/round108/round108_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gm©
[
N
][N];

40 
	gn
,
	gm
,
	g˙t
,
	gt˙t
;

41 
	gve˘‹
<> 
	gr
;

42 
	gve˘‹
<> 
	gc
;

44 
	$ok
(
r1
,
c1
,
r2
,
c2
)

46 
i
=
r1
; i<=
r2
; i++)

48 if(
m©
[
i
][
c1
]=='.'||m©[i][
c2
]=='.')  0;

49 if(
m©
[
i
][
c1
]=='#')

50 
m©
[
i
][
c1
]='%',
t˙t
++;

51 if(
m©
[
i
][
c2
]=='#')

52 
m©
[
i
][
c2
]='%',
t˙t
++;

54 
i
=
c1
; i<=
c2
; i++)

56 if(
m©
[
r1
][
i
]=='.'||m©[
r2
][i]=='.')  0;

57 if(
m©
[
r1
][
i
]=='#')

58 
m©
[
r1
][
i
]='%',
t˙t
++;

59 if(
m©
[
r2
][
i
]=='#')

60 
m©
[
r2
][
i
]='%',
t˙t
++;

63 
	}
}

65 
	$ªvî£
(
r1
,
c1
,
r2
,
c2
)

67 
i
=
r1
; i<=
r2
; i++)

69 if(
m©
[
i
][
c1
]=='%')

70 
m©
[
i
][
c1
]='#';

71 if(
m©
[
i
][
c2
]=='%')

72 
m©
[
i
][
c2
]='#';

74 
i
=
c1
; i<=
c2
; i++)

76 if(
m©
[
r1
][
i
]=='%')

77 
m©
[
r1
][
i
]='#';

78 if(
m©
[
r2
][
i
]=='%')

79 
m©
[
r2
][
i
]='#';

81 
	}
}

83 
	$sﬁve
()

85 
r1
,
r2
,
r3
,
r4
,
c1
,
c2
,
c3
,
c4
;

86 
rs
=
r
.
	`size
(),
cs
=
c
.size();

87 
º1
=0;Ñr1<
rs
;Ñr1++)

88 
º2
=0;Ñr2<
rs
;Ñr2++)

90 
r1
=
r
[
º1
],
r2
Ù[
º2
];

91 if(
r2
-
r1
<2) ;

92 
cc1
=0; cc1<
cs
; cc1++)

93 
cc2
=0; cc2<
cs
; cc2++)

95 
c1
=
c
[
cc1
],
c2
=c[
cc2
];

96 if(
c2
-
c1
<2) ;

97 
º3
=0;Ñr3<
rs
;Ñr3++)

98 
º4
=0;Ñr4<
rs
;Ñr4++)

100 
r3
=
r
[
º3
],
r4
Ù[
º4
];

101 if(
r4
-
r3
<2) ;

102 
cc3
=0; cc3<
cs
; cc3++)

103 
cc4
=0; cc4<
cs
; cc4++)

105 
c3
=
c
[
cc3
],
c4
=c[
cc4
];

106 if(
c4
-
c3
<2) ;

107 
t˙t
=0;

108 if(
	`ok
(
r1
,
c1
,
r2
,
c2
)&&ok(
r3
,
c3
,
r4
,
c4
)&&
˙t
==
t˙t
)

111 
	`puts
("YES");

112 
	`¥ötf
("%d %d %d %d\n",
r1
,
c1
,
r2
,
c2
);

113 
	`¥ötf
("%d %d %d %d\n",
r3
,
c3
,
r4
,
c4
);

116 
	`ªvî£
(
r1
,
c1
,
r2
,
c2
);

117 
	`ªvî£
(
r3
,
c3
,
r4
,
c4
);

123 
	}
}

125 
	$maö
()

127 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

129 
r
.
	`˛ór
();

130 
c
.
	`˛ór
();

131 
˙t
=0;

132 
i
=1; i<=
m
; i++)

134 
	`sˇnf
("%s",
m©
[
i
]+1);

135 
j
=1; j<=
n
; j++)

136 if(
m©
[
i
][
j
]=='#')

137 
˙t
++;

139 
i
=1; i<=
m
; i++)

140 
j
=1; j+2<=
n
; j++)

141 if(
m©
[
i
][
j
]=='#'&&mat[i][j+1]=='#'&&mat[i][j+2]=='#')

143 
r
.
	`push_back
(
i
);

146 
i
=1; i<=
n
; i++)

147 
j
=1; j+2<=
m
; j++)

148 if(
m©
[
j
][
i
]=='#'&&mat[j+1][i]=='#'&&mat[j+2][i]=='#')

150 
c
.
	`push_back
(
i
);

153 if(
r
.
	`size
()>4)

154 
r
.
	`îa£
(++++r.
	`begö
(),----r.
	`íd
());

155 if(
c
.
	`size
()>4)

156 
c
.
	`îa£
(++++c.
	`begö
(),----c.
	`íd
());

157 if(!
	`sﬁve
())

158 
	`puts
("NO");

161 
	}
}

	@problems/codeforces/div2_codes/round108/round108_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<f°ªam
>

17 
	~<fun˘i⁄Æ
>

18 
	~<io°ªam
>

19 
	~<Æg‹ôhm
>

20 
	#N
 211

	)

21 
	#X
 128

	)

22 
	#S
 1000100

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3ffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

36 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

37 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

38 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

40 
	snode
{ 
	mx
,
	my
; }
	g¥e
[
X
][
N
];

42 
	gn
,
	gm
,
	gk
,
	gdp
[
X
][
N
],
	g°
,
	gmn
,
	gq
[
S
],
	gt›
,
	gvÆ
[N],
	gv
[N];

43 
	gm©
[
N
][N];

44 
	gdú
[4][2]={{1,0},{-1,0},{0,1},{0,-1}};

46 
	$dfs
(
°©e
,
id
)

48 
x
=
id
/
n
,
y
=id%n,
u
=
¥e
[
°©e
][id].x,
v
=pre[state][id].y;

49 
m©
[
x
][
y
]='X';

50 if(
u
Ë
	`dfs
(u,
v
);

51 if(
u
&&u!=
°©e
)

52 
	`dfs
(
u
^
°©e
,
v
);

53 
	}
}

55 
	$öbﬂrd
(
x
,
y
)

57  0<=
x
&&x<
m
&&0<=
y
&&y<
n
;

58 
	}
}

60 
	$•Á
()

62 
i
=1; i<=
°
; i++)

64 
u
=0; u<
mn
; u++)

65 
v
=
i
&(i-1); v; v=i&(v-1))

67 
vv
=
dp
[
v
][
u
]+dp[
i
^v][u]-
vÆ
[u];

68 if(
vv
<
dp
[
i
][
u
])

69 
dp
[
i
][
u
]=
vv
,
¥e
[i][u].
x
=
v
,¥e[i][u].
y
=u;

71 
t›
=
mn
;

72 
j
=0; j<
mn
; j++)

73 
q
[
j
]=j,
v
[j]=1;

74 
j
=0; j<
t›
; j++)

76 
now
=
q
[
j
],
to
,
vv
;

77 
v
[
now
]=0;

78 
u
=0; u<4; u++)

80 
x
=
now
/
n
+
dú
[
u
][0],
y
=now%n+dir[u][1];

81 if(
	`öbﬂrd
(
x
,
y
))

83 
to
=
x
*
n
+
y
;

84 
vv
=
dp
[
i
][
now
]+
vÆ
[
to
];

85 if(
vv
<
dp
[
i
][
to
])

87 
dp
[
i
][
to
]=
vv
,
¥e
[i][to].
x
=i,¥e[i][to].
y
=
now
;

88 if(!
v
[
to
])

90 
q
[
t›
++]=
to
;

91 
v
[
to
]=1;

99 
	}
}

101 
	$maö
()

103 
x
,
y
;

104 ; ~
	`sˇnf
("%d%d%d",&
m
,&
n
,&
k
); )

106 
°
=(1<<
k
)-1;

107 
mn
=
n
*
m
;

108 
	`mem£t
(
¥e
,0,(pre));

109 
	`mem£t
(
dp
,0x3f,(dp));

110 
i
=0; i<
mn
; i++)

111 
	`sˇnf
("%d",&
vÆ
[
i
]);

112 
i
=0; i<
k
; i++)

114 
	`sˇnf
("%d%d",&
x
,&
y
);

115 --
x
,--
y
;

116 
t
=
x
*
n
+
y
;

117 
dp
[1<<
i
][
t
]=
vÆ
[t];

119 
	`•Á
();

120 
ªt
=
öf
,
id
;

121 
i
=0; i<
mn
; i++)

123 if(
ªt
>
dp
[
°
][
i
])

124 
ªt
=
dp
[
°
][
i
],
id
=i;

126 
	`¥ötf
("%d\n",
ªt
);

127 
i
=0; i<
m
; i++)

128 
j
=0; j<
n
; j++)

129 
m©
[
i
][
j
]='.';

130 
	`dfs
(
°
,
id
);

131 
i
=0; i<
m
; i++,
	`puts
(""))

132 
j
=0; j<
n
; j++)

133 
	`¥ötf
("%c",
m©
[
i
][
j
]);

136 
	}
}

	@problems/codeforces/div2_codes/round112/round112_div2_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXS
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
	spoöt
{ 
	mx
,
	my
; }
	gp
[
MAXN
];

31 
	$is_sup
(
id
,
n
)

33 
i
,
x
=
p
[
id
].x,
y
=p[id].y;

34 
èg
[4];

35 
	`mem£t
(
èg
,0,(tag));

36 
i
=0; i<
n
; i++)

38 if(
i
==
id
) ;

39 if(
x
==
p
[
i
].x)

41 if(
y
>
p
[
i
].y)

42 
èg
[0]=1;

43 if(
y
<
p
[
i
].y)

44 
èg
[1]=1;

46 if(
y
==
p
[
i
].y)

48 if(
x
>
p
[
i
].x)

49 
èg
[2]=1;

50 if(
x
<
p
[
i
].x)

51 
èg
[3]=1;

54 
i
=0; i<4; i++)

55 if(
èg
[
i
]==0)

58 
	}
}

60 
	$maö
()

62 
n
,
i
,
ªt
;

63 
	`sˇnf
("%d",&
n
)!=
EOF
)

65 
i
=0; i<
n
; i++)

66 
	`sˇnf
("%d%d",&
p
[
i
].
x
,&p[i].
y
);

67 
ªt
=
i
=0; i<
n
; i++)

68 if(
	`is_sup
(
i
,
n
))

69 
ªt
++;

70 
	`¥ötf
("%d\n",
ªt
);

73 
	}
}

	@problems/codeforces/div2_codes/round112/round112_div2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
LL
 
	gD
[66];

31 
	$öô
(
LL
 
k
)

33 
i
;

34 
D
[0]=1;

35 
i
=1; i<66; i++)

36 
D
[
i
]=D[i-1]*
k
;

37 
	}
}

39 
	$too_smÆl
(
LL
 
m
,LL 
n
)

41 
LL
 
ªt
=
m
,
i
;

42 
i
=1; 
m
/
D
[i]; i++)

43 
ªt
+=
m
/
D
[
i
];

44 if(
ªt
<
n
)  1;

46 
	}
}

48 
	$maö
()

50 
LL
 
n
,
k
,
l
,
r
,
m
;

51 
cö
>>
n
>>
k
)

53 
	`öô
(
k
);

54 
l
=0,
r
=
n
+1;Ü<=r; )

56 
m
=(
l
+
r
)>>1;

57 if(
	`too_smÆl
(
m
,
n
))

58 
l
=
m
+1;

60 
r
=
m
-1;

62 
cout
<<
l
<<
ídl
;

65 
	}
}

	@problems/codeforces/div2_codes/round112/round112_div2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010000

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
	gs
[
MAXN
];

30 
	gd©
[
MAXN
],
	g√xt
[MAXN];

32 
	$maö
()

34 
Àn
,
k
,
i
,
x
,
l
,
r
;

35 
LL
 
ªt
,
a
,
b
,
ât
,
t
;

36 
	`sˇnf
("%d%s",&
k
,
s
)!=
EOF
)

38 
ªt
=0;

39 
Àn
=
	`°æí
(
s
);

40 
d©
[0]=0;

41 
ât
=
t
=
i
=0; i<
Àn
; i++)

43 if(
s
[
i
]=='1')

45 
d©
[
i
+1]=dat[i]+1;

47 
ât
+=
t
*(t+1)/2;

49 
t
=0;

53 
t
++;

54 
d©
[
i
+1]=dat[i];

57 
ât
+=
t
*(t+1)/2;

59 
x
=
Àn
+1;

60 
i
=
Àn
-1; i>=0; i--)

62 if(
s
[
i
]=='1')

63 
√xt
[
i
+1]=
x
,x=i+1;

65 
√xt
[
i
+1]=
x
;

67 
√xt
[
Àn
+1]=len+1;

68 
r
=1;Ñ<=
Àn
;Ñ++)

69 if(
d©
[
r
]>=
k
)

71 
l
=1;Ü<=
Àn
;Ü++)

72 if(
s
[
l
-1]=='1')

74 if(
r
>
Àn
)

75 
ªt
=0;

76 if(
k
==0)

77 
ªt
=
ât
;

80 
x
=0;

81 ; 
r
<=
Àn
; )

83 
a
=
√xt
[
r
]-r;

84 
b
=
l
-
x
;

85 
x
=
l
;

86 
r
=
√xt
[r];

87 
l
=
√xt
[l];

89 
ªt
+=
a
*
b
;

92 
cout
<<
ªt
<<
ídl
;

95 
	}
}

	@problems/codeforces/div2_codes/round112/round112_div2_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

19 
	#N
 100011

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
ölöe
 
	$lowbô
(
x
){  x&(-x); 
	}
}

31 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mi
; }
	ge
[2*
N
];

33 
	gbô
[
N
],
	gdeg
[N],
	gt›
,
	gli°
[N],
	gid
[N],
	gbøn
[N],
	gBR
,
	gT
,
	gdis
[N],
	ge2p
[N],
	ghód
[N];

35 
	$ö£π
(
f
,
t
,
id
)

37 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
i
=
id
;

38 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

39 
	}
}

41 
	$dfs
(
now
,
¥e
,
œy
)

43 
i
;

44 
bøn
[
now
]=
BR
;

45 
id
[
now
]=
T
++;

46 
dis
[
now
]=
œy
;

47 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

49 if(
e
[
i
].
t
==
¥e
)

51 
	`dfs
(
e
[
i
].
t
,
now
,
œy
+1);

53 
	}
}

55 
	$upd©e
(
pos
,
x
)

57 
i
;

58 
i
=
pos
; i<
N
; i+=
	`lowbô
(i))

59 
bô
[
i
]+=
x
;

60 
	}
}

62 
	$ˇlc
(
pos
)

64 if(
pos
<0)  0;

65 
i
,
ªt
=0;

66 
i
=
pos
; i>0; i-=
	`lowbô
(i))

67 
ªt
+=
bô
[
i
];

68  
ªt
;

69 
	}
}

71 
	$ˇlc
(
x
,
y
,
èg
)

73 
t
;

74 if(
y
<
x
)

75 
t
=
x
,x=
y
,y=t;

76 if(
èg
)

77 
x
--;

78  
	`ˇlc
(
y
)-ˇlc(
x
);

79 
	}
}

81 
	$maö
()

83 
n
,
i
,
x
,
y
,
m
,
t
,
roŸ
,
u
;

84 
	`sˇnf
("%d",&
n
)!=
EOF
)

86 
	`mem£t
(
bô
,0,(bit));

87 
	`mem£t
(
deg
,0,(deg));

88 
t›
=
i
=0; i<=
n
; i++)

89 
li°
[
i
]=-1;

90 
i
=1; i<
n
; i++)

92 
	`sˇnf
("%d%d",&
x
,&
y
);

93 
	`ö£π
(
x
,
y
,
i
);

94 
	`ö£π
(
y
,
x
,
i
);

95 
deg
[
x
]++;

96 
deg
[
y
]++;

98 
roŸ
=1;

99 
i
=1; i<=
n
; i++)

100 if(
deg
[
i
]>2)

101 
roŸ
=
i
;

102 
T
=1,
BR
=1;

103 
i
=
li°
[
roŸ
]; i!=-1; i=
e
[i].
n
)

105 
hód
[
BR
]=
T
;

106 
	`dfs
(
e
[
i
].
t
,
roŸ
,1);

107 
BR
++;

109 
dis
[
roŸ
]=0,
bøn
[roŸ]=0,
id
[root]=0;

110 
hód
[0]=0;

111 
i
=0; i<
n
-1; i++)

113 
x
=
e
[
i
<<1].
f
,
y
Û[i<<1].
t
;

114 
e2p
[
i
+1]=(
dis
[
x
]>dis[
y
]?x:y);

116 
	`sˇnf
("%d",&
m
);

117 
i
=0; i<
m
; i++)

119 
	`sˇnf
("%d",&
t
);

120 if(
t
==1)

122 
	`sˇnf
("%d",&
x
);

123 
	`upd©e
(
id
[
e2p
[
x
]],-1);

125 if(
t
==2)

127 
	`sˇnf
("%d",&
x
);

128 
	`upd©e
(
id
[
e2p
[
x
]],1);

132 
	`sˇnf
("%d%d",&
x
,&
y
);

133 if(
bøn
[
x
]==bøn[
y
])

135 
u
=
	`ˇlc
(
id
[
x
],id[
y
],0);

136 if(
u
!=0)

137 
	`puts
("-1");

139 
	`¥ötf
("%d\n",
	`abs
(
dis
[
x
]-dis[
y
]));

143 
u
=
	`ˇlc
(
id
[
x
],
hód
[
bøn
[x]],1);

144 
u
+=
	`ˇlc
(
id
[
y
],
hód
[
bøn
[y]],1);

145 if(
u
!=0)

146 
	`puts
("-1");

148 
	`¥ötf
("%d\n",
dis
[
x
]+dis[
y
]);

154 
	}
}

	@problems/codeforces/div2_codes/round112/round112_div2_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

28 
	#N
 4200000

	)

29 
	#B
 22

	)

30 
	#M
 0x3fffff

	)

32 
	gd©
[
N
],
	gªt
[N];

33 
LL
 
	gD
[50];

35 
	$öô
()

37 
i
;

38 
D
[0]=1;

39 
i
=1; i<50; i++)

41 
D
[
i
]=(D[i-1]<<1);

43 
	}
}

45 
	$maö
()

47 
n
,
i
,
tmp
,
x
,
y
,
j
;

48 
	`öô
();

49 
	`sˇnf
("%d",&
n
)!=
EOF
)

51 
	`mem£t
(
ªt
,-1,(ret));

52 
i
=0; i<
n
; i++)

54 
	`sˇnf
("%d",&
d©
[
i
]);

56 
ªt
[
d©
[
i
]^
M
]=dat[i];

58 
i
=
M
; i>=0; i--)

59 if(
ªt
[
i
]!=-1)

60 
j
=0; j<
B
; j++)

61 if(
i
&
D
[
j
])

63 if(
ªt
[
i
^
D
[
j
]]==-1)

64 
ªt
[
i
^
D
[
j
]]=ret[i];

66 
i
=0; i<
n
; i++)

67 
	`¥ötf
("%d ",
ªt
[
d©
[
i
]]);

68 
	`puts
("");

71 
	}
}

	@problems/codeforces/div2_codes/round113/round113_div2_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	spoöt
{ 
	mx
,
	my
,
	mi
; }
	gp
[
N
];

32 
	$cmp
(
poöt
 
a
,poöà
b
)

34  
a
.
x
==
b
.x?a.
y
<b.y:a.x>b.x;

35 
	}
}

37 
	$maö
()

39 
n
,
k
,
ªt
;

40 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

42 
i
=0; i<
n
; i++)

44 
	`sˇnf
("%d%d",&
p
[
i
].
x
,&p[i].
y
);

45 
p
[
i
].i=i+1;

47 
	`s‹t
(
p
,p+
n
,
cmp
);

48 
ªt
=0;

49 
i
=0; i<
n
; i++)

50 if(
p
[
i
].
x
=ı[
k
-1].x&&p[i].
y
==p[k-1].y)

51 
ªt
++;

52 
	`¥ötf
("%d\n",
ªt
);

55 
	}
}

	@problems/codeforces/div2_codes/round113/round113_div2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 101000

	)

18 
	#M
 1000010

	)

19 
	#öf
 0x7fffffff

	)

20 
	#S
 1000100

	)

21 
	#ïs
 1e-8

	)

22 
	#MOD
 1000000007

	)

24 
	tLL
;

25 
usög
 
«me•a˚
 
	g°d
;

27 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

28 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

29 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

30 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

32 
	spoöt
{ 
LL
 
	mx
,
	my
; }
	gp
[
N
],
	gq
[N];

34 
ölöe
 
LL
 
	$mö
(
LL
 
a
,LL 
b
){ á<b?a:b; 
	}
}

35 
ölöe
 
LL
 
	$max
(
LL
 
a
,LL 
b
){ á<b?b:a; 
	}
}

36 
ölöe
 
LL
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
)

38  (
a
.
x
-
c
.x)*(
b
.
y
-c.y)-(a.y-c.y)*(b.x-c.x);

39 
	}
}

41 
	$ö_pﬁyg⁄
(
poöt
 
a
,
n
,poöà
p
[])

43 
l
=1,
r
=
n
-1,
m
;

44 if(
	`xmu…
(
p
[0],p[
n
-1],
a
)<=0||xmult(p[1],p[0],a)<=0)

47 ; 
l
<=
r
; )

49 
m
=(
l
+
r
)>>1;

50 if(
	`xmu…
(
a
,
p
[
m
],p[0])>=0)

51 
l
=
m
+1;

53 
r
=
m
-1;

56  
	`xmu…
(
p
[
l
-1],p[l],
a
)<0;

57 
	}
}

59 
	$put_YES
(
n
,
m
)

61 
i
=0; i<
m
; i++)

63 if(
	`ö_pﬁyg⁄
(
q
[
i
],
n
,
p
)==0)

67 
	}
}

69 
	$maö
()

71 
n
,
m
;

72 
	`sˇnf
("%d",&
n
)!=
EOF
)

74 
i
=0; i<
n
; i++)

77 
	`sˇnf
("%I64d%I64d",&
p
[
i
].
x
,&p[i].
y
);

79 
	`sˇnf
("%d",&
m
);

80 
i
=0; i<
m
; i++)

83 
	`sˇnf
("%I64d%I64d",&
q
[
i
].
x
,&q[i].
y
);

85 if(
	`put_YES
(
n
,
m
))

86 
	`puts
("YES");

88 
	`puts
("NO");

91 
	}
}

	@problems/codeforces/div2_codes/round113/round113_div2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 101000

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gd©
[
N
];

31 
	$cmp
(
a
,
b
){ á<b; 
	}
}

33 
	$maö
()

35 
n
,
x
,
l
,
r
,
ªt
,
k
,
y
;

36 
	`sˇnf
("%d%d",&
n
,&
x
)!=
EOF
)

38 
y
=-1; 
ªt
=0;

39 
i
=1; i<=
n
; i++)

41 
	`sˇnf
("%d",&
d©
[
i
]);

42 if(
d©
[
i
]==
x
)

43 
y
=
i
;

45 if(
y
==-1Ë
d©
[++
n
]=
x
,
ªt
++;

46 
	`s‹t
(
d©
+1,d©+1+
n
,
cmp
);

47 
l
=
r
=0;

48 
i
=1; i<=
n
; i++)

49 if(
d©
[
i
]==
x
)

51 
l
=
i
;

54 
i
=
l
; i<=
n
; i++)

55 if(
d©
[
i
]==
x
)

57 
r
=
i
;

59 
k
=(
n
+1)/2;

60 if(
r
<
k
)

62 ; 
r
<
k
; )

63 
ªt
++,
n
++,
k
=“+1)/2,
r
++;

65 if(
l
>
k
)

67 ; 
l
>
k
; )

68 
n
++,
ªt
++,
k
=(n+1)/2;

70 
	`¥ötf
("%d\n",
ªt
);

73 
	}
}

	@problems/codeforces/div2_codes/round113/round113_div2_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 100010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	ssh€
{ 
	ms
,
	mc
,
	mi
; }
	gcus
,
	g¥o
[
N
];

32 
	$cmp_s
(
sh€
 
a
,sh€ 
b
){ á.
s
<b.s; 
	}
}

33 
	$cmp_c
(
sh€
 
a
,sh€ 
b
){ á.
c
>b.c; 
	}
}

35 
	gt›
,
	gm©ch
[
N
];

36 
boﬁ
 
	gv
[
N
];

37 
	gve˘‹
<> 
	gE
[
N
];

39 
boﬁ
 
	$dfs
(
now
)

41 
t
;

42 
i
=0; i<
E
[
now
].
	`size
(); i++)

44 
t
=
E
[
now
][
i
];

45 if(!
v
[
t
])

47 
v
[
t
]=1;

48 if(
m©ch
[
t
]==-1||(
	`dfs
(match[t])))

50 
m©ch
[
t
]=
now
;

56 
	}
}

58 
	$maö
()

60 
x
,
y
,
z
,
n
,
m
,
˙t
;

61 
LL
 
ªt
;

62 
	`sˇnf
("%d",&
n
);

63 
i
=0; i<
n
; i++)

65 
	`sˇnf
("%d%d",&
¥o
[
i
].
c
,&¥o[i].
s
);

66 
¥o
[
i
].i=i+1;

68 
	`s‹t
(
¥o
,¥o+
n
,
cmp_s
);

69 
	`sˇnf
("%d",&
m
);

70 
i
=0; i<
m
; i++)

72 
	`sˇnf
("%d%d",&
x
,&
y
);

73 
cus
.
c
=
x
,cus.
s
=
y
;

74 
cus
.
i
=i+1;

75 
z
=
	`lowî_bound
(
¥o
,¥o+
n
,
cus
,
cmp_s
)-pro;

76 ; 
¥o
[
z
].
s
==
y
||pro[z].s==y+1; z++)

77 if(
¥o
[
z
].
c
<=
cus
.c)

78 
E
[
¥o
[
z
].
i
-1].
	`push_back
(i);

80 
	`s‹t
(
¥o
,¥o+
n
,
cmp_c
);

81 
	`mem£t
(
m©ch
,-1,(match));

82 
ªt
=0,
˙t
=0;

83 
i
=0; i<
n
; i++)

85 
	`mem£t
(
v
,0,(v));

86 if(
	`dfs
(
¥o
[
i
].i-1))

87 
ªt
+=
¥o
[
i
].
c
,
˙t
++;

89 
	`¥ötf
("%I64d\n%d\n",
ªt
,
˙t
);

90 
i
=0; i<
m
; i++)

91 if(
m©ch
[
i
]>-1)

92 
	`¥ötf
("%d %d\n",
i
+1,
m©ch
[i]+1);

94 
	}
}

	@problems/codeforces/div2_codes/round113/round113_div2_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 10000010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
LL
 
	gdp
[
N
],
	gf
[N];

32 
	$maö
()

34 
n
;

35 
dp
[1]=0;

36 
dp
[0]=1;

37 
f
[0]=0;

38 
f
[1]=1;

39 
i
=2; i<
N
; i++)

41 
f
[
i
]=(
dp
[i-1]+f[i-1]*2)%
MOD
;

42 
dp
[
i
]=(3*
f
[i-1])%
MOD
;

44 
	`sˇnf
("%d",&
n
)!=
EOF
)

46 
cout
<<
dp
[
n
]<<
ídl
;

49 
	}
}

	@problems/codeforces/div2_codes/round114/round114_div2_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	$maö
()

32 
n
,
x
,
y
;

33 
xx
;

34 
ªt
;

35 
	`sˇnf
("%d%d%d",&
n
,&
x
,&
y
)!=
EOF
)

37 
xx
=1.0*
n
*
y
/100.0;

38 
ªt
=
	`˚û
(
xx
)-
x
;

39 if(
ªt
<0)Ñet=0;

40 
	`¥ötf
("%d\n",
ªt
);

43 
	}
}

	@problems/codeforces/div2_codes/round114/round114_div2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 6100000

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
	gs
[
N
],
	gªt
[N];

26 
	gt›
,
	gl
,
	g¥e
;

28 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

29 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

30 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

31 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

33 
	$amp
()

35 
i
=0; i<
l
; i++)

37 if(
s
[
i
]==' ')

39 if(
s
[
i
]=='#')

44 
	}
}

46 
	$sﬁve
()

48 
i
=0; i<
l
; i++)

50 if(
s
[
i
]==' '||s[i]=='\t'||s[i]=='\v')

52 
ªt
[
t›
++]=
s
[
i
];

54 
	}
}

56 
	$show
()

58 
ªt
[
t›
]='\0';

59 
	`¥ötf
("%s\n",
ªt
);

60 
	}
}

62 
	$maö
()

64 
t›
=0,
¥e
=0;

65 
	`gës
(
s
)!=
NULL
)

67 
l
=
	`°æí
(
s
);

68 if(
	`amp
())

70 if(
¥e
)

71 
	`show
();

72 
	`¥ötf
("%s\n",
s
);

73 
¥e
=0;

74 
t›
=0;

78 
	`sﬁve
();

79 
¥e
=1;

82 if(
¥e
)

83 
	`show
();

85 
	}
}

	@problems/codeforces/div2_codes/round114/round114_div2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 100010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gt
[
N
],
	gv
[N];

31 
	gªt
[
N
];

32 
	ga
,
	gd
;

34 
	$ˇlc
(
i
)

36 
x
=
v
[
i
]*v[i]/(2*
a
);

37 if(
x
>
d
)

38  
t
[
i
]+
	`sqπ
((2*
d
)/
a
);

39  
t
[
i
]+
d
/
v
[i]+v[i]/(2*
a
);

40 
	}
}

42 
	$maö
()

44 
n
;

45 
	`sˇnf
("%d%lf%lf",&
n
,&
a
,&
d
)!=
EOF
)

47 
i
=0; i<
n
; i++)

48 
	`sˇnf
("%lf%lf",&
t
[
i
],&
v
[i]);

49 
ªt
[0]=
	`ˇlc
(0);

50 
i
=1; i<
n
; i++)

52 
ªt
[
i
]=
	`ˇlc
(i);

53 if(
ªt
[
i
]<ret[i-1])

54 
ªt
[
i
]=ret[i-1];

56 
i
=0; i<
n
; i++)

57 
	`¥ötf
("%.10lf\n",
ªt
[
i
]);

60 
	}
}

	@problems/codeforces/div2_codes/round114/round114_div2_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 210

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gdp
[
N
][N][N];

31 
	gn
,
	gl
,
	gk
;

32 
	snode
{ 
	mp
; 
	ma
; }
	gto
[
N
];

33 
	$cmp
(
node
 
a
,nodê
b
){ á.a>b.a; 
	}
}

35 
	$dfs
(
i
,
˙t
,
v
)

37 if(
v
>200) v=200;

38 
ªt
=0;

39 if(
i
==
n
-1)

41 if(
v
+
to
[
i
].
a
>=0&&
˙t
+1>=
l
)

42 
ªt
+=
to
[
i
].
p
;

43 if(
˙t
>=
l
)

44 
ªt
+=1-
to
[
i
].
p
;

45  
dp
[
i
][
˙t
][
v
]=
ªt
;

47 if(
dp
[
i
][
˙t
][
v
]>=0)

48  
dp
[
i
][
˙t
][
v
];

49 if(
v
+
to
[
i
].
a
>=0)

50 
ªt
+=
to
[
i
].
p
*
	`dfs
(i+1,
˙t
+1,
v
+to[i].
a
);

51 
ªt
+=(1-
to
[
i
].
p
)*
	`dfs
(i+1,
˙t
,
v
);

52  
dp
[
i
][
˙t
][
v
]=
ªt
;

53 
	}
}

55 
	$maö
()

57 
	`sˇnf
("%d%d%d",&
n
,&
l
,&
k
)!=
EOF
)

59 
i
=0; i<
n
; i++)

61 
	`sˇnf
("%lf",&
to
[
i
].
p
);

62 
to
[
i
].
p
/=100;

64 
i
=0; i<
n
; i++)

65 
	`sˇnf
("%d",&
to
[
i
].
a
);

66 
	`s‹t
(
to
,to+
n
,
cmp
);

67 
i
=0; i<
N
; i++)

68 
j
=0; j<
N
; j++)

69 
t
=0;Å<
N
;Å++)

70 
dp
[
i
][
j
][
t
]=-1;

71 
	`¥ötf
("%.12lf\n",
	`dfs
(0,0,
k
));

74 
	}
}

	@problems/codeforces/div2_codes/round114/round114_div2_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

29 
LL
 
	g˙t
[
N
],
	gt›
;

30 
LL
 
	gtmp
,
	gmul
;

32 
boﬁ
 
	$mu°_wö
(
LL
 
a
,LL 
b
)

34 if(
a
==0||
b
==0)

36 if(
a
>
b
)

37 
tmp
=
a
,a=
b
,b=tmp;

38 if(
	`mu°_wö
(
b
%
a
,a)==0)

40 
tmp
=
b
;

41 
tmp
/=
a
;

42 
tmp
%=
a
+1;

43 if(
tmp
&1)

46 
	}
}

48 
	$maö
()

50 
t
;

51 
LL
 
a
,
b
;

52 
cö
>>
t
;

53 
t
--)

55 
cö
>>
a
>>
b
;

56 if(
	`mu°_wö
(
a
,
b
))

57 
	`puts
("First");

59 
	`puts
("Second");

62 
	}
}

	@problems/codeforces/div2_codes/round117/round117_div2_A.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	~<cm©h
>

5 
	~<queue
>

6 
	#ïs
 1e-8

	)

7 
	#öf
 0x3fffffff

	)

8 
	#N
 1111

	)

9 
usög
 
«me•a˚
 
	g°d
;

11 
	s£gmít
{ 
	mx1
,
	my1
,
	mx2
,
	my2
,
	ml
; }
	g£g
[
N
];

12 
	shóp_t
{ 
	ml
,
	mi
;

13 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){

14  
	ma
.
	ml
>
	mb
.l;

16 }
	ght
;

18 
	ga
,
	gb
,
	gsx
,
	gsy
,
	gex
,
	gey
;

19 
	gn
,
	gmm
[
N
],
	gv
[N];

20 
	g¥i‹ôy_queue
<
	ghóp_t
> 
	gq
;

22 
	$Àn
(
x1
,
x2
,
x3
,
x4
)

24 if(
x1
>
x3
)

25 
	`sw≠
(
x1
,
x3
),sw≠(
x2
,
x4
);

26  
x3
>
x2
?x3-x2:0;

27 
	}
}

29 
	$di°
(
f
,
t
)

31 
u
=
	`Àn
(
£g
[
f
].
x1
,£g[f].
x2
,£g[
t
].x1,seg[t].x2);

32 
v
=
	`Àn
(
£g
[
f
].
y1
,£g[f].
y2
,£g[
t
].y1,seg[t].y2);

33  
	`sqπ
(
u
*u+
v
*v);

34 
	}
}

36 
	$ok
(
f
,
t
)

38 
Œ
=
	`di°
(
f
,
t
);

39 if(
Œ
>
a
+
ïs
)

41 
£g
[
t
].
l
=
	`mö
(£g[t].l,
Œ
+
mm
[
f
]*(
a
+
b
));

42 if(
mm
[
t
]<=mm[
f
]+1)  0;

43 
mm
[
t
]=mm[
f
]+1;

45 
	}
}

47 
	$dijk°ø
(
°¨t
)

49 
	`mem£t
(
v
,0,(v));

50 
mm
[
°¨t
]=0;

51 
ht
.
i
=
°¨t
,ht.
l
=0;

52 
q
.
	`push
(
ht
);

53 ; !
q
.
	`em±y
(); )

55 
ht
=
q
.
	`t›
();

56 
q
.
	`p›
();

57 
id
=
ht
.
i
,
l
=ht.l;

58 if(
l
!=
mm
[
id
]) ;

59 
v
[
id
]=1;

60 
i
=0; i<
n
; i++)

61 if(
	`ok
(
id
,
i
)&&!
v
[i])

62 
ht
.
l
=
mm
[
i
],ht.i=i,
q
.
	`push
(ht);

64 
	}
}

66 
	$maö
()

68 
	`sˇnf
("%lf%lf",&
a
,&
b
);

69 
	`sˇnf
("%lf%lf%lf%lf",&
sx
,&
sy
,&
ex
,&
ey
);

70 
	`sˇnf
("%d",&
n
);

71 
i
=0; i<
n
; i++)

73 
	`sˇnf
("%lf%lf%lf%lf",&
£g
[
i
].
x1
,&£g[i].
y1
,&£g[i].
x2
,&£g[i].
y2
);

74 
£g
[
i
].
l
=
öf
; 
mm
[i]=
N
;

75 if(
£g
[
i
].
x1
>£g[i].
x2
)

76 
	`sw≠
(
£g
[
i
].
x1
,£g[i].
x2
);

77 if(
£g
[
i
].
y1
>£g[i].
y2
)

78 
	`sw≠
(
£g
[
i
].
y1
,£g[i].
y2
);

80 
£g
[
n
].
x1
=£g[n].
x2
=
sx
;

81 
£g
[
n
].
y1
=£g[n].
y2
=
sy
;

82 
£g
[
n
+1].
x1
=£g[n+1].
x2
=
ex
;

83 
£g
[
n
+1].
y1
=£g[n+1].
y2
=
ey
;

84 
mm
[
n
+1]=
N
,
£g
[n+1].
l
=
öf
;

85 
£g
[
n
].
l
=0;

86 
n
+=2;

87 
	`dijk°ø
(
n
-2);

88 if(
mm
[
n
-1]<
N
)

89 
	`¥ötf
("%.10lf\n",
£g
[
n
-1].
l
);

91 
	`puts
("-1");

93 
	}
}

	@problems/codeforces/div2_codes/round117/round117_div2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	$maö
()

41 
x
,
d
,
n
;

42 
LL
 
ªt
=0;

43 
	`sˇnf
("%d%d",&
d
,&
n
)!=
EOF
)

45 
ªt
=0;

46 
i
=0; i<
n
; i++)

48 
	`sˇnf
("%d",&
x
);

49 if(
i
+1<
n
)

50 
ªt
+=
d
-
x
;

52 
cout
<<
ªt
<<
ídl
;

56 
	}
}

	@problems/codeforces/div2_codes/round117/round117_div2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gn
,
	gl
,
	gk
;

41 
	smy£t


43 
my£t
(){ 
	mschg
=
s°a
=0; }

44 
	mmu…i£t
<,
	mÀss
<> > 
	mchg
;

45 
	mmu…i£t
<,
	mgª©î
<> >
	m°a
;

46 
LL
 
	mschg
,
	ms°a
;

47 
îa£
(
x
)

49 if(
	m°a
.
cou¡
(
x
)<=0)

51 
chg
.
îa£
(chg.
föd
(
x
)),
schg
-=x;

52 if(
	m°a
.
size
()>0)

54 
	mx
=*
°a
.
begö
();

55 
	m°a
.
îa£
(
°a
.
begö
());

56 
	mchg
.
ö£π
(
x
);

57 
	ms°a
-=
x
;

58 
	mschg
+=
x
;

62 
	m°a
.
îa£
(
°a
.
föd
(
x
)),
	ms°a
-=x;

64 
ö£π
(
x
)

66 if(
	mchg
.
size
()==
k
)

68 
chg
.
ö£π
(
x
);

69 
	mschg
+=
x
;

70 
	mx
=*
chg
.
begö
();

71 
	mchg
.
îa£
(
chg
.
begö
());

72 
	mschg
-=
x
;

73 
	m°a
.
ö£π
(
x
);

74 
	ms°a
+=
x
;

77 
	mchg
.
ö£π
(
x
),
	mschg
+=x;

80 }
	gpos
,
	g√g
;

82 
	gd©
[
N
];

84 
	$îa£
(
x
)

86 if(
x
>=0)

87 
pos
.
	`îa£
(
x
);

89 
√g
.
	`îa£
(-
x
);

90 
	}
}

92 
	$ö£π
(
x
)

94 if(
x
>=0)

95 
pos
.
	`ö£π
(
x
);

98 
√g
.
	`ö£π
(-
x
);

100 
	}
}

102 
LL
 
	$sﬁve
()

104  
	`max
(
pos
.
schg
+pos.
s°a
+
√g
.schg-neg.ssta,neg.schg+neg.ssta+pos.schg-pos.ssta);

105 
	}
}

107 
	$maö
()

109 
LL
 
ªt
;

110 
	`sˇnf
("%d%d",&
n
,&
l
);

111 
i
=0; i<
n
; i++)

112 
	`sˇnf
("%d",&
d©
[
i
]);

113 
	`sˇnf
("%d",&
k
);

114 
ªt
=0;

115 
i
=0; i<
n
; i++)

117 if(
i
>=
l
)

118 
	`îa£
(
d©
[
i
-
l
]);

119 
	`ö£π
(
d©
[
i
]);

121 if(
i
>=
l
-1)

122 
ªt
=
	`max
‘ë,
	`sﬁve
());

124 
	`¥ötf
("%I64d\n",
ªt
);

126 
	}
}

	@problems/codeforces/div2_codes/round117/round117_div2_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gs
[
N
],
	gt
[N];

40 
	gp
[
N
],
	g∂i°
[N],
	gt›
;

41 
	gps
[
N
],
	gts
,
	g˙t
[N],
	gªt
,
	gls
,
	g…
;

43 
	$öô
()

45 
t›
=0;

46 
i
=0; i<
N
; i++)

47 
p
[
i
]=i;

48 
i
=2; i<
N
; i++)

50 if(
p
[
i
]==i)

51 
∂i°
[
t›
++]=
i
;

52 
j
=0; j<
t›
&&
i
*
∂i°
[j]<
N
; j++)

54 
p
[
i
*
∂i°
[
j
]]=plist[j];

55 if(
i
%
∂i°
[
j
]==0)

59 
	}
}

61 
	$ok
(
l
)

63 
i
=1; i*
l
<
ls
; i++)

65 
j
=0; j<
l
; j++)

66 if(
s
[
i
*
l
+
j
]!=s[j])

69 
i
=0; i*
l
<
…
; i++)

71 
j
=0; j<
l
; j++)

72 if(
t
[
i
*
l
+
j
]!=
s
[j])

76 
	}
}

78 
	$dfs
(
now
,
id
)

80 
tmp
;

81 if(
…
%
now
) ;

82 if(
id
==
ts
)

84 if(
	`ok
(
now
))

85 
ªt
++;

88 
tmp
=
now
;

89 
	`dfs
(
tmp
,
id
+1);

90 
i
=0; i<
˙t
[
id
]; i++)

92 
tmp
*=
ps
[
id
];

93 
	`dfs
(
tmp
,
id
+1);

95 
	}
}

97 
	$maö
()

99 
	`öô
();

100 
	`sˇnf
("%s%s",
s
,
t
)!=
EOF
)

102 
ls
=
	`°æí
(
s
);

103 
…
=
	`°æí
(
t
);

104 
	`mem£t
(
˙t
,0,(cnt));

105 
ts
=0;

106 
x
;

107 
x
=
ls
; x>1; )

109 
tmp
=
x
;

110 
ps
[
ts
++]=
p
[
x
];

111 
˙t
[
ts
-1]=1;

112 ; 
tmp
%
p
[
x
]==0; )

113 
tmp
/=
p
[
x
],
˙t
[
ts
-1]++;

114 
x
=
tmp
;

117 
ªt
=0;

118 
	`dfs
(1,0);

119 
	`¥ötf
("%d\n",
ªt
);

122 
	}
}

	@problems/codeforces/div2_codes/round117/round117_div2_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 4010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	ga
[
N
],
	gb
[N],
	gl
,
	gn
;

40 
	gdp
[110][2][
N
];

42 
	$dfs
(
id
,
cho
,
Œ
)

44 
ªt
=0,
µp
,
¥e
;

45 if(
id
==-1)

46 
µp
=101;

48 
µp
=
id
;

49 if(
id
==-1)

50 
¥e
=101;

51 if(
cho
==0)

52 
¥e
=
a
[
id
];

54 
¥e
=
b
[
id
];

56 if(
Œ
>
l
)

57  
dp
[
µp
][
cho
][
Œ
]=0;

58 if(
Œ
==
l
)

59  
dp
[
µp
][
cho
][
Œ
]=1;

60 if(
dp
[
µp
][
cho
][
Œ
]>=0)

61  
dp
[
µp
][
cho
][
Œ
];

62 
i
=0; i<
n
; i++)

63 if(
i
!=
id
)

65 if(
id
==-1)

67 
ªt
=‘ë+
	`dfs
(
i
,1,
Œ
+
a
[i]))%
MOD
;

68 if(
a
[
i
]==
b
[i]) ;

69 
ªt
=‘ë+
	`dfs
(
i
,0,
Œ
+
b
[i]))%
MOD
;

72 if(
a
[
i
]==
¥e
)

74 
ªt
=‘ë+
	`dfs
(
i
,1,
Œ
+
a
[i]))%
MOD
;

76 if(
b
[
i
]==
¥e
)

78 
ªt
=‘ë+
	`dfs
(
i
,0,
Œ
+
b
[i]))%
MOD
;

81  
dp
[
µp
][
cho
][
Œ
]=
ªt
;

82 
	}
}

84 
	$maö
()

86 
	`sˇnf
("%d%d",&
n
,&
l
)!=
EOF
)

88 
	`mem£t
(
dp
,-1,(dp));

89 
i
=0; i<
n
; i++)

90 
	`sˇnf
("%d%d",&
a
[
i
],&
b
[i]);

91 
	`¥ötf
("%d\n",
	`dfs
(-1,0,0));

94 
	}
}

	@problems/codeforces/div2_codes/round119/round_119_A.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 4001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
],
	gn
,
	ga
,
	gb
,
	gc
;

9 
	$dfs
(
w
)

11 
ªt
=0;

12 if(
dp
[
w
]!=-1)  dp[w];

13 if(
w
==0Ë 
dp
[w]=0;

14 if(
w
>=
a
)

16 
t
=
	`dfs
(
w
-
a
);

17 if(
t
>=0)

18 
ªt
=
	`max
‘ë,
t
+1);

20 if(
w
>=
b
)

22 
t
=
	`dfs
(
w
-
b
);

23 if(
t
>=0)

24 
ªt
=
	`max
‘ë,
t
+1);

26 if(
w
>=
c
)

28 
t
=
	`dfs
(
w
-
c
);

29 if(
t
>=0)

30 
ªt
=
	`max
‘ë,
t
+1);

32 if(
ªt
==0)

33  
dp
[
w
]=-
N
;

34  
dp
[
w
]=
ªt
;

35 
	}
}

37 
	$maö
()

39 
	`sˇnf
("%d%d%d%d",&
n
,&
a
,&
b
,&
c
)!=
EOF
)

41 
	`mem£t
(
dp
,-1,(dp));

42 
	`¥ötf
("%d\n",
	`dfs
(
n
));

45 
	}
}

	@problems/codeforces/div2_codes/round119/round_119_B.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	tLL
;

5 
usög
 
«me•a˚
 
	g°d
;

7 
	$maö
()

9 
LL
 
w
,
h
;

10 
cö
>>
w
>>
h
)

12 
LL
 
ªt
=0;

13 
LL
 
i
=1; i<
h
; i++)

14 
LL
 
j
=1; j<
w
; j++)

16 
ªt
+=
	`mö
(
i
,
h
-i)*mö(
j
,
w
-j);

18 
cout
<<
ªt
<<
ídl
;

21 
	}
}

	@problems/codeforces/div2_codes/round119/round_119_C.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 200001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	ga
[
N
],
	gb
[N],
	gv
[N],
	gid
[N];

9 
	$maö
()

11 
n
,
ªt
=0,
™s
;

12 
	`sˇnf
("%d",&
n
)!=
EOF
)

14 
	`mem£t
(
v
,0,(v));

15 
ªt
=0;

16 
™s
=0;

17 
i
=1; i<=
n
; i++)

19 
	`sˇnf
("%d",&
a
[
i
]);

20 
id
[
a
[
i
]]=i;

22 
i
=1; i<=
n
; i++)

23 
	`sˇnf
("%d",&
b
[
i
]);

24 
ai
=
n
;

25 
i
=
n
; i>=1; )

27 
x
=
b
[
i
];

28 if(
v
[
x
])

30 
i
--;

33 
j
=
id
[
x
];

34 
ªt
+=
ai
-
j
+1;

35 if(
j
!=
ai
)

36 
™s
=
	`max
◊ns,
n
-
j
);

37 
k
=
j
; k<=
ai
; k++)

38 
v
[
a
[
k
]]=1;

39 
ai
=
j
-1;

41 
	`¥ötf
("%d\n",
™s
);

44 
	}
}

	@problems/codeforces/div2_codes/round119/round_119_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 70

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gm©
[
N
][N],
	gdp
[N][N][N];

41 
	$maö
()

43 
n
,
m
,
r
;

44 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
r
)!=
EOF
)

46 
i
=0; i<
n
; i++)

47 
j
=0; j<
n
; j++)

48 
k
=0; k<
n
; k++)

49 
dp
[
i
][
j
][
k
]=
öf
;

50 
u
=0; u<
m
; u++)

52 
i
=0; i<
n
; i++)

53 
j
=0; j<
n
; j++)

54 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

55 
k
=0; k<
n
; k++)

56 
i
=0; i<
n
; i++)

57 
j
=0; j<
n
; j++)

58 
m©
[
i
][
j
]=
	`mö
(m©[i][j],m©[i][
k
]+mat[k][j]);

59 
i
=0; i<
n
; i++)

60 
j
=0; j<
n
; j++)

61 
dp
[
i
][
j
][0]=
	`mö
(dp[i][j][0],
m©
[i][j]);

63 
k
=1; k<
n
; k++)

64 
u
=0; u<
n
; u++)

65 
i
=0; i<
n
; i++)

66 
j
=0; j<
n
; j++)

67 
dp
[
i
][
j
][
k
]=
	`mö
(dp[i][j][k],dp[i][
u
][k-1]+dp[u][j][0]);

68 
i
=0; i<
r
; i++)

70 
x
,
y
,
z
;

71 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

72 if(
z
>=
n
)

73 
z
=
n
-1;

74 
	`¥ötf
("%d\n",
dp
[
x
-1][
y
-1][
z
]);

78 
	}
}

	@problems/codeforces/div2_codes/round119/round_119_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 200100

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

35 
	snode
{ 
	mi
,
	ml
; }
	gq
[
S
];

36 
	gt›
,
	gli°
[
N
],
	gèg
[N],
	g°
,
	ged
,
	gdis
[N];

38 
	$ö£π
(
f
,
t
)

40 
e
[
t›
].
f
=f,e[t›].
t
=t;

41 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

42 
	}
}

44 
	$ok
(
d
)

46 
l
,
r
;

47 
	`mem£t
(
dis
,0,(dis));

48 
node
 
tmp
;

49 
tmp
.
i
=
°
,tmp.
l
=
d
;

50 
dis
[
°
]=
d
;

51 
q
[
l
=
r
=0]=
tmp
;

52 ; 
l
<=
r
;)

54 
node
 
now
=
q
[
l
++];

55 
ii
=
now
.
i
;

56 if(
now
.
l
<
dis
[
ii
]||now.l<=0)

58 
i
=
li°
[
ii
]; i!=-1; i=
e
[i].
n
)

60 
to
=
e
[
i
].
t
;

61 if(
to
==
ed
)

63 if(
now
.
l
-1>
dis
[
to
]||(
èg
[to]&&dis[to]<
d
))

65 
dd
;

66 if(
èg
[
to
])

67 
dd
=
d
;

69 
dd
=
now
.
l
-1;

70 
dis
[
to
]=
dd
;

71 ++
r
;

72 
q
[
r
].
l
=
dd
;

73 
q
[
r
].
i
=
to
;

78 
	}
}

80 
	$sﬁve
(
n
)

82 
l
=0,
r
=
n
,
mid
;

83 ; 
l
<=
r
;)

85 
mid
=(
l
+
r
)>>1;

86 if(
	`ok
(
mid
))

87 
r
=
mid
-1;

89 
l
=
mid
+1;

91 if(
r
>=
n
)

93  
l
;

94 
	}
}

96 
	$maö
()

98 
n
,
m
,
k
,
ªt
;

99 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)!=
EOF
)

101 
	`mem£t
(
èg
,0,(tag));

102 
t›
=0;

103 
i
=0; i<
n
; i++)

104 
li°
[
i
]=-1;

105 
i
=0; i<
k
; i++)

107 
x
;

108 
	`sˇnf
("%d",&
x
);

109 
èg
[
x
-1]=1;

111 
i
=0; i<
m
; i++)

113 
x
,
y
;

114 
	`sˇnf
("%d%d",&
x
,&
y
);

115 
x
--,
y
--;

116 
	`ö£π
(
x
,
y
);

117 
	`ö£π
(
y
,
x
);

119 
	`sˇnf
("%d%d",&
°
,&
ed
);

120 
°
--,
ed
--;

121 
ªt
=
	`sﬁve
(
n
);

122 
	`¥ötf
("%d\n",
ªt
);

125 
	}
}

	@problems/codeforces/div2_codes/round120/round_120_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	$maö
()

41 
n
,
m
;

43 ~
	`sˇnf
("%d%d",&
n
,&
m
))

45 if(
n
==0)

47 if(
m
==0)

48 
	`¥ötf
("%d %d\n",0,0);

50 
	`puts
("Impossible");

54 if(
m
>0)

55 
	`¥ötf
("%d %d\n",
	`max
(
m
,
n
),n+m-1);

57 
	`¥ötf
("%d %d\n",
n
,n);

61 
	}
}

	@problems/codeforces/div2_codes/round120/round_120_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	$maö
()

41 
x1
,
y1
,
x2
,
y2
,
r1
,
r2
,
l
,
t
;

42 
	`sˇnf
("%lf%lf%lf%lf%lf%lf",&
x1
,&
y1
,&
r1
,&
x2
,&
y2
,&
r2
)!=
EOF
)

44 
l
=
	`sqπ
((
x1
-
x2
)*(x1-x2)+(
y1
-
y2
)*(y1-y2));

45 if(
r1
>
r2
)

46 
t
=
r1
,r1=
r2
,r2=t;

47 if(
r1
+
r2
<=
l
)

48 
	`¥ötf
("%.20lf\n",(
l
-
r1
-
r2
)/2);

49 if(
l
<=
r2
-
r1
)

50 
	`¥ötf
("%.20lf\n",(
r2
-
l
-
r1
)/2);

52 
	`¥ötf
("%.20lf\n",0.0);

55 
	}
}

	@problems/codeforces/div2_codes/round120/round_120_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
°rög
 
	gs
,
	gªt
;

40 
	gt›
,
	gd©
[
N
],
	gnow
;

42 
	$dfs
()

44 if(
now
>
t›
)

46 if(
d©
[
now
]==0)

48 
ªt
+="int";

49 
now
++;

52 
ªt
+="pair<";

53 
now
++;

54 
	`dfs
();

55 
ªt
+=",";

56 
	`dfs
();

57 
ªt
+=">";

59 
	}
}

61 
	$maö
()

63 
n
,
i
;

64 
	`sˇnf
("%d",&
n
);

65 
i
=0; 
cö
>>
s
; i++)

66 if(
s
=="pair")

67 
d©
[
i
]=1;

69 
d©
[
i
]=0;

70 
t›
=
i
;

71 
now
=0;

72 
	`dfs
();

73 if(
now
==
t›
)

74 
cout
<<
ªt
<<
ídl
;

76 
	`puts
("Error occurred");

78 
	}
}

	@problems/codeforces/div2_codes/round120/round_120_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 600010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gd©
[
N
],
	gnum
[N],
	g˙t
[N],
	gx
[N];

41 
	$cmp
(
a
,
b
){ á<b; 
	}
}

42 
	gt›
=0;

44 
	$gë_id
(
e
)

46 
l
=1,
r
=
t›
,
m
;

47 ; 
l
<=
r
;)

49 
m
=(
l
+
r
)>>1;

50 if(
x
[
m
]==
e
)

51  
m
;

52 if(
x
[
m
]<
e
)

53 
l
=
m
+1;

55 
r
=
m
-1;

58 
	}
}

60 
	$maö
()

62 
n
,
k
,
l
,
r
;

63 
LL
 
ªt
;

64 ~
	`sˇnf
("%d%d",&
n
,&
k
))

66 
ªt
=0;

67 
	`mem£t
(
˙t
,0,(cnt));

68 
i
=1; i<=
n
; i++)

69 
	`sˇnf
("%d",&
d©
[
i
]),
x
[i]=dat[i];

70 
	`s‹t
(
x
+1,x+1+
n
,
cmp
);

71 
¥e
=-1;

72 
t›
=0;

73 
i
=1; i<=
n
; i++)

75 if(
¥e
!=
x
[
i
])

76 
x
[++
t›
]=x[
i
],
¥e
=x[i];

78 
id
,
pos
;

79 
l
=0,
r
=0,
pos
=0;

80 
l
=1;Ü<=
n
;Ü++)

82 if(
˙t
[
pos
]>=
k
)

83 
ªt
+=
n
-
r
+1;

86 if(
r
==
n
) ;

87 
r
++;Ñ<=
n
;Ñ++)

89 
id
=
	`gë_id
(
d©
[
r
]);

90 
˙t
[
id
]++;

91 if(
˙t
[
id
]>=
k
)

94 if(
r
>
n
) ;

95 
pos
=
id
;

96 
ªt
+=
n
-
r
+1;

99 
id
=
	`gë_id
(
d©
[
l
]);

100 
˙t
[
id
]--;

102 
cout
<<
ªt
<<
ídl
;

105 
	}
}

	@problems/codeforces/div2_codes/round120/round_120_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 601000

	)

20 
	#M
 2000010

	)

21 
	#S
 2000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

40 
	g£t
<> 
	g°
;

41 
	gve˘‹
<> 
	g™s
[
N
];

42 
	g£t
<>::
ôî©‹
 
p
;

43 
	gªt
,
	gt›
,
	gli°
[
N
],
	gq
[N],
	gv
[N],
	gu£
[N],
	ge£
[N];

45 
	$ö£π
(
f
,
t
)

47 
e
[
t›
].
f
=f,e[t›].
t
=t;

48 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

49 
	}
}

51 
	$sﬁve
(
n
)

53 
l
,
r
,
˙t
,
œy
=1;

54 
	`mem£t
(
u£
,0,(use));

55 
˙t
=0; c¡<
n
; 
ªt
++)

57 
x
=*
°
.
	`begö
();

58 
°
.
	`îa£
(
x
);

59 
q
[
l
=
r
=0]=
x
;

60 ; 
l
<=
r
;)

62 
num
=0;

63 
x
=
q
[
l
++];

64 
™s
[
ªt
].
	`PB
(
x
);

65 
˙t
++;

66 
i
=
li°
[
x
]; i!=-1; i=
e
[i].
n
)

67 
u£
[
e
[
i
].
t
]=
œy
;

68 
p
=
°
.
	`begö
();Ö!=°.
	`íd
();Ö++)

70 
tmp
=*
p
;

71 if(
u£
[
tmp
]==
œy
)

73 
q
[++
r
]=
tmp
;

74 
e£
[
num
++]=
tmp
;

76 
i
=0; i<
num
; i++)

77 
°
.
	`îa£
(
e£
[
i
]);

78 
œy
++;

81 
	}
}

83 
	$maö
()

85 
n
,
m
,
x
,
y
;

86 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

88 
°
.
	`˛ór
();

89 
t›
=0,
ªt
=0;

90 
i
=0; i<
n
; i++)

92 
°
.
	`ö£π
(
i
);

93 
™s
[
i
].
	`˛ór
();

95 
i
=0; i<
n
; i++)

96 
li°
[
i
]=-1;

97 
i
=0; i<
m
; i++)

99 
	`sˇnf
("%d%d",&
x
,&
y
);

100 
x
--,
y
--;

101 
	`ö£π
(
x
,
y
);

102 
	`ö£π
(
y
,
x
);

104 
	`sﬁve
(
n
);

105 
	`¥ötf
("%d\n",
ªt
);

106 
i
=0; i<
ªt
; i++)

108 
	`¥ötf
("%d",
™s
[
i
].
	`size
());

109 
j
=0; j<
™s
[
i
].
	`size
(); j++)

110 
	`¥ötf
(" %d",
™s
[
i
][
j
]+1);

111 
	`puts
("");

115 
	}
}

	@problems/codeforces/div2_codes/round121/round121_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	$_ok
(
LL
 
n
)

41 
LL
 
x
=(LL)
	`sqπ
(2.0*
n
);

42 ; 
x
*(x-1)<=2*
n
; x++)

44 if(
x
*(x-1)==2*
n
)

48 
	}
}

50 
	$ok
(
LL
 
n
)

52 
LL
 
k
=1; ; k++)

54 
LL
 
x
=
k
*(k+1)/2;

55 if(
x
>=
n
)

57 if(
	`_ok
(
n
-
x
))

61 
	}
}

63 
	$maö
()

65 
LL
 
n
;

66 
cö
>>
n
)

68 if(
	`ok
(
n
))

69 
	`puts
("YES");

71 
	`puts
("NO");

74 
	}
}

	@problems/codeforces/div2_codes/round121/round121_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gd©
[
N
];

41 
	$maö
()

43 
n
,
ªt
;

44 
	`sˇnf
("%d",&
n
);

45 
i
=0; i<
n
; i++)

46 
	`sˇnf
("%d",&
d©
[
i
]);

47 
ªt
=
	`mö
(
d©
[0],d©[
n
-1]);

48 
i
=1; i<
n
-1; i++)

49 
ªt
=
	`mö
‘ë,
	`max
(
d©
[
i
],dat[i+1]));

50 
	`¥ötf
("%d\n",
ªt
);

52 
	}
}

	@problems/codeforces/div2_codes/round121/round121_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 501000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#X
 26

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3fffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

36 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

37 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

38 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

40 
	gdp
[30][30];

41 
	gs
[
N
];

43 
	$maö
()

45 
n
;

46 
	`mem£t
(
dp
,0,(dp));

47 
	`sˇnf
("%d",&
n
);

48 
i
=0; i<
n
; i++)

50 
	`sˇnf
("%s",
s
);

51 
l
=
	`°æí
(
s
);

52 
j
=0; j<
X
; j++)

54 if(
dp
[
j
][
s
[0]-'a']>0)

55 
dp
[
j
][
s
[
l
-1]-'a']=
	`max
(dp[j][s[l-1]-'a'],dp[j][s[0]-'a']+l);

56 if(
j
==
s
[0]-'a')

57 
dp
[
j
][
s
[
l
-1]-'a']=
	`max
(dp[j][s[l-1]-'a'],dp[j][s[0]-'a']+l);

60 
ªt
=0;

61 
i
=0; i<
X
; i++)

62 
ªt
=
	`max
‘ë,
dp
[
i
][i]);

63 
	`¥ötf
("%d\n",
ªt
);

65 
	}
}

	@problems/codeforces/div2_codes/round121/round121_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

35 
	snode
{ 
	mx
,
	mi
; }
	gno
[
N
];

36 
LL
 
	ga
[
N
];

37 
	gèg
[
N
];

38 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
>b.x; 
	}
}

40 
	$maö
()

42 
n
,
k
;

43 
LL
 
b
,
s1
,
s2
;

44 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

46 
cö
>>
b
;

47 
s1
=
s2
=0;

48 
	`mem£t
(
èg
,0,(tag));

49 
i
=0; i<
n
; i++)

51 
x
;

52 
	`sˇnf
("%d",&
x
);

53 
a
[
i
]=
x
;

54 
no
[
i
].
x
=x,no[i].i=i;

56 
	`s‹t
(
no
,no+
n
-1,
cmp
);

57 
i
=0; i<
k
; i++)

59 
èg
[
no
[
i
].i]=1;

60 
s1
+=
no
[
i
].
x
;

62 
s2
=
s1
-
no
[
k
-1].
x
;

63 
ªt
=-1;

64 
i
=0; i<
n
; i++)

66 if(
èg
[
i
])

68 if(
s1
>
b
)

70 
ªt
=
i
+1;

74 if(
s2
+
a
[
i
]>
b
)

76 
ªt
=
i
+1;

80 if(
ªt
==-1)

81 
ªt
=
n
;

82 
	`¥ötf
("%d\n",
ªt
);

85 
	}
}

	@problems/codeforces/div2_codes/round121/round121_E_classic.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
<<1];

35 
	snode
{ 
	mv
,
	ml
; }
	gno
[
N
];

36 
	gli°
[
N
],
	gt›
,
	gdp
[N][20],
	gœy
[N],
	gid
[N],
	g˙t
[N],
	gç
,
	g™s
[N];

38 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

39 
	$cmp
(
node
 
a
,nodê
b
){ á.
l
>b.l; 
	}
}

41 
	$ö£π
(
f
,
t
)

43 
e
[
t›
].
f
=f,e[t›].
t
=t;

44 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

45 
	}
}

47 
	$dfs
(
now
,
l
,
Á
)

49 
dp
[
now
][0]=
Á
;

50 
œy
[
now
]=
l
;

51 
no
[
ç
].
l
=l;

52 
no
[
ç
++].
v
=
now
;

53 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

55 
to
=
e
[
i
].
t
;

56 if(
to
==
Á
)

58 
id
[
to
]=
i
>>1;

59 
	`dfs
(
to
,
l
+1,
now
);

61 
	}
}

63 
	$LCA
(
u
,
v
)

65 
t
,
k
;

66 if(
œy
[
u
]<œy[
v
])

67 
t
=
u
,u=
v
,v=t;

68 
k
=
œy
[
u
]-œy[
v
];

69 
i
=0; 
	`B
(i)<=
k
; i++)

70 if(
	`B
(
i
)&
k
)

71 
u
=
dp
[u][
i
];

72 if(
u
==
v
)  u;

73 
k
=17; 
dp
[
u
][0]!=dp[
v
][0]; u=dp[u][k],v=dp[v][k])

74 ; 
dp
[
u
][
k
]==dp[
v
][k]; k--);

75  
dp
[
u
][0];

76 
	}
}

78 
	$maö
()

80 
n
,
m
;

81 
	`sˇnf
("%d",&
n
)!=
EOF
)

83 
t›
=0,
ç
=0;

84 
	`mem£t
(
dp
,0,(dp));

85 
	`mem£t
(
™s
,0,(ans));

86 
	`mem£t
(
˙t
,0,(cnt));

87 
i
=0; i<=
n
; i++)

88 
li°
[
i
]=-1;

89 
i
=0; i<
n
-1; i++)

91 
x
,
y
;

92 
	`sˇnf
("%d%d",&
x
,&
y
);

93 
	`ö£π
(
x
,
y
);

94 
	`ö£π
(
y
,
x
);

96 
	`dfs
(1,0,0);

97 
id
[1]=
n
;

98 
k
=1; k<18; k++)

99 
i
=1; i<=
n
; i++)

101 if(
dp
[
i
][
k
-1]==0)

102 
dp
[
i
][
k
]=0;

104 
dp
[
i
][
k
]=dp[dp[i][k-1]][k-1];

106 
	`sˇnf
("%d",&
m
);

107 
i
=0; i<
m
; i++)

109 
x
,
y
;

110 
	`sˇnf
("%d%d",&
x
,&
y
);

111 
˙t
[
x
]++,˙t[
y
]++;

112 
˙t
[
	`LCA
(
x
,
y
)]-=2;

114 
	`s‹t
(
no
,no+
ç
,
cmp
);

115 
i
=0; i<
ç
; i++)

117 
now
=
no
[
i
].
v
;

118 
˙t
[
dp
[
now
][0]]+=cnt[now];

120 
i
=2; i<=
n
; i++)

121 
™s
[
id
[
i
]]=
˙t
[i];

122 
i
=0; i<
n
-1; i++)

123 
	`¥ötf
("%d ",
™s
[
i
]);

124 
	`puts
("");

127 
	}
}

	@problems/codeforces/div2_codes/round122/round122_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	$maö
()

41 
n
,
k
,
x
,
y
;

42 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

44 
x
=
k
/
n
;

45 
y
=
k
%
n
;

46 if(
x
==2)

47 
	`¥ötf
("%d\n",
n
-
y
);

49 
	`¥ötf
("%d\n",0);

52 
	}
}

	@problems/codeforces/div2_codes/round122/round122_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	$gcd
(
LL
 
a
,LL 
b
)

41  
b
?
	`gcd
(b,
a
%b):a;

42 
	}
}

44 
	$maö
()

46 
t
;

47 
LL
 
n
;

48 
	`sˇnf
("%d",&
t
);

49 ; 
t
--;)

51 
cö
>>
n
;

52 
LL
 
g
=
	`gcd
(
n
+1,4*n);

53 
LL
 
x
=4*
n
/
g
;

54 
cout
<<
x
+1<<
ídl
;

57 
	}
}

	@problems/codeforces/div2_codes/round122/round122_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 110

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gs
[
N
][N];

40 
	gn
,
	gm
,
	gv
[
N
][N],
	gdú
[4][2]={{1,0},{-1,0},{0,1},{0,-1}};

42 
	$öbﬂrd
(
x
,
y
)

44  0<=
x
&&x<
m
&&0<=
y
&&y<
n
;

45 
	}
}

47 
	$dfs
(
i
,
j
)

49 
v
[
i
][
j
]=1;

50 
u
=0; u<4; u++)

52 
x
=
i
+
dú
[
u
][0],
y
=
j
+dir[u][1];

53 if(
	`öbﬂrd
(
x
,
y
)&&!
v
[x][y]&&
s
[x][y]=='#')

54 
	`dfs
(
x
,
y
);

56 
	}
}

58 
	$to_dñ
(
i
,
j
)

60 
ªt
=0;

61 
u
=0; u<4; u++)

63 
x
=
i
+
dú
[
u
][0],
y
=
j
+dir[u][1];

64 if(
	`öbﬂrd
(
x
,
y
)&&
s
[x][y]=='#')

65 
ªt
++;

67  
ªt
>1;

68 
	}
}

70 
	$ok
()

72 
ªt
=0;

73 
	`mem£t
(
v
,0,(v));

74 
i
=0; i<
m
; i++)

75 
j
=0; j<
n
; j++)

76 if(!
v
[
i
][
j
]&&
s
[i][j]=='#')

78 
	`dfs
(
i
,
j
);

79 
ªt
++;

81  
ªt
>1;

82 
	}
}

84 
	$sﬁve
()

86 
˙t
=0;

87 
i
=0; i<
m
; i++)

88 
j
=0; j<
n
; j++)

89 if(
s
[
i
][
j
]=='#')

90 
˙t
++;

91 if(
˙t
<=2)  -1;

92 
i
=0; i<
m
; i++)

93 
j
=0; j<
n
; j++)

95 if(
s
[
i
][
j
]=='#')

97 
s
[
i
][
j
]='.';

98 if(
	`ok
())

100 
s
[
i
][
j
]='#';

104 
	}
}

106 
	$maö
()

108 
	`sˇnf
("%d%d",&
m
,&
n
);

109 
i
=0; i<
m
; i++)

110 
	`sˇnf
("%s",
s
[
i
]);

111 
	`¥ötf
("%d\n",
	`sﬁve
());

113 
	}
}

	@problems/codeforces/div2_codes/round122/round122_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 32

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffffffffffLL

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gn
,
	gu
,
	gr
;

40 
LL
 
	ga
[
N
],
	gb
[N],
	gk
[N],
	gp
[N],
	gªt
;

42 
	$dfs
(
˙t
,
LL
 
Ø
[],
èg
)

44 if(
˙t
==
u
)

46 
LL
 
s
=0;

47 
i
=0; i<
n
; i++)

48 
s
+=
Ø
[
i
]*
k
[i];

49 
ªt
=
	`max
‘ë,
s
);

52 if((
u
-
˙t
)%2==0)

54 
LL
 
s
=0;

55 
i
=0; i<
n
; i++)

56 
s
+=
Ø
[
i
]*
k
[i];

57 
ªt
=
	`max
‘ë,
s
);

59 
LL
 
«
[
N
];

60 if(!
èg
)

62 
i
=0; i<
n
; i++)

63 
«
[
i
]=
Ø
[i]^
b
[i];

64 
	`dfs
(
˙t
+1,
«
,1);

66 
i
=0; i<
n
; i++)

67 
«
[
i
]=
Ø
[
p
[i]-1]+
r
;

68 
	`dfs
(
˙t
+1,
«
,0);

69 
	}
}

71 
	$maö
()

73 
	`sˇnf
("%d%d%d",&
n
,&
u
,&
r
);

74 
i
=0; i<
n
; i++)

75 
cö
>>
a
[
i
];

76 
i
=0; i<
n
; i++)

77 
cö
>>
b
[
i
];

78 
i
=0; i<
n
; i++)

79 
cö
>>
k
[
i
];

80 
i
=0; i<
n
; i++)

81 
cö
>>
p
[
i
];

82 
ªt
=-
öf
;

83 
	`dfs
(0,
a
,0);

84 
cout
<<
ªt
<<
ídl
;

86 
	}
}

	@problems/codeforces/div2_codes/round122/round122_E_gauss_classic.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 1000000

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gmt
[7][6]={

42 },
	gb
[7],
	gx
[7],
	gm©
[6][7],
	g™¶
;

43 
	gªt
[7][5]={"aaab","aaba","aabb","abaa","abab","abba","abbb"};

45 
	$show
()

47 
j
=0; j<6; j++)

49 
k
=0; k<7; k++)

50 
	`¥ötf
("%d ",
m©
[
j
][
k
]);

51 
	`¥ötf
("%d\n",
b
[
j
]);

53 
	`puts
("");

55 
	}
}

57 
	$sﬁve
()

59 
id
;

60 
i
=0; i<6; i++)

63 if(
m©
[
i
][i]==0)

65 
id
=-1;

66 
j
=
i
+1; j<6; j++)

67 if(
m©
[
j
][
i
])

69 
id
=
j
;

72 if(
id
==-1)

74 
j
=0; j<7; j++)

75 
	`sw≠
(
m©
[
i
][
j
],m©[
id
][j]);

76 
	`sw≠
(
b
[
id
],b[
i
]);

78 
x
=
m©
[
i
][i];

79 
j
=
i
; j<7; j++)

80 if(
m©
[
i
][
j
]%
x
)

82 
m©
[
i
][
j
]/=
x
;

83 if(
b
[
i
]%
x
)  0;

84 
b
[
i
]/=
x
;

85 
j
=0; j<6; j++)

87 if(
j
==
i
) ;

88 
d
=
m©
[
j
][
i
];

89 
k
=
i
; k<7; k++)

90 
m©
[
j
][
k
]-=
d
*m©[
i
][k];

91 
b
[
j
]-=
d
*b[
i
];

95 
™s
=100*
öf
,
tmp
,
èg
,
xx
;

96 
i
=0; i<
öf
; i++)

98 
tmp
=
i
;

99 
èg
=1;

100 
j
=0; j<6; j++)

102 
x
[
j
]=
b
[j]-
m©
[j][6]*
i
;

103 if(
x
[
j
]<0)

104 
èg
=0;

105 
tmp
+=
x
[
j
];

107 if(
èg
==0) ;

108 if(
™s
>
tmp
)

109 
™s
=
tmp
,
xx
=
i
;

111 if(
™s
>=
öf
)

113 
j
=0; j<6; j++)

114 
x
[
j
]=
b
[j]-
m©
[j][6]*
xx
;

115 
x
[6]=
xx
;

116 
™¶
=
™s
;

118 
	}
}

120 
	$maö
()

122 
i
=0; i<6; i++)

123 
j
=0; j<7; j++)

124 
m©
[
i
][
j
]=
mt
[j][i];

125 
	`sˇnf
("%d",&
b
[0])!=
EOF
)

127 
i
=1; i<7; i++)

128 
	`sˇnf
("%d",&
b
[
i
]);

129 if(
	`sﬁve
())

131 
	`¥ötf
("%d\n",
™¶
);

132 
i
=0; i<4; i++,
	`puts
(""))

133 
j
=0; j<7; j++)

134 
k
=0; k<
x
[
j
]; k++)

135 
	`¥ötf
("%c",
ªt
[
j
][
i
]);

138 
	`puts
("-1");

141 
	}
}

	@problems/codeforces/div2_codes/round124/round_124_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	$maö
()

41 
a
,
b
,
r
;

42 
	`sˇnf
("%d%d%d",&
a
,&
b
,&
r
)!=
EOF
)

44 
x
,
y
;

45 
x
=
a
/(2*
r
);

46 
y
=
b
/(2*
r
);

47 if(
x
==0||
y
==0)

48 
	`puts
("Second");

50 
	`puts
("First");

53 
	}
}

	@problems/codeforces/div2_codes/round124/round_124_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	ga
[
N
],
	gb
[N];

41 
	$gcd
(
a
,
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

43 
	$maö
()

45 
n
,
m
;

46 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

48 
i
=0; i<=
n
; i++)

49 
	`sˇnf
("%d",&
a
[
i
]);

50 
i
=0; i<=
m
; i++)

51 
	`sˇnf
("%d",&
b
[
i
]);

52 if(
n
<
m
)

54 
	`puts
("0/1");

56 if(
n
>
m
)

58 if(
a
[0]*
b
[0]>0)

59 
	`puts
("Infinity");

61 
	`puts
("-Infinity");

65 
èg
=(
a
[0]*
b
[0]>0?1:-1);

66 
Ø
=
	`abs
(
a
[0]),
bb
˜bs(
b
[0]);

67 
g
=
	`gcd
(
Ø
,
bb
);

68 
Ø
/=
g
,
bb
/=g;

69 
	`¥ötf
("%d/%d\n",
èg
*
Ø
,
bb
);

73 
	}
}

	@problems/codeforces/div2_codes/round124/round_124_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gs
[
N
],
	gªt
[N];

40 
	gt›
;

42 
	$maö
()

44 
	`sˇnf
("%s",
s
)!=
EOF
)

46 
now
=0;

47 
l
=
	`°æí
(
s
);

48 
t›
=0;

49 
i
=25; i>=0; i--)

51 
j
=
now
; j<
l
; j++)

53 if(
s
[
j
]==
i
+'a')

55 
ªt
[
t›
++]=
i
+'a';

56 
now
=
j
+1;

60 
ªt
[
t›
]='\0';

61 
	`¥ötf
("%s\n",
ªt
);

64 
	}
}

	@problems/codeforces/div2_codes/round124/round_124_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1510

	)

20 
	#M
 1000010

	)

21 
	#S
 4400100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
][N];

35 
	sqnode
{ 
	mr
,
	mc
,
	mx
,
	my
; }
	gq
[
S
],
	g°
;

36 
	gvis
[
N
][N],
	gm©
[N][N],
	gdú
[4][2]={{0,1},{0,-1},{1,0},{-1,0}};

37 
	gs
[
N
][N];

39 
	$sﬁve
(
m
,
n
)

41 
	`mem£t
(
vis
,0,(vis));

42 
qnode
 
tmp
;

43 
Œ
,
º
;

44 
q
[
Œ
=
º
=0]=
°
;

45 
vis
[
°
.
r
][°.
c
]=1;

46 
no
[
°
.
r
][°.
c
].
x
Úo[°.r][°.c].
y
=0;

47 ; 
Œ
<=
º
;)

49 
qnode
 
now
=
q
[
Œ
++];

50 
i
=0; i<4; i++)

52 
r
=
now
.r+
dú
[
i
][0],
c
Úow.c+dú[i][1],
x
Úow.x,
y
=now.y;

53 if(
r
<0)

54 
r
=
m
-1,
x
=
now
.x-1;

55 if(
r
>=
m
)

56 
r
=0,
x
=
now
.x+1;

57 if(
c
<0)

58 
c
=
n
-1,
y
=
now
.y-1;

59 if(
c
>=
n
)

60 
c
=0,
y
=
now
.y+1;

61 if(
m©
[
r
][
c
])

63 if(
vis
[
r
][
c
])

65 if(
no
[
r
][
c
].
x
!=x||no[r][c].
y
!=y)

70 
vis
[
r
][
c
]=1;

71 
no
[
r
][
c
].
x
=x,no[r][c].
y
=y;

72 
tmp
.
r
Ù,tmp.
c
=c,tmp.
x
=x,tmp.
y
=y;

73 
q
[++
º
]=
tmp
;

78 
	}
}

80 
	$maö
()

82 
m
,
n
;

83 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

85 
i
=0; i<
m
; i++)

87 
	`sˇnf
("%s",
s
[
i
]);

88 
j
=0; j<
n
; j++)

90 
m©
[
i
][
j
]=0;

91 if(
s
[
i
][
j
]=='S')

92 
°
.
r
=
i
,°.
c
=
j
,°.
x
=0,°.
y
=0;

93 if(
s
[
i
][
j
]=='#')

94 
m©
[
i
][
j
]=1;

97 if(
	`sﬁve
(
m
,
n
))

98 
	`puts
("Yes");

100 
	`puts
("No");

103 
	}
}

	@problems/codeforces/div2_codes/round124/round_124_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1510

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 1e10

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
<<1];

40 
	snode
{ 
LL
 
	mx
,
	my
; 
	mi
; }
	gno
[
N
];

41 
	gt›
,
	gli°
[
N
],
	g˙t
[N],
	gvis
[N],
	gªt
[N];

43 
	$cmp
(
node
 
a
,nodê
b
)

45  
a
.
x
*
b
.
y
-b.x*a.y>0;

46 
	}
}

48 
	$ö£π
(
f
,
t
)

50 
e
[
t›
].
f
=f,e[t›].
t
=t;

51 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

52 
	}
}

54 
	$dfs
(
now
)

56 
˙t
[
now
]=1;

57 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

59 
to
=
e
[
i
].
t
;

60 if(
˙t
[
to
])

62 
	`dfs
(
to
);

63 
˙t
[
now
]+=˙t[
to
];

65 
	}
}

67 
	$dfs
(
now
,
l
,
r
)

69 if(
l
>
r
)

71 
vis
[
now
]=1;

72 
id
=-1,
∆
;

73 
LL
 
mi
=
öf
;

74 
i
=
l
; i<=
r
; i++)

75 if(
mi
>
no
[
i
].
y
)

76 
mi
=
no
[
i
].
y
,
id
=i;

77 
	`sw≠
(
no
[
id
],no[
l
]);

78 
i
=
l
+1; i<=
r
; i++)

79 
no
[
i
].
y
-Úo[
l
].y,no[i].
x
-=no[l].x;

80 
	`s‹t
(
no
+
l
+1,no+
r
+1,
cmp
);

81 
∆
=
l
+1;

82 
ªt
[
no
[
l
].
i
]=
now
;

83 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

85 
to
=
e
[
i
].
t
;

86 if(
vis
[
to
]) ;

87 
	`dfs
(
to
,
∆
,∆+
˙t
[to]-1);

88 
∆
+=
˙t
[
to
];

90 
	}
}

92 
	$maö
()

94 
n
,
x
,
y
;

95 
	`sˇnf
("%d",&
n
)!=
EOF
)

97 
t›
=0;

98 
	`mem£t
(
˙t
,0,(cnt));

99 
i
=0; i<
n
; i++)

100 
li°
[
i
]=-1;

101 
i
=0; i<
n
-1; i++)

103 
	`sˇnf
("%d%d",&
x
,&
y
);

104 
x
--,
y
--;

105 
	`ö£π
(
x
,
y
);

106 
	`ö£π
(
y
,
x
);

108 
	`dfs
(0);

109 
i
=0; i<
n
; i++)

111 
	`sˇnf
("%d%d",&
x
,&
y
);

112 
no
[
i
].
x
=x,no[i].
y
=y,no[i].i=i;

114 
	`mem£t
(
vis
,0,(vis));

115 
	`dfs
(0,0,
n
-1);

116 
i
=0; i<
n
; i++)

117 
	`¥ötf
("%d ",
ªt
[
i
]+1);

118 
	`puts
("");

121 
	}
}

	@problems/codeforces/div2_codes/round129/round129_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x7fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gd©
[
N
];

41 
	$maö
()

43 
n
;

44 
	`sˇnf
("%d",&
n
)!=
EOF
)

46 
x
=
öf
,
id
;

47 
i
=0; i<
n
; i++)

49 
	`sˇnf
("%d",&
d©
[
i
]);

50 if(
x
>
d©
[
i
])

51 
x
=
d©
[
i
],
id
=i;

53 
˙t
=0;

54 
i
=0; i<
n
; i++)

55 if(
d©
[
i
]==
x
)

56 
˙t
++;

57 if(
˙t
>=2)

58 
	`puts
("Still Rozdil");

60 
	`¥ötf
("%d\n",
id
+1);

63 
	}
}

	@problems/codeforces/div2_codes/round129/round129_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gd©
[
N
];

41 
	$maö
()

43 
n
;

44 
LL
 
ªt
=0;

45 
	`sˇnf
("%d",&
n
)!=
EOF
)

47 
ªt
=0;

48 
i
=0; i<
n
; i++)

49 
	`sˇnf
("%d",&
d©
[
i
]);

50 
i
=
n
-1; i>0; i--)

52 if(
d©
[
i
]<dat[i-1])

53 
ªt
+=
d©
[
i
-1]-dat[i];

55 
cout
<<
ªt
<<
ídl
;

58 
	}
}

	@problems/codeforces/div2_codes/round129/round129_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	gãn
[21];

41 
	$öô
()

43 
ãn
[0]=1;

44 
i
=1; i<21; i++)

45 
ãn
[
i
]=ten[i-1]*10;

46 
	}
}

48 
LL
 
	$gël
(
LL
 
x
)

50 
LL
 
ªt
=0;

51 ; 
x
;)

52 
x
/=10,
ªt
++;

53  
ªt
;

54 
	}
}

56 
LL
 
	$gëh
(
LL
 
x
)

60 if((
x
/10)==0)

61  
x
;

62 
x
/=10;

64 
	}
}

66 
LL
 
	$gë
(
LL
 
x
)

68 
LL
 
ªt
=0;

69 if(
x
<=0)

71 
LL
 
l
=
	`gël
(
x
),
y
ˆ-2,
low
=x%10;

72 
LL
 
hi
=
	`gëh
(
x
);

73 if(
y
<0)

74  
x
;

75 if(
y
==0)

76  
	`LL
((
hi
<=
low
)+hi-1+9);

77 
i
=0; i<
y
; i++)

78 
ªt
+=9*
ãn
[
i
];

79 
LL
 
tmp
=
x
%
ãn
[
l
-1];

80 
tmp
/=10;

81 
ªt
+=
tmp
+1;

82 if(
low
<
hi
)

83 
ªt
--;

84  
ªt
+(
hi
-1)*
ãn
[
y
]+9;

85 
	}
}

87 
	$maö
()

89 
LL
 
l
,
r
;

90 
	`öô
();

91 
cö
>>
l
>>
r
)

93 
cout
<<
	`gë
(
r
)-gë(
l
-1)<<
ídl
;

96 
	}
}

	@problems/codeforces/div2_codes/round129/round129_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 201000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

40 
	sCNT
{ 
	ma
,
	mb
,
	mc
; }
	gshu
[
N
];

41 
	gnum
[
N
+N],
	gt›
,
	gç
;

43 
	$cmp
(
a
,
b
){ á<b; 
	}
}

45 
	$föd
(
x
)

47 
l
=0,
r
=
ç
-1,
m
;

48 ; 
l
<=
r
;)

50 
m
=(
l
+
r
)>>1;

51 if(
num
[
m
]>
x
)

52 
r
=
m
-1;

53 if(
num
[
m
]<
x
)

54 
l
=
m
+1;

56  
m
;

59 
	}
}

61 
	$maö
()

63 
n
,
m
;

64 
	`sˇnf
("%d",&
n
)!=
EOF
)

66 
m
=(
n
+1)/2;

67 
t›
=0;

68 
i
=0; i<
n
; i++)

70 
	`sˇnf
("%d%d",&
no
[
i
].
x
,&no[i].
y
);

71 
num
[
t›
++]=
no
[
i
].
x
,num[t›++]Úo[i].
y
;

73 
	`s‹t
(
num
,num+
t›
,
cmp
);

74 
ç
=0;

75 
i
=1; i<
t›
; i++)

77 if(
num
[
i
]=Úum[
ç
])

79 
num
[++
ç
]Úum[
i
];

81 
ç
++;

82 
i
=0; i<
ç
; i++)

83 
shu
[
i
].
a
=shu[i].
b
=shu[i].
c
=0;

84 
i
=0; i<
n
; i++)

86 
x
=
	`föd
(
no
[
i
].x),
y
=find(no[i].y);

87 if(
x
==
y
)

88 
shu
[
x
].
c
++;

90 
shu
[
x
].
a
++,shu[
y
].
b
++;

93 
ªt
=
öf
;

94 
i
=0; i<
ç
; i++)

96 if(
shu
[
i
].
a
+shu[i].
c
+shu[i].
b
>=
m
)

98 if(
shu
[
i
].
a
+shu[i].
c
>=
m
)

100 
ªt
=0;

103 
ªt
=
	`mö
‘ë,
m
-
shu
[
i
].
a
-shu[i].
c
);

106 if(
ªt
>=
öf
)

107 
	`puts
("-1");

109 
	`¥ötf
("%d\n",
ªt
);

112 
	}
}

	@problems/codeforces/div2_codes/round129/round129_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 201000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gß
[
N
],
	gsb
[N];

40 
LL
 
	gm©
[30][
N
],
	gåa
[30][N];

42 
	$maö
()

44 
n
;

45 
	`sˇnf
("%d",&
n
)!=
EOF
)

47 
ªt
=0;

48 
	`sˇnf
("%s%s",
ß
,
sb
);

49 
	`mem£t
(
m©
,0,(mat));

50 
	`mem£t
(
åa
,0,(tra));

51 
i
=0; i<26; i++)

53 
j
=0; j<
n
; j++)

55 if(
sb
[
j
]-'A'==
i
)

56 
m©
[
i
][
j
+1]=mat[i][j]+j+1;

58 
m©
[
i
][
j
+1]=mat[i][j];

60 
j
=
n
-1; j>=0; j--)

62 if(
sb
[
j
]-'A'==
i
)

63 
åa
[
i
][
j
+1]Òø[i][j+2]+
n
-j;

65 
åa
[
i
][
j
+1]=tra[i][j+2];

68 
i
=0; i<26; i++)

69 
j
=0; j<
n
; j++)

71 if(
ß
[
j
]-'A'==
i
)

73 
ªt
+=1.0*
m©
[
i
][
j
+1]*(
n
-j)+1.0*
åa
[i][j+1]*(j+1);

74 if(
sb
[
j
]-'A'==
i
)

75 
ªt
-=1.0*(
j
+1)*(
n
-j);

78 
	`¥ötf
("%.9lf\n",6.0*
ªt
/
n
/(n+1)/(2*n+1));

81 
	}
}

	@problems/codeforces/div2_codes/round130/round_130_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
],
	gªt
[N];

35 
	gèg
[
N
];

37 
	$sﬁve
(
l
)

39 
t
,
Œ
;

40 
	`mem£t
(
èg
,0,(tag));

41 
i
=0; i<
l
; )

43 if(
i
+2<
l
)

45 if(
s
[
i
]=='W'&&s[i+1]=='U'&&s[i+2]=='B')

47 
èg
[
i
]=1,tag[i+1]=1,tag[i+2]=1;

48 
i
+=3;

51 
i
++;

54 
i
++;

56 
k
;

57 
k
=
l
-1; k>=0; k--)

58 if(
èg
[
k
]==0)

60 
Œ
=
k
+1;

61 
t
=0;

62 
i
=0; i<
Œ
; i++)

64 if(
èg
[
i
])

66 if(
t
==1)

67 
	`¥ötf
(" ");

68 
t
=0;

71 
t
=1;

72 
	`¥ötf
("%c",
s
[
i
]);

74 
	}
}

76 
	$maö
()

78 
l
;

79 
	`sˇnf
("%s",
s
)!=
EOF
)

81 
l
=
	`°æí
(
s
);

82 
	`sﬁve
(
l
);

83 
	`puts
("");

86 
	}
}

	@problems/codeforces/div2_codes/round130/round_130_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 110

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
];

35 
	gd©
[
N
];

36 
	gèg
[
N
][N];

37 
	gdp
[53][53][53][53];

40 
	$gëv
(
x
)

42 if(
x
<='9')  x-'0'-1;

43 if(
x
=='T')  9;

44 if(
x
=='A')  0;

45 if(
x
=='J')  10;

46 if(
x
=='Q')  11;

47 if(
x
=='K')  12;

48 
	}
}

50 
	$gë
(
x
)

52 if(
x
=='S')  0;

53 if(
x
=='D')  1;

54 if(
x
=='H')  2;

56 
	}
}

58 
	$dfs
(
l
,
a
,
b
,
c
)

60 
ªt
=0,
x
,
y
,
u
,
v
;

61 if(
dp
[
l
][
a
][
b
][
c
]>=0)

62  
dp
[
l
][
a
][
b
][
c
];

63 if(
l
==2)

65 
x
=
d©
[2]%4,
y
=dat[1]%4;

66 
u
=
d©
[2]/4,
v
=dat[1]/4;

67 if(
x
==
y
||
u
==
v
)

68 
ªt
=1;

69 if(
ªt
==0)

70  
dp
[
l
][
a
][
b
][
c
]=0;

71 
ªt
=0;

72 
x
=
d©
[2]%4,
y
=dat[0]%4;

73 
u
=
d©
[2]/4,
v
=dat[0]/4;

74 if(
x
==
y
||
u
==
v
)

75 
ªt
=1;

76  
dp
[
l
][
a
][
b
][
c
]=
ªt
;

78 
x
=
d©
[
l
]%4,
y
=dat[l-1]%4;

79 
u
=
d©
[
l
]/4,
v
=dat[l-1]/4;

80 if(
x
==
y
||
u
==
v
)

82 
tmp
=
d©
[
l
-1];

83 
d©
[
l
-1]=dat[l];

84 if(
	`dfs
(
l
-1,
a
,
c
,
d©
[l-3]))

85 
ªt
=1;

86 
d©
[
l
-1]=
tmp
;

88 
x
=
d©
[
l
]%4,
y
=dat[l-3]%4;

89 
u
=
d©
[
l
]/4,
v
=dat[l-3]/4;

90 if(
x
==
y
||
u
==
v
)

92 
tmp
=
d©
[
l
-3];

93 
d©
[
l
-3]=dat[l];

94 if(
	`dfs
(
l
-1,
b
,
c
,
d©
[l-3]))

95 
ªt
=1;

96 
d©
[
l
-3]=
tmp
;

98  
dp
[
l
][
a
][
b
][
c
]=
ªt
;

99 
	}
}

101 
	$maö
()

103 
n
;

104 
	`sˇnf
("%d",&
n
)!=
EOF
)

106 
	`mem£t
(
dp
,-1,(dp));

107 
i
=0; i<
n
; i++)

109 
x
;

110 
	`sˇnf
("%s",
s
);

111 
x
=
	`gëv
(
s
[0])*4;

112 
x
+=
	`gë
(
s
[1]);

113 
d©
[
i
]=
x
;

115 if(
n
==1)

116 
	`puts
("YES");

117 if(
n
==2)

119 if((
d©
[0]%4)==(dat[1]%4)||(dat[0]/4)==(dat[1]/4))

120 
	`puts
("YES");

122 
	`puts
("NO");

124 if(
	`dfs
(
n
-1,
d©
[n-1],dat[n-2],dat[n-3]))

126 
	`puts
("YES");

130 
	`puts
("NO");

134 
	}
}

	@problems/codeforces/div2_codes/round130/round_130_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 111

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gvis
[
N
],
	gm©
[N][N],
	gdis1
[N],
	gdis2
[N];

35 
	gdp1
[
N
],
	gdp2
[N];

37 
	$dijk°ø
(
dis
[],
dp
[],
n
,
s
)

39 
i
=0; i<
n
; i++)

40 
dp
[
i
]=0,
dis
[i]=
öf
,
vis
[i]=0;

41 
dp
[
s
]=1,
dis
[s]=0;

42 
√xt
;

43 
i
=0; i<
n
; i++)

45 
√xt
=-1;

46 
j
=0; j<
n
; j++)

47 if(!
vis
[
j
]&&(
√xt
==-1||
dis
[j]<dis[next]))

48 
√xt
=
j
;

49 
vis
[
√xt
]=1;

50 
j
=0; j<
n
; j++)

52 if(!
vis
[
j
])

54 if(
m©
[
√xt
][
j
]+
dis
[next]<dis[j])

56 
dis
[
j
]=
m©
[
√xt
][j]+dis[next];

57 
dp
[
j
]=dp[
√xt
];

59 if(
m©
[
√xt
][
j
]+
dis
[next]==dis[j])

60 
dp
[
j
]+=dp[
√xt
];

64 
	}
}

66 
	$maö
()

68 
n
,
m
;

69 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

71 
i
=0; i<
n
; i++)

72 
j
=0; j<
n
; j++)

73 
m©
[
i
][
j
]=
öf
;

74 
i
=0; i<
m
; i++)

76 
x
,
y
;

77 
	`sˇnf
("%d%d",&
x
,&
y
);

78 
x
--,
y
--;

79 
m©
[
x
][
y
]=mat[y][x]=1;

81 
	`dijk°ø
(
dis1
,
dp1
,
n
,0);

82 
	`dijk°ø
(
dis2
,
dp2
,
n
,n-1);

83 
ªt
=0,
tmp
;

84 
i
=0; i<
n
; i++)

86 
tmp
=0;

87 
u
=0; u<
n
; u++)

88 if(
m©
[
i
][
u
]<
öf
)

90 if(
dis1
[
i
]+
dis2
[
u
]+1==dis1[
n
-1])

91 
tmp
+=1.0*
dp1
[
i
]*
dp2
[
u
];

92 if(
dis2
[
i
]+
dis1
[
u
]+1==dis1[
n
-1])

93 
tmp
+=1.0*
dp1
[
u
]*
dp2
[
i
];

95 
ªt
=
	`max
‘ë,
tmp
);

97 
	`¥ötf
("%.12lf\n",
ªt
/
dp1
[
n
-1]);

100 
	}
}

	@problems/codeforces/div2_codes/round130/round_130_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gªt
[
N
],
	gd©
[N],
	ga
[10];

36 
	$maö
()

38 
n
;

39 
LL
 
À·
;

40 
	`sˇnf
("%d",&
n
)!=
EOF
)

42 
	`mem£t
(
ªt
,0,(ret));

43 
x
;

44 
i
=0; i<
n
; i++)

45 
cö
>>
d©
[
i
];

46 
i
=0; i<5; i++)

48 
cö
>>
a
[
i
];

50 
LL
 
¥e
=0,
À·
=0;

51 
i
=0; i<
n
; i++)

53 
LL
 
x
=
d©
[
i
]+
¥e
;

55 
j
=4; j>=0; j--)

57 if(
x
>=
a
[
j
])

59 
ªt
[
j
]+=
x
/
a
[j];

60 
x
%=
a
[
j
];

63 
¥e
=
x
;

65 
cout
<<
ªt
[0];

66 
i
=1; i<5; i++)

67 
cout
<<" "<<
ªt
[
i
];

68 
cout
<<
ídl
;

69 
cout
<<
¥e
<<
ídl
;

72 
	}
}

	@problems/codeforces/div2_codes/round130/round_130_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
];

35 
	gdp
[
N
][18],
	gvis
[N],
	gid
[N],
	gt›
,
	gli°
[N],
	gç
,
	gº
[N],
	gŒ
[N],
	gœy
[N];

36 
	gve˘‹
<> 
	glc
[
N
];

38 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

40 
	$ö£π
(
f
,
t
)

42 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
n
=
li°
[f];

43 
li°
[
f
]=
t›
++;

44 
	}
}

46 
	$dfs
(
now
,
l
)

48 
vis
[
now
]=1;

49 
œy
[
now
]=
l
;

50 
lc
[
l
].
	`push_back
(
ç
);

51 
Œ
[
now
]=
ç
;

52 
id
[
now
]=
ç
++;

53 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

55 
to
=
e
[
i
].
t
;

56 if(
vis
[
to
]) ;

57 
	`dfs
(
to
,
l
+1);

59 
º
[
now
]=
ç
-1;

60 
	}
}

62 
	$maö
()

64 
n
,
m
;

65 
	`sˇnf
("%d",&
n
)!=
EOF
)

67 
t›
=0;

68 
i
=0; i<=
n
; i++)

69 
li°
[
i
]=-1,
lc
[i].
	`˛ór
();

70 
	`mem£t
(
dp
,0,(dp));

71 
i
=1; i<=
n
; i++)

73 
x
;

74 
	`sˇnf
("%d",&
x
);

75 
	`ö£π
(
x
,
i
);

76 
dp
[
i
][0]=
x
;

78 
i
=1; i<18; i++)

79 
j
=1; j<=
n
; j++)

81 if(
dp
[
j
][
i
-1]==0)

82 
dp
[
j
][
i
]=0;

84 
dp
[
j
][
i
]=dp[dp[j][i-1]][i-1];

86 
	`mem£t
(
vis
,0,(vis));

87 
ç
=0;

88 
	`dfs
(0,0);

89 
	`sˇnf
("%d",&
m
);

90 
i
=0; i<
m
; i++)

92 
x
,
y
,
p
;

93 
	`sˇnf
("%d%d",&
x
,&
y
);

94 
p
=
x
;

95 
j
=0; j<18; j++)

96 if(
	`B
(
j
)&
y
)

97 
p
=
dp
[p][
j
];

98 if(
p
==0)

99 
	`¥ötf
("0 ");

101 
	`¥ötf
("%d ",
	`uµî_bound
(
lc
[
œy
[
x
]].
	`begö
(),lc[œy[x]].
	`íd
(),
º
[
p
])-
	`lowî_bound
÷c[œy[x]].begö(),lc[œy[x]].íd(),
Œ
[p])-1);

103 
	`puts
("");

106 
	}
}

	@problems/codeforces/div2_codes/round131/R131D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	$maö
()

36 
n
,
m
,
ªt
=0;

37 
	`sˇnf
("%d%d",&
n
,&
m
);

38 
a
=0;á<=
n
;á++)

39 
b
=0; b<=
n
; b++)

41 if(
a
*a+
b
==
n
&&b*b+a==
m
)

42 
ªt
++;

44 
	`¥ötf
("%d\n",
ªt
);

46 
	}
}

	@problems/codeforces/div2_codes/round131/R131D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	g˙t
[10];

36 
	$maö
()

38 
n
,
x
,
âl
=0;

39 
	`sˇnf
("%d",&
n
);

40 
i
=0; i<
n
; i++)

42 
	`sˇnf
("%d",&
x
);

43 
âl
+=
x
;

44 
˙t
[
x
]++;

46 
x
=
âl
%3;

47 
i
;

48 if(
x
!=0)

50 
i
=
x
; i<10; i+=3)

51 if(
˙t
[
i
]>0)

53 
˙t
[
i
]--;

56 if(
i
>=10)

58 
i
=(
x
==1)?2:1;

59 
lf
=2;

60 ; 
i
<10&&
lf
>0; i+=3)

62 
˙t
[
i
]>0&&
lf
>0)

64 
˙t
[
i
]--;

65 
lf
--;

67 if(
lf
==0)

70 if(
i
>=10)

72 
	`puts
("-1");

77 if(
˙t
[0]>0)

79 
â
=0;

80 
i
=0; i<=9; i++)

81 
â
+=
˙t
[
i
];

82 if(
â
==
˙t
[0])

83 
	`puts
("0");

86 
i
=9; i>=0; i--)

87 
j
=0; j<
˙t
[
i
]; j++)

88 
	`¥ötf
("%d",
i
);

89 
	`puts
("");

93 
	`puts
("-1");

95 
	}
}

	@problems/codeforces/div2_codes/round132/R132D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	ga
[
N
],
	gb
[N];

36 
	$maö
()

38 
n
,
m
;

39 
	`sˇnf
("%d",&
n
)!=
EOF
)

41 
i
=0; i<
n
; i++)

42 
	`sˇnf
("%d",&
a
[
i
]);

43 
	`sˇnf
("%d",&
m
);

44 
j
=0; j<
m
; j++)

45 
	`sˇnf
("%d",&
b
[
j
]);

46 
ªt
=0;

47 
i
=0; i<
n
; i++)

48 
j
=0; j<
m
; j++)

49 if(
b
[
j
]%
a
[
i
]==0)

51 
ªt
=
	`max
‘ë,
b
[
j
]/
a
[
i
]);

53 
˙t
=0;

54 
i
=0; i<
n
; i++)

55 
j
=0; j<
m
; j++)

56 if(
b
[
j
]%
a
[
i
]==0)

58 if(
b
[
j
]/
a
[
i
]==
ªt
)

59 
˙t
++;

61 
	`¥ötf
("%d\n",
˙t
);

64 
	}
}

	@problems/codeforces/div2_codes/round132/R132D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 6010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gx
[
N
],
	gy
[N],
	gz
[N];

36 
	$maö
()

38 
n
,
m
,
k
;

39 
r1
;

40 
	`sˇnf
("%d",&
n
)!=
EOF
)

42 
r1
=-1e10;

43 
i
=0; i<
n
; i++)

45 
	`sˇnf
("%lf",&
x
[
i
]);

46 
r1
=
	`max
‘1,
x
[
i
]);

48 
	`sˇnf
("%d",&
m
);

49 
i
=0; i<
m
; i++)

50 
	`sˇnf
("%lf",&
y
[
i
]);

51 
	`sˇnf
("%d",&
k
);

52 
i
=0; i<
k
; i++)

53 
	`sˇnf
("%lf",&
z
[
i
]);

54 
a
,
b
;

55 
	`sˇnf
("%lf%lf",&
a
,&
b
);

56 
r2
=-1e10,
tmp
;

57 
i
=0; i<
m
; i++)

58 
j
=0; j<
k
; j++)

60 
tmp
=(
b
*
y
[
i
]*
r1
*r1)/(
a
*
z
[
j
]+b*y[i]);

61 if(
tmp
>=
r1
*r1)

63 
r2
=
	`max
‘2,
	`sqπ
(
tmp
));

65 
	`¥ötf
("%.12lf\n",
r2
);

68 
	}
}

	@problems/codeforces/div2_codes/round132/R132D2C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	$maö
()

36 
n
,
m
,
s
;

37 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
s
)!=
EOF
)

39 
LL
 
ªt
=0;

40 
d
,
Ø
,
bb
,
cc
,
dd
,
x
,
y
,
ss
;

41 
a
=0; 2*a<
n
;á++)

42 
b
=0; 2*b<
m
; b++)

43 
c
=0; c<=
a
; c++)

45 
Ø
=2*
a
+1,
bb
=2*
b
+1,
cc
=2*
c
+1;

46 
ss
=
s
;

47 if(
ss
==
Ø
*
bb
)

49 
ªt
+=(
n
-2*
a
)*(
m
-2*
b
)*(1+◊>
c
))*(b+1);

51 if(
ss
>
Ø
*
bb
)

53 
ss
-=
Ø
*
bb
;

54 
ss
+=
cc
*
bb
;

55 if(
ss
%
cc
==0)

57 
ss
/=
cc
;

58 
ss
-=1;

59 if(
ss
>=0&&ss%2==0)

61 
d
=
ss
/2;

62 if(
d
>
b
&&2*d<
m
)

64 
ªt
+=(
n
-2*
a
)*(
m
-2*
d
)*(1+◊>
c
));

70 
cout
<<
ªt
<<
ídl
;

73 
	}
}

	@problems/codeforces/div2_codes/round132/R132D2D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
LL
 
	mt
,
	mc
,
	mT
,
	mx
; }
	gno
[
N
];

35 
	gn
,
	gm
;

37 
LL
 
	$gë
(
i
)

39 
LL
 
ªt
=0;

40 if(
no
[
i
].
t
>Úo[i].
T
)

41  
no
[
i
].
c
+
m
*no[i].
x
;

44 if(
m
>
no
[
i
].
T
-no[i].
t
)

46 
LL
 
k
=(
m
%(
no
[
i
].
T
-no[i].
t
));

47 
LL
 
y
=(
m
/(
no
[
i
].
T
-no[i].
t
));

48 if(
k
==0)

49  
	`mö
(
no
[
i
].
c
*
y
,no[i].c+no[i].
x
*
m
);

52  
	`mö
(
no
[
i
].
c
+no[i].
x
*
m
,mö“o[i].c*
y
+no[i].x*“o[i].
T
-no[i].
t
+
k
),no[i].c*(y+1)));

56  
no
[
i
].
c
;

58 
	}
}

60 
	$maö
()

62 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

64 
t
,
c
,
â
,
x
;

65 
i
=0; i<
n
; i++)

67 
	`sˇnf
("%d%d%d%d",&
t
,&
â
,&
x
,&
c
);

68 
no
[
i
].
t
Ò,no[i].
T
=
â
,no[i].
x
=x,no[i].
c
=c;

70 
LL
 
ªt
=0;

71 
i
=0; i<
n
; i++)

73 
ªt
+=
	`gë
(
i
);

75 
cout
<<
ªt
<<
ídl
;

78 
	}
}

	@problems/codeforces/div2_codes/round132/R132D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	$dfs2
(
n
)

36 
LL
 
ªt
=1LL<<(
n
-1);

37 
i
=1; i<
n
; i++)

39 if(
n
%
i
==0)

40 
ªt
-=
	`dfs2
(
i
);

42  
ªt
;

43 
	}
}

45 
LL
 
	$dfs1
(
LL
 
n
)

47 if(
n
<=2)  0;

48 
ve˘‹
<> 
b
;

49 
LL
 
x
=
n
;

50 ; 
x
;)

51 
b
.
	`push_back
(
x
&1),x>>=1;

52 
	`ªvî£
(
b
.
	`begö
(),b.
	`íd
());

53 
LL
 
ªt
=0;

54 
i
=1; i<=
b
.
	`size
(); i++)

56 if(
b
.
	`size
()%
i
==0)

58 
k
=
b
.
	`size
()/
i
;

59 if(
k
<2)

61 
LL
 
now
=0,
∫ow
=0;

62 
j
=0; j<
i
; j++)

63 
now
<<=1,now+=
b
[
j
];

64 
j
=0; j<
k
; j++)

65 
∫ow
<<=
i
,∫ow+=
now
;

66 if(
∫ow
>
n
)

67 
now
--;

68 if(
now
&(1LL<<(
i
-1)))

69 
ªt
Ùë+
now
-(1<<(
i
-1))+1-
	`dfs1
(now);

72  
ªt
;

73 
	}
}

75 
LL
 
	$ˇlc
(
LL
 
n
)

77 if(
n
<3)  0;

78 
ve˘‹
<> 
b
;

79 
LL
 
x
=
n
;

80 ; 
x
;)

81 
b
.
	`push_back
(
x
&1),x>>=1;

82 
	`ªvî£
(
b
.
	`begö
(),b.
	`íd
());

83 
LL
 
ªt
=0;

84 
i
=1; i<=
b
.
	`size
(); i++)

86 
k
=2; k*
i
<=
b
.
	`size
(); k++)

88 if(
k
*
i
<
b
.
	`size
())

90 
ªt
+=
	`dfs2
(
i
);

94 
LL
 
now
=0,
∫ow
=0;

95 
j
=0; j<
i
; j++)

96 
now
<<=1,now+=
b
[
j
];

97 
j
=0; j<
k
; j++)

98 
∫ow
<<=
i
,∫ow+=
now
;

99 if(
∫ow
>
n
)

100 
now
--;

101 if(
now
&(1LL<<(
i
-1)))

102 
ªt
Ùë+
now
-(1<<(
i
-1))+1-
	`dfs1
(now);

106  
ªt
;

107 
	}
}

109 
	$maö
()

111 
LL
 
l
,
r
;

112 
cö
>>
l
>>
r
)

114 
cout
<<
	`ˇlc
(
r
)-ˇlc(
l
-1)<<
ídl
;

117 
	}
}

	@problems/codeforces/div2_codes/round133/R133D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	ga
[10];

35 
	$cmp
(
a
,
b
){ á<b; 
	}
}

37 
	$maö
()

39 
	`sˇnf
("%d%d%d",&
a
[0],&a[1],&a[2])!=
EOF
)

41 
	`s‹t
(
a
,a+3,
cmp
);

42 
now
=
a
[0],
ªt
=0;

43 
i
=0; i<
a
[1]-1; i++)

44 
ªt
+=2*
now
,now++;

45 
i
=
a
[1]; i<=a[2]; i++)

46 
ªt
+=
now
;

47 
	`¥ötf
("%d\n",
ªt
);

50 
	}
}

	@problems/codeforces/div2_codes/round133/R133D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gm©
[
N
][N],
	gvis
[N],
	gn
;

35 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

36 
	gt›
,
	gli°
[
N
],
	g˙t
,
	gªt
,
	gπ
,
	godd
,
	gö
[N];

38 
	$ö£π
(
f
,
t
)

40 
e
[
t›
].
f
=f,e[t›].
t
=t;

41 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

42 
	}
}

44 
	$dfs
(
now
)

46 
Àaf
=1;

47 
vis
[
now
]=1;

48 
˙t
++;

49 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

51 
to
=
e
[
i
].
t
;

52 if(!
vis
[
to
])

54 
Àaf
=0;

55 
	`dfs
(
to
);

58 if(
Àaf
)

60 if(
˙t
&1)

61 
odd
++;

62 if(
m©
[
π
][
now
])

64 if(
˙t
&1)

66 if(
˙t
>1)

67 
ªt
++,
odd
--;

71 
	}
}

73 
	$maö
()

75 
m
;

76 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

78 
	`mem£t
(
vis
,0,(vis));

79 
	`mem£t
(
ö
,0,(in));

80 
	`mem£t
(
m©
,0,(mat));

81 
t›
=0;

82 
i
=0; i<
n
; i++)

83 
li°
[
i
]=-1;

84 
i
=0; i<
m
; i++)

86 
x
,
y
;

87 
	`sˇnf
("%d%d",&
x
,&
y
);

88 
x
--,
y
--;

89 
	`ö£π
(
x
,
y
);

90 
	`ö£π
(
y
,
x
);

91 
m©
[
x
][
y
]=mat[y][x]=1;

92 
ö
[
x
]++,ö[
y
]++;

94 
ªt
=0,
odd
=0;

95 
i
=0; i<
n
; i++)

96 if(!
vis
[
i
]&&
ö
[i]<=1)

98 
˙t
=0;

99 
π
=
i
;

100 
	`dfs
(
i
);

102 
i
=0; i<
n
; i++)

103 if(!
vis
[
i
])

105 
˙t
=0;

106 
π
=
i
;

107 
	`dfs
(
i
);

109 if(
odd
&1)

110 
ªt
++;

111 
	`¥ötf
("%d\n",
ªt
);

114 
	}
}

	@problems/codeforces/div2_codes/round133/R133D2C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	gªt
[
S
];

35 
	$maö
()

37 
n
,
m
,
k
,
t›
;

38 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)!=
EOF
)

40 
t›
=0;

41 if(
k
==1)

43 
now
=1;

44 ; 
now
<1+
n
+
m
;)

46 
ªt
[
t›
++]=
now
;

47 
now
+=
n
-1;

49 
	`¥ötf
("%d\n",
t›
);

50 
i
=0; i<
t›
; i++)

51 
	`¥ötf
("%d ",
ªt
[
i
]);

52 
	`puts
("");

56 
t›
=1;

57 
ªt
[0]=1;

58 
now
=
n
;

59 
t›
=2,
ªt
[1]=
n
;

60 if(
m
==
n
)

61 
	`¥ötf
("%d\n",
t›
*
k
+1);

63 
	`¥ötf
("%d\n",
t›
*
k
);

64 
i
=0; i<
k
; i++)

65 
	`¥ötf
("1 ");

66 
i
=1; i<
t›
; i++)

68 
	`¥ötf
("%d ",
ªt
[
i
]);

69 
j
=1; j<
k
; j++)

70 
	`¥ötf
("%d ",
ªt
[
i
]+1);

72 if(
m
==
n
)

73 
	`¥ötf
("%d ",2*
n
);

74 
	`puts
("");

78 
	}
}

	@problems/codeforces/div2_codes/round133/R133D2D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	$cmp
(
a
,
b
){ á<b; 
	}
}

36 
	gve˘‹
<> 
	gm©
[1001];

37 
	g£t
<> 
	g°
;

38 
	g£t
<>::
ôî©‹
 
ô
;

40 
	$maö
()

42 
n
,
mx
;

43 
	`sˇnf
("%d",&
n
)!=
EOF
)

45 
i
=0; i<
n
; i++)

47 
x
;

48 
	`sˇnf
("%d",&
x
);

49 
°
.
	`˛ór
();

50 
m©
[
i
].
	`˛ór
();

51 
j
=0; j<
x
; j++)

53 
x
;

54 
	`sˇnf
("%d",&
x
);

55 
°
.
	`ö£π
(
x
);

57 
t›
=1;

58 
ô
=
°
.
	`begö
(); it!=°.
	`íd
(); it++)

59 
m©
[
i
].
	`push_back
(*
ô
);

61 
i
=0; i<
m©
[0].
	`size
(); i++)

62 
m©
[
n
].
	`push_back
(m©[0][
i
]);

63 
i
=0; i<
m©
[1].
	`size
(); i++)

64 
m©
[
n
+1].
	`push_back
(m©[1][
i
]);

65 
ªt
=0;

66 
i
=1; i<=
n
; i++)

68 
l
=0,
r
=0,
lc
,
rc
;

69 ; 
l
<
m©
[
i
-1].
	`size
()&&mat[i-1][l]<mat[i][0];Ü++);

70 ; 
r
<=
m©
[
i
+1].
	`size
()&&mat[i+1][r]<mat[i][0];Ñ++);

71 
j
=1; j<
m©
[
i
].
	`size
(); j++)

73 
lc
=0,
rc
=0;

74 ; 
l
<
m©
[
i
-1].
	`size
()&&m©[i-1][l]<m©[i][
j
];Ü++)

75 
lc
++;

76 ; 
r
<
m©
[
i
+1].
	`size
()&&m©[i+1][r]<m©[i][
j
];Ñ++)

77 
rc
++;

78 if(
lc
!=
rc
)

80 
ªt
++;

84 
	`¥ötf
("%d\n",
ªt
);

87 
	}
}

	@problems/codeforces/div2_codes/round133/R133D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	glf
[
N
];

35 
	gm≠
<
	gLL
,> 
	gmp
;

37 
	$maö
()

39 
LL
 
k
,
b
,
n
,
ªt
,
ze
,
˙t
;

40 
x
;

41 
cö
>>
k
>>
b
>>
n
)

43 
lf
[0]=0;

44 
ªt
=0;

45 
ze
=0;

46 
˙t
=0;

47 
mp
.
	`˛ór
();

48 
i
=1; i<=
n
; i++)

50 
	`sˇnf
("%d",&
x
);

51 
lf
[
i
]=÷f[i-1]+
x
)%(
k
-1);

52 if(
x
==0)

53 
˙t
++;

55 
ze
+=
˙t
*(cnt+1)/2,cnt=0;

57 
ze
+=(
˙t
+1)*cnt/2;

58 
LL
 
y
;

59 
i
=0; i<=
n
; i++)

61 if(
mp
.
	`cou¡
(
lf
[
i
])>0)

62 
ªt
+=
mp
[
lf
[
i
]];

63 
y
=(
lf
[
i
]+
b
)%(
k
-1);

64 if(
mp
.
	`cou¡
(
y
)>0)

65 
mp
[
y
]++;

67 
mp
[
y
]=1;

69 if(
b
==
k
-1)

70 
ªt
-=
ze
;

71 if(
b
==0)

72 
ªt
=
ze
;

73 
cout
<<
ªt
<<
ídl
;

76 
	}
}

	@problems/codeforces/div2_codes/round134/R134D1_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

35 
	gm©
[
N
][N];

37 
	suföd


39 
	mp
[
N
];

40 
öô
(){ 
	mi
=0; i<
	mN
; i++Ë
	mp
[
i
]=i; }

41 
run
(&
x
)

43 
	my
=
x
,
	mt
;

44 ; 
	mp
[
x
]!=x; 
	mx
=
p
[x]);

45 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

47 
£t‰õnd
(
i
,
j
)

49 
run
(
i
);

50 
run
(
j
);

51 
	mp
[
i
]=
j
;

53 
is‰õnd
(
i
,
j
)

55 
run
(
i
);

56 
run
(
j
);

57  
	mi
==
j
;

59 }
	guf
;

61 
	gvis
[
N
];

63 
	$maö
()

65 
n
,
ªt
;

66 
	`sˇnf
("%d",&
n
)!=
EOF
)

68 
x
,
y
,
u
,
v
;

69 
uf
.
	`öô
();

70 
	`mem£t
(
m©
,0,(mat));

71 
i
=0; i<
n
; i++)

73 
	`sˇnf
("%d%d",&
x
,&
y
);

74 
no
[
i
].
x
=x,no[i].
y
=y;

75 
m©
[
x
][
y
]=
i
;

76 
j
=0; j<
i
; j++)

78 if(
no
[
j
].
x
==x||no[j].
y
==y)

79 
uf
.
	`£t‰õnd
(
i
,
j
);

82 
ªt
=0;

83 
	`mem£t
(
vis
,0,(vis));

84 
p
;

85 
i
=0; i<
n
; i++)

87 
p
=
i
;

88 
uf
.
	`run
(
p
);

89 
vis
[
p
]=1;

91 
i
=0; i<
n
; i++)

92 if(
vis
[
i
])

93 
ªt
++;

94 
	`¥ötf
("%d\n",
ªt
-1);

97 
	}
}

	@problems/codeforces/div2_codes/round134/R134D1_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	$gŸ
(
up
,
dn
,
n
)

36 
ªt
=0,
˙t
=0;

39 if(
up
==0&&
dn
==1)

41 if(
˙t
==
n
)

43  
ªt
;

46  
öf
;

48 if((
dn
==0)||(
up
==0&&dn>1))

49  
öf
;

50 if(
up
>
dn
)

52 
ªt
+=
	`max
((
up
/
dn
)-1,0);

53 
˙t
+=
up
/
dn
;

54 
up
=up%
dn
;

58 if(
up
==1)

60 
ªt
+=
	`max
(
dn
-2,0);

61 
˙t
+=
dn
;

62 if(
˙t
==
n
)

63  
ªt
;

65  
öf
;

68 
ªt
+=
	`max
((
dn
/
up
)-1,0);

69 
˙t
+=
dn
/
up
;

70 
dn
=dn%
up
;

73  
öf
;

74 
	}
}

76 
	$show
(
u
,
d
)

78 if(
u
==1&&
d
==1)

80 
	`¥ötf
("T");

83 if(
u
>
d
)

85 
	`show
(
u
-
d
,d);

86 
	`¥ötf
("T");

90 
	`show
(
u
,
d
-u);

91 
	`¥ötf
("B");

93 
	}
}

95 
	$maö
()

97 
n
,
r
;

98 
	`sˇnf
("%d%d",&
n
,&
r
)!=
EOF
)

100 
up
,
dn
,
˙t
,
ªt
=
öf
,
rd
,
ru
;

101 
i
=1; i<=
r
; i++)

103 
up
=
r
,
dn
=
i
;

104 
˙t
=
	`gŸ
(
up
,
dn
,
n
);

105 if(
˙t
<
ªt
)

107 
ªt
=
˙t
;

108 
ru
=
up
,
rd
=
dn
;

110 
up
=
i
,
dn
=
r
;

111 
˙t
=
	`gŸ
(
up
,
dn
,
n
);

112 if(
˙t
<
ªt
)

114 
ªt
=
˙t
;

115 
ru
=
up
,
rd
=
dn
;

118 if(
ªt
>=
öf
)

119 
	`puts
("IMPOSSIBLE");

122 
	`¥ötf
("%d\n",
ªt
);

123 
	`show
(
ru
,
rd
);

124 
	`puts
("");

128 
	}
}

	@problems/codeforces/div2_codes/round134/R134D1_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1000010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gm©ch
[
N
],
	g°
[N],
	gt›
,
	gdp
[N][2][2];

36 
	gs
[
N
];

38 
	$gë
(
a
,
sig
,
b
)

40 if(
sig
=='&')

41  
a
&
b
;

42 if(
sig
=='|')

43  
a
|
b
;

44  
a
^
b
;

45 
	}
}

47 
	$ˇlc
(
∂
,
•
,
¥
,
now
)

49 
x
,
y
;

50 
i
=0; i<2; i++)

51 
j
=0; j<2; j++)

53 if(
dp
[
∂
][
i
][
j
]==0)

55 
u
=0; u<2; u++)

56 
v
=0; v<2; v++)

58 if(
dp
[
¥
][
u
][
v
]==0)

60 
x
=
	`gë
(
i
,
s
[
•
],
u
);

61 
y
=
	`gë
(
j
,
s
[
•
],
v
);

62 
dp
[
now
][
x
][
y
]=1;

65 
	}
}

67 
	$sﬁve
(
l
)

69 
•
;

70 
i
=0; i<
l
; i++)

72 if(
s
[
i
]=='1')

73 
dp
[
i
][1][1]=1;

74 if(
s
[
i
]=='0')

75 
dp
[
i
][0][0]=1;

76 if(
s
[
i
]=='?')

77 
dp
[
i
][0][1]=dp[i][1][0]=1;

78 if(
s
[
i
]==')')

80 if(
s
[
i
-1]==')')

81 
•
=
m©ch
[
i
-1]-1;

83 
•
=
i
-2;

84 
	`ˇlc
(
•
-1,•,
i
-1,i);

87 
	}
}

89 
	$maö
()

91 
l
,
n
;

92 
	`sˇnf
("%d%s",&
n
,
s
)!=
EOF
)

94 
l
=
	`°æí
(
s
);

95 
t›
=-1;

96 
	`mem£t
(
dp
,0,(dp));

97 
i
=0; i<
l
; i++)

99 if(
s
[
i
]=='(')

100 
°
[++
t›
]=
i
;

101 if(
s
[
i
]==')')

103 
m©ch
[
°
[
t›
]]=
i
;

104 
m©ch
[
i
]=
°
[
t›
];

105 
t›
--;

108 
	`sﬁve
(
l
);

109 if(
dp
[
l
-1][0][1]||dp[l-1][1][0])

110 
	`puts
("YES");

112 
	`puts
("NO");

115 
	}
}

	@problems/codeforces/div2_codes/round134/R134D2_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gd©
[
N
];

36 
	$maö
()

38 
n
,
k
,
now
;

39 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

41 
i
=0; i<2*
n
+1; i++)

42 
	`sˇnf
("%d",&
d©
[
i
]);

43 
i
=0; i<2*
n
+1; i++)

45 if(
k
>0)

47 if(
i
>0&&i<2*
n
)

49 if(
d©
[
i
]-1>dat[i-1]&&dat[i]-1>dat[i+1])

50 
now
=
d©
[
i
]-1,
k
--;

52 
now
=
d©
[
i
];

55 
now
=
d©
[
i
];

58 
now
=
d©
[
i
];

59 
	`¥ötf
("%d ",
now
);

61 
	`puts
("");

64 
	}
}

	@problems/codeforces/div2_codes/round134/R134D2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 ˛as†
	ccmp


36 
	mpublic
:

37 
boﬁ
 
	$›î©‹
 (Ë(c⁄° &
a
,c⁄° &
b
)

39  
a
<
b
;

41 
	}
};

42 ˛as†
	ccmp1


44 
	mpublic
:

45 
boﬁ
 
	$›î©‹
 (Ë(c⁄° &
a
,c⁄° &
b
)

47  
a
>
b
;

49 
	}
};

50 
	g¥i‹ôy_queue
<,
	gve˘‹
<>,
	gcmp
> 
	gq
;

51 
	g¥i‹ôy_queue
<,
	gve˘‹
<>,
	gcmp1
> 
	gq1
;

53 
	$maö
()

55 
n
,
m
;

56 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

58 
x
;

59 
i
=0; i<
m
; i++)

61 
	`sˇnf
("%d",&
x
);

62 
q
.
	`push
(
x
);

63 
q1
.
	`push
(
x
);

65 
ªt
=0,
r
=0;

66 
i
=0; i<
n
; i++)

68 
x
=
q
.
	`t›
();

69 
ªt
+=
x
;

70 
q
.
	`p›
();

71 if(
x
-1>0)

72 
q
.
	`push
(
x
-1);

73 
x
=
q1
.
	`t›
();

74 
r
+=
x
;

75 
q1
.
	`p›
();

76 if(
x
-1>0)

77 
q1
.
	`push
(
x
-1);

79 
	`¥ötf
("%d %d\n",
ªt
,
r
);

82 
	}
}

	@problems/codeforces/div2_codes/round135/R135D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	g˙t
[27],
	gªt
[
N
];

35 
	gs
[
N
];

37 
	$ok
(
k
)

39 
i
=0; i<26; i++)

40 if(
˙t
[
i
]%
k
)

43 
	}
}

45 
	$maö
()

47 
k
,
l
;

48 
	`sˇnf
("%d",&
k
)!=
EOF
)

50 
	`sˇnf
("%s",
s
);

51 
l
=
	`°æí
(
s
);

52 
	`mem£t
(
˙t
,0,(cnt));

53 
i
=0; 
s
[i]; i++)

54 
˙t
[
s
[
i
]-'a']++;

55 if(
	`ok
(
k
))

57 
t›
=0;

58 
i
=0; i<26; i++)

59 
j
=0; j<
˙t
[
i
]/
k
; j++)

60 
ªt
[
t›
++]=
i
;

61 
i
=0; i<
k
; i++)

62 
j
=0; j<
t›
; j++)

63 
	`¥ötf
("%c",
ªt
[
j
]+'a');

64 
	`puts
("");

68 
	`puts
("-1");

72 
	}
}

	@problems/codeforces/div2_codes/round135/R135D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gãn
[29];

36 
	$maö
()

38 
LL
 
p
,
b
;

39 
ãn
[0]=1;

40 
i
=1; i<29; i++)

41 
ãn
[
i
]=ten[i-1]*10;

42 
cö
>>
p
>>
b
)

44 
LL
 
now
,
ªt
;

45 
id
;

46 
i
=18; i>0; i--)

48 if(
p
<
ãn
[
i
])

50 
now
=
ãn
[
i
]-1;

51 
id
=(
p
/
ãn
[
i
])%10;

52 
j
=
id
; j>=0; j--)

54 
LL
 
y
;

55 if(
i
==18)

56 
y
=
j
*
ãn
[
i
]+
now
;

58 
y
=(
p
/
ãn
[
i
+1]*10+
j
)*ãn[i]+
now
;

59 
LL
 
x
=
p
-
y
;

60 if(
x
>=0&&x<=
b
)

62 
cout
<<
y
<<
ídl
;

67 
cout
<<
p
<<
ídl
;

70 
	}
}

	@problems/codeforces/div2_codes/round135/R135D2C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 500010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
],
	grs
[N],
	grß
[N],
	grsb
[N];

36 
	$maö
()

38 
n
,
k
;

39 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

41 
	`sˇnf
("%s",&
s
);

42 if(
k
==2)

44 
ªè
=0,
ªtb
=0;

45 
i
=0; i<
n
; i++)

47 
rß
[
i
]=(i&1)+'A';

48 if(
rß
[
i
]!=
s
[i])

49 
ªè
++;

51 
i
=0; i<
n
; i++)

53 
rsb
[
i
]=((i&1)+1)%2+'A';

54 if(
rsb
[
i
]!=
s
[i])

55 
ªtb
++;

57 
rß
[
n
]=
rsb
[n]='\0';

58 if(
ªè
<
ªtb
)

59 
	`¥ötf
("%d\n%s\n",
ªè
,
rß
);

61 
	`¥ötf
("%d\n%s\n",
ªtb
,
rsb
);

65 
¥e
=
s
[0]-'A',
ªt
=0;

66 
rs
[0]=
s
[0];

67 
i
=1; i<
n
; i++)

69 if(
s
[
i
]==
¥e
+'A')

71 if(
i
==
n
-1)

73 
¥e
=’ª+1)%
k
;

74 
rs
[
i
]=
¥e
+'A';

78 
¥e
=’ª+1)%
k
;

79 if(
¥e
==
s
[
i
+1]-'A')

80 
¥e
=’ª+1)%
k
;

81 
rs
[
i
]=
¥e
+'A';

83 
ªt
++;

87 
¥e
=
s
[
i
]-'A';

88 
rs
[
i
]=
s
[i];

91 
rs
[
n
]='\0';

92 
	`¥ötf
("%d\n%s\n",
ªt
,
rs
);

96 
	}
}

	@problems/codeforces/div2_codes/round135/R135D2D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 200010

	)

20 
	#M
 1000010

	)

21 
	#S
 600010

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mi
,
	mn
; }
	ge
[
S
];

35 
	gvis
[
N
],
	gö
[N],
	gli°
[N],
	gt›
;

37 
	$ö£π
(
f
,
t
,
i
)

39 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
i
=i;

40 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

41 
	}
}

43 
	$dfs
(
now
)

45 
vis
[
now
]=1;

46 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

48 
to
=
e
[
i
].
t
;

49 if(!
vis
[
to
])

51 
	`dfs
(
to
);

52 if(
e
[
i
].i==1)

54 
ö
[
now
]+=ö[
to
];

57 
ö
[
now
]+=ö[
to
]+1;

60 
	}
}

62 
	$dfs2
(
now
)

64 
vis
[
now
]=1;

65 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

67 
to
=
e
[
i
].
t
;

68 if(!
vis
[
to
])

70 if(
e
[
i
].i==1)

71 
ö
[
to
]=ö[
now
]+1;

73 
ö
[
to
]=ö[
now
]-1;

74 
	`dfs2
(
to
);

77 
	}
}

79 
	$maö
()

81 
n
;

82 
	`sˇnf
("%d",&
n
)!=
EOF
)

84 
x
,
y
;

85 
	`mem£t
(
vis
,0,(vis));

86 
	`mem£t
(
ö
,0,(in));

87 
	`mem£t
(
vis
,0,(vis));

88 
t›
=0;

89 
i
=0; i<
n
; i++)

90 
li°
[
i
]=-1;

91 
i
=0; i<
n
-1; i++)

93 
	`sˇnf
("%d%d",&
x
,&
y
);

94 
x
--,
y
--;

95 
	`ö£π
(
x
,
y
,1);

96 
	`ö£π
(
y
,
x
,0);

98 
	`dfs
(0);

99 
	`mem£t
(
vis
,0,(vis));

100 
	`dfs2
(0);

101 
ªt
=
N
;

102 
i
=0; i<
n
; i++)

103 
ªt
=
	`mö
‘ë,
ö
[
i
]);

104 
	`¥ötf
("%d\n",
ªt
);

105 
i
=0; i<
n
; i++)

106 if(
ö
[
i
]==
ªt
)

107 
	`¥ötf
("%d ",
i
+1);

108 
	`puts
("");

111 
	}
}

	@problems/codeforces/div2_codes/round135/R135D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	spoöt
{ 
	ml
,
	mr
; }
	gp
[
N
];

35 
	s£gmít
{ 
	ml
,
	mÕ
,
	mΩ
,
	md
;

36 
‰õnd
 
boﬁ
 
	m›î©‹
 <(
£gmít
 
	ma
,£gmíà
	mb
)

38 
	mœ
=(
a
.
l
-1)>>1,
	mlb
=(
b
.l-1)>>1;

39  
	ma
.
	md
==
b
.
d
?((
a
.
Õ
==b.Õ)?a.
Ω
<b.rp:a.lp<b.lp):a.d>b.d;

41 }
	g£g
[
N
],
	gpoﬁ
[N<<2];

42 
	g£t
<
	g£gmít
> 
	g°
;

43 
	g£t
<
	g£gmít
>::
ôî©‹
 
ô
;

44 
	gpos
[
N
],
	gt›
,
	gn
;

46 
	$add£g
(
Õ
,
Ω
)

48 
poﬁ
[
t›
].
Õ
ˆp,poﬁ[t›].
Ω
Ùp,poﬁ[t›].
l
=pool[top].rp-pool[top].lp-1;

49 if(
Õ
==0||
Ω
==
n
+1)

50 
poﬁ
[
t›
].
d
ıoﬁ[t›].
l
;

52 
poﬁ
[
t›
].
d
=’oﬁ[t›].
l
+1)/2;

53 if(
poﬁ
[
t›
].
l
>0)

55 
°
.
	`ö£π
(
poﬁ
[
t›
]);

57 
t›
++;

58 
	}
}

60 
	$îa££g
(
Õ
,
Ω
)

62 
poﬁ
[
t›
].
Õ
ˆp,poﬁ[t›].
Ω
Ùp,poﬁ[t›].
l
=pool[top].rp-pool[top].lp-1;

63 if(
Õ
==0||
Ω
==
n
+1)

64 
poﬁ
[
t›
].
d
ıoﬁ[t›].
l
;

66 
poﬁ
[
t›
].
d
=’oﬁ[t›].
l
+1)/2;

67 if(
poﬁ
[
t›
].
l
<=0)

69 
ô
=
°
.
	`föd
(
poﬁ
[
t›
]);

70 if(
ô
!=
°
.
	`íd
())

71 
°
.
	`îa£
(
ô
);

72 
t›
++;

73 
	}
}

75 
	$maö
()

77 
m
;

78 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

80 
°
.
	`˛ór
();

81 
t›
=0;

82 
	`add£g
(0,
n
+1);

83 
x
,
id
;

84 
i
=0; i<
m
; i++)

86 
	`sˇnf
("%d%d",&
x
,&
id
);

87 if(
x
==1)

89 
nowp
;

90 
ô
=
°
.
	`begö
();

91 if(
ô
->
Õ
==0)

92 
nowp
=1;

93 if(
ô
->
Ω
==
n
+1)

94 
nowp
=
n
;

97 
nowp
=
ô
->
Õ
+(ô->
l
+1)/2;

99 
pos
[
id
]=
nowp
;

100 
	`¥ötf
("%d\n",
nowp
);

101 
p
[
nowp
].
l
=
ô
->
Õ
,p[nowp].
r
=ô->
Ω
;

102 
p
[
ô
->
Õ
].
r
=
nowp
;

103 
p
[
ô
->
Ω
].
l
=
nowp
;

104 
	`add£g
(
ô
->
Õ
,
nowp
);

105 
	`add£g
(
nowp
,
ô
->
Ω
);

106 
°
.
	`îa£
(
ô
);

110 
nowp
=
pos
[
id
];

111 
p
[p[
nowp
].
l
].
r
=p[nowp].r;

112 
p
[p[
nowp
].
r
].
l
=p[nowp].l;

113 
	`îa££g
(
p
[
nowp
].
l
,nowp);

114 
	`îa££g
(
nowp
,
p
[nowp].
r
);

115 
	`add£g
(
p
[
nowp
].
l
,p[nowp].
r
);

120 
	}
}

	@problems/codeforces/div2_codes/round137/R137D2A.cpp

1 
	~<c°dio
>

2 
	#N
 100001

	)

4 
	gd©
[
N
];

6 
	$maö
()

8 
n
,
k
,
id
;

9 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

11 
i
=1; i<=
n
; i++)

12 
	`sˇnf
("%d",&
d©
[
i
]);

13 
id
=
n
; id>=2; id--)

14 if(
d©
[
id
-1]!=dat[id])

16 if(
k
>=
id
)

17 
	`¥ötf
("%d\n",
id
-1);

19 
	`puts
("-1");

22 
	}
}

	@problems/codeforces/div2_codes/round137/R137D2B.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 1001

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gr
[
N
],
	gc
[N],
	gm©
[N][N];

8 
	$maö
()

10 
n
,
m
,
k
;

11 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
);

12 
i
=1; i<=
n
; i++)

13 
r
[
i
]=i;

14 
i
=1; i<=
m
; i++)

15 
c
[
i
]=i;

16 
i
=1; i<=
n
; i++)

17 
j
=1; j<=
m
; j++)

18 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

19 
s
[10];

20 
i
=1; i<=
k
; i++)

22 
x
,
y
;

23 
	`sˇnf
("%s%d%d",
s
,&
x
,&
y
);

24 if(
s
[0]=='c')

26 
	`sw≠
(
c
[
x
],c[
y
]);

28 if(
s
[0]=='r')

30 
	`sw≠
(
r
[
x
],r[
y
]);

34 
	`¥ötf
("%d ",
m©
[
r
[
x
]][
c
[
y
]]);

37 
	`puts
("");

39 
	}
}

	@problems/codeforces/div2_codes/round137/R137D2C.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	~<Æg‹ôhm
>

4 
	#N
 10000001

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gp
[
N
],
	g∂i°
[N],
	gt›
,
	gda
[100001],
	gdb
[100001];

9 
	gm≠
<,> 
	gup
,
	gdn
;

10 
	gm≠
<,>::
ôî©‹
 
ô
;

12 
	$öô
()

14 
t›
=0;

15 
i
=0; i<
N
; i++)

16 
p
[
i
]=i;

17 
i
=2; i<
N
; i++)

19 if(
p
[
i
]==i)

20 
∂i°
[
t›
++]=
i
;

21 
j
=0; j<
t›
&&
i
*
∂i°
[j]<
N
; j++)

23 
p
[
i
*
∂i°
[
j
]]=plist[j];

24 if(
i
%
∂i°
[
j
]==0)

28 
	}
}

30 
	$maö
()

32 
n
,
m
;

33 
	`öô
();

34 
	`sˇnf
("%d%d",&
n
,&
m
);

35 
i
=0; i<
n
; i++)

37 
x
,
y
,
c
;

38 
	`sˇnf
("%d",&
x
);

39 
da
[
i
]=
x
;

40 ; 
x
>1;)

42 
y
=
p
[
x
],
c
=0;

43 ; 
x
%
y
==0;)

44 
x
/=
y
,
c
++;

45 
up
[
y
]+=
c
;

48 
i
=0; i<
m
; i++)

50 
x
,
y
,
c
;

51 
	`sˇnf
("%d",&
x
);

52 
db
[
i
]=
x
;

53 ; 
x
>1;)

55 
y
=
p
[
x
],
c
=0;

56 ; 
x
%
y
==0;)

57 
x
/=
y
,
c
++;

58 
dn
[
y
]+=
c
;

61 
	`¥ötf
("%d %d\n",
n
,
m
);

62 
i
=0; i<
n
; i++)

64 
x
,
y
,
c
,
z
=1,
cc
;

65 
x
=
da
[
i
];

66 ; 
x
>1;)

68 
y
=
p
[
x
],
c
=0;

69 ; 
x
%
y
==0;)

70 
x
/=
y
,
c
++;

71 
cc
=
up
[
y
]-
dn
[y];

72 if(
cc
>0)

74 
cc
=
	`mö
(cc,
c
);

75 
j
=0; j<
cc
; j++)

76 
z
*=
y
;

77 
up
[
y
]-=
cc
;

80 
	`¥ötf
("%d ",
z
);

82 
	`puts
("");

83 
i
=0; i<
m
; i++)

85 
x
,
y
,
c
,
z
=1,
cc
;

86 
x
=
db
[
i
];

87 ; 
x
>1;)

89 
y
=
p
[
x
],
c
=0;

90 ; 
x
%
y
==0;)

91 
x
/=
y
,
c
++;

92 
cc
=
dn
[
y
]-
up
[y];

93 if(
cc
>0)

95 
cc
=
	`mö
(cc,
c
);

96 
j
=0; j<
cc
; j++)

97 
z
*=
y
;

98 
dn
[
y
]-=
cc
;

101 
	`¥ötf
("%d ",
z
);

103 
	`puts
("");

105 
	}
}

	@problems/codeforces/div2_codes/round137/R137D2D.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<£t
>

4 
	#N
 109001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gda
[
N
];

8 
	gmu…i£t
<> 
	gdb
;

9 
	gmu…i£t
<>:: 
ôî©‹
 
ô
;

11 
	$cmp
(
a
,
b
){ á>b; 
	}
}

13 
	$maö
()

15 
n
,
x
;

16 
	`sˇnf
("%d%d",&
n
,&
x
);

17 
i
=0; i<
n
; i++)

19 
tx
;

20 
	`sˇnf
("%d",&
tx
);

21 
da
[
i
]=
tx
;

23 
i
=0; i<
n
; i++)

25 
tx
;

26 
	`sˇnf
("%d",&
tx
);

27 
db
.
	`ö£π
(
tx
);

29 
	`¥ötf
("1 ");

30 
ªt
=0;

31 
	`s‹t
(
da
,da+
n
,
cmp
);

32 
i
=0; i<
n
; i++)

34 
y
=
x
-
da
[
i
];

35 
ô
=
db
.
	`lowî_bound
(
y
);

36 if(
ô
==
db
.
	`íd
())

38 
db
.
	`îa£
(
ô
);

39 
ªt
++;

41 
	`¥ötf
("%d\n",
ªt
);

43 
	}
}

	@problems/codeforces/div2_codes/round137/R137D2E.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	#MOD
 1000000007

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gm©
[60][60],
	gªt
[60][60],
	gtmp
[60][60];

9 
	gn
,
	gk
;

10 
LL
 
	gÀn
;

12 
	$gë
(
x
)

14 if(
x
<='Z')

15  
x
-'A'+26;

16  
x
-'a';

17 
	}
}

19 
	$m©mul
(
LL
 
™s
[][60],LL 
a
[][60],LL 
b
[][60])

21 
i
=0; i<
n
; i++)

22 
j
=0; j<
n
; j++)

23 
tmp
[
i
][
j
]=0;

24 
i
=0; i<
n
; i++)

25 
j
=0; j<
n
; j++)

27 
k
=0; k<
n
; k++)

28 
tmp
[
i
][
j
]=—mp[i][j]+
a
[i][
k
]*
b
[k][j])%
MOD
;

30 
i
=0; i<
n
; i++)

31 
j
=0; j<
n
; j++)

32 
™s
[
i
][
j
]=
tmp
[i][j];

33 
	}
}

35 
	$m©pow
()

37 
Àn
-=2;

38 ; 
Àn
;)

40 if(
Àn
&1)

41 
	`m©mul
(
ªt
,ªt,
m©
);

42 
	`m©mul
(
m©
,mat,mat);

43 
Àn
>>=1LL;

45 
	}
}

47 
	$maö
()

49 
cö
>>
Àn
>>
n
>>
k
;

50 if(
Àn
==1)

52 
	`¥ötf
("%d\n",
n
);

55 
i
=0; i<
n
; i++)

56 
j
=0; j<
n
; j++)

58 
m©
[
i
][
j
]=1;

59 
ªt
[
i
][
j
]=1;

61 
s
[10];

62 
i
=0; i<
k
; i++)

64 
	`sˇnf
("%s",
s
);

65 
m©
[
	`gë
(
s
[0])][get(s[1])]=0;

66 
ªt
[
	`gë
(
s
[0])][get(s[1])]=0;

68 
	`m©pow
();

69 
LL
 
™s
=0;

70 
i
=0; i<
n
; i++)

71 
j
=0; j<
n
; j++)

72 
™s
=◊ns+
ªt
[
i
][
j
])%
MOD
;

73 
cout
<<
™s
<<
ídl
;

75 
	}
}

	@problems/codeforces/div2_codes/round138/R138D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	$maö
()

36 
a
,
b
,
c
,
ªt
;

37 
	`sˇnf
("%d%d%d",&
a
,&
b
,&
c
)!=
EOF
)

39 
ªt
=0;

40 
i
=1; i*i<=
a
; i++)

42 if(
a
%
i
==0)

44 
j
=
a
/
i
;

45 
k
=1; k<=
b
&&k<=
c
; k++)

47 if(
b
%
k
==0&&
c
%k==0)

49 if((
i
==
b
/
k
&&
j
==
c
/k)||(i==c/k&&j==b/k))

51 
	`¥ötf
("%d\n",4*(
i
+
j
+
k
));

60 
	}
}

	@problems/codeforces/div2_codes/round138/R138D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gm≠
<,> 
	gmp
;

35 
	gd©
[
N
];

37 
	$maö
()

39 
n
,
k
;

40 
	`sˇnf
("%d%d",&
n
,&
k
);

41 
i
=1; i<=
n
; i++)

43 
	`sˇnf
("%d",&
d©
[
i
]);

45 
l
=1,
r
=-1;

46 ; 
l
<
n
;Ü++)

47 if(
d©
[
l
]!=dat[l+1])

49 
i
=
l
; i<=
n
; i++)

51 
mp
[
d©
[
i
]]++;

52 if(
mp
.
	`size
()==
k
)

54 
r
=
i
;

58 if(
r
==-1)

59 
	`puts
("-1 -1");

62 ; 
l
<=
r
;)

64 if(
mp
[
d©
[
l
]]>1)

66 
mp
[
d©
[
l
]]--;

67 
l
++;

72 
	`¥ötf
("%d %d\n",
l
,
r
);

75 
	}
}

	@problems/codeforces/div2_codes/round138/R138D2C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
];

36 
	gm©
[
N
],
	gÀn
,
	gªt
,
	gdp
[N],
	gªti
[N];

37 
	g°
[
N
],
	gt›
;

39 
	$dfs
(
l
,
r
)

41 if(
l
>
r
)

43 if(
m©
[
l
]==-1)

45 
	`dfs
(
l
+1,
r
);

46 
dp
[
l
]=0;

47 
ªti
[
l
]=-1;

50 
id
=
m©
[
l
],
a
,
b
,
add
;

51 
a
=
	`dfs
(
l
+1,
m©
[l]-1);

52 
b
=
	`dfs
(
m©
[
l
]+1,
r
);

54 if(
s
[
l
]=='['&&
a
)

55 
add
=1;

57 
add
=0;

59 if(
a
)

61 
dp
[
l
]=dp[l+1]+dp[
m©
[l]+1]+
add
;

62 
ªti
[
l
]=l;

66 
ªti
[
l
]=-1;

67 
dp
[
l
]=0;

77 if(
a
&&
b
)

81 
	}
}

83 
	$show
(
i
)

85 if(
i
<0)

87 if(
ªti
[
i
]==i)

89 
id
=
m©
[
i
];

90 
	`¥ötf
("%c",
s
[
i
]);

91 
	`show
(
i
+1);

92 
	`¥ötf
("%c",
s
[
id
]);

93 
	`show
(
id
+1);

96 
	`show
(
ªti
[
i
]);

97 
	}
}

99 
	$maö
()

101 
	`sˇnf
("%s",
s
);

102 
Àn
=
	`°æí
(
s
);

103 
t›
=-1;

104 
i
=0; i<
Àn
; i++)

105 
m©
[
i
]=-1;

106 
i
=0; i<
Àn
; i++)

108 if(
s
[
i
]=='(')

109 
°
[++
t›
]=
i
;

110 if(
s
[
i
]=='[')

111 
°
[++
t›
]=
i
;

112 if(
s
[
i
]==')')

114 if(
t›
<0)

116 
id
=
°
[
t›
];

117 if(
s
[
id
]=='(')

119 
m©
[
i
]=
id
;

120 
m©
[
id
]=
i
;

122 
t›
--;

126 if(
t›
<0)

128 
id
=
°
[
t›
];

129 if(
s
[
id
]=='[')

131 
m©
[
i
]=
id
;

132 
m©
[
id
]=
i
;

134 
t›
--;

137 
	`mem£t
(
dp
,0,(dp));

138 
	`mem£t
(
ªti
,-1,(reti));

139 
	`dfs
(0,
Àn
-1);

140 
ªt
=0,
id
=-1;

141 
i
=0; i<
Àn
; i++)

142 if(
ªt
<
dp
[
i
])

143 
ªt
=
dp
[
i
],
id
=i;

144 
	`¥ötf
("%d\n",
ªt
);

145 if(
ªt
==0)

146 
	`puts
("");

149 
	`show
(
id
);

150 
	`puts
("");

153 
	}
}

	@problems/codeforces/div2_codes/round138/R138D2D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 201000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gdp
[
N
],
	gdd
[N];

35 
	gve˘‹
<> 
	gids
[26];

36 
	gs
[
N
],
	gt
[N];

38 
	$ok
(
n
)

40 
now
,
l
,
r
,
ii
;

41 
i
=0; i<
n
; i++)

43 
now
=
s
[
i
]-'a';

44 
l
=
dd
[
i
+2]-1,
r
=
dp
[i]+1;

45 
ii
=
s
[
i
]-'a';

46 
x
=
	`uµî_bound
(
ids
[
ii
].
	`begö
(),ids[ii].
	`íd
(),
r
)-
	`lowî_bound
(ids[ii].begö(),ids[ii].íd(),
l
);

47 if(
x
<=0)

51 
	}
}

53 
	$maö
()

55 
	`sˇnf
("%s%s",
s
,
t
)!=
EOF
)

57 
ls
=
	`°æí
(
s
),
…
=°æí(
t
);

58 
i
=0;

59 
i
=0; i<26; i++)

60 
ids
[
i
].
	`˛ór
();

61 
i
=0; i<
…
; i++)

63 
ids
[
t
[
i
]-'a'].
	`push_back
(i);

65 
i
=0; i<26; i++)

66 
	`s‹t
(
ids
[
i
].
	`begö
(),ids[i].
	`íd
());

67 
dp
[0]=-1;

68 
j
=0; j<
…
; j++)

70 ; 
i
<
ls
; i++)

72 if(
s
[
i
]==
t
[
j
])

74 
dp
[
i
+1]=
j
;

75 
i
++;

78 
dp
[
i
+1]=
j
-1;

81 ; 
i
<
ls
; i++)

82 
dp
[
i
+1]=dp[i];

83 
i
=
ls
-1;

84 
dd
[
ls
+1]=
…
;

85 
j
=
…
-1; j>=0; j--)

87 ; 
i
>=0; i--)

89 if(
s
[
i
]==
t
[
j
])

91 
dd
[
i
+1]=
j
;

92 
i
--;

95 
dd
[
i
+1]=
j
+1;

98 ; 
i
>=0; i--)

99 
dd
[
i
+1]=dd[i+2];

100 if(
	`ok
(
ls
))

101 
	`puts
("Yes");

103 
	`puts
("No");

106 
	}
}

	@problems/codeforces/div2_codes/round138/R138D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 2010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gm©
[
N
][N],
	gtmp
[N][N],
	gªt
[N][N];

35 
	gd©
[
N
];

37 
	$show
(
m©
[][
N
],
n
)

39 
i
=0; i<
n
; i++,
	`puts
(""))

40 
j
=0; j<
n
; j++)

41 
	`¥ötf
("%d ",
m©
[
i
][
j
]);

42 
	`puts
("");

43 
	}
}

45 
ölöe
 
	$mul
(
a
,
b
)

47  (
	`LL
(
a
)*
b
%
MOD
);

48 
	}
}

50 
	$mul
(
c
[][
N
],
a
[][N],
b
[][N],
n
)

52 
i
,
k
,
j
;

53 
i
=0; i<
n
; i++)

55 
tmp
[
i
][0]=0;

56 
k
=0; k<=
i
; k++)

58 
tmp
[
i
][0]+=
	`mul
(
a
[i][
k
],
b
[k][0]);

60 if(
tmp
[
i
][0]>
MOD
)

61 
tmp
[
i
][0]-=
MOD
;

65 
j
=1; j<
n
; j++)

66 
i
=
j
; i<
n
; i++)

67 
tmp
[
i
][
j
]=tmp[i-1][j-1];

68 
i
=0; i<
n
; i++)

69 
j
=0; j<=
i
; j++)

70 
c
[
i
][
j
]=
tmp
[i][j];

71 
	}
}

73 
	$sﬁve
(
n
,
k
)

75 
	`mem£t
(
ªt
,0,(ret));

76 
i
=0; i<
n
; i++)

77 
ªt
[
i
][i]=1;

78 ; 
k
; )

80 if(
k
&1)

82 
	`mul
(
ªt
,ªt,
m©
,
n
);

84 
	`mul
(
m©
,m©,m©,
n
);

85 
k
>>=1;

87 
	}
}

89 
	$maö
()

91 
n
,
k
;

92 
	`sˇnf
("%d%d",&
n
,&
k
);

93 
i
=0; i<
n
; i++)

94 
j
=0; j<=
i
; j++)

95 
m©
[
i
][
j
]=1;

96 
i
=0; i<
n
; i++)

97 
	`sˇnf
("%d",&
d©
[
i
]);

98 
	`sﬁve
(
n
,
k
);

99 
™s
;

100 
i
=0; i<
n
; i++)

102 
™s
=0;

103 
j
=0; j<=
i
; j++)

105 
™s
˜ns+
	`mul
(
ªt
[
i
][
j
],
d©
[j]);

106 if(
™s
>
MOD
)

107 
™s
-=
MOD
;

109 
	`¥ötf
("%d ",
™s
);

111 
	`puts
("");

114 
	}
}

	@problems/codeforces/div2_codes/round139/R139D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

35 
	gsix
[8];

37 
	$ok
(
n
,
now
)

39 
x
,
y
;

40 
	`mem£t
(
six
,0,(six));

41 
x
=
no
[0].x,
y
=no[0].y;

42 if(
x
==
y
)  0;

43 
six
[
x
]=six[
y
]=1;

44 if(
six
[7-
x
]||six[7-
y
])

46 
six
[7-
x
]=1,six[7-
y
]=1;

47 if(
six
[
now
])

49 
six
[
now
]=1;

50 
id
=-1;

51 
i
=1; i<=6; i++)

52 if(
six
[
i
]==0)

54 
id
=
i
;

58 
i
=1; i<
n
; i++)

60 
	`mem£t
(
six
,0,(six));

61 
x
,
y
;

62 
x
=
no
[
i
].x,
y
=no[i].y;

63 if(
x
==
y
)  0;

64 
six
[
x
]=1,six[
y
]=1;

65 if(
six
[7-
x
]||six[7-
y
])

67 
six
[7-
x
]=1,six[7-
y
]=1;

68 if(
six
[
id
])

72 
	}
}

74 
	$maö
()

76 
n
,
now
;

77 
	`sˇnf
("%d",&
n
)!=
EOF
)

79 
	`sˇnf
("%d",&
now
);

80 
i
=0; i<
n
; i++)

81 
	`sˇnf
("%d%d",&
no
[
i
].
x
,&no[i].
y
);

82 if(
	`ok
(
n
,
now
))

83 
	`puts
("YES");

85 
	`puts
("NO");

88 
	}
}

	@problems/codeforces/div2_codes/round139/R139D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gd©
[1000000];

35 
	gli°
[1000000];

37 
	$maö
()

39 
n
,
k
;

40 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

42 
d©
[0]=0,dat[1]=1;

43 
t›
=0;

44 
i
=2; ; i++)

46 
LL
 
now
=0;

47 
j
=
i
-1; j>=0&&j>=i-
k
; j--)

48 
now
+=
d©
[
j
];

49 
d©
[
i
]=
now
;

50 if(
d©
[
i
]>
n
)

52 
t›
=
i
;

56 
ªt
=0,
id
=
t›
-1;

57 if(
d©
[
id
]==
n
)

58 
li°
[
ªt
++]=0;

59 ; 
id
>=1&&
n
;)

61 ; 
d©
[
id
]>
n
&&id>=1; id--);

62 
li°
[
ªt
++]=
d©
[
id
],
n
-=dat[id];

64 
	`¥ötf
("%d\n",
ªt
);

65 
i
=0; i<
ªt
; i++)

66 
	`¥ötf
("%d ",
li°
[
i
]);

67 
	`puts
("");

70 
	}
}

	@problems/codeforces/div2_codes/round139/R139D2C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3ffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[
N
][N];

35 
	g˙t
[
N
][2],
	gl
,
	gr
,
	gn
,
	gm
,
	gdp
[N][N][2];

37 
	$dfs
(
id
,
Àn
,
èg
)

39 if(
dp
[
id
][
Àn
][
èg
]>=0)

40  
dp
[
id
][
Àn
][
èg
];

41 if(
id
==
n
)

43 if(
Àn
>=
l
&&Àn<=
r
)

44  
dp
[
id
][
Àn
][
èg
]=0;

45  
dp
[
id
][
Àn
][
èg
]=
öf
;

48 
ªt
=
öf
;

49 if(
Àn
<
l
)

50  
dp
[
id
][
Àn
][
èg
]=
	`dfs
(id+1,Àn+1,èg)+
˙t
[id][tag];

51 if(
Àn
==
r
)

52  
dp
[
id
][
Àn
][
èg
]=
	`dfs
(id+1,1,èg^1)+
˙t
[id][tag^1];

53 
ªt
=
	`dfs
(
id
+1,
Àn
+1,
èg
)+
˙t
[id][tag];

54 
ªt
=
	`mö
‘ë,
	`dfs
(
id
+1,1,
èg
^1)+
˙t
[id][tag^1]);

55  
dp
[
id
][
Àn
][
èg
]=
ªt
;

56 
	}
}

58 
	$maö
()

60 
	`sˇnf
("%d%d%d%d",&
m
,&
n
,&
l
,&
r
)!=
EOF
)

62 
i
=0; i<
m
; i++)

63 
	`sˇnf
("%s",
s
[
i
]);

64 
	`mem£t
(
˙t
,0,(cnt));

65 
i
=0; i<
n
; i++)

67 
j
=0; j<
m
; j++)

69 if(
s
[
j
][
i
]=='.')

70 
˙t
[
i
][0]++;

72 
˙t
[
i
][1]++;

75 
	`mem£t
(
dp
,-1,(dp));

76 
	`dfs
(1,1,0);

77 
	`dfs
(1,1,1);

78 
	`¥ötf
("%d\n",
	`mö
(
dp
[1][1][0]+
˙t
[0][0],dp[1][1][1]+cnt[0][1]));

81 
	}
}

	@problems/codeforces/div2_codes/round139/R139D2D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<c°dlib
>

10 
	~<ve˘‹
>

11 
	~<£t
>

12 
	~<m≠
>

13 
	~<queue
>

14 
	~<°rög
>

15 
	~<s°ªam
>

16 
	~<cm©h
>

17 
	~<fun˘i⁄Æ
>

18 
	~<io°ªam
>

19 
	~<Æg‹ôhm
>

20 
	#N
 110

	)

21 
	#M
 1000010

	)

22 
	#S
 1000100

	)

23 
	#X
 262145

	)

24 
	#ïs
 1e-8

	)

25 
	#öf
 0x3fffffff

	)

26 
	#MOD
 1000000007

	)

27 
	#PB
 
push_back


	)

28 
	#MP
 
make_∑ú


	)

29 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

30 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

31 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

33 
	tLL
;

34 
usög
 
«me•a˚
 
	g°d
;

36 
	gs
[
N
][N];

37 
	gm
,
	gn
,
	gt›
,
	g¥e
,
	gÀn
;

39 
	snode
{ 
	mx
,
	my
,
	m¥e
,
	m˙t
,
	md
; }
	gno
[
S
];

40 
	$öbﬂrd
(
x
,
y
){  0<=x&&x<
m
&&0<=y&&y<
n
; 
	}
}

41 
	gdú
[4][2]={{-1,0},{1,0},{0,1},{0,-1}},
	g¥ed
;

42 
	g£t
<> 
	g°
;

44 
	$buûd
(
x
,
y
)

46 
no
[
t›
].
x
=x,no[t›].
y
=y;

47 
no
[
t›
].
¥e
=pre;

48 
no
[
t›
].
d
=
¥ed
;

49 
¥e
=
t›
;

50 
t›
++;

51 
i
=0; i<4; i++)

53 
xx
=
x
+
dú
[
i
][0],
yy
=
y
+dir[i][1];

54 if(!
	`öbﬂrd
(
xx
,
yy
))

56 if(
s
[
x
][
y
]!=s[
xx
][
yy
]+1)

58 
¥ed
=
i
;

59 
	`buûd
(
xx
,
yy
);

61 
	}
}

63 
	$ok
(
x
,
y
,
id
,
pd
)

65 if(!
	`öbﬂrd
(
x
,
y
))

67 if(
s
[
x
][
y
]=='#')

69 if(
s
[
x
][
y
]!='.')

70 if(
s
[
x
][
y
]==' '||s[x][y]==0)

72 
nd
=
id
,
°©e
=(
x
*15+
y
)*
X
,
d°
=
pd
;

73 
i
=0; i<
Àn
-1; i++)

75 if(
i
<
Àn
-2)

76 
d°
<<=2,d°+=
no
[
nd
].
d
;

77 if(
no
[
nd
].
x
==x&&no[nd].
y
==y)

79 
nd
=
no
[nd].
¥e
;

81 
°©e
+=
d°
;

82 if(
°
.
	`föd
(
°©e
)!=°.
	`íd
())

84 
°
.
	`ö£π
(
°©e
);

86 
	}
}

88 
	$bfs
()

90 
l
=
t›
-1,
r
=top-1;

91 
no
[
l
].
˙t
=0;

92 ; 
l
<=
r
;Ü++)

94 
node
 
now
=
no
[
l
],
√xt
;

95 
i
=0; i<4; i++)

97 
xx
=
now
.
x
+
dú
[
i
][0],
yy
Úow.
y
+dir[i][1];

98 if(!
	`ok
(
xx
,
yy
,
l
,
i
))

100 if(
s
[
xx
][
yy
]=='@')

102  
now
.
˙t
+1;

104 
√xt
.
˙t
=
now
.cnt+1;

105 
√xt
.
x
=
xx
,√xt.
y
=
yy
,√xt.
¥e
=
l
;

106 
√xt
.
d
=
i
;

107 
no
[++
r
]=
√xt
;

111 
	}
}

113 
	$maö
()

115 
sx
,
sy
,
rx
,
ry
;

116 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

118 
	`mem£t
(
s
,0,(s));

119 
°
.
	`˛ór
();

120 
Àn
=-1;

121 
i
=0; i<
m
; i++)

123 
	`sˇnf
("%s",
s
[
i
]);

124 
j
=0; j<
n
; j++)

126 if(
s
[
i
][
j
]<='9'&&'0'<=s[i][j])

127 if(
Àn
<
s
[
i
][
j
]-'0')

128 
Àn
=
s
[
i
][
j
]-'0',
sx
=i,
sy
=j;

129 if(
s
[
i
][
j
]=='@')

130 
rx
=
i
,
ry
=
j
;

133 
t›
=0;

134 
¥e
=-1;

135 
¥ed
=4;

136 
	`buûd
(
sx
,
sy
);

137 
Àn
=
t›
;

138 
	`¥ötf
("%d\n",
	`bfs
());

141 
	}
}

	@problems/codeforces/div2_codes/round139/R139D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 10100

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gvis
[
N
];

36 
	gd©
[
N
]={0,2, 3, 5, 7, 13, 17, 19, 31, 61, 89, 107, 127, 521, 607, 1279, 2203, 2281, 3217, 4253, 4423, 9689, 9941, 11213, 19937, 21701, 23209, 44497, 86243, 110503, 132049, 216091, 756839, 859433, 1257787, 1398269, 2976221, 3021377, 6972593, 13466917, 20996011, 24036583};

38 
LL
 
	$ˇl
(
x
)

40 
LL
 
ªt
=1,
y
=2;

41 ; 
x
;)

43 if(
x
&1)

44 
ªt
=‘ë*
y
)%
MOD
;

45 
x
>>=1;

46 
y
=(y*y)%
MOD
;

48  
ªt
;

49 
	}
}

51 
	$maö
()

53 
n
;

54 
	`sˇnf
("%d",&
n
)!=
EOF
)

56 
cout
<<((
	`ˇl
(
d©
[
n
]-1)-1)%
MOD
+MOD)%MOD<<
ídl
;

58 
	}
}

	@problems/codeforces/div2_codes/round141/R141D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gmè
[
N
][N],
	gmtb
[N][N];

36 
	$maö
()

38 
«
,
ma
,
nb
,
mb
,
x
,
y
,
ªt
;

39 
	`sˇnf
("%d%d",&
«
,&
ma
)+1)

41 
ªt
=-1;

42 
i
=1; i<=
«
; i++)

43 
	`sˇnf
("%s",
mè
[
i
]+1);

44 
	`sˇnf
("%d%d",&
nb
,&
mb
);

45 
i
=1; i<=
nb
; i++)

46 
	`sˇnf
("%s",
mtb
[
i
]+1);

47 
x
=
y
=
öf
;

48 
i
=-
«
+1; i<=
nb
; i++)

49 
j
=-
ma
+1; j<=
mb
; j++)

51 
tmp
=0;

52 
u
=1; u<=
«
; u++)

53 
v
=1; v<=
ma
; v++)

54 if(
i
+
u
>=1&&i+u<=
nb
)

55 if(
v
+
j
>=1&&v+j<=
mb
)

57 
tmp
+=((
mè
[
u
][
v
]-'0')*(
mtb
[
i
+u][
j
+v]-'0'));

59 if(
tmp
>
ªt
)

60 
ªt
=
tmp
,
x
=
i
,
y
=
j
;

62 
	`¥ötf
("%d %d\n",
x
,
y
);

65 
	}
}

	@problems/codeforces/div2_codes/round141/R141D2C.cpp

1 
	~<c°dio
>

2 
	#N
 510

	)

4 
	g˙t
[10][
N
][N],
	gdp
[10][N][N];

5 
	gdx
[4]={0,0,1,1};

6 
	gdy
[4]={0,1,0,1};

7 
	gs
[
N
];

9 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

11 
	$gao
(
m
,
n
)

13 
ªt
=0;

14 
k
=1; 
	`B
(k)<=
m
&&B(k)<=
n
; k++)

16 
i
=0; i+
	`B
(
k
)<=
m
; i++)

17 
j
=0; j+
	`B
(
k
)<=
n
; j++)

19 
u
=0; u<4; u++)

21 
now
=
˙t
[
k
-1][
i
+
dx
[
u
]*
	`B
(k-1)][
j
+
dy
[u]*B(k-1)];

22 
˙t
[
k
][
i
][
j
]+=
now
;

23 if(
now
==
	`B
(2*(
k
-1)))

24 
dp
[
k
][
i
][
j
]+=
	`B
(
u
);

26 if(
k
>1)

28 
u
=0; u<4; u++)

30 if((
dp
[
k
][
i
][
j
]&
	`B
(
u
))==0)

31 if(
dp
[
k
][
i
][
j
]!=dp[k-1][i+
dx
[
u
]*
	`B
(k-1)][j+
dy
[u]*B(k-1)])

32 
dp
[
k
][
i
][
j
]=-1;

34 if(
dp
[
k
][
i
][
j
]>=0)

35 
ªt
++;

39  
ªt
;

40 
	}
}

42 
	$maö
()

44 
m
,
n
;

45 
	`sˇnf
("%d%d",&
m
,&
n
);

46 
i
=0; i<
m
; i++)

48 
	`sˇnf
("%s",
s
);

49 
j
=0; j<
n
; j++)

51 if(
s
[
j
]=='*')

52 
˙t
[0][
i
][
j
]=1;

54 
˙t
[0][
i
][
j
]=0;

57 
	`¥ötf
("%d\n",
	`gao
(
m
,
n
));

59 
	}
}

	@problems/codeforces/div2_codes/round141/R141D2D.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	#N
 100100

	)

5 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

8 
	sbô


10 
LL
 
	ma
[
N
];

11 
lb
(
x
){  
	mx
&(-x); }

12 
LL
 
sum
(
i
)

14 
LL
 
	mªt
=0;

15 ; 
	mi
>0; i-=
lb
(
i
))

16 
ªt
+=
a
[
i
];

17  
	mªt
;

20 
LL
 
quîy
(
l
,
r
)

22  
sum
(
r
)-sum(
l
-1);

25 
LL
 
upd©e
(
i
,
x
)

27 ; 
	mi
<
	mN
; i+=
lb
(
i
))

28 
a
[
i
]+=
x
;

30 }
	gå
[7][14];

32 
ölöe
 
	$gë
(
x
){  (x-1)<<1; 
	}
}

34 
	gd©
[
N
];

36 
	$maö
()

38 
n
;

39 
	`sˇnf
("%d",&
n
);

40 
i
=1; i<=
n
; i++)

42 
x
;

43 
	`sˇnf
("%d",&
x
);

44 
d©
[
i
]=
x
;

45 
j
=2; j<=6; j++)

46 
å
[
j
][
i
%
	`gë
(j)].
	`upd©e
(i,
x
);

48 
q
;

49 
	`sˇnf
("%d",&
q
);

50 
i
=0; i<
q
; i++)

52 
x
,
p
,
l
,
r
,
z
;

53 
	`sˇnf
("%d",&
x
);

54 if(
x
==1)

56 
	`sˇnf
("%d%d",&
p
,&
x
);

57 
dñ
=
x
-
d©
[
p
];

58 
j
=2; j<=6; j++)

59 
å
[
j
][
p
%
	`gë
(j)].
	`upd©e
’,
dñ
);

60 
d©
[
p
]=
x
;

64 
	`sˇnf
("%d%d%d",&
l
,&
r
,&
z
);

65 
LL
 
ªt
=0,
b
=1;

66 
i
=
l
; i<l+
	`gë
(
z
)&&i<=
r
; i++)

68 
ªt
+=
b
*
å
[
z
][
i
%
	`gë
(z)].
	`quîy
(i,
r
);

69 if(
i
-
l
+1<
z
)

70 
b
++;

72 
b
--;

74 
cout
<<
ªt
<<
ídl
;

78 
	}
}

	@problems/codeforces/div2_codes/round141/R141D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 111

	)

20 
	#M
 1000010

	)

21 
	#S
 100010

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gm©
[
N
][N];

35 
	gve˘‹
<> 
	gvec
;

36 
	gvis
[
N
],
	gli°
[N],
	gvv
[N];

38 
	$dfs
(
now
,
èg
,
n
)

40 if(
vis
[
now
])

42 if(
vv
[
now
]!=
èg
)

46 
vis
[
now
]=1;

47 
vv
[
now
]=
èg
;

48 if(
èg
)

49 
vec
.
	`push_back
(
now
);

50 
i
=1; i<=
n
; i++)

51 if(
m©
[
now
][
i
]!=-1)

53 
¡
=
	`dfs
(
i
,
èg
^(1-
m©
[
now
][i]),
n
);

54 if(
¡
==0)

58 
	}
}

60 
	$maö
()

62 
n
,
m
;

63 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

65 
vec
.
	`˛ór
();

66 
	`mem£t
(
m©
,-1,(mat));

67 
	`mem£t
(
vis
,0,(vis));

68 
	`mem£t
(
vv
,0,(vv));

69 
i
=0; i<
m
; i++)

71 
x
,
y
,
z
;

72 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

73 
m©
[
x
][
y
]=m©[y][x]=
z
;

75 
èg
=1;

76 
i
=1; i<=
n
; i++)

78 
ok
;

79 if(!
vis
[
i
])

81 
ok
=
	`dfs
(
i
,0,
n
);

82 if(
ok
==0)

84 
èg
=0;

89 if(
èg
==0)

90 
	`puts
("Impossible");

93 
	`¥ötf
("%d\n",
vec
.
	`size
());

94 
i
=0; i<
vec
.
	`size
(); i++)

95 
	`¥ötf
("%d ",
vec
[
i
]);

96 
	`puts
("");

100 
	}
}

	@problems/codeforces/div2_codes/round143/R143D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	$maö
()

36 
n
,
ªt
=0;

37 
	`sˇnf
("%d",&
n
);

38 
i
=0; i<
n
; i++)

40 
x
,
y
,
z
;

41 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

42 if(
x
+
y
+
z
>=2)

43 
ªt
++;

45 
	`¥ötf
("%d\n",
ªt
);

47 
	}
}

	@problems/codeforces/div2_codes/round143/R143D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gd©
[
N
];

36 
	$maö
()

38 
n
,
d
,
l
;

39 
	`sˇnf
("%d%d%d",&
n
,&
d
,&
l
)+1)

41 
i
=1; i<
n
; i++)

43 if(
d
>
l
)

45 
d©
[
i
]=
l
;

46 
d
=
d©
[
i
]-d;

48 if(
d
<1)

50 
d©
[
i
]=1;

51 
d
=
d©
[
i
]-d;

55 
d©
[
i
]=
l
;

56 
d
=
d©
[
i
]-d;

59 if(
d
<1||d>
l
)

60 
	`puts
("-1");

63 
i
=1; i<
n
; i++)

64 
	`¥ötf
("%d ",
d©
[
i
]);

65 
	`¥ötf
("%d\n",
d
);

69 
	}
}

	@problems/codeforces/div2_codes/round143/R143D2C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gd©
[
N
];

35 
	gm≠
<,> 
	gmp
;

36 
	gm≠
<,>::
ôî©‹
 
ô
;

37 
LL
 
	gdp
[
N
],
	gsum
[N],
	gcsum
[N];

38 
	snode
{ 
	mx
,
	mc
; }
	gno
[
N
];

40 
	$gë
(
i
,
k
)

42 
l
=0,
r
=
i
,
mid
;

43 ; 
l
<=
r
; )

45 
mid
=(
l
+
r
)>>1;

46 if(
sum
[
i
]-sum[
mid
]-
csum
[mid]*(
no
[i].
x
-no[mid].x)<=
k
)

47 
r
=
mid
-1;

49 
l
=
mid
+1;

51  
l
;

52 
	}
}

54 
	$maö
()

56 
n
,
k
;

57 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

59 
mp
.
	`˛ór
();

60 
i
=1; i<=
n
; i++)

62 
	`sˇnf
("%d",&
d©
[
i
]);

63 
mp
[
d©
[
i
]]++;

65 
t›
=0;

66 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++)

68 
no
[
t›
].
x
=
ô
->
fú°
;

69 
no
[
t›
++].
c
=
ô
->
£c⁄d
;

71 
sum
[0]=0;

72 
csum
[0]=0;

73 
i
=1; i<
t›
; i++)

75 
sum
[
i
]=sum[i-1]+(
csum
[i-1]+
no
[i-1].
c
)*“o[i].
x
-no[i-1].x);

76 
csum
[
i
]=csum[i-1]+
no
[i-1].
c
;

78 
dp
[0]=
no
[0].
c
;

79 
i
=1; i<
t›
; i++)

81 
id
=
	`gë
(
i
,
k
);

82 
LL
 
lf
=
k
-(
sum
[
i
]-sum[
id
]-
csum
[id]*(
no
[i].
x
-no[id].x));

83 
now
=
csum
[
i
]-csum[
id
]+
no
[i].
c
;

84 if(
id
>0)

86 
now
+=
lf
/(
no
[
i
].
x
-no[
id
-1].x);

88 
dp
[
i
]=
now
;

90 
LL
 
ªt
=0,
id
=-1;

91 
i
=0; i<
t›
; i++)

93 if(
ªt
<
dp
[
i
])

94 
ªt
=
dp
[
i
],
id
=i;

96 
™s
=(
ªt
);

97 
	`¥ötf
("%d %d\n",
™s
,
no
[
id
].
x
);

100 
	}
}

	@problems/codeforces/div2_codes/round143/R143D2D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	ga
[6];

34 
	gxx
,
	gyy
,
	gzz
,
	gxx1
,
	gyy1
,
	gzz1
;

36 
	$ok
(
i
)

38 if(
i
==0)

39  
yy
<0;

40 if(
i
==1)

41  
yy
>
yy1
;

42 if(
i
==2)

43  
zz
<0;

44 if(
i
==3)

45  
zz
>
zz1
;

46 if(
i
==4)

47  
xx
<0;

48  
xx
>
xx1
;

49 
	}
}

51 
	$maö
()

53 
	`sˇnf
("%d%d%d%d%d%d",&
xx
,&
yy
,&
zz
,&
xx1
,&
yy1
,&
zz1
)+1)

55 
ªt
=0;

56 
i
=0; i<6; i++)

57 
	`sˇnf
("%d",&
a
[
i
]);

58 
i
=0; i<6; i++)

59 if(
	`ok
(
i
))

60 
ªt
+=
a
[
i
];

61 
	`¥ötf
("%d\n",
ªt
);

64 
	}
}

	@problems/codeforces/div2_codes/round143/R143D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#X
 18

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3fffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
	gid
[
N
],
	gt›
,
	gvis
[N],
	g°
[N],
	gID
;

36 
	gve˘‹
<> 
	gli°
[
N
];

37 
	gve˘‹
<> 
	gå
[
N
];

38 
	gÁ
[
N
][
X
],
	gdp
[N][X],
	gcú
[N],
	gœy
[N];

40 
	$dfs
(
now
,
¥e
)

42 
vis
[
now
]=1;

43 
°
[++
t›
]=
now
;

44 
i
=0; i<
li°
[
now
].
	`size
(); i++)

46 
to
=
li°
[
now
][
i
];

47 if(
to
==
¥e
) ;

48 if(
id
[
to
]>=0) ;

49 if(
vis
[
to
])

51 ; 
t›
>=0; )

53 
x
=
°
[
t›
];

54 
id
[
x
]=
ID
;

55 
t›
--;

56 if(
x
==
to
)

58 
cú
[
ID
++]=1;

64 
	`dfs
(
to
,
now
);

67 if(
id
[
now
]==-1)

69 
id
[
now
]=
ID
++;

70 
t›
--;

72 
	}
}

74 
	$dfs1
(
now
,
∑
,
l
)

76 
vis
[
now
]=1;

77 
œy
[
now
]=
l
;

78 
i
=0; i<
å
[
now
].
	`size
(); i++)

80 
to
=
å
[
now
][
i
];

81 if(
vis
[
to
]) ;

82 
Á
[
to
][0]=
now
;

83 
dp
[
to
][0]=
cú
[to];

84 
u
=1; u<
X
; u++)

86 
µ
=
Á
[
to
][
u
-1];

87 
Á
[
to
][
u
]=Á[
µ
][u-1];

88 
dp
[
to
][
u
]=dp[
µ
][u-1]+dp[to][u-1];

90 
	`dfs1
(
to
,
now
,
l
+1);

92 
	}
}

94 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

96 
	$gëp
(
x
,
y
)

98 if(
œy
[
x
]<œy[
y
]Ë
	`sw≠
(x,y);

99 if(
œy
[
x
]>œy[
y
])

101 
d
=
œy
[
x
]-œy[
y
];

102 
i
=0; i<
X
; i++)

103 if(
d
&
	`B
(
i
))

104 
x
=
Á
[x][
i
];

106 if(
x
!=
y
)

108 
i
=
X
-1; i>=0; i--)

109 if(
Á
[
x
][
i
]!=Á[
y
][i])

110 
x
=
Á
[x][
i
],
y
=fa[y][i];

111 
x
=
Á
[x][0],
y
=fa[y][0];

113  
x
;

114 
	}
}

116 
	$µow
(
LL
 
a
,LL 
b
)

118 
LL
 
ªt
=1;

119 ; 
b
;)

121 if(
b
&1)

122 
ªt
Ùë*
a
%
MOD
;

123 
a
˜*a%
MOD
;

124 
b
>>=1;

126  (
ªt
);

127 
	}
}

129 
	$gë
(
x
,
p
)

131 
d
=
œy
[
x
]-œy[
p
],
ªt
=0;

132 
i
=0; i<
X
; i++)

133 if(
	`B
(
i
)&
d
)

135 
ªt
+=
dp
[
x
][
i
];

136 
x
=
Á
[x][
i
];

138  
ªt
;

139 
	}
}

141 
	$maö
()

143 
n
,
m
;

144 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

146 
	`mem£t
(
cú
,0,(cir));

147 
i
=0; i<
n
; i++)

148 
li°
[
i
].
	`˛ór
();

149 
i
=0; i<
m
; i++)

151 
x
,
y
;

152 
	`sˇnf
("%d%d",&
x
,&
y
);

153 
x
--,
y
--;

154 
li°
[
x
].
	`push_back
(
y
);

155 
li°
[
y
].
	`push_back
(
x
);

157 
	`mem£t
(
vis
,0,(vis));

158 
	`mem£t
(
id
,-1,(id));

159 
t›
=-1;

160 
ID
=0;

161 
	`dfs
(0,-1);

167 
i
=0; i<
n
; i++)

168 
å
[
i
].
	`˛ór
();

169 
i
=0; i<
n
; i++)

170 
j
=0; j<
li°
[
i
].
	`size
(); j++)

172 
to
=
li°
[
i
][
j
];

173 
å
[
id
[
i
]].
	`push_back
(id[
to
]);

174 
å
[
id
[
to
]].
	`push_back
(id[
i
]);

176 
	`mem£t
(
Á
,0,(0));

177 
	`mem£t
(
vis
,0,(vis));

178 
	`mem£t
(
dp
,0,(dp));

179 
	`dfs1
(0,0,1);

180 
qs
;

181 
	`sˇnf
("%d",&
qs
);

182 ; 
qs
--;)

184 
x
,
y
;

185 
	`sˇnf
("%d%d",&
x
,&
y
);

186 
x
--,
y
--;

187 
x
=
id
[x],
y
=id[y];

188 
p
=
	`gëp
(
x
,
y
);

189 
cc
=
	`gë
(
x
,
p
)+gë(
y
,p)+
cú
[p];

190 
	`¥ötf
("%d\n",
	`µow
(2,
cc
));

194 
	}
}

	@problems/codeforces/div2_codes/round147/R147D2A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 100010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
	g˙t
[
N
];

37 
	$maö
()

39 
n
;

40 
	`sˇnf
("%d",&
n
)+1)

42 
	`mem£t
(
˙t
,0,(cnt));

43 
i
=0; i<
n
; i++)

45 
x
,
y
,
nx
;

46 
	`sˇnf
("%d%d",&
x
,&
y
);

47 
nx
=
x
*100+
y
;

48 
˙t
[
nx
]++;

50 
ªt
=1;

51 
i
=0; i<
N
; i++)

52 
ªt
=
	`max
‘ë,
˙t
[
i
]);

53 
	`¥ötf
("%d\n",
ªt
);

56 
	}
}

	@problems/codeforces/div2_codes/round147/R147D2B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 111

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

30 
	#pii
 
∑ú
<,>

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
	gm©
[
N
][N],
	gid
[10101],
	gc
[N];

36 
	gve˘‹
<
	gpii
> 
	g™s
;

38 
	$maö
()

40 
n
;

41 
	`sˇnf
("%d",&
n
)+1)

43 
™s
.
	`˛ór
();

44 
i
=1; i<=
n
; i++)

45 
	`sˇnf
("%d",&
c
[
i
]);

46 
i
=1; i<=
n
; i++)

48 
j
=1; j<=
c
[
i
]; j++)

50 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

51 
id
[
m©
[
i
][
j
]]=i*
N
+j;

54 
now
=1;

55 
i
=1; i<=
n
; i++)

57 
j
=1; j<=
c
[
i
]; j++)

59 if(
m©
[
i
][
j
]!=
now
)

61 
x
=
id
[
now
],
y
=x%
N
;

62 
x
=x/
N
;

63 
	`sw≠
(
m©
[
x
][
y
],m©[
i
][
j
]);

64 
id
[
m©
[
x
][
y
]]=x*
N
+y;

65 
id
[
m©
[
i
][
j
]]=i*
N
+j;

66 
™s
.
	`push_back
(
	`make_∑ú
(
i
*
N
+
j
,
x
*N+
y
));

67 
now
++;

69 
now
++;

72 
	`¥ötf
("%d\n",
™s
.
	`size
());

73 
i
=0; i<
™s
.
	`size
(); i++)

75 
x
=
™s
[
i
].
fú°
,
y
˜ns[i].
£c⁄d
;

76 
	`¥ötf
("%d %d %d %d\n",
x
/
N
,x%N,
y
/N,y%N);

80 
	}
}

	@problems/codeforces/div2_codes/round147/R147D2C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1000010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gp
[
N
],
	g∂i°
[N],
	gt›
,
	g˙t
[N];

36 
	$öô
()

38 
t›
=0;

39 
i
=0; i<
N
; i++)

40 
p
[
i
]=i;

41 
i
=2; i<
N
; i++)

43 if(
p
[
i
]==i)

44 
∂i°
[
t›
++]=
i
;

45 
j
=0; 
i
*
∂i°
[j]<
N
&&j<
t›
; j++)

47 
p
[
i
*
∂i°
[
j
]]=plist[j];

48 if(
i
%
∂i°
[
j
]==0)

52 
˙t
[0]=0,cnt[1]=0;

53 
i
=2; i<
N
; i++)

54 
˙t
[
i
]=˙t[i-1]+(
p
[i]==i);

55 
	}
}

57 
	ga
,
	gb
,
	gk
;

59 
	$ok
(
l
)

61 
i
=
a
; i<=
b
-
l
+1; i++)

63 if(
˙t
[
i
+
l
-1]-˙t[i-1]<
k
)

67 
	}
}

69 
	$maö
()

71 
	`öô
();

72 
	`sˇnf
("%d%d%d",&
a
,&
b
,&
k
)+1)

74 
l
=1,
r
=
b
-
a
+1;

75 ; 
l
<=
r
;)

77 
mid
=(
l
+
r
)>>1;

78 if(
	`ok
(
mid
))

79 
r
=
mid
-1;

81 
l
=
mid
+1;

83 if(
l
>
b
-
a
+1)

84 
	`puts
("-1");

86 
	`¥ötf
("%d\n",
l
);

89 
	}
}

	@problems/codeforces/div2_codes/round147/R147D2D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

30 
	#pii
 
∑ú
<,>

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
	gve˘‹
<> 
	gå
[
N
];

36 
	gve˘‹
<
	gpii
> 
	gås
;

37 
	gve˘‹
<
	gpii
> 
	g™s
;

38 
	gid
;

40 
	$dfs
(
now
,
p
,
¥e
)

42 
i
=0; i<
å
[
now
].
	`size
(); i++)

44 
to
=
å
[
now
][
i
];

45 if(
to
==
p
) ;

46 
ås
.
	`push_back
(
	`make_∑ú
(
now
,
to
));

47 if(
¥e
>=0)

48 
™s
.
	`push_back
(
	`make_∑ú
(
id
,
¥e
));

49 
¥e
=
id
;

50 
id
++;

51 
	`dfs
(
to
,
now
,
id
-1);

53 
	}
}

55 
	$maö
()

57 
n
;

58 
	`sˇnf
("%d",&
n
)+1)

60 
ås
.
	`˛ór
();

61 
™s
.
	`˛ór
();

62 
i
=0; i<
n
; i++)

63 
å
[
i
].
	`˛ór
();

64 
i
=0; i<
n
-1; i++)

66 
x
,
y
;

67 
	`sˇnf
("%d%d",&
x
,&
y
);

68 
x
--,
y
--;

69 
å
[
x
].
	`push_back
(
y
);

70 
å
[
y
].
	`push_back
(
x
);

72 
id
=0;

73 
	`dfs
(0,-1,-1);

74 
	`¥ötf
("%d\n",
ås
.
	`size
());

75 
i
=0; i<
ås
.
	`size
(); i++)

76 
	`¥ötf
("%d %d %d\n",2,
ås
[
i
].
fú°
+1,ås[i].
£c⁄d
+1);

77 
i
=0; i<
™s
.
	`size
(); i++)

78 
	`¥ötf
("%d %d\n",
™s
[
i
].
fú°
+1,™s[i].
£c⁄d
+1);

81 
	}
}

	@problems/codeforces/div2_codes/round147/R147D2E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 3101

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

30 
	#X
 26

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
	gs
[
N
],
	gts
[111][111];

36 
	g˙t
[
N
];

37 
	g¢
[
X
],
	gä
[
N
][X];

39 
	sedge
{ 
	mf
,
	mt
,
	mc
,
	mÊow
,
	mn
; }
	ge
[
S
];

40 
	gli°
[
N
],
	gt›
,
	gq
[
S
],
	gv
[N],
	g¥e
[N],
	gmöv
[N],
	gmax_Êow
;

42 
	$s_ö£π
(
f
,
t
,
c
,
Êow
)

44 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c,e[t›].
Êow
=flow;

45 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

46 
	}
}

48 
	$ö£π
(
f
,
t
,
c
,
Êow
)

50 
	`s_ö£π
(
f
,
t
,
c
,
Êow
);

51 
	`s_ö£π
(
t
,
f
,-
c
,0);

52 
	}
}

54 
	$•Á
(
n
,
s
,
t
)

56 
i
,
l
,
r
,
j
;

57 
i
=0; i<
n
; i++Ë
¥e
[i]=-1,
möv
[i]=
öf
,
v
[i]=0;

58 
q
[
l
=
r
=0]=
s
;

59 
möv
[
s
]=0,
v
[s]=1;

60 ; 
l
<=
r
; )

62 
i
=
q
[
l
++];

63 
v
[
i
]=0;

64 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

65 if(
e
[
j
].
Êow
>0&&
möv
[
i
]+e[j].
c
<möv[e[j].
t
])

67 
¥e
[
e
[
j
].
t
]=j;

68 
möv
[
e
[
j
].
t
]=möv[
i
]+e[j].
c
;

69 if(!
v
[
e
[
j
].
t
])

70 
v
[
e
[
j
].
t
]=1,
q
[++
r
]=e[j].t;

73  
möv
[
t
]!=
öf
;

74 
	}
}

76 
	$mcmf
(
n
,
s
,
t
)

78 
ªt
=0,
i
,
now_Êow
;

79 
max_Êow
=0;

80 ; 
	`•Á
(
n
,
s
,
t
); )

82 
now_Êow
=
öf
;

83 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

84 if(
now_Êow
>
e
[
i
].
Êow
)

85 
now_Êow
=
e
[
i
].
Êow
;

86 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

87 
e
[
i
].
Êow
-=
now_Êow
,e[i^1].flow+=now_flow;

88 
max_Êow
+=
now_Êow
;

89 
ªt
+=
now_Êow
*
möv
[
t
];

91  
ªt
;

92 
	}
}

96 
	$maö
()

98 
n
;

99 
	`sˇnf
("%s",
s
)+1)

101 
t›
=0;

102 
i
=0; i<
N
; i++)

103 
li°
[
i
]=-1;

104 
	`mem£t
(
¢
,0,(sn));

105 
	`mem£t
(
ä
,0,(tn));

106 
i
=0; 
s
[i]; i++)

107 
¢
[
s
[
i
]-'a']++;

108 
	`sˇnf
("%d",&
n
);

109 
i
=0; i<
n
; i++)

111 
	`sˇnf
("%s%d",
ts
[
i
],&
˙t
[i]);

112 
j
=0; 
ts
[
i
][j]; j++)

113 
ä
[
i
][
ts
[i][
j
]-'a']++;

115 
¬
=
n
*27;

116 
i
=0; i<
n
; i++)

118 
j
=0; j<
X
; j++)

120 
	`ö£π
(
i
*27+
j
,i*27+26,i+1,
ä
[i][j]);

121 
	`ö£π
(
¬
+
j
,
i
*27+j,0,
¢
[j]);

123 
	`ö£π
(
i
*27+26,
¬
+27,0,
˙t
[i]);

125 
i
=0; i<
X
; i++)

126 
	`ö£π
(
¬
+26,¬+
i
,0,
¢
[i]);

127 
ªt
=
	`mcmf
(
¬
+28,nn+26,nn+27);

128 if(
max_Êow
==
	`°æí
(
s
))

129 
	`¥ötf
("%d\n",
ªt
);

131 
	`puts
("-1");

134 
	}
}

	@problems/codeforces/div2_codes/round160/R160D2A.cpp

1 
	~<c°dio
>

2 
	#N
 1001

	)

4 
	ga
[
N
];

6 
	$gë
(
x
)

8 
ªt
=0;

9 ; 
x
; x/=10)

10 if(
x
%10==4||x%10==7)

11 
ªt
++;

12  
ªt
;

13 
	}
}

15 
	$maö
()

17 
n
,
k
;

18 
	`sˇnf
("%d%d",&
n
,&
k
);

19 
i
=0; i<
n
; i++)

20 
	`sˇnf
("%d",&
a
[
i
]);

21 
ªt
=0;

22 
i
=0; i<
n
; i++)

23 if(
	`gë
(
a
[
i
])<=
k
)

24 
ªt
++;

25 
	`¥ötf
("%d\n",
ªt
);

27 
	}
}

	@problems/codeforces/div2_codes/round160/R160D2B.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 1000000

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	$maö
()

9 
n
,
k
,
x
,
ªt
;

10 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

12 
ªt
=0;

13 
x
=
öf
;

14 
i
=0; i<
n
; i++)

16 
y
;

17 
	`sˇnf
("%d",&
y
);

18 if(
k
>0)

20 if(
y
<0)

22 
ªt
-=
y
,
k
--;

23 
x
=
	`mö
(x,-
y
);

27 
ªt
+=
y
;

28 
x
=
	`mö
(x,
y
);

32 
ªt
+=
y
;

34 if(
k
&1)

35 
ªt
-=2*
x
;

36 
	`¥ötf
("%d\n",
ªt
);

39 
	}
}

	@problems/codeforces/div2_codes/round160/R160D2C.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 1000000

	)

4 
	#N
 100010

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gd©
[
N
];

10 
	$cmp
(
a
,
b
){ á>b; 
	}
}

12 
	$maö
()

14 
n
,
m
,
x
;

15 
	`sˇnf
("%d",&
m
)+1)

17 
x
=
öf
;

18 
i
=0; i<
m
; i++)

20 
y
;

21 
	`sˇnf
("%d",&
y
);

22 
x
=
	`mö
(x,
y
);

24 
	`sˇnf
("%d",&
n
);

25 
ªt
=0;

26 
i
=0; i<
n
; i++)

27 
	`sˇnf
("%d",&
d©
[
i
]);

28 
	`s‹t
(
d©
,d©+
n
,
cmp
);

29 
i
=0; i<
n
; i++)

30 if(
i
%(
x
+2)<x)

31 
ªt
+=
d©
[
i
];

32 
	`¥ötf
("%d\n",
ªt
);

36 
	}
}

	@problems/codeforces/div2_codes/round160/R160D2D.cpp

1 
	~<c°dio
>

2 
	#N
 55

	)

4 
	gdp
[
N
][N],
	gc
[N][N];

5 
	ga
[
N
];

7 
	$öô
()

9 
c
[0][0]=1;

10 
i
=1; i<
N
; i++)

12 
c
[
i
][0]=1;

13 
j
=1; j<
i
; j++)

14 
c
[
i
][
j
]=c[i-1][j]+c[i-1][j-1];

15 
c
[
i
][i]=1;

17 
	}
}

19 
	$maö
()

21 
n
,
p
;

22 
	`öô
();

23 
	`sˇnf
("%d",&
n
);

24 
i
=1; i<=
n
; i++)

25 
	`sˇnf
("%d",&
a
[
i
]);

26 
	`sˇnf
("%d",&
p
);

27 
dp
[0][0]=1;

28 
i
=1; i<=
n
; i++)

29 
k
=
p
; k>=
a
[
i
]; k--)

30 
j
=1; j<=
i
; j++)

31 
dp
[
j
][
k
]+=dp[j-1][k-
a
[
i
]];

32 
ªt
=0;

33 
i
=1; i<=
n
; i++)

34 
j
=1; j<=
p
; j++)

35 
ªt
+=
dp
[
i
][
j
]/
c
[
n
][i];

36 
	`¥ötf
("%.12lf\n",
ªt
);

38 
	}
}

	@problems/codeforces/div2_codes/round160/R160D2E.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	~<io°ªam
>

6 
	#N
 50

	)

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 
	gve˘‹
<> 
	gv
;

12 
LL
 
	gdp
[
N
][N][2];

14 
	$ok
(
LL
 
x
)

16 
ªt
=0;

17 ; 
x
>1;)

19 if(
x
&1)

21 
x
>>=1;

22 
ªt
++;

24  
ªt
+1;

25 
	}
}

27 
LL
 
	$dfs
(
id
,
c
,
èg
,
√ed
)

29 if(
dp
[
id
][
c
][
èg
]>=0)  dp[id][c][tag];

30 
LL
 
ªt
=0;

31 if(
id
==
v
.
	`size
())

33 if(
c
==
√ed
Ë
ªt
=1;

34 
ªt
=0;

35  
dp
[
id
][
c
][
èg
]=
ªt
;

37 if(
èg
)

39 
ªt
+=
	`dfs
(
id
+1,
c
,
èg
,
√ed
);

40 if(
c
<
√ed
)

41 
ªt
+=
	`dfs
(
id
+1,
c
+1,
èg
,
√ed
);

45 if(
v
[
id
]==1)

47 
ªt
+=
	`dfs
(
id
+1,
c
,1,
√ed
);

48 if(
c
<
√ed
)

49 
ªt
+=
	`dfs
(
id
+1,
c
+1,
èg
,
√ed
);

52 
ªt
+=
	`dfs
(
id
+1,
c
,
èg
,
√ed
);

54  
dp
[
id
][
c
][
èg
]=
ªt
;

55 
	}
}

57 
	$gao
(
˙t
,
LL
 
n
)

59 
v
.
	`˛ór
();

60 ; 
n
;Ç>>=1)

61 
v
.
	`push_back
(
n
&1);

62 
	`ªvî£
(
v
.
	`begö
(),v.
	`íd
());

63 
	`mem£t
(
dp
,-1,(dp));

64 
cout
<<
	`dfs
(0,0,0,
˙t
)-(˙t==1)<<
ídl
;

65 
	}
}

67 
	$maö
()

69 
LL
 
n
,
t
;

70 
cö
>>
n
>>
t
)

72 
˙t
=
	`ok
(
t
);

73 if(
˙t
)

75 
	`gao
(
˙t
,
n
+1);

78 
	`puts
("0");

81 
	}
}

	@problems/codeforces/div2_codes/round163/R163D2A.cpp

1 
	~<c°dio
>

3 
	$maö
()

5 
n
,
ªt
=0;

6 
s
[1000],
¥e
=-1;

7 
	`sˇnf
("%d%s",&
n
,
s
);

8 
i
=0; 
s
[i]; i++)

9 if(
s
[
i
]==
¥e
)

10 
ªt
++;

12 
¥e
=
s
[
i
];

13 
	`¥ötf
("%d\n",
ªt
);

15 
	}
}

	@problems/codeforces/div2_codes/round163/R163D2B.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gs
[1001];

8 
	$maö
()

10 
n
,
t
;

11 
	`sˇnf
("%d%d%s",&
n
,&
t
,
s
)+1)

13 
i
=0; i<
t
; i++)

14 
j
=1; j<
n
; j++)

15 if(
s
[
j
]=='G'&&s[j-1]=='B')

17 
	`sw≠
(
s
[
j
],s[j-1]);

18 
j
++;

20 
	`¥ötf
("%s\n",
s
);

23 
	}
}

	@problems/codeforces/div2_codes/round163/R163D2C.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	~<utûôy
>

5 
	#N
 1001

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

10 
	gve˘‹
<
	g∑ú
<,> > 
	g™s
;

12 
	gtx
[
N
],
	gty
[N],
	gri
[N];

14 
	$maö
()

16 
n
;

17 
	`sˇnf
("%d",&
n
)+1)

19 
™s
.
	`˛ór
();

20 
	`mem£t
(
tx
,0,(tx));

21 
	`mem£t
(
ty
,0,(ty));

22 
i
=0; i<
n
-1; i++)

24 
	`sˇnf
("%d%d",&
no
[
i
].
x
,&no[i].
y
);

25 
tx
[
no
[
i
].
x
]=
ty
[no[i].
y
]=1;

27 
i
=
n
; i>0; i--)

29 
ri
[
i
]=0;

30 if(
ty
[
i
]==1)

32 
j
=1; j<
i
; j++)

33 if(
ty
[
j
]==0)

35 
ty
[
i
]=0;

36 
ty
[
j
]=1;

37 
™s
.
	`push_back
(
	`make_∑ú
(2,
N
*
i
+
j
));

38 
u
=0; u<
n
; u++)

39 if(
no
[
u
].
y
==
i
)

40 
no
[
u
].
y
=
j
;

45 
i
=0; i<
n
-1; i++)

47 
ri
[
no
[
i
].
x
]=
	`max
‘i[no[i].x],no[i].
y
);

49 
now
;

50 
i
=1; i<=
n
; i++)

52 
now
=
i
;

53 
j
=
i
+1; j<=
n
; j++)

54 if(
ri
[
j
]<ri[
now
])

56 
now
=
j
;

58 if(
now
!=
i
)

60 
™s
.
	`push_back
(
	`make_∑ú
(1,
i
*
N
+
now
));

61 
	`sw≠
(
ri
[
now
],ri[
i
]);

64 
	`¥ötf
("%d\n",
™s
.
	`size
());

65 
i
=0; i<
™s
.
	`size
(); i++)

67 
	`¥ötf
("%d %d %d\n",
™s
[
i
].
fú°
,™s[i].
£c⁄d
/
N
,ans[i].second%N);

71 
	}
}

	@problems/codeforces/div2_codes/round163/R163D2D.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 201

	)

4 
	#öf
 0x3ffffff

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gm©
[
N
][N],
	gdis
[N][N];

10 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
],
	g°
[N];

11 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
<b.x; 
	}
}

13 
	$gao
(
a
,
b
,
n
)

15 
i
=0; i<
n
; i++)

16 
no
[
i
].
x
=
dis
[
a
][i],no[i].
y
=dis[
b
][i];

17 
	`s‹t
(
no
,no+
n
,
cmp
);

18 
t›
=0;

19 
°
[0]=
no
[0];

20 
i
=1; i<
n
; i++)

22 
t›
>=0&&
no
[
i
].
y
>=
°
[top].y)

23 
t›
--;

24 
°
[++
t›
]=
no
[
i
];

26 if(
t›
==0)

27  
	`mö
(
°
[0].
x
,°[0].
y
);

28 
ªt
=
öf
;

29 
i
=1; i<=
t›
; i++)

30 
ªt
=
	`mö
‘ë,(
°
[
i
-1].
x
+°[i].
y
+
m©
[
a
][
b
])/2.0);

31  
ªt
;

32 
	}
}

34 
	$maö
()

36 
n
,
m
;

37 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

39 
i
=0; i<
n
; i++)

40 
j
=0; j<
n
; j++)

41 
m©
[
i
][
j
]=(i==j)?0:
öf
;

42 
i
=0; i<
m
; i++)

44 
x
,
y
,
z
;

45 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

46 
x
--,
y
--;

47 
m©
[
x
][
y
]=m©[y][x]=
z
;

49 
i
=0; i<
n
; i++)

50 
j
=0; j<
n
; j++)

51 
dis
[
i
][
j
]=
m©
[i][j];

53 
k
=0; k<
n
; k++)

54 
i
=0; i<
n
; i++)

55 
j
=0; j<
n
; j++)

56 
dis
[
i
][
j
]=
	`mö
(dis[i][j],dis[i][
k
]+dis[k][j]);

57 
ªt
=
öf
;

58 
i
=0; i<
n
; i++)

59 
j
=0; j<
n
; j++)

60 if(
m©
[
i
][
j
]<
öf
)

61 
ªt
=
	`mö
‘ë,
	`gao
(
i
,
j
,
n
));

62 
	`¥ötf
("%.12lf\n",
ªt
);

65 
	}
}

	@problems/codeforces/div2_codes/round163/R163D2E.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	~<c°rög
>

5 
	#MOD
 1000000007

	)

6 
	#N
 100010

	)

7 
	#K
 6

	)

9 
usög
 
«me•a˚
 
	g°d
;

10 
	tLL
;

12 
	snode
{ 
	ml
,
	mr
,
	mx
; 
LL
 
	ms
[
K
];

13 
gm
(){  (
	ml
+
	mr
)>>1; }

14 }
	gno
[
N
<<2];

16 
	gd©
[
N
];

17 
LL
 
	gC
[
K
][K],
	gS
[
N
][K];

19 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

20 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

22 
LL
 
	$powî
(
LL
 
a
,LL 
b
)

24 
LL
 
ªt
=1;

25 ; 
b
; b>>=1,
a
˜*a%
MOD
)

26 if(
b
&1)

27 
ªt
Ùë*
a
%
MOD
;

28  
ªt
;

29 
	}
}

31 
	$up
(
id
)

33 
i
=0; i<
K
; i++)

34 
no
[
id
].
s
[
i
]=“o[
	`L
(id)].s[i]+no[
	`R
(id)].s[i])%
MOD
;

35 
	}
}

37 
	$buûd
(
id
,
l
,
r
)

39 
no
[
id
].
x
=-1,no[id].
l
ˆ,no[id].
r
=r;

40 if(
l
==
r
)

42 
no
[
id
].
x
=
d©
[
l
];

43 
no
[
id
].
s
[0]=
d©
[
l
];

44 
i
=1; i<
K
; i++)

46 
no
[
id
].
s
[
i
]=
d©
[
l
]*
	`powî
÷,i)%
MOD
;

50 
	`buûd
(
	`L
(
id
),
l
,
no
[id].
	`gm
());

51 
	`buûd
(
	`R
(
id
),
no
[id].
	`gm
()+1,
r
);

52 
	`up
(
id
);

53 
	}
}

55 
	$∑öt
(
id
,
l
,
r
,
x
)

57 
no
[
id
].
x
=x;

58 
i
=0; i<
K
; i++)

59 
no
[
id
].
s
[
i
]=
x
*((
S
[
r
][i]-S[
l
-1][i])%
MOD
+MOD)%MOD;

60 
	}
}

62 
	$down
(
id
)

64 if(
no
[
id
].
x
>=0)

66 
	`∑öt
(
	`L
(
id
),
no
[id].
l
,no[id].
	`gm
(),no[id].
x
);

67 
	`∑öt
(
	`R
(
id
),
no
[id].
	`gm
()+1,no[id].
r
,no[id].
x
);

68 
no
[
	`L
(
id
)].
x
=no[id].x;

69 
no
[
	`R
(
id
)].
x
=no[id].x;

70 
no
[
id
].
x
=-1;

72 
	}
}

74 
	$upd©e
(
id
,
l
,
r
,
x
)

76 
Œ
=
no
[
id
].
l
,
º
Úo[id].
r
,
mid
Úo[id].
	`gm
();

77 if(
Œ
>=
l
&&
º
<=
r
)

79 
	`∑öt
(
id
,
Œ
,
º
,
x
);

82 
	`down
(
id
);

83 if(
r
>=
Œ
&&
l
<=
mid
)

84 
	`upd©e
(
	`L
(
id
),
l
,
r
,
x
);

85 if(
l
<=
º
&&
r
>
mid
)

86 
	`upd©e
(
	`R
(
id
),
l
,
r
,
x
);

87 
	`up
(
id
);

88 
	}
}

90 
LL
 
	$quîy
(
id
,
l
,
r
,
k
)

92 
Œ
=
no
[
id
].
l
,
º
Úo[id].
r
,
mid
Úo[id].
	`gm
();

93 if(
Œ
>=
l
&&
º
<=
r
)

94  
no
[
id
].
s
[
k
];

95 
LL
 
ªt
=0;

96 
	`down
(
id
);

97 if(
r
>=
Œ
&&
l
<=
mid
)

98 
ªt
=‘ë+
	`quîy
(
	`L
(
id
),
l
,
r
,
k
))%
MOD
;

99 if(
l
<=
º
&&
r
>
mid
)

100 
ªt
=‘ë+
	`quîy
(
	`R
(
id
),
l
,
r
,
k
))%
MOD
;

101 
	`up
(
id
);

102  
ªt
;

103 
	}
}

105 
	$öô
()

107 
C
[0][0]=C[1][0]=C[1][1]=1;

108 
i
=2; i<
K
; i++)

110 
C
[
i
][0]=1;

111 
j
=1; j<
i
; j++)

112 
C
[
i
][
j
]=(C[i-1][j-1]+C[i-1][j])%
MOD
;

113 
C
[
i
][i]=1;

115 
	`mem£t
(
S
,0,(S));

116 
i
=1; i<
N
; i++)

117 
j
=0; j<
K
; j++)

118 
S
[
i
][
j
]=(S[i-1][j]+
	`powî
(i,j))%
MOD
;

119 
	}
}

121 
LL
 
	$ˇl
(
l
,
r
,
k
)

123 
LL
 
ªt
=0;

124 
i
=0; i<=
k
; i++)

126 
LL
 
µ
=
	`quîy
(1,
l
,
r
,
i
);

127 
ªt
=‘ë+
C
[
k
][
i
]*
µ
%
MOD
*
	`powî
(1-
l
,k-i))%MOD;

129  (
ªt
+
MOD
)%MOD;

130 
	}
}

132 
	$maö
()

134 
n
,
m
;

135 
	`öô
();

136 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

138 
i
=1; i<=
n
; i++)

139 
	`sˇnf
("%d",&
d©
[
i
]);

140 
	`buûd
(1,1,
n
);

141 
i
=0; i<
m
; i++)

143 
s
[3];

144 
x
,
y
,
z
;

145 
	`sˇnf
("%s%d%d%d",
s
,&
x
,&
y
,&
z
);

146 if(
s
[0]=='=')

147 
	`upd©e
(1,
x
,
y
,
z
);

149 
cout
<<
	`ˇl
(
x
,
y
,
z
)<<
ídl
;

153 
	}
}

	@problems/codeforces/div2_codes/round169/R169D2A.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3fffffff

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	$maö
()

9 
n
,
k
;

10 
	`sˇnf
("%d%d",&
n
,&
k
);

11 
ªt
=-
öf
;

12 
i
=0; i<
n
; i++)

14 
l
,
r
;

15 
	`sˇnf
("%d%d",&
l
,&
r
);

16 if(
r
>
k
)

17 
ªt
=
	`max
‘ë,
l
-(
r
-
k
));

19 
ªt
=
	`max
‘ë,
l
);

21 
	`¥ötf
("%d\n",
ªt
);

23 
	}
}

	@problems/codeforces/div2_codes/round169/R169D2B.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<°rög
>

5 
	~<io°ªam
>

6 
	#N
 1011

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gs
[
N
];

11 
	g˙t
[26];

13 
	$maö
()

15 
n
;

16 
	`sˇnf
("%s",
s
);

17 
i
=0; 
s
[i]; i++)

18 
˙t
[
s
[
i
]-'a']++;

19 
ªt
=0;

20 
i
=0; i<26; i++)

21 if(
˙t
[
i
]&1)

22 
ªt
++;

23 if((
ªt
&1)||ret==0)

24 
	`puts
("First");

26 
	`puts
("Second");

28 
	}
}

	@problems/codeforces/div2_codes/round169/R169D2C.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	#N
 200100

	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
	ga
[
N
],
	g˙t
[N];

10 
	snode
{ 
	ma
; }
	gno
[
N
<<2];

11 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

12 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

14 
	$cmp
(
a
,
b
){ á<b; 
	}
}

16 
	$down
(
id
)

18 if(
no
[
id
].
a
)

20 
no
[
	`L
(
id
)].
a
+=no[id].a;

21 
no
[
	`R
(
id
)].
a
+=no[id].a;

22 
no
[
id
].
a
=0;

24 
	}
}

26 
	$upd©e
(
id
,
l
,
r
,
Œ
,
º
)

28 if(
l
>=
Œ
&&
r
<=
º
)

30 
no
[
id
].
a
++;

33 
m
=(
l
+
r
)>>1;

34 
	`down
(
id
);

35 if(
l
<=
º
&&
m
>=
Œ
)

36 
	`upd©e
(
	`L
(
id
),
l
,
m
,
Œ
,
º
);

37 if(
m
+1<=
º
&&
r
>=
Œ
)

38 
	`upd©e
(
	`R
(
id
),
m
+1,
r
,
Œ
,
º
);

39 
	}
}

41 
	$quîy
(
id
,
l
,
r
,
p
)

43 if(
l
==
r
Ë 
no
[
id
].
a
;

44 
	`down
(
id
);

45 
m
=(
l
+
r
)>>1;

46 if(
p
<=
m
)

47  
	`quîy
(
	`L
(
id
),
l
,
m
,
p
);

49  
	`quîy
(
	`R
(
id
),
m
+1,
r
,
p
);

50 
	}
}

52 
	$maö
()

54 
n
,
q
;

55 
	`sˇnf
("%d%d",&
n
,&
q
);

56 
i
=0; i<
n
; i++)

57 
	`sˇnf
("%d",&
a
[
i
]);

58 
i
=0; i<
q
; i++)

60 
x
,
y
;

61 
	`sˇnf
("%d%d",&
x
,&
y
);

62 
	`upd©e
(1,1,
n
,
x
,
y
);

64 
i
=0; i<
n
; i++)

65 
˙t
[
i
]=
	`quîy
(1,1,
n
,i+1);

66 
	`s‹t
(
˙t
,˙t+
n
,
cmp
);

67 
	`s‹t
(
a
,a+
n
,
cmp
);

68 
LL
 
ªt
=0;

69 
i
=0; i<
n
; i++)

70 
ªt
Ùë+1LL*
a
[
i
]*
˙t
[i];

71 
cout
<<
ªt
<<
ídl
;

73 
	}
}

	@problems/codeforces/div2_codes/round169/R169D2D.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<io°ªam
>

5 
	#N
 70

	)

7 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

10 
LL
 
	gdp
[
N
][2][2][2];

11 
	glx
[
N
],
	grx
[N],
	gn
;

13 
ölöe
 
LL
 
	$B
(
i
){  1LL<<i; 
	}
}

15 
LL
 
	$gao
(
id
,
a
,
b
,
c
)

17 if(
dp
[
id
][
a
][
b
][
c
]>=0)

18  
dp
[
id
][
a
][
b
][
c
];

19 if(
id
==
n
)

20  
dp
[
id
][
a
][
b
][
c
]=0;

21 
LL
 
ªt
=0;

22 if((
a
||
lx
[
id
]==0))

23 
ªt
=
	`max
‘ë,
	`gao
(
id
+1,
a
,
b
,
rx
[id]==1?1:0));

24 if((
a
||
lx
[
id
]==0)&&(
c
||
rx
[id]==1))

25 
ªt
=
	`max
‘ë,
	`gao
(
id
+1,
a
,1,
c
)+
	`B
(
n
-id-1));

26 if(
b
)

27 
ªt
=
	`max
‘ë,
	`gao
(
id
+1,
lx
[id]==0?1:0,
b
,
rx
[id]==1?1:0)+
	`B
(
n
-id-1));

28 if(
c
||
rx
[
id
]==1)

29 
ªt
=
	`max
‘ë,
	`gao
(
id
+1,
lx
[id]==0?1:0,
b
,
c
));

30  
dp
[
id
][
a
][
b
][
c
]=
ªt
;

31 
	}
}

33 
	$gí
(
LL
 
x
,
a
[])

35 
ªt
=0;

36 ; 
x
; x>>=1)

37 
a
[
ªt
++]=
x
&1;

38  
ªt
;

39 
	}
}

41 
	$maö
()

43 
LL
 
l
,
r
;

44 
	`mem£t
(
dp
,-1,(dp));

45 
cö
>>
l
>>
r
;

46 
n
=
	`gí
(
r
,
rx
);

47 
	`ªvî£
(
rx
,rx+
n
);

48 
i
=
n
-1; i>=0; i--)

49 
lx
[
i
]=(
l
&1),l>>=1;

50 
cout
<<
	`gao
(0,0,0,0)<<
ídl
;

52 
	}
}

	@problems/codeforces/div2_codes/round169/R169D2E.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

4 
	#N
 100010

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	snode
{ 
	mv
;

9 
node
(){;}

10 
node
(
x
){ 
	mv
=x; }

13 
	s£gåì


15 
node
 *
	mno
;

16 
	mn
;

18 
ölöe
 
L
(
i
){  
	mi
<<1; }

19 
ölöe
 
R
(
i
){  
	mi
<<1|1; }

21 
£gåì
(
m
)

23 
	mn
=1;

24 ; 
	mn
<
	mm
;Ç<<=1);

25 
	mno
=
√w
 
node
[
n
<<1];

26 
fûl
(
no
,no+
n
+n,
node
(0));

29 
upd©e
(
id
,
l
,
r
,
ul
,
ur
,
x
)

31 if(
	ml
>=
ul
&&
r
<=
ur
)

33 
no
[
id
].
v
+=
x
;

36 
	mm
=(
l
+
r
)>>1;

37 if(
	ml
<=
ur
&&
m
>=
ul
)

38 
upd©e
(
L
(
id
),
l
,
m
,
ul
,
ur
,
x
);

39 if(
	mm
+1<=
ur
&&
r
>=
ul
)

40 
upd©e
(
R
(
id
),
m
+1,
r
,
ul
,
ur
,
x
);

43 
upd©e
(
l
,
r
,
x
)

45 
upd©e
(1,1,
n
,
l
,
mö
(
r
,n),
x
);

48 
quîy
(
p
)

50 
	mp
+=
n
;

51 
	mªt
=0;

52 ; 
	mp
>0;Ö>>=1)

53 
ªt
+=
no
[
p
].
v
;

54  
	mªt
;

58 
£gåì
* 
	g£g
[
N
];

60 
	gve˘‹
<> 
	gå
[
N
];

61 
	gid
[
N
],
	gdis
[N];

63 
	$dfs
(
now
,
p
,
i
,
d
)

65 
dis
[
now
]=
d
;

66 
id
[
now
]=
i
;

67 
u
=0; u<
å
[
now
].
	`size
(); u++)

69 if(
å
[
now
][
u
]==
p
) ;

70 
	`dfs
(
å
[
now
][
u
],now,
i
,
d
+1);

72 if(
å
[
now
].
	`size
()==1)

73 
£g
[
i
]=
√w
 
	`£gåì
(
d
);

74 
	}
}

76 
	$maö
()

78 
n
,
q
,
tc
;

79 
	`sˇnf
("%d%d",&
n
,&
q
);

80 
i
=0; i<
n
-1; i++)

82 
x
,
y
;

83 
	`sˇnf
("%d%d",&
x
,&
y
);

84 
x
--,
y
--;

85 
å
[
x
].
	`push_back
(
y
);

86 
å
[
y
].
	`push_back
(
x
);

88 
dis
[0]=0;

89 
tc
=
å
[0].
	`size
();

90 
i
=0; i<
å
[0].
	`size
(); i++)

92 
	`dfs
(
å
[0][
i
],0,i,1);

94 
£g
[
tc
]=
√w
 
	`£gåì
(
N
);

95 
i
=0; i<
q
; i++)

97 
x
,
p
,
d
;

98 
	`sˇnf
("%d",&
x
);

99 if(
x
==0)

101 
	`sˇnf
("%d%d%d",&
p
,&
x
,&
d
);

102 
p
--;

103 if(
p
==0)

104 
£g
[
tc
]->
	`upd©e
(1,
d
+1,
x
);

105 if(
d
>=
dis
[
p
])

107 
£g
[
id
[
p
]]->
	`upd©e
(
d
-
dis
[p]+1,d+dis[p],
x
);

108 
£g
[
tc
]->
	`upd©e
(1,
d
-
dis
[
p
]+1,
x
);

111 
£g
[
id
[
p
]]->
	`upd©e
(
dis
[p]-
d
,dis[p]+d,
x
);

115 
	`sˇnf
("%d",&
p
);

116 
p
--;

117 
ªt
=0;

118 if(
p
==0)

119 
ªt
=
£g
[
tc
]->
	`quîy
(0);

122 
ªt
=
£g
[
id
[
p
]]->
	`quîy
(
dis
[p]-1);

123 
ªt
+=
£g
[
tc
]->
	`quîy
(
dis
[
p
]);

125 
	`¥ötf
("%d\n",
ªt
);

129 
	}
}

	@problems/codeforces/div2_codes/round171_div2/R171D2A.cpp

1 
	~<c°dio
>

3 
	gdx
[4]={1,0,-1,0};

4 
	gdy
[4]={0,1,0,-1};

6 
	$ö
(
x
,
a
,
b
)

8  (
x
-
a
)*(x-
b
)<=0;

9 
	}
}

11 
	$maö
()

13 
x
,
y
;

14 
	`sˇnf
("%d%d",&
x
,&
y
);

15 
nx
=0,
ny
=0,
d
=1,
ªt
=0;

16 
i
=0;; i++)

18 
tx
=
nx
+
dx
[
i
%4]*
d
,
ty
=
ny
+
dy
[i%4]*d;

19 if(
nx
==
tx
)

21 if(
x
==
nx
&&
	`ö
(
y
,
ny
,
ty
))

26 if(
y
==
ny
&&
	`ö
(
x
,
nx
,
tx
))

29 if(
i
&1Ë
d
++;

30 
ªt
++;

31 
nx
=
tx
,
ny
=
ty
;

33 
	`¥ötf
("%d\n",
ªt
);

35 
	}
}

	@problems/codeforces/div2_codes/round171_div2/R171D2B.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 100101

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gd©
[
N
],
	gs
[N],
	gn
,
	gt
;

9 
	$gao
(
°
)

11 
l
=
°
,
r
=
n
;

12 ; 
l
<=
r
;)

14 
m
=(
l
+
r
)>>1;

15 if(
s
[
m
]-s[
°
-1]<=
t
)

16 
l
=
m
+1;

18 
r
=
m
-1;

20  
l
-
°
;

21 
	}
}

23 
	$maö
()

25 
	`sˇnf
("%d%d",&
n
,&
t
);

26 
i
=1; i<=
n
; i++)

27 
	`sˇnf
("%d",&
d©
[
i
]);

28 
d©
[0]=0;

29 
s
[0]=0;

30 
i
=1; i<=
n
; i++)

31 
s
[
i
]=s[i-1]+
d©
[i];

32 
ªt
=0;

33 
i
=1; i<=
n
; i++)

35 
ªt
=
	`max
‘ë,
	`gao
(
i
));

37 
	`¥ötf
("%d\n",
ªt
);

39 
	}
}

	@problems/codeforces/div2_codes/round171_div2/R171D2C.cpp

1 
	~<c°dio
>

2 
	#N
 101101

	)

4 
	gd©
[
N
],
	gÀv
[N];

6 
	snode
{ 
	ma
,
	mb
,
	mv
,
	mi
; }
	gno
[
N
<<2];

8 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

9 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

11 
	$up
(
id
)

13 if(
no
[
	`L
(
id
)].
v
>no[
	`R
(id)].v)

14 
no
[
id
].
v
Úo[
	`L
(id)].v,no[id].
i
=no[L(id)].i;

16 
no
[
id
].
v
Úo[
	`R
(id)].v,no[id].
i
=no[R(id)].i;

17 
no
[
id
].
a
Úo[
	`L
(id)].a+no[
	`R
(id)].a;

18 
no
[
id
].
b
Úo[
	`L
(id)].b+no[
	`R
(id)].b;

19 
	}
}

21 
	$buûd
(
id
,
l
,
r
)

23 
m
=(
l
+
r
)>>1;

24 if(
l
==
r
)

26 
no
[
id
].
v
=
d©
[
l
];

27 
no
[
id
].
i
=
l
;

28 
no
[
id
].
a
=(
Àv
[
l
]==1)?1:0;

29 
no
[
id
].
b
=(
Àv
[
l
]==-1)?1:0;

32 
	`buûd
(
	`L
(
id
),
l
,
m
);

33 
	`buûd
(
	`R
(
id
),
m
+1,
r
);

34 
	`up
(
id
);

35 
	}
}

37 
	$quîy
(
id
,
l
,
r
,
ql
,
qr
,&
x
)

39 
m
=(
l
+
r
)>>1;

40 if(
ql
<=
l
&&
r
<=
qr
)

42 
x
=
no
[
id
].
v
;

43  
no
[
id
].
i
;

45 
lx
=0,
rx
=0,
li
=-1,
ri
=-1;

46 if(
qr
>=
l
&&
ql
<=
m
)

47 
li
=
	`quîy
(
	`L
(
id
),
l
,
m
,
ql
,
qr
,
lx
);

48 if(
qr
>=
m
+1&&
ql
<=
r
)

49 
ri
=
	`quîy
(
	`R
(
id
),
m
+1,
r
,
ql
,
qr
,
rx
);

50 if(
lx
>
rx
)

52 
x
=
lx
;

53  
li
;

55 
x
=
rx
;

56  
ri
;

57 
	}
}

59 
	$sum
(
id
,
l
,
r
,
ql
,
qr
,
t
)

61 if(
l
>
r
)  0;

62 
m
=(
l
+
r
)>>1;

63 if(
ql
<=
l
&&
r
<=
qr
)

65 if(
t
==0Ë 
no
[
id
].
a
;

66  
no
[
id
].
b
;

68 
ªt
=0;

69 if(
qr
>=
l
&&
ql
<=
m
)

71 
ªt
+=
	`sum
(
	`L
(
id
),
l
,
m
,
ql
,
qr
,
t
);

73 if(
qr
>=
m
+1&&
ql
<=
r
)

74 
ªt
+=
	`sum
(
	`R
(
id
),
m
+1,
r
,
ql
,
qr
,
t
);

75  
ªt
;

76 
	}
}

78 
	$maö
()

80 
n
,
m
;

81 
	`sˇnf
("%d%d",&
n
,&
m
);

82 
i
=1; i<=
n
; i++)

83 
	`sˇnf
("%d",&
d©
[
i
]);

84 
Àv
[1]=0;

85 
i
=2; i<=
n
; i++)

87 if(
d©
[
i
]>d©[i-1]Ë
Àv
[i]=1;

88 if(
d©
[
i
]<d©[i-1]Ë
Àv
[i]=-1;

89 
Àv
[
i
]=0;

91 
	`buûd
(1,1,
n
);

92 
i
=1; i<=
m
; i++)

94 
l
,
r
,
mx
;

95 
	`sˇnf
("%d%d",&
l
,&
r
);

96 
id
=
	`quîy
(1,1,
n
,
l
,
r
,
mx
);

97 
po
=
	`sum
(1,1,
n
,
l
+1,
id
,1),
fu
=sum(1,1,n,id+1,
r
,0);

98 if(
po
==0&&
fu
==0)

99 
	`puts
("Yes");

101 
	`puts
("No");

104 
	}
}

	@problems/codeforces/div2_codes/round171_div2/R171D2E.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	#N
 1000101

	)

6 
	gs
[
N
];

8 
	$maö
()

10 
ªt
=0,
l
;

11 
	`sˇnf
("%s",
s
);

12 
l
=
	`°æí
(
s
);

13 
i
=0; 
s
[i]; i++)

15 if(
s
[
i
]=='1')

17 if((
i
==0||
s
[i-1]=='0')&&(s[i+1]==0||s[i+1]=='0')&&(i<2||s[i-2]!='1'||s[i+2]!='1'||i+2>=
l
))

19 
ªt
++;

20 
s
[
i
]='0';

24 
èg
=0;

25 
i
=0; 
s
[i]; i++)

27 if(
s
[
i
]=='1')

29 if(
èg
==0)

31 
ªt
+=2;

32 
èg
=1;

37 if(
èg
==1)

39 
èg
=0;

40 if(
s
[
i
+1]=='1')

41 
ªt
--;

45 
	`¥ötf
("%d\n",
ªt
);

47 
	}
}

	@problems/codeforces/div2_codes/round173/R173D2A.cpp

1 
	~<c°dio
>

2 
	#N
 1001

	)

4 
	gs
[
N
];

6 
	$maö
()

8 
n
;

9 
x
=0;

10 
	`sˇnf
("%d",&
n
);

11 
i
=0; i<
n
; i++)

13 
	`sˇnf
("%s",
s
);

14 if(
s
[0]=='X')

16 if(
s
[1]=='-')

17 
x
--;

19 
x
++;

23 if(
s
[0]=='-')

24 
x
--;

26 
x
++;

29 
	`¥ötf
("%d\n",
x
);

31 
	}
}

	@problems/codeforces/div2_codes/round173/R173D2B.cpp

1 
	~<c°dio
>

3 
	gd
;

5 
	$maö
()

7 
d
=0;

8 
n
;

9 
	`sˇnf
("%d",&
n
);

10 
i
=0; i<
n
; i++)

12 
x
,
y
;

13 
	`sˇnf
("%d%d",&
x
,&
y
);

14 if(
d
+
x
<=500)

16 
	`¥ötf
("A");

17 
d
+=
x
;

21 
	`¥ötf
("G");

22 
d
-=
y
;

25 
	`puts
("");

27 
	}
}

	@problems/codeforces/div2_codes/round173/R173D2C.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1100001

	)

5 
	gs
[
N
],
	gt
[N];

7 
	$maö
()

9 
	`sˇnf
("%s%s",
s
,
t
);

10 
so
=0,
to
=0;

11 
i
=0; 
s
[i]; i++)

12 if(
s
[
i
]=='1')

13 
so
++;

14 
i
=0; 
t
[i]; i++)

15 if(
t
[
i
]=='1')

16 
to
++;

17 if(
	`°æí
(
s
)==°æí(
t
))

19 if(
so
==
to
)

21 
	`puts
("YES");

23 if(
so
>
to
)

25 if(
to
==0Ë
	`puts
("NO");

26 
	`puts
("YES");

30 if(
so
==0Ë
	`puts
("NO");

31 
	`puts
("YES");

35 
	`puts
("NO");

37 
	}
}

	@problems/codeforces/div2_codes/round173/R173D2D.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	ga
[3],
	gdp
[333][333];

6 
	$maö
()

8 
n
,
èg
;

9 
	`sˇnf
("%d",&
n
);

10 
i
=0; i<
n
; i++)

12 
	`sˇnf
("%d",&
a
[
i
]);

13 
èg
^=
a
[
i
];

15 if(
n
==2)

17 
	`mem£t
(
dp
,0,(dp));

18 
i
=0; i<300; i++)

19 
j
=0; j<300; j++)

20 
k
=1; k<300; k++)

22 if(
i
>=
k
&&
dp
[i-k][
j
]==0)

23 
dp
[
i
][
j
]=1;

24 if(
j
>=
k
&&
dp
[
i
][j-k]==0)

25 
dp
[
i
][
j
]=1;

26 if(
i
>=
k
&&
j
>=k&&
dp
[i-k][j-k]==0)

27 
dp
[
i
][
j
]=1;

29 
èg
=
dp
[
a
[0]][a[1]];

31 
	`¥ötf
("%s\n",
èg
?"BitLGM":"BitAryo");

33 
	}
}

	@problems/codeforces/div2_codes/round173/R173D2E.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	#N
 100101

	)

5 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

8 
LL
 
	ga
[
N
];

10 
	snode
{

11 
	mc
[2];

12 }
	gno
[
N
*80];

14 
	gt›
;

16 
ölöe
 
	$B
(
LL
 
x
,
i
){  (x>>i)&1; 
	}
}

18 
	$ö£π
(
LL
 
x
)

20 
p
=0;

21 
i
=40; i>=0; i--)

23 
nb
=
	`B
(
x
,
i
);

24 if(
no
[
p
].
c
[
nb
])

25 
p
=
no
[p].
c
[
nb
];

28 
no
[
p
].
c
[
nb
]=++
t›
;

29 
p
=
t›
;

32 
	}
}

34 
LL
 
	$quîy
(
LL
 
x
)

36 
p
=0;

37 
LL
 
ªt
=0;

38 
i
=40; i>=0; i--)

40 
nb
=
	`B
(
x
,
i
);

41 if(
nb
)

43 if(
no
[
p
].
c
[0])

44 
p
=
no
[p].
c
[0];

47 
p
=
no
[p].
c
[1];

48 
ªt
+=1LL<<
i
;

53 if(
no
[
p
].
c
[1])

55 
p
=
no
[p].
c
[1];

56 
ªt
+=1LL<<
i
;

59 
p
=
no
[p].
c
[0];

62  
ªt
;

63 
	}
}

65 
	$maö
()

67 
n
;

68 
	`sˇnf
("%d",&
n
);

69 
LL
 
x
=0;

70 
t›
=0;

71 
	`ö£π
(
x
);

72 
i
=1; i<=
n
; i++)

74 
cö
>>
a
[
i
];

75 
x
^=
a
[
i
];

76 
	`ö£π
(
x
);

78 
LL
 
™s
=0;

79 
i
=1; i<=
n
; i++)

81 
LL
 
y
=
	`quîy
(
x
);

82 
™s
=
	`max
◊ns,max(
x
^
y
,x));

83 
x
^=
a
[
i
];

85 
LL
 
y
=
	`quîy
(
x
);

86 
™s
=
	`max
◊ns,max(
y
^
x
,x));

87 
cout
<<
™s
<<
ídl
;

89 
	}
}

	@problems/codeforces/div2_codes/round175_div2/R175D2A.cpp

1 
	~<c°dio
>

3 
	$maö
()

5 
n
,
k
;

6 
	`sˇnf
("%d%d",&
n
,&
k
);

7 
m
=
n
;

8 ; 
k
; 
m
--,k--)

9 
	`¥ötf
("%d ",
m
);

10 
i
=1; i<=
m
; i++)

11 
	`¥ötf
("%d ",
i
);

12 
	`puts
("");

14 
	}
}

	@problems/codeforces/div2_codes/round175_div2/R175D2B.cpp

1 
	~<c°dio
>

2 
	#N
 100101

	)

4 
	gp
[
N
];

6 
	$maö
()

8 
s
,
t
,
n
;

9 
	`sˇnf
("%d%d%d",&
n
,&
s
,&
t
);

10 
i
=1; i<=
n
; i++)

11 
	`sˇnf
("%d",&
p
[
i
]);

12 
nw
=
s
;

13 if(
s
==
t
)

14 
	`puts
("0");

17 
ªt
=1,
nw
=
p
[
s
];

18 ; 
nw
!=
t
;Çw=
p
[nw],
ªt
++)

20 if(
nw
==
s
)

22 
	`puts
("-1");

26 
	`¥ötf
("%d\n",
ªt
);

29 
	}
}

	@problems/codeforces/div2_codes/round175_div2/R175D2C.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	#N
 500000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	ga
[
N
];

10 
	$cmp
(
a
,
b
){ á<b; 
	}
}

12 
	$maö
()

14 
n
;

15 
	`sˇnf
("%d",&
n
);

16 
i
=0; i<
n
; i++)

17 
	`sˇnf
("%d",&
a
[
i
]);

18 
	`s‹t
(
a
,a+
n
,
cmp
);

19 
ªt
=0;

20 
i
=0; i<
n
; i++)

21 
ªt
+=
	`abs
(
i
+1-
a
[i]);

22 
cout
<<
ªt
<<
ídl
;

24 
	}
}

	@problems/codeforces/div2_codes/round175_div2/R175D2D.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

4 
	~<m≠
>

5 
	#X
 65536

	)

6 
	#MOD
 1000000007

	)

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

37 
LL
 
	gp
[16]={

41 
LL
 
	gjõ
[17];

43 
	$maö
()

45 
jõ
[1]=1;

46 
i
=2; i<17; i++)

47 
jõ
[
i
]=jõ[i-1]*i%
MOD
;

48 
n
;

49 
	`sˇnf
("%d",&
n
);

50 
cout
<<
jõ
[
n
]*
p
[n-1]%
MOD
<<
ídl
;

52 
	}
}

	@problems/codeforces/div2_codes/round178_div2/R178D2A.cpp

1 
	~<c°dio
>

3 
	gd©
[111];

5 
	$maö
()

7 
n
,
m
;

8 
	`sˇnf
("%d",&
n
);

9 
i
=1; i<=
n
; i++)

10 
	`sˇnf
("%d",&
d©
[
i
]);

11 
	`sˇnf
("%d",&
m
);

12 
i
=0; i<
m
; i++)

14 
x
,
y
;

15 
	`sˇnf
("%d%d",&
x
,&
y
);

16 if(
x
-1>0)

17 
d©
[
x
-1]+=
y
-1;

18 if(
x
+1<=
n
)

19 
d©
[
x
+1]+=d©[x]-
y
;

20 
d©
[
x
]=0;

22 
i
=1; i<=
n
; i++)

23 
	`¥ötf
("%d\n",
d©
[
i
]);

25 
	}
}

	@problems/codeforces/div2_codes/round178_div2/R178D2C.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

4 
	#N
 1101

	)

5 
	#MOD
 1000000007

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gèg
[
N
];

11 
LL
 
	gc
[
N
][N];

13 
LL
 
	$ˇl
(
LL
 
a
,LL 
b
)

15 if(
b
<0)  1;

16 
LL
 
ªt
=1;

17 ; 
b
; b>>=1)

19 if(
b
&1)

20 
ªt
Ùë*
a
%
MOD
;

21 
a
˜*a%
MOD
;

23  
ªt
;

24 
	}
}

26 
	$maö
()

28 
n
,
m
;

29 
c
[0][0]=1;

30 
c
[1][0]=c[1][1]=1;

31 
i
=2; i<
N
; i++)

33 
c
[
i
][0]=1;

34 
j
=1; j<
i
; j++)

35 
c
[
i
][
j
]=(c[i-1][j]+c[i-1][j-1])%
MOD
;

36 
c
[
i
][i]=1;

38 
	`mem£t
(
èg
,0,(tag));

39 
	`sˇnf
("%d%d",&
n
,&
m
);

40 if(
m
==0)

42 
	`puts
("0");

45 
i
=0; i<
m
; i++)

47 
x
;

48 
	`sˇnf
("%d",&
x
);

49 
èg
[
x
]=1;

51 
l
,
r
,
âl
=0;

52 
i
=1; i<=
n
; i++)

53 if(
èg
[
i
]==0Ë
âl
++;

54 
LL
 
ªt
=1;

55 
l
=1;Ü<=
n
;Ü++)

56 if(
èg
[
l
])

58 
ªt
Ùë*
c
[
âl
][
l
-1]%
MOD
;

59 
âl
-=
l
-1;

62 
r
=
n
;Ñ>=
l
;Ñ--)

63 if(
èg
[
r
])

65 
ªt
Ùë*
c
[
âl
][
n
-
r
]%
MOD
;

66 
âl
-=
n
-
r
;

69 
¥e
=
l
,
now
=l;

70 
i
=
l
; i<=
r
; i++)

71 if(
èg
[
i
])

73 
now
=
i
;

74 
ªt
Ùë*
c
[
âl
][
now
-
¥e
]%
MOD
;

75 
âl
-=
now
-
¥e
;

76 
ªt
Ùë*
	`ˇl
(2,
now
-
¥e
-1)%
MOD
;

77 ; 
i
<=
r
; i++)

78 if(!
èg
[
i
])

80 
¥e
=
i
;

84 
cout
<<
ªt
<<
ídl
;

86 
	}
}

	@problems/codeforces/div2_codes/round94/round94_div2_C_Status.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

19 
	#X
 10

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
	snode
{ 
	mx
,
	my
; }
	gno
[
MAXN
],
	g°
,
	ged
;

32 
	gm©
[100][
X
][X],
	gdú
[10][2]={{-1,0},{0,1},{0,-1},{1,0},{1,1},{1,-1},{-1,1},{-1,-1}},
	gv
[1000][9][9],
	gèg
;

33 
	gs
[
X
][X];

35 
ölöe
 
	$öbﬂrd
(
x
,
y
){  0<=x&&x<8&&0<=y&&y<8; 
	}
}

37 
	$öô
()

39 
i
,
j
,
k
;

40 
	`mem£t
(
m©
,0,(mat));

41 
	`mem£t
(
v
,0,(v));

42 
èg
=1;

43 
i
=0; i<8; i++)

44 
j
=0; j<8; j++)

46 if(
s
[
i
][
j
]=='S')

47 
m©
[0][
i
][
j
]=1;

49 
m©
[0][
i
][
j
]=0;

50 if(
s
[
i
][
j
]=='M')

51 
°
.
x
=
i
,°.
y
=
j
;

52 if(
s
[
i
][
j
]=='A')

53 
ed
.
x
=
i
,ed.
y
=
j
;

55 
i
=1; i<=8; i++)

57 
j
=1; j<8; j++)

58 
k
=0; k<8; k++)

59 
m©
[
i
][
j
][
k
]=mat[i-1][j-1][k];

67 
	}
}

69 
ölöe
 
	$gë
(
t
,
x
,
y
)

71 if(
t
>=8)

73  
m©
[
t
][
x
][
y
];

74 
	}
}

76 
	$dfs
(
x
,
y
,
t
)

79 if(
	`gë
(
t
,
x
,
y
)==1)  ;

80 if((
x
==
ed
.x&&
y
=Ûd.y)||
t
>8)

82 
èg
=0;

85 
i
,
tx
,
ty
;

86 
v
[
t
][
x
][
y
]=1;

87 
	`dfs
(
x
,
y
,
t
+1);

88 
i
=0; i<8&&
èg
; i++)

90 
tx
=
x
+
dú
[
i
][0],
ty
=
y
+dir[i][1];

91 if(
	`öbﬂrd
(
tx
,
ty
)&&(!
v
[
t
+1][tx][ty])&&
	`gë
(t+1,tx,ty)==0&&get(t,tx,ty)==0)

92 if(
t
==0||(!
v
[t-1][
tx
][
ty
]))

93 
	`dfs
(
tx
,
ty
,
t
+1);

95 
	}
}

97 
	$maö
()

99 
i
;

100 
i
=0; i<8; i++)

101 
	`sˇnf
("%s",
s
[
i
]);

102 
	`öô
();

103 
	`dfs
(
°
.
x
,°.
y
,0);

104 if(
èg
Ë
	`puts
("LOSE");

105 
	`puts
("WIN");

107 
	}
}

	@problems/codeforces/div2_codes/round94/round94_div2_D_String.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

19 
	#N
 100001

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
	gid
[
N
],
	gv
,
	gt›
,
	gπ›
;

31 
LL
 
	g˙t
[30],
	gl
,
	gßme
[30];

32 
	gs
[
N
],
	gªt
[N];

34 
	$öô
()

36 
i
;

37 
i
=0; i<
l
; i++)

38 
id
[
i
]=i;

39 
t›
=
l
;

40 
π›
=0;

41 
v
=0;

42 
	}
}

44 
	$sﬁve
(&
k
)

46 
i
,
j
,
tm±
;

47 
	`mem£t
(
˙t
,0,(cnt));

48 
	`mem£t
(
ßme
,0,(same));

49 
i
=0; i<
t›
; i++)

51 
˙t
[
s
[
id
[
i
]+
v
]-'a']+=
l
-id[i]-v;

52 
ßme
[
s
[
id
[
i
]+
v
]-'a']++;

54 
i
=0; i<26; i++)

55 if(
k
<=
˙t
[
i
])

57 
ªt
[
π›
++]=
i
+'a';

58 if(
ßme
[
i
]>=
k
)

61 
k
-=
ßme
[
i
];

62 
tm±
=
j
=0; j<
t›
&&
id
[j]+
v
<
l
; j++)

63 if(
s
[
id
[
j
]+
v
]==
i
+'a')

64 
id
[
tm±
++]=id[
j
];

65 
v
++;

66 
t›
=
tm±
;

70 
k
-=
˙t
[
i
];

72 
	}
}

74 
	$maö
()

76 
k
,
i
;

77 
LL
 
Àn
;

78 
	`sˇnf
("%s%d",
s
,&
k
);

79 
l
=
	`°æí
(
s
);

80 
	`öô
();

81 
Àn
=((
LL
)
l
)*(l+1)/2;

82 if(
Àn
<
k
)

83 
	`puts
("No suchÜine.");

86 
	`sﬁve
(
k
));

87 
	`puts
(
ªt
);

90 
	}
}

	@problems/codeforces/div2_codes/round94/round94_div2_E_Games_with_rectangle_dp.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
LL
 
	gdp
[
MAXN
][MAXN];

31 
LL
 
	$dfs
(
n
,
k
)

33 
j
,
i
=2*(
k
-1);

34 
LL
 
ªt
=0;

35 if(
dp
[
n
][
k
]>=0)  dp[n][k];

36 if(
k
==0Ë 
dp
[
n
][k]=1;

37 if(2*
k
>=
n
Ë 
dp
[n][k]=0;

38 
j
=
n
-2; j>=1&&j>
i
; j--)

40 
ªt
=‘ë+(
n
-
j
-1)*
	`dfs
(j,
k
-1))%
MOD
;

42  
dp
[
n
][
k
]=
ªt
;

43 
	}
}

45 
	$maö
()

47 
n
,
m
,
k
; 
LL
 
ªt
;

48 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)!=
EOF
)

50 
	`mem£t
(
dp
,-1,(dp));

51 
ªt
=
	`dfs
(
n
,
k
);

52 
	`mem£t
(
dp
,-1,(dp));

53 
ªt
Ùë*
	`dfs
(
m
,
k
)%
MOD
;

54 
cout
<<
ªt
<<
ídl
;

57 
	}
}

	@problems/codeforces/div2_codes/round95/round95_div2_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gs
[
N
];

32 
	$isuµî
(
x
)

34  'A'<=
x
&&x<='Z';

35 
	}
}

37 
	$is2ch™ge
()

39 
l
=
	`°æí
(
s
);

40 
i
=1; i<
l
; i++)

41 if(!
	`isuµî
(
s
[
i
]))

44 
	}
}

46 
	$ch™ge
(
x
)

48 if(
	`isuµî
(
x
))

49  
x
-'A'+'a';

50  
x
-'a'+'A';

51 
	}
}

53 
	$maö
()

55 
	`sˇnf
("%s",
s
);

56 
l
=
	`°æí
(
s
);

57 if(
	`is2ch™ge
())

59 
i
=0; i<
l
; i++)

60 
	`¥ötf
("%c",
	`ch™ge
(
s
[
i
]));

61 
	`puts
("");

64 
	`puts
(
s
);

66 
	}
}

	@problems/codeforces/div2_codes/round95/round95_div2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
LL
 
	gc
[31][31];

32 
	$öô
()

34 
c
[0][0]=1,c[1][1]=1;

35 
c
[1][0]=1;

36 
i
=2; i<31; i++)

38 
c
[
i
][0]=1;

39 
j
=1; j<
i
; j++)

41 
c
[
i
][
j
]=c[i-1][j]+c[i-1][j-1];

43 
c
[
i
][i]=1;

45 
	}
}

47 
	$maö
()

49 
n
,
m
,
t
;

50 
	`öô
();

51 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
t
)!=
EOF
)

53 
LL
 
ªt
=0;

54 
i
=4; 
t
-i>=1&&i<=
n
; i++)

56 if(
t
-
i
<=
m
)

57 
ªt
+=
c
[
n
][
i
]*c[
m
][
t
-i];

59 
cout
<<
ªt
<<
ídl
;

62 
	}
}

	@problems/codeforces/div2_codes/round95/round95_div2_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 101000

	)

18 
	#öf
 0x7fffffff

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	sd©a
{ 
	mx
,
	my
,
	mi
; }
	gd©
[
N
];

32 
	g˙t
[
N
],
	gªt
[10];

34 
	$cmp1
(
d©a
 
a
,d©®
b
)

36  
a
.
x
==
b
.x?a.
y
<b.y:a.x<b.x;

37 
	}
}

39 
	$cmp2
(
d©a
 
a
,d©®
b
)

41  
a
.
y
==
b
.y?a.
x
<b.x:a.y<b.y;

42 
	}
}

44 
	$cmp3
(
d©a
 
a
,d©®
b
)

46 
Ø
=
a
.
x
-a.
y
,
bb
=
b
.x-b.y;

47  
Ø
==
bb
?
a
.
x
<
b
.x:aa<bb;

48 
	}
}

50 
	$cmp4
(
d©a
 
a
,d©®
b
)

52 
Ø
=
a
.
x
+a.
y
,
bb
=
b
.x+b.y;

53  
Ø
==
bb
?
a
.
x
<
b
.x:aa<bb;

54 
	}
}

56 
	$maö
()

58 
n
,
m
,
¥e
;

59 
	`mem£t
(
˙t
,0,(cnt));

60 
	`sˇnf
("%d%d",&
n
,&
m
);

61 
i
=0; i<
m
; i++)

63 
	`sˇnf
("%d%d",&
d©
[
i
].
x
,&d©[i].
y
);

64 
d©
[
i
].i=i;

66 
	`s‹t
(
d©
,d©+
m
,
cmp1
);

67 
¥e
=-1;

68 
i
=0; i<
m
; i++)

70 if(
¥e
==
d©
[
i
].
x
)

71 
˙t
[
d©
[
i
].i]++;

73 
¥e
=
d©
[
i
].
x
;

74 if(
i
+1<
m
&&
d©
[i].
x
==dat[i+1].x)

75 
˙t
[
d©
[
i
].i]++;

77 
	`s‹t
(
d©
,d©+
m
,
cmp2
);

78 
¥e
=-1;

79 
i
=0; i<
m
; i++)

81 if(
¥e
==
d©
[
i
].
y
)

82 
˙t
[
d©
[
i
].i]++;

84 
¥e
=
d©
[
i
].
y
;

85 if(
i
+1<
m
&&
d©
[i].
y
==dat[i+1].y)

86 
˙t
[
d©
[
i
].i]++;

88 
	`s‹t
(
d©
,d©+
m
,
cmp3
);

89 
¥e
=
öf
;

90 
i
=0; i<
m
; i++)

92 
tmp
=
d©
[
i
].
x
-d©[i].
y
;

93 if(
¥e
==
tmp
)

94 
˙t
[
d©
[
i
].i]++;

96 
¥e
=
tmp
;

97 if(
i
+1<
m
&&
tmp
==
d©
[i+1].
x
-d©[i+1].
y
)

98 
˙t
[
d©
[
i
].i]++;

100 
	`s‹t
(
d©
,d©+
m
,
cmp4
);

101 
¥e
=
öf
;

102 
i
=0; i<
m
; i++)

104 
tmp
=
d©
[
i
].
x
+d©[i].
y
;

105 if(
¥e
==
tmp
)

106 
˙t
[
d©
[
i
].i]++;

108 
¥e
=
tmp
;

109 if(
i
+1<
m
&&
tmp
==
d©
[i+1].
x
+d©[i+1].
y
)

110 
˙t
[
d©
[
i
].i]++;

112 
	`mem£t
(
ªt
,0,(ret));

113 
i
=0; i<
m
; i++)

114 
ªt
[
˙t
[
i
]]++;

115 
i
=0; i<9; i++)

116 
	`¥ötf
("%d ",
ªt
[
i
]);

117 
	`puts
("");

119 
	}
}

	@problems/codeforces/div2_codes/round95/round95_div2_F.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 510

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gm©
[
N
][N],
	gdp
[N];

31 
	gs
[
N
][N];

33 
	$ok
(
i
,
j
)

35 if(
s
[
i
][
j
]=='1'&&s[i+1][j]=='1'&&s[i][j+1]=='1'&&s[i][j-1]=='1'&&s[i-1][j]=='1')

38 
	}
}

40 
	$maö
()

42 
n
,
m
,
k
;

43 
LL
 
ªt
=0;

44 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)!=
EOF
)

46 
	`mem£t
(
m©
,0,(mat));

47 
i
=0; i<
n
; i++)

48 
	`sˇnf
("%s",
s
[
i
]);

49 
i
=1; i<
n
-1; i++)

50 
j
=1; j<
m
-1; j++)

52 
m©
[
i
][
j
]=mat[i][j-1];

53 if(
	`ok
(
i
,
j
))

54 
m©
[
i
][
j
]+=1;

61 
ªt
=0;

62 
i
=0; i<
m
; i++)

63 
j
=
i
+2; j<
m
; j++)

65 
u
=0; u<
n
; u++)

66 
dp
[
u
]=
m©
[u][
j
-1]-m©[u][
i
];

72 
u
=0,
v
=u+2,
˙t
=
dp
[v-1];

73 ; 
u
<
n
&&
v
<n; u++)

75 
˙t
-=
dp
[
u
];

76 ; 
˙t
<
k
&&
v
<
n
; v++)

77 
˙t
+=
dp
[
v
];

78 
ªt
+=
n
-
v
;

82 
cout
<<
ªt
<<
ídl
;

85 
	}
}

	@problems/codeforces/div2_codes/round96/round96_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 60

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	gdp
[
N
][N][4][2],
	gdú
[4][2]={{-1,0},{0,1},{1,0},{0,-1}},
	gn
,
	gm
;

37 
	gs
[
N
][N];

39 
ölöe
 
	$gë_id
(
d
,
c
)

41 if(
c
==0)

42  (
d
+3)%4;

43  (
d
+1)%4;

44 
	}
}

46 
ölöe
 
	$öbﬂrd
(
x
,
y
)

48  1<=
x
&&x<=
n
&&1<=
y
&&y<=
m
;

49 
	}
}

51 
ölöe
 
	$to_go
(
x
,
y
)

53  
	`öbﬂrd
(
x
,
y
)&&
s
[x][y]>'0';

54 
	}
}

56 
	$maö
()

58 
k
,
u
,
d
,
c
,
x
,
y
,
tx
,
ty
,
dx
,
dy
;

59 
	`sˇnf
("%d%d",&
n
,&
k
);

60 
i
=1; i<=
n
; i++)

61 
	`sˇnf
("%s",
s
[
i
]+1);

62 
m
=
	`°æí
(
s
[1]+1);

63 
	`CLR
(
dp
,0);

64 
x
=
y
=1,
d
=1,
c
=0;

65 
u
=1; u<=
k
; u++)

67 if(
dp
[
x
][
y
][
d
][
c
])

69 
t
=
u
-
dp
[
x
][
y
][
d
][
c
];

70 if(
k
-
u
>=
t
)

71 
u
+=(
k
-u)/
t
*t;

74 
dp
[
x
][
y
][
d
][
c
]=
u
;

75 
tx
=
x
,
ty
=
y
;

76 
dx
=
dú
[
d
][0],
dy
=dir[d][1];

77 ; 
s
[
tx
][
ty
]==s[
x
][
y
]; )

78 
tx
+=
dx
,
ty
+=
dy
;

79 
tx
-=
dx
,
ty
-=
dy
;

80 
dx
=
dú
[
	`gë_id
(
d
,
c
)][0],
dy
=dir[get_id(d,c)][1];

81 ; 
s
[
tx
][
ty
]==s[
x
][
y
]; )

82 
tx
+=
dx
,
ty
+=
dy
;

83 
tx
-=
dx
,
ty
-=
dy
;

84 
tx
+=
dú
[
d
][0],
ty
+=dir[d][1];

85 if(
	`to_go
(
tx
,
ty
))

86 
x
=
tx
,
y
=
ty
;

87 if(
c
==0)

88 
c
=1;

90 
c
=0,
d
=(d+1)%4;

92 
	`¥ötf
("%d\n",
s
[
x
][
y
]-'0');

94 
	}
}

	@problems/codeforces/div2_codes/round96/round_96_E_dp.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 210

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	gdp
[110][
N
][55][2],
	gªt
=0;

37 
	gs
[
N
],
	gl
;

39 
	$chg
(
x
)

41 if(
x
=='F')

44 
	}
}

46 
	$dfs
(
id
,
pos
,
›e
,
dú
)

48 
d
;

49 
x
;

50 if(
dp
[
id
][
pos
][
›e
][
dú
])

52 
dp
[
id
][
pos
][
›e
][
dú
]=1;

53 if(
id
==
l
)

55 if(
›e
>0)

57 
ªt
=
	`max
‘ë,
	`abs
(
pos
-100));

60 if(
dú
==0)

61 
d
=-1;

63 
d
=1;

64 
i
=0; i<=
›e
; i++)

66 if(
i
&1)

67 
x
=
	`chg
(
s
[
id
]);

69 
x
=
s
[
id
];

70 if(
x
=='F')

71 
	`dfs
(
id
+1,
pos
+
d
,
›e
-
i
,
dú
);

73 
	`dfs
(
id
+1,
pos
,
›e
-
i
,
dú
^1);

75 
	}
}

77 
	$maö
()

79 
n
;

80 
	`sˇnf
("%s%d",
s
,&
n
);

81 
l
=
	`°æí
(
s
);

82 
	`CLR
(
dp
,0);

83 
ªt
=0;

84 
	`dfs
(0,100,
n
,1);

85 
	`¥ötf
("%d\n",
ªt
);

87 
	}
}

	@problems/codeforces/div2_codes/round97/round97_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 210010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	gs
[
N
];

38 
	$maö
()

40 
a
,
b
,
l
,
hÆf
,
mod
;

41 
	`sˇnf
("%s",
s
)!=
EOF
)

43 
a
=
b
=0;

44 
l
=
	`°æí
(
s
);

45 
i
=0; i<
l
; i++)

46 if(
s
[
i
]=='1')

47 
b
++;

48 if(
s
[
i
]=='0')

49 
a
++;

50 
hÆf
=
l
/2,
mod
=l%2;

51 if(
b
<
hÆf
+
mod
)

52 
	`puts
("00");

53 if(
a
<=
hÆf
&&
b
<=hÆf+
mod
)

55 if(
s
[
l
-1]=='0')

56 
	`puts
("10");

57 if(
s
[
l
-1]=='1')

58 
	`puts
("01");

61 if(
b
<
hÆf
+
mod
)

62 
	`puts
("01");

63 if(
a
<
hÆf
)

64 
	`puts
("10");

67 if(
a
<
hÆf
)

68 
	`puts
("11");

71 
	}
}

	@problems/codeforces/div2_codes/round98/round98_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	gs
[
N
];

38 
	$maö
()

40 
	`sˇnf
("%s",
s
)!=
EOF
)

42 
l
=
	`°æí
(
s
),
˙t
,
ªt
=0;

43 
¥e
='X';

44 
˙t
=0;

45 
i
=0; i<
l
; i++)

47 if(
s
[
i
]!=
¥e
)

49 
¥e
=
s
[
i
];

50 
ªt
+=
˙t
/5+(cnt%5>0);

51 
˙t
=1;

54 
˙t
++;

56 
ªt
+=
˙t
/5+(cnt%5>0);

57 
	`¥ötf
("%d\n",
ªt
);

60 
	}
}

	@problems/codeforces/div2_codes/round98/round98_D_dp.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 610

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	gs
[
N
];

37 
	gdp
[
N
][N],
	g∑l
[N][N],
	g¥e
[N][N];

39 
	$show
(
l
,
u
)

41 if(
u
<1) ;

42 
	`show
(
¥e
[
l
][
u
],u-1);

43 if(
u
>1)

44 
	`¥ötf
("+");

45 
i
=
¥e
[
l
][
u
]+1; i<=l; i++)

46 
	`¥ötf
("%c",
	`mö
(
s
[
i
],s[
¥e
[
l
][
u
]+l-i+1]));

47 
	}
}

49 
	$maö
()

51 
m
,
l
;

52 
	`sˇnf
("%s%d",
s
+1,&
m
);

53 
l
=
	`°æí
(
s
+1);

54 
i
=1; i<=
l
; i++)

55 
j
=
i
; j<=
l
; j++)

57 
∑l
[
i
][
j
]=0;

58 
k
=
i
; k<=
j
; k++)

59 
∑l
[
i
][
j
]+=(
s
[
k
]!=s[i+j-k]);

60 
∑l
[
i
][
j
]/=2;

62 
i
=0; i<=
l
; i++)

63 
j
=0; j<=
m
; j++)

64 
dp
[
i
][
j
]=
öf
;

65 
dp
[0][0]=0;

66 
i
=1; i<=
l
; i++)

67 
j
=1; j<=
m
; j++)

69 
k
=1; k<=
i
; k++)

71 if(
dp
[
k
-1][
j
-1]+
∑l
[k][
i
]<dp[i][j])

73 
dp
[
i
][
j
]=dp[
k
-1][j-1]+
∑l
[k][i];

74 
¥e
[
i
][
j
]=
k
-1;

78 
u
,
ªt
=
öf
;

79 
i
=1; i<=
m
; i++)

80 if(
ªt
>
dp
[
l
][
i
])

81 
ªt
=
dp
[
l
][
i
],
u
=i;

82 
	`¥ötf
("%d\n",
ªt
);

83 
	`show
(
l
,
u
);

84 
	`puts
("");

86 
	}
}

	@problems/codeforces/div2_codes/round98/round98_E_dp.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 200010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	gdp
[
N
],
	gq
[N],
	gt›
;

37 
	gs
[
N
];

39 
	$dñ
(
x
)

41 if('A'<=
x
&&x<='Z')

42 
x
+='a'-'A';

43  
x
=='a'||x=='e'||x=='i'||x=='o'||x=='u';

44 
	}
}

46 
	$föd
(
x
)

48 
l
=0,
r
=
t›
-1,
m
;

49 ; 
l
<=
r
; )

51 
m
=(
l
+
r
)>>1;

52 if(
dp
[
q
[
m
]]>
x
)

53 
l
=
m
+1;

55 
r
=
m
-1;

57  
l
;

58 
	}
}

60 
	$maö
()

62 
ªt
,
l
,
x
,
id
,
˙t
;

63 
	`sˇnf
("%s",
s
)!=
EOF
)

65 
l
=
	`°æí
(
s
);

66 
ªt
=
dp
[0]=0;

67 
i
=0; i<
l
; i++)

69 if(
	`dñ
(
s
[
i
]))

70 
dp
[
i
+1]=dp[i]-1;

72 
dp
[
i
+1]=dp[i]+2;

79 
t›
=0;

80 
q
[
t›
++]=0;

81 
i
=1; i<=
l
; i++)

83 
x
=
dp
[
q
[
t›
-1]];

84 if(
x
<=
dp
[
i
])

86 
id
=
	`föd
(
dp
[
i
]);

87 if(
i
-
q
[
id
]>
ªt
)

88 
ªt
=
i
-
q
[
id
];

91 
q
[
t›
++]=
i
;

93 if(
ªt
==0)

95 
	`puts
("No solution");

98 
˙t
=0;

99 
i
=0; i+
ªt
<=
l
; i++)

100 if(
dp
[
i
+
ªt
]>=dp[i])

101 
˙t
++;

102 
	`¥ötf
("%d %d\n",
ªt
,
˙t
);

105 
	}
}

	@problems/codeforces/div2_codes/round99/round99_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 2610

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	gèg
[
N
];

37 
	gid
[4],
	gl
[4];

38 
	gs
[4][5*
N
];

39 
	g™s
[4][5]={"aaaa","aabb","abab","abba"};

41 
ölöe
 
	$is_v
(
x
)

43  
x
=='a'||x=='e'||x=='i'||x=='o'||x=='u';

44 
	}
}

46 
	$equ
(
idi
,
idj
)

48 
a
=
id
[
idi
],
b
=id[
idj
],
œ
=
l
[idi],
lb
=l[idj];

49 if(
a
<0||
b
<0)  0;

50 if(
œ
-
a
!=
lb
-
b
)  0;

51 
i
,
j
;

52 
i
=
a
,
j
=
b
; i<
œ
; i++,j++)

53 if(
s
[
idi
][
i
]!=s[
idj
][
j
])

56 
	}
}

58 
	$gë_id
()

60 if(
	`equ
(0,1))

62 if(
	`equ
(1,2)&&equ(2,3))

64 if(
	`equ
(2,3))

68 if(
	`equ
(0,2))

70 if(
	`equ
(1,3))

74 if(
	`equ
(0,3))

76 if(
	`equ
(1,2))

81 
	}
}

83 
	$maö
()

85 
˙t
,
ªt
=-1,
t›
=0,
x
,
n
,
k
;

86 
	`sˇnf
("%d%d",&
n
,&
k
);

87 
i
=0; i<
n
; i++)

89 
u
=0; u<4; u++)

90 
	`sˇnf
("%s",
s
[
u
]);

91 if(
ªt
>=0) ;

92 
u
=0; u<4; u++)

94 
j
;

95 
˙t
=0;

96 
l
[
u
]=
	`°æí
(
s
[u]);

97 
j
=
l
[
u
]-1; j>=0; j--)

99 if(
	`is_v
(
s
[
u
][
j
]))

100 
˙t
++;

101 if(
˙t
==
k
)

104 if(
˙t
<
k
)

105 
id
[
u
]=-1;

107 
id
[
u
]=
j
;

109 
x
=
	`gë_id
();

110 if(
x
==0)

111 
ªt
=0;

112 if(
x
<4)

113 
èg
[
t›
++]=
x
;

115 if(
ªt
==0)

116 
	`puts
("NO");

119 if(
t›
==0)

120 
	`puts
("aaaa");

123 
	`s‹t
(
èg
,èg+
t›
);

124 if(
èg
[0]!Òag[
t›
-1])

125 
	`puts
("NO");

127 
	`puts
(
™s
[
èg
[0]]);

131 
	}
}

	@problems/codeforces/div2_codes/round99/round99_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 100010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#X
 10

	)

21 
	#ïs
 1e-8

	)

22 
	#öf
 0x3fffffff

	)

23 
	#MOD
 1000000007

	)

24 
	#PB
 
push_back


	)

25 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

26 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

27 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

29 
	tLL
;

30 
usög
 
«me•a˚
 
	g°d
;

32 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

33 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

34 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

35 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

37 
	gs
[
N
],
	gªt
[2][N];

38 
	gnum
[2][11],
	gÆl
[11],
	gt›0
,
	gt›1
;

40 
	$maö
()

42 
id
,
mx
,
tmp
,
x
,
zîo
;

43 
	`sˇnf
("%s",
s
)!=
EOF
)

45 
	`CLR
(
Æl
,0);

46 
	`CLR
(
num
,0);

47 
i
=0; 
s
[i]; i++)

48 
Æl
[
s
[
i
]-'0']++;

49 
mx
=0,
id
=-1,
zîo
=0;

50 
i
=1; i<=5; i++)

52 
k
=0; k<
X
; k++)

53 
num
[1][
k
]Úum[0][k]=
Æl
[k];

54 
j
=
X
-
i
;

55 if(
Æl
[
j
]==0||Æl[
i
]==0)

57 
num
[0][
i
]--,num[1][
j
]--;

58 
tmp
=1;

59 
k
=0; k<=9; k++)

61 
x
=
	`mö
(
num
[0][
k
],num[1][
X
-k-1]);

62 
num
[0][
k
]-=
x
,num[1][
X
-k-1]-=x;

63 
tmp
+=
x
;

65 
tmp
+=
	`mö
(
num
[0][0],num[1][0]);

66 if(
tmp
>
mx
)

68 
mx
=
tmp
;

69 
id
=
i
;

70 
zîo
=
	`mö
(
num
[0][0],num[1][0]);

73 if(
id
<0)

74 
mx
=
Æl
[0];

75 if(
mx
==0)

77 
	`puts
(
s
);

78 
	`puts
(
s
);

81 
k
=0; k<
X
; k++)

82 
num
[1][
k
]Úum[0][k]=
Æl
[k];

83 
t›0
=
t›1
=0;

84 
num
[0][0]-=
zîo
,num[1][0]-=zero;

85 
k
=0; k<
zîo
; k++)

86 
ªt
[0][
t›0
++]=0,ªt[1][
t›1
++]=0;

87 if(
id
>0)

89 
ªt
[0][
t›0
++]=
id
;

90 
ªt
[1][
t›1
++]=
X
-
id
;

91 
num
[0][
id
]--,num[1][
X
-id]--;

93 
k
=0; k<
X
; k++)

95 
x
=
	`mö
(
num
[0][
k
],num[1][
X
-k-1]);

96 
num
[0][
k
]-=
x
,num[1][
X
-k-1]-=x;

97 
j
=0; j<
x
; j++)

99 
ªt
[0][
t›0
++]=
k
;

100 
ªt
[1][
t›1
++]=
X
-
k
-1;

103 
k
=0; k<
X
; k++)

105 if(
num
[0][
k
]==0)

107 
j
=0; j<
num
[0][
k
]; j++)

108 
ªt
[0][
t›0
++]=
k
;

110 
k
=0; k<
X
; k++)

112 if(
num
[1][
k
]==0)

114 
j
=0; j<
num
[1][
k
]; j++)

115 
ªt
[1][
t›1
++]=
k
;

117 
i
=
t›0
-1; i>=0; i--)

118 
	`¥ötf
("%c",
ªt
[0][
i
]+'0');

119 
	`puts
("");

120 
i
=
t›1
-1; i>=0; i--)

121 
	`¥ötf
("%c",
ªt
[1][
i
]+'0');

122 
	`puts
("");

125 
	}
}

	@problems/codeforces/div2_codes/round99/round99_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	~<fun˘i⁄Æ
>

18 
	#N
 1010

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#ïs
 1e-8

	)

22 
	#öf
 0x3fffffff

	)

23 
	#MOD
 1000000007

	)

24 
	#PB
 
push_back


	)

25 
	#MP
 
make_∑ú


	)

26 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

27 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

28 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

30 
usög
 
«me•a˚
 
	g°d
;

31 
	tLL
;

32 
	g∑ú
<,> 
	tpii
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gve˘‹
<
	gpii
> 
	gå
;

40 
	gve˘‹
<
	gpii
> 
	gmu
;

42 
	$cmp
(
pii
 
a
,piò
b
){ á.
fú°
<b.fú°; 
	}
}

44 
	$maö
()

46 
n
,
m
,
x
,
h
,
l
,
r
,
w
;

47 
ªt
,
p
;

48 
	`sˇnf
("%d%d",&
n
,&
m
);

49 
i
=0; i<
n
; i++)

51 
	`sˇnf
("%d%d%d%d",&
x
,&
h
,&
l
,&
r
);

52 
å
.
	`PB
(
	`MP
(
x
-
h
,
l
));

53 
å
.
	`PB
(
	`MP
(
x
,-
l
));

54 
å
.
	`PB
(
	`MP
(
x
+1,
r
));

55 
å
.
	`PB
(
	`MP
(
x
+
h
+1,-
r
));

57 
i
=0; i<
m
; i++)

59 
	`sˇnf
("%d%d",&
x
,&
w
);

60 
mu
.
	`PB
(
	`MP
(
x
,
w
));

62 
	`s‹t
(
	`ALL
(
å
),
cmp
);

63 
	`s‹t
(
	`ALL
(
mu
),
cmp
);

64 
j
=0,
zîo
=0;

65 
p
=0,
ªt
=0;

66 
i
=0; i<
mu
.
	`size
(); i++)

68 
x
=
mu
[
i
].
fú°
,
w
=mu[i].
£c⁄d
;

69 ; 
j
<
å
.
	`size
()&&
x
>Òr[j].
fú°
; j++)

71 
µ
;

72 if(
å
[
j
].
£c⁄d
>=0)

74 
µ
=1-
å
[
j
].
£c⁄d
/100.0;

75 if(
µ
>0)

76 
p
+=
	`log
(
µ
);

78 
zîo
++;

82 
µ
=1+
å
[
j
].
£c⁄d
/100.0;

83 if(
µ
>0)

84 
p
-=
	`log
(
µ
);

86 
zîo
--;

89 if(
zîo
==0)

90 
ªt
+=
	`exp
(
p
)*
w
;

92 
	`¥ötf
("%.4lf\n",
ªt
);

94 
	}
}

	@problems/codeforces/test_round/test_round_3/testround_3_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#öf
 0x7ffffff

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	gn
,
	gªt
;

33 
	$dfs
(
a
,
b
)

35 if(
a
<1Ë 
öf
;

36 if(
a
==1Ë 
b
-1;

37  
	`dfs
(
b
%
a
,a)+b/a;

38 
	}
}

40 
	$maö
()

42 
m
;

43 
	`sˇnf
("%d",&
n
)!=
EOF
)

45 
ªt
=
öf
;

46 if(
n
>1)

47 
m
=
n
>>1;

49 
m
=1;

50 
i
=1; i<=
m
; i++)

51 
ªt
=
	`mö
‘ë,
	`dfs
(
i
,
n
));

52 
	`¥ötf
("%d\n",
ªt
);

55 
	}
}

	@problems/codeforces/test_round/test_round_3/testround_3_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 200010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	snode
{ 
	mx
,
	mi
;

37 
‰õnd
 
	m›î©‹
<(
node
 
	ma
,nodê
	mb
){ á.
	mx
<b.x; }

38 }
	gtmp
,
	gd©
[
N
];

39 
	g¥i‹ôy_queue
<
	gnode
> 
	gq
;

40 
	gªt
[
N
][2],
	gt›
;

42 
	$sﬁve
()

44 ; !
q
.
	`em±y
();)

46 
tmp
=
q
.
	`t›
(),q.
	`p›
();

47 
i
;

48 
i
=0; i<
tmp
.
x
&&(!
q
.
	`em±y
()); i++)

50 
d©
[
i
]=
q
.
	`t›
();

51 
q
.
	`p›
();

52 
d©
[
i
].
x
--;

53 
ªt
[
t›
][0]=
tmp
.
i
;

54 
ªt
[
t›
++][1]=
d©
[
i
].i;

56 if(
i
<
tmp
.
x
)

58 
i
=0; i<
tmp
.
x
; i++)

59 if(
d©
[
i
].
x
>0)

60 
q
.
	`push
(
d©
[
i
]);

63 
	}
}

65 
	$maö
()

67 
n
,
s
,
x
;

68 
t›
=0;

69 
	`sˇnf
("%d%d",&
n
,&
s
);

70 
i
=1; i<=
n
; i++)

72 
	`sˇnf
("%d",&
x
);

73 
tmp
.
x
=x,tmp.
i
=i;

74 if(
tmp
.
x
>0)

75 
q
.
	`push
(
tmp
);

77 if(
	`sﬁve
())

79 
	`puts
("Yes");

80 
	`¥ötf
("%d\n",
t›
);

81 
i
=0; i<
t›
; i++)

82 
	`¥ötf
("%d %d\n",
ªt
[
i
][0],ret[i][1]);

85 
	`puts
("No");

87 
	}
}

	@problems/codeforces/vk_cup/round1/vk_cup_1stR_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 100010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
LL
 
	ga
[
MAXN
],
	gb
[MAXN];

30 
	gªt
[
MAXN
],
	g™s
;

32 
	$cmp
(
LL
 
a
,LL 
b
){ á<b; 
	}
}

34 
	$maö
()

36 
LL
 
n
,
m
,
x
,
y
; 
i
,
j
;

37 
cö
>>
n
>>
m
>>
x
>>
y
)

39 
i
=0; i<
n
; i++)

40 
cö
>>
a
[
i
];

41 
i
=0; i<
m
; i++)

42 
cö
>>
b
[
i
];

43 
	`s‹t
(
a
,a+
n
,
cmp
);

44 
	`s‹t
(
b
,b+
m
,
cmp
);

45 
	`mem£t
(
ªt
,0,(ret));

46 
™s
=
i
=
j
=0; i<
n
&&j<
m
; i++)

48 ; 
b
[
j
]<
a
[
i
]-
x
&&j<
m
; j++);

49 if(
j
>=
m
) ;

50 if(
b
[
j
]<=
a
[
i
]+
y
)

51 
™s
++,
ªt
[
i
]=
j
+1,j++;

53 
cout
<<
™s
<<
ídl
;

54 
i
=0; i<
n
; i++)

55 if(
ªt
[
i
]>0)

56 
cout
<<
i
+1<<" "<<
ªt
[i]<<
ídl
;

59 
	}
}

	@problems/codeforces/vk_cup/round1/vk_cup_1stR_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
	sd©a
{ 
	mv
,
	mi
,
	mt
; }
	gA
[
MAXN
],
	gB
[MAXN],
	gtmp
;

31 
	$cmp
(
d©a
 
a
,d©®
b
){ á.
v
>b.v; 
	}
}

32 
	g˙t
[
MAXN
],
	gt›
,
	gè
,
	gtb
;

34 
	$maö
()

36 
n
,
k
,
i
,
x
,
y
; 
ªt
=0;

37 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

39 
ªt
=0;

40 
è
=
tb
=0;

41 
i
=0; i<
n
; i++)

43 
	`sˇnf
("%d%d",&
tmp
.
v
,&tmp.
t
);

44 
tmp
.
i
=i+1;

45 if(
tmp
.
t
==1Ë
A
[
è
++]=tmp;

46 
B
[
tb
++]=
tmp
;

47 
ªt
+=
tmp
.
v
;

49 
	`s‹t
(
A
,A+
è
,
cmp
);

50 
	`s‹t
(
B
,B+
tb
,
cmp
);

51 
i
=0; i<
è
&&i<
k
-1; i++)

52 
ªt
-=
A
[
i
].
v
/2.0;

53 if(
i
==
è
)

55 
	`¥ötf
("%.1lf\n",
ªt
);

56 
i
=0; i<
è
; i++)

57 
	`¥ötf
("1 %d\n",
A
[
i
].i);

58 
i
=0; i<
k
-
è
-1; i++)

59 
	`¥ötf
("1 %d\n",
B
[
i
].i);

60 
	`¥ötf
("%d",
tb
+
è
-
k
+1);

61 ; 
i
<
tb
; i++)

62 
	`¥ötf
(" %d",
B
[
i
].i);

63 
	`puts
("");

67 
x
=
A
[
è
-1].
v
;

68 if(
tb
>0)

69 
x
=
	`mö
(x,
B
[
tb
-1].
v
);

70 
ªt
-=
x
/2.0;

71 
	`¥ötf
("%.1lf\n",
ªt
);

72 
i
=0; i<
k
-1; i++)

73 
	`¥ötf
("1 %d\n",
A
[
i
].i);

74 
	`¥ötf
("%d",
è
+
tb
-
k
+1);

75 ; 
i
<
è
; i++)

76 
	`¥ötf
(" %d",
A
[
i
].i);

77 
i
=0; i<
tb
; i++)

78 
	`¥ötf
(" %d",
B
[
i
].i);

79 
	`puts
("");

83 
	}
}

	@problems/codeforces/vk_cup/round1/vk_cup_1stR_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#öf
 0x7fffffff

	)

17 
	#MAXN
 10100

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

20 
	#X
 33

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
LL
 
	$max
(
LL
 
a
,LL 
b
){ á<b?b:a; 
	}
}

28 
ölöe
 
LL
 
	$mö
(
LL
 
a
,LL 
b
){ á<b?a:b; 
	}
}

29 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

31 
	sd©a
{ 
LL
 
	ml
,
	mr
; }
	gA
[2][
MAXN
],
	gtmp
;

32 
	gt›
[2];

33 
LL
 
	gB
[
X
];

35 
	$öô
()

37 
i
;

38 
B
[0]=1;

39 
i
=1; i<
X
; i++)

40 
B
[
i
]=B[i-1]<<1;

41 
	}
}

43 
	$dfs
(
LL
 
l
,LL 
r
,
id
,
n
)

45 
l
=
	`max
(1,l);

46 
r
=
	`mö
(
B
[
n
]-1,r);

47 if(
l
<=
r
)

49 
tmp
.
l
ˆ,tmp.
r
=r;

50 
A
[
id
][
t›
[id]++]=
tmp
;

52 if(!((
l
<=1)&&(
r
>=
B
[
n
-1]-1)))

54 
	`dfs
(
l
,
r
,
id
,
n
-1);

55 
	`dfs
(
l
-
B
[
n
-1],
r
-B[n-1],
id
,n-1);

58 
	}
}

60 
	$maö
()

62 
LL
 
l1
,
r1
,
l2
,
r2
,
ªt
;

63 
i
,
j
;

64 
	`öô
();

65 
cö
>>
l1
>>
r1
>>
l2
>>
r2
)

67 
t›
[0]=top[1]=0;

68 
	`dfs
(
l1
,
r1
,0,30);

69 
	`dfs
(
l2
,
r2
,1,30);

70 
ªt
=0;

71 
i
=0; i<
t›
[0]; i++)

72 
j
=0; j<
t›
[1]; j++)

73 
ªt
=
	`max
(
	`mö
(
A
[0][
i
].
r
,A[1][
j
].r)-max(A[0][i].
l
,A[1][j].l)+1,ret);

74 
cout
<<
ªt
<<
ídl
;

77 
	}
}

	@problems/codeforces/vk_cup/round1/vk_cup_1stR_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 51010

	)

17 
	#X
 501

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
LL
 
	gªt
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

29 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

30 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

32 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[2*
MAXN
];

34 
	gli°
[
MAXN
],
	gt›
,
	gn
,
	gk
,
	gv
[MAXN],
	gÀn
[MAXN][
X
];

36 
	$ö£π
(
f
,
t
)

38 
e
[
t›
].
f
=f,e[t›].
t
=t;

39 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

40 
	}
}

42 
	$dfs
(
now
)

44 
i
,
j
;

45 
v
[
now
]=1;

46 
Àn
[
now
][0]=1;

47 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

48 if(!
v
[
e
[
i
].
t
])

50 
	`dfs
(
e
[
i
].
t
);

51 
j
=0; j+1<=
k
; j++)

53 
ªt
+=
Àn
[
now
][
j
]*Àn[
e
[
i
].
t
][
k
-j-1];

56 
j
=1; j<
X
; j++)

57 
Àn
[
now
][
j
]+ˆí[
e
[
i
].
t
][j-1];

60 
v
[
now
]=0;

61 
	}
}

63 
	$maö
()

65 
i
,
x
,
y
;

66 
cö
>>
n
>>
k
)

68 
	`mem£t
(
v
,0,(v));

69 
	`mem£t
(
Àn
,0,(len));

70 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

71 
i
=0; i<
n
-1; i++)

73 
cö
>>
x
>>
y
;

74 
x
--,
y
--;

75 
	`ö£π
(
x
,
y
);

76 
	`ö£π
(
y
,
x
);

78 
ªt
=0;

79 
	`dfs
(0);

80 
cout
<<
ªt
<<
ídl
;

83 
	}
}

	@problems/codeforces/vk_cup/round1/vk_cup_1stR_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 100101

	)

17 
	#MAXM
 1000010

	)

18 
	#X
 11

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
	gnum
[
X
],
	gi•
[
N
],
	g∂i°
[N],
	gt›
,
	gÀn
,
	gD
[9],
	g˙t
[N],
	gidí
[N];

31 
	$föd
(
x
)

33 
l
,
r
,
m
;

34 
l
=0,
r
=
t›
-1;Ü<=r; )

36 
m
=(
l
+
r
)>>1;

37 if(
∂i°
[
m
]<
x
)

38 
l
=
m
+1;

40 
r
=
m
-1;

42  
l
;

43 
	}
}

45 
	$öô
()

47 
i
,
j
;

48 
t›
=0; 
D
[0]=1;

49 
i
=1; i<10; i++)

50 
D
[
i
]=D[i-1]*10;

51 
i
=0; i<
N
; i++)

52 
i•
[
i
]=i;

53 
i
=2; i<
N
; i++)

55 if(
i•
[
i
]==i)

56 
∂i°
[
t›
++]=
i
;

57 
j
=0; j<
t›
&&
i
*
∂i°
[j]<
N
; j++)

59 
i•
[
i
*
∂i°
[
j
]]=plist[j];

60 if(
i
%
∂i°
[
j
]==0)

64 
	`mem£t
(
˙t
,0,(cnt));

65 
i
=2; i<
N
; i++)

67 if(
i
%10==0)

69 
j
=
i
; j<i+10; j++)

70 if(
i•
[
j
]==j)

71 
˙t
[
i
]++;

72 
i
+=9;

75 
i
=0; i<
N
; i++)

76 
idí
[
i
]=
	`föd
(i);

77 
	}
}

79 
	$gë_m©
(
x
)

81 
ªt
=0,
y
=
x
,
i
;

82 ; 
y
; )

83 
ªt
++,
y
/=10;

84 
i
=
ªt
; i>0; i--)

86 
num
[
i
]=
x
%10,x/=10;

88  
ªt
;

89 
	}
}

91 
	$dfs
(
id
)

93 
x
=
num
[
id
]*
D
[
Àn
-id+1],
i
,
y
=“um[id]+1)*D[Àn-id+1],
ªt
=0,
t
,
u
,
j
;

94 
i
=
idí
[
x
];

95 if(
id
==
Àn
)

96  
˙t
[
x
];

97 ; 
∂i°
[
i
]<
y
; i++)

99 
t
=
∂i°
[
i
]%
D
[
Àn
-
id
+1];

100 
j
=
Àn
; j>=
id
; j--)

101 
u
=
t
%10,
num
[
j
]*=10,num[j]+=u,t/=10;

102 
ªt
+=
	`dfs
(
id
+1);

103 
t
=
∂i°
[
i
]%
D
[
Àn
-
id
+1];

104 
j
=
Àn
; j>=
id
; j--)

105 
u
=
t
%10,
num
[
j
]/=10;

107  
ªt
;

108 
	}
}

110 
	$sﬁve
(
x
)

112 
ªt
,
i
;

113 
Àn
=
	`gë_m©
(
x
);

114 
num
[1]=
x
;

115 if(
Àn
==1)

116  
i•
[
x
]==x;

117 
ªt
=
	`dfs
(2);

118  
ªt
;

119 
	}
}

121 
	$maö
()

123 
t
,
n
;

124 
	`öô
();

125 
	`sˇnf
("%d",&
t
);

126 ; 
t
--; )

128 
	`sˇnf
("%d",&
n
);

129 
	`¥ötf
("%d\n",
	`sﬁve
(
n
));

132 
	}
}

	@problems/codeforces/vk_cup/round2/vk_cup_2012_round2_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 5010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gs
[
N
],
	gt
[N];

31 
	gls
,
	g…
;

32 
	gf
[
N
][N];

34 
	$maö
()

36 
ªt
=0;

37 
	`sˇnf
("%s%s",
s
,
t
)!=
EOF
)

39 
ªt
=0;

40 
ls
=
	`°æí
(
s
);

41 
…
=
	`°æí
(
t
);

42 
	`mem£t
(
f
,0,(f));

43 
i
=1; i<=
ls
; i++)

44 
j
=1; j<=
…
; j++)

46 
f
[
i
][
j
]=f[i][j-1];

47 if(
s
[
i
-1]==
t
[
j
-1])

48 
f
[
i
][
j
]=(f[i][j]+f[i-1][j-1]+1)%
MOD
;

50 
i
=1; i<=
ls
; i++)

51 
ªt
=‘ë+
f
[
i
][
…
])%
MOD
;

52 
cout
<<
ªt
<<
ídl
;

55 
	}
}

	@problems/codeforces/vk_cup/round2/vk_cup_2012_round2_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#ïs
 1e-8

	)

18 
	#N
 100010

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	sÀm
{ 
	mv
; 
	mw
,
	mi
; }
	gÀ
[
N
];

32 
	gmax_t
;

33 
	gn
,
	gk
;

34 
	gh
;

36 
	$cmp
(
Àm
 
a
,Àm 
b
){ á.
w
==b.w?a.
v
<b.v:a.w<b.w; 
	}
}

37 
	gªt
[
N
];

39 
	$ˇn
(
id
,
t
,
i
)

41  
i
*
h
<
t
*
À
[
id
].
v
+
ïs
;

42 
	}
}

44 
	$too_low
(
t
)

46 
j
=0,
i
;

47 
i
=1; i<=
k
&&
j
<
n
; )

49 if(
	`ˇn
(
j
,
t
,
i
))

50 
i
++;

51 
j
++;

53 if(
i
>
k
)  0;

55 
	}
}

57 
	$sﬁve
()

59 
l
,
r
,
m
;

60 
i
;

61 
l
=0,
r
=
max_t
,
i
=0; i<100; i++)

63 
m
=(
l
+
r
)/2;

64 
b
=
	`too_low
(
m
);

65 if(
b
)

66 
l
=
m
;

68 
r
=
m
;

70  
r
;

71 
	}
}

73 
	$maö
()

75 
	`sˇnf
("%d%d%lf",&
n
,&
k
,&
h
)!=
EOF
)

77 
max_t
=0;

78 
i
=0; i<
n
; i++)

80 
	`sˇnf
("%d",&
À
[
i
].
w
);

81 
À
[
i
].i=i;

83 
i
=0; i<
n
; i++)

85 
	`sˇnf
("%lf",&
À
[
i
].
v
);

86 
max_t
=
	`max
(max_t,
k
*
h
/
À
[
i
].
v
);

88 
	`s‹t
(
À
,À+
n
,
cmp
);

89 
t
=
	`sﬁve
();

90 
j
=0;

91 
i
=1; i<=
k
&&
j
<
n
; j++)

92 if(
	`ˇn
(
j
,
t
,
i
))

94 
ªt
[
i
]=
À
[
j
].i+1;

95 
i
++;

97 
i
=1; i<=
k
; i++)

98 
	`¥ötf
("%d ",
ªt
[
i
]);

99 
	`puts
("");

102 
	}
}

	@problems/codeforces/vk_cup/round2/vk_cup_2012_round2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 101000

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gn
,
	gt›
,
	gxt›
,
	gèg
[
N
];

31 
	gl
,
	gv1
,
	gv2
,
	gxx
[
N
<<2],
	gªt
[N];

33 
	scho
{ 
	mi
; 
	mp
; }
	gc
[
N
];

34 
	s£g
{ 
	mx
; 
	mi
,
	mt
; }
	g 
[
N
<<2];

36 
	$add
(
x
,
i
,
t
)

38 
 
[
t›
].
i
=i;

39 
 
[
t›
].
t
=t;

40 
 
[
t›
++].
x
=x;

41 
	}
}

43 
	$cmp
(
£g
 
a
,£g 
b
){ á.
x
<b.x; 
	}
}

45 
	$maö
()

47 
d
,
x
;

48 
	`sˇnf
("%d%lf%lf%lf",&
n
,&
l
,&
v1
,&
v2
)!=
EOF
)

50 
t›
=0;

51 
d
=
l
*
v2
/(
v1
+v2);

53 
i
=0; i<
n
; i++)

55 
	`sˇnf
("%lf",&
x
);

56 if(
d
>
x
)

58 
	`add
(0,
i
,0);

59 
	`add
((
d
-
x
),
i
,1);

60 
	`add
((2*
l
-
x
),
i
,0);

61 
	`add
(2*
l
,
i
,1);

65 
	`add
((2*
l
-
x
),
i
,0);

66 
	`add
((2*
l
-
x
+
d
),
i
,1);

69 
 
[
t›
].
t
=-1;

70 
 
[
t›
++].
x
=2*
l
;

71 
	`s‹t
(
 
, +
t›
,
cmp
);

77 
xt›
=0;

78 
xx
[0]=
 
[0].
x
;

79 
i
=1; i<
t›
; i++)

81 if(
 
[
i
].
x
==
xx
[
xt›
])

84 
xx
[++
xt›
]=
 
[
i
].
x
;

91 
	`mem£t
(
èg
,0,(tag));

92 
	`mem£t
(
ªt
,0,(ret));

93 
j
=0,
˙t
=0;

94 
¥e
=0;

95 
i
=0; i<=
xt›
; i++)

98 
ªt
[
˙t
]+=
xx
[
i
]-
¥e
;

99 
¥e
=
xx
[
i
];

100 ; 
 
[
j
].
x
==
xx
[
i
]&&j<
t›
; j++)

102 if(
 
[
j
].
t
==1)

103 
˙t
--;

104 if(
 
[
j
].
t
==0)

105 
˙t
++;

109 
i
=0; i<=
n
; i++)

110 
	`¥ötf
("%.20lf\n",
ªt
[
i
]/2/
l
);

113 
	}
}

	@problems/codeforces/vk_cup/round2_unofficial/vk_cup_2012_round2_unofficial_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 10100

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	$cmp
(
a
,
b
){ á<b; 
	}
}

31 
	gd©
[
N
];

33 
	$maö
()

35 
n
,
a
,
b
;

36 
	`sˇnf
("%d%d%d",&
n
,&
a
,&
b
)!=
EOF
)

38 
i
=1; i<=
n
; i++)

39 
	`sˇnf
("%d",&
d©
[
i
]);

40 
	`s‹t
(
d©
+1,d©+
n
+1,
cmp
);

41 
	`¥ötf
("%d\n",
d©
[
b
+1]-dat[b]);

44 
	}
}

	@problems/codeforces/vk_cup/round2_unofficial/vk_cup_2012_round2_unofficial_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 101000

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gs
[
N
],
	gt
[N];

32 
	$cmp
(
a
,
b
){ á>b; 
	}
}

34 
	$maö
()

36 
n
,
m
;

37 
	`sˇnf
("%s%s",
s
,
t
);

38 
n
=
	`°æí
(
s
),
m
=°æí(
t
);

39 
	`s‹t
(
t
,t+
m
,
cmp
);

40 
j
=0;

41 
i
=0; i<
n
; i++)

43 if(
s
[
i
]<
t
[
j
])

44 
s
[
i
]=
t
[
j
],j++;

46 
	`¥ötf
("%s\n",
s
);

48 
	}
}

	@problems/fzu/fzu_2012_3/fzu_2012_3_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 100010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gd©
[
N
];

31 
	gve˘‹
<> 
	ge
[
N
];

33 
	$maö
()

35 
n
,
m
,
u
,
v
,
x
,
ªt
;

36 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

38 
i
=0; i<
N
; i++)

39 
e
[
i
].
	`˛ór
();

40 
i
=1; i<=
n
; i++)

42 
	`sˇnf
("%d",&
d©
[
i
]);

43 
e
[
d©
[
i
]].
	`push_back
(i);

45 
i
=0; i<
m
; i++)

47 
	`sˇnf
("%d%d%d",&
u
,&
v
,&
x
);

48 
	`¥ötf
("%d\n",
	`uµî_bound
(
e
[
x
].
	`begö
(),e[x].
	`íd
(),
v
)-
	`lowî_bound
”[x].begö(),e[x].íd(),
u
));

52 
	}
}

	@problems/fzu/fzu_2012_3/fzu_2012_3_B_unsolved.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#öf
 0x7fffffff

	)

18 
	#N
 1010

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	gn
,
	gm
,
	gw
,
	gdú
[4][2]={{1,0},{-1,0},{0,1},{0,-1}},
	gv
[
N
][N],
	gid
[N][N],
	gvis
[30],
	gªt
;

32 
	gs
[1001][1001];

34 
	sto_bót
{ 
	mg
,
	mf
,
	mjg
,
	mjf
,
	mx
; }
	gbt
[20],
	gme
;

35 
	spoöt
{ 
	mx
,
	my
; }
	gq
[
N
*N],
	gwh
[20],
	gtmp
;

37 
	gve˘‹
<> 
	gli°
[20];

38 
	gt›
;

40 
ölöe
 
	$ö_bﬂrd
(
x
,
y
)

42  0<=
x
<
n
&&0<=
y
<
m
;

43 
	}
}

45 
	$bfs
(
now
)

47 
li°
[
now
].
	`˛ór
();

48 
l
,
r
,
x
,
y
,
i
;

49 
tmp
.
x
=
wh
[
now
].x,tmp.
y
=wh[now].y;

50 
v
[
tmp
.
x
][tmp.
y
]=1;

51 
	`mem£t
(
v
,0,(v));

52 
q
[
l
=
r
=0]=
tmp
;

53 ; 
l
<=
r
; )

55 
x
=
q
[
l
].x,
y
=q[l].y,l++;

56 
i
=0; i<4; i++)

58 
tx
=
x
+
dú
[
i
][0],
ty
=
y
+dir[i][1];

59 if(
	`ö_bﬂrd
(
tx
,
ty
)&&!
v
[tx][ty]&&
s
[tx][ty]!='*')

61 if(
id
[
tx
][
ty
]>0)

62 
li°
[
now
].
	`push_back
(
id
[
tx
][
ty
]);

65 if(
id
[
tx
][
ty
]==0)

66 
li°
[
now
].
	`push_back
(
id
[
tx
][
ty
]);

67 
tmp
.
x
=
tx
,tmp.
y
=
ty
;

68 
v
[
tx
][
ty
]=1;

69 
q
[++
r
]=
tmp
;

71 
v
[
tx
][
ty
]=1;

75 
	}
}

77 
ölöe
 
	$gë
(
x
)

79  
x
>0?x:0;

80 
	}
}

82 
	$sﬁve
(
now
,
˙t
,
vÆ
)

84 if(
˙t
==
t›
)

86 
ªt
=
	`mö
‘ë,
vÆ
);

89 
vis
[
now
]=1;

90 
t
=
s
[
wh
[
now
].
x
][wh[now].
y
]-'0';

91 if(
	`gë
(
me
.
g
-
bt
[
t
].
f
==0))

93 
vis
[
now
]=0;

96 
vÆ
+=(
bt
[
t
].
x
/(
	`gë
(
me
.
g
-bt[t].
f
)))*get(bt[t].g-me.f);

97 
me
.
f
+=
bt
[
t
].
jf
;

98 
me
.
g
+=
bt
[
t
].
jg
;

100 
i
=0; i<
li°
[
now
].
	`size
(); i++)

102 
t
=
li°
[
now
][
i
];

103 if(!
vis
[
t
])

104 
	`sﬁve
(
t
,
˙t
+1,
vÆ
);

106 
me
.
f
-=
bt
[
t
].
jf
;

107 
me
.
g
-=
bt
[
t
].
jg
;

108 
vis
[
now
]=0;

109 
	}
}

111 
	$maö
()

113 
x
,
y
;

114 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
w
)!=
EOF
)

116 
	`mem£t
(
v
,0,(v));

117 
	`mem£t
(
id
,-1,(id));

118 
me
.
g
=me.
f
=10;

119 
i
=1; i<=
w
; i++)

120 
	`sˇnf
("%d%d%d%d%d",&
bt
[
i
].
x
,&bt[i].
g
,&bt[i].
f
,&bt[i].
jg
,&bt[i].
jf
);

121 
i
=0; i<
n
; i++)

122 
	`sˇnf
("%s",
s
[
i
]);

123 
t›
=1;

124 
i
=0; i<
n
; i++)

125 
j
=0; j<
m
; j++)

127 if(
s
[
i
][
j
]=='#')

129 
id
[
i
][
j
]=0;

130 
wh
[0].
x
=
i
,wh[0].
y
=
j
;

132 if(
s
[
i
][
j
]>='1'&&s[i][j]<='9')

134 
id
[
i
][
j
]=
t›
;

135 
wh
[
t›
].
x
=
i
,wh[t›].
y
=
j
;

136 
t›
++;

144 
i
=0; i<
t›
; i++)

146 
	`mem£t
(
v
,0,(v));

147 
	`bfs
(
i
);

154 
ªt
=
öf
;

155 
	`sﬁve
(0,0,0);

156 if(
ªt
>=
öf
)

157 
	`puts
("-1");

159 
	`¥ötf
("%d\n",
ªt
);

162 
	}
}

	@problems/fzu/fzu_2012_3/fzu_2012_3_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
LL
 
	gdp
[
N
][N];

31 
LL
 
	g™s
[
N
];

33 
LL
 
	$dfs
(
l
,
r
)

35 
LL
 
ªt
=0;

36 if(
dp
[
l
][
r
]>=0)  dp[l][r];

37 if(
l
==0Ë 
dp
[l][
r
]=1;

38 if(
r
==0Ë 
dp
[
l
][r]=1;

39 
ªt
=‘ë+
	`dfs
(
l
-1,
r
))%
MOD
;

40 
ªt
=‘ë+
	`dfs
(
l
,
r
-1))%
MOD
;

41  
dp
[
l
][
r
]=
ªt
;

42 
	}
}

44 
	$öô
()

46 
	`mem£t
(
dp
,-1,(dp));

47 
i
=0; i<101; i++)

48 
dp
[
i
][0]=dp[0][i]=1;

49 
	`dfs
(100,100);

50 
	`mem£t
(
™s
,0,(ans));

51 
i
=0; i<101; i++)

52 
j
=0; j<
i
; j++)

53 
™s
[
i
]=◊ns[i]+
dp
[
j
][i-j-1])%
MOD
;

54 
	}
}

56 
	$maö
()

58 
n
;

59 
	`öô
();

60 
	`sˇnf
("%d",&
n
)!=
EOF
)

62 
cout
<<
™s
[
n
]<<
ídl
;

65 
	}
}

	@problems/fzu/fzu_2012_3/fzu_2012_3_D.cpp

6 
	~<c°rög
>

7 
	~<c°dio
>

8 
	~<ve˘‹
>

9 
	~<£t
>

10 
	~<m≠
>

11 
	~<queue
>

12 
	~<°rög
>

13 
	~<io°ªam
>

14 
	~<Æg‹ôhm
>

15 
	#MAXN
 1010

	)

16 
	#MAXM
 1000010

	)

17 
	#MOD
 1000000007

	)

18 
	#N
 100011

	)

19 
	#X
 26

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
	gn
,
	gl
,
	gπ›
;

31 
	gs
[
N
],
	gªt
[N];

32 
	gve˘‹
<> 
	gq
[
N
];

34 
	$öô
()

36 
q
[0].
	`˛ór
();

37 
i
=0; i<
l
; i++)

38 
q
[0].
	`push_back
(
i
);

39 
π›
=0;

40 
	}
}

42 
	$dfs
(
v
)

44 
˙t
[
X
]={0},
t›
=
q
[
v
].
	`size
();

50 if(
v
==
l
)

52 
i
=0; i<
t›
; i++)

53 
˙t
[
s
[
q
[
v
][
i
]+v]-'a']++;

59 
i
=0; i<
X
; i++)

61 
q
[
v
+1].
	`˛ór
();

62 if(
˙t
[
i
]==
n
)

65 
ªt
[
π›
++]=
i
+'a';

68 if(
˙t
[
i
]>
n
)

70 
ªt
[
π›
++]=
i
+'a';

71 
j
=0; j<
t›
; j++)

72 if(
s
[
q
[
v
][
j
]+v]-'a'==
i
&&q[v][j]+v+1<
l
)

73 
q
[
v
+1].
	`push_back
(q[v][
j
]);

74 if(
	`dfs
(
v
+1))

77 
π›
--;

81 
	}
}

83 
	$maö
()

85 
	`sˇnf
("%d",&
n
)!=
EOF
)

87 
	`sˇnf
("%s",
s
);

88 
l
=
	`°æí
(
s
);

89 
	`öô
();

90 if(
	`dfs
(0))

92 
i
=0; i<
π›
; i++)

93 
	`¥ötf
("%c",
ªt
[
i
]);

94 
	`puts
("");

97 
	`puts
("impossible");

100 
	}
}

	@problems/fzu/fzu_2012_3/fzu_2012_3_F.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#öf
 1e10

	)

18 
	#N
 101000

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	såì
{ 
LL
 
	ma
,
	mb
; }
	gts
[
N
],
	gq
[N];

33 
	$cmp_a
(
åì
 
a
,åì 
b
){ á.a>b.a; 
	}
}

34 
	gt›
=0;

35 
	gxx
[
N
];

36 
LL
 
	gªt
[
N
];

38 
	$ˇlx
(
åì
 
a
,åì 
b
)

40  ((
b
.
a
-a.a))/(a.b-b.b);

41 
	}
}

43 
	$maö
()

45 
n
,
m
,
x
;

46 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

48 
i
=0; i<
n
; i++)

49 
cö
>>
ts
[
i
].
a
>>ts[i].
b
;

50 
	`s‹t
(
ts
,ts+
n
,
cmp_a
);

51 
t›
=0;

52 
q
[
t›
++]=
ts
[0];

53 
i
=1; i<
n
; i++)

55 if(
ts
[
i
].
b
<=
q
[
t›
-1].b)

57 ; 
t›
>=2; )

59 if(
	`ˇlx
(
ts
[
i
],
q
[
t›
-2])<=calx(q[top-1],q[top-2]))

60 
t›
--;

65 
q
[
t›
++]=
ts
[
i
];

67 
i
=0; i<
t›
-1; i++)

68 
xx
[
i
]=
	`ˇlx
(
q
[i],q[i+1]);

69 
xx
[
t›
-1]=
öf
;

70 
now
=0;

71 
i
=0; i<=
N
; i++)

73 ; (
i
)>
xx
[
now
]&&now<
t›
; )

74 
now
++;

75 
ªt
[
i
]=
q
[
now
].
a
+q[now].
b
*i;

77 
i
=0; i<
m
; i++)

79 
	`sˇnf
("%d",&
x
);

80 
cout
<<
ªt
[
x
]<<
ídl
;

84 
	}
}

	@problems/fzu/fzu_2012_3/fzu_2012_3_G_unsolved.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gs
[30];

31 
	gp
[30],
	gmx
;

32 
	gªt
[30];

34 
	$maö
()

36 
n
;

37 
	`sˇnf
("%d",&
n
)!=
EOF
)

39 
mx
=0;

40 
i
=0; i<
n
; i++)

41 
ªt
[
i
]=1.0;

42 
i
=0; i<26; i++)

43 
	`sˇnf
("%lf",&
p
[
i
]);

44 
i
=0; i<
n
; i++)

46 
	`sˇnf
("%s",
s
);

47 
l
=
	`°æí
(
s
);

48 
j
=0; j<
l
; j++)

49 
ªt
[
i
]*=
p
[
s
[
j
]-'a'];

50 
mx
=
	`max
(
ªt
[
i
],mx);

52 if(
mx
<=0)

53 
	`puts
("canÇot stop");

56 
	}
}

	@problems/fzu/fzu_2012_school/fzu_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	g˙t
[5];

40 
LL
 
	g¥i
[5][20];

42 
	$maö
()

44 
t
,
ˇ
;

45 
LL
 
ªt
,
âl
,
x
,
y
;

46 
LL
 
Ø
,
bb
,
cc
,
dd
,
ì
;

47 
	`sˇnf
("%d",&
t
);

48 
ˇ
=1; ca<=
t
; ca++)

50 
ªt
=0;

51 
	`mem£t
(
¥i
,0,(pri));

52 
i
=0; i<5; i++)

53 
	`sˇnf
("%d",&
˙t
[
i
]);

54 
i
=0; i<5; i++)

56 
j
=1; j<=
˙t
[
i
]; j++)

57 
cö
>>
¥i
[
i
][
j
];

59 
cö
>>
x
>>
y
;

60 
xx
=0; xx<=
˙t
[3]; xx++)

61 
yy
=
xx
; yy<=
˙t
[3]; yy++)

63 if(
xx
==0||
yy
==0)

65 if(
xx
==
yy
)

66 
Ø
=
¥i
[3][
xx
];

68 
Ø
=
¥i
[3][
xx
]+¥i[3][
yy
];

69 
uu
=0; uu<=
˙t
[4]; uu++)

70 
vv
=
uu
; vv<=
˙t
[4]; vv++)

72 if(
uu
==0) ;

73 if(
uu
==
vv
)

74 
bb
=
¥i
[4][
uu
];

76 
bb
=
¥i
[4][
uu
]+¥i[4][
vv
];

77 
k
=0; k<=
˙t
[2]; k++)

79 
cc
=
¥i
[2][
k
];

80 if(
k
!=0)

82 if(
Ø
+
bb
+
cc
>=
x
&&Ø+bb+cc<=
y
)

83 
ªt
++;

87 
u
=1; u<=
˙t
[0]; u++)

89 
v
=1; v<=
˙t
[1]; v++)

91 
âl
=
Ø
+
bb
+
cc
+
¥i
[0][
u
]+¥i[1][
v
];

92 if(
âl
>=
x
&&âl<=
y
)

93 
ªt
++;

100 
cout
<<
ªt
<<
ídl
;

103 
	}
}

	@problems/fzu/fzu_2012_school/fzu_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 400100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	sedge
{ 
	mf
,
	mt
,
	mid
,
	mw
,
	mn
; }
	ge
[
S
],
	ges
[S];

40 
	suföd


42 
	mp
[
S
],
	mt
;

43 
öô
()

45 
	mi
;

46 
	mi
=0; i<
	mS
; i++Ë
	mp
[
i
]=i;

48 
run
(&
x
)

50 ; 
	mp
[
t
=
x
]!=x; 
	mx
=
p
[x],p[t]=p[x]);

52 
£t_‰õnd
(
i
,
j
)

54 
run
(
i
);

55 
run
(
j
);

56 
	mp
[
i
]=
j
;

58 
is_‰õnd
(
i
,
j
)

60 
run
(
i
);

61 
run
(
j
);

62  
	mi
==
j
;

64 
_p
(
x
)

66 
run
(
x
);

67  
	mx
;

69 }
	guf
;

70 
	gåì
,
	gT
,
	gli°
[
S
],
	gt›
,
	gg
[S],
	glow
[S],
	gd‚
[S],
	gèg
[S];

72 
ölöe
 
	$cmp
(
edge
 
a
,Édgê
b
){ á.
w
<b.w; 
	}
}

74 
	$ö£π
(
f
,
t
,
id
)

76 
es
[
t›
].
f
=f,es[t›].
t
Ò,es[t›].
id
=id;

77 
es
[
t›
].
n
=
li°
[
f
],list[f]=top++;

78 
	}
}

80 
	$èrj™
(
now
,
id
)

82 
i
;

83 
d‚
[
now
]=
low
[now]=
T
++;

84 
g
[
now
]=
åì
;

85 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

87 if(
es
[
i
].
id
==id)

89 if(
g
[
es
[
i
].
t
]!=
åì
)

91 
	`èrj™
(
es
[
i
].
t
,es[i].
id
);

92 if(
low
[
now
]>low[
es
[
i
].
t
])

93 
low
[
now
]ˆow[
es
[
i
].
t
];

95 if(
low
[
now
]>
d‚
[
es
[
i
].
t
])

96 
low
[
now
]=
d‚
[
es
[
i
].
t
];

98 if(
id
>=0&&
d‚
[
now
]==
low
[now])

99 
èg
[
id
]=-1;

100 
	}
}

102 
	$maö
()

104 
n
,
m
,
i
,
j
,
k
,
Á
,
fb
,
ˇ
,
ªt
;

105 
	`sˇnf
("%d",&
ˇ
);

106 
_ˇ
=1; _ˇ<=
ˇ
; _ca++)

108 
uf
.
	`öô
();

109 
ªt
=0;

110 
åì
=0;

111 
	`mem£t
(
g
,0,(g));

112 
	`sˇnf
("%d%d",&
n
,&
m
);

113 
i
=0; i<=
n
; i++)

114 
li°
[
i
]=-1;

115 
i
=0; i<
m
; i++)

117 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
w
);

118 
e
[
i
].
f
--,e[i].
t
--;

119 
e
[
i
].
id
=i;

121 
	`s‹t
(
e
,e+
m
,
cmp
);

122 
i
=0; i<
m
; i=
j
)

124 
j
=
i
+1; j<
m
&&
e
[j].
w
==e[i].w; j++);

125 
k
=
i
; k<
j
; k++)

127 
Á
=
uf
.
	`_p
(
e
[
k
].
f
),
fb
=uf._p”[k].
t
);

128 if(
Á
==
fb
)

129 
èg
[
e
[
k
].
id
]=0;

131 
èg
[
e
[
k
].
id
]=1;

132 
li°
[
Á
]=-1,li°[
fb
]=-1;

156 
k
=
i
; k<
j
; k++)

157 
uf
.
	`£t_‰õnd
(
e
[
k
].
f
,e[k].
t
);

159 
i
=0; i<
m
; i++)

160 if(
èg
[
i
]!=0)

161 
ªt
++;

162 
	`¥ötf
("%d\n",
ªt
);

165 
	}
}

	@problems/fzu/fzu_2012_school/fzu_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 10100

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
°rög
 
	gs
[
N
];

41 
	$cmp
(
°rög
 
a
,°rög 
b
){ á<b; 
	}
}

43 
	$maö
()

45 
t
,
ˇ
,
n
;

46 
	`sˇnf
("%d",&
t
);

47 
ˇ
=1; ca<=
t
; ca++)

49 
	`sˇnf
("%d",&
n
);

50 
i
=0; i<
n
; i++)

51 
cö
>>
s
[
i
];

52 
	`s‹t
(
s
,s+
n
,
cmp
);

53 
i
=0; i<
n
; i++)

54 
cout
<<
s
[
i
];

55 
	`puts
("");

58 
	}
}

	@problems/fzu/fzu_2012_school/fzu_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	ga
,
	gb
,
	gc
;

41 
	$maö
()

43 
t
,
ªt
;

44 
	`sˇnf
("%d",&
t
);

45 
ˇ
=1; ca<=
t
; ca++)

47 
ªt
=0;

48 
cö
>>
a
>>
b
;

49 
c
=
a
+
b
;

50 if(
c
<0) c=-c;

51 ; 
c
;)

53 
ªt
+=((
c
%10)==5);

54 
c
/=10;

56 
	`¥ötf
("%d\n",
ªt
);

59 
	}
}

	@problems/fzu/fzu_2012_school/fzu_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	sedge
{ 
	mf
,
	mt
,
	mv
,
	mn
; }
	ge
[
S
];

40 
	gt›
,
	gli°
[
N
];

42 
	$ö£π
(
f
,
t
,
v
)

44 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
v
=v;

45 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

46 
	}
}

48 
	gv
[
N
],
	gªt
,
	gST
,
	g˙t
;

50 
	$dfs
(
now
,
âl
,
¥e
)

52 
v
[
now
]=1;

53 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

55 
t
=
e
[
i
].t;

56 if(!
v
[
t
])

57 
	`dfs
(
t
,
âl
+
e
[
i
].
v
,
now
);

58 if(
ST
==
t
&&t!=
¥e
)

60 if(
ªt
>
âl
+
e
[
i
].
v
)

61 
ªt
=
âl
+
e
[
i
].
v
,
˙t
=1;

62 if(
ªt
==
âl
+
e
[
i
].
v
)

63 
˙t
++;

66 
v
[
now
]=0;

67 
	}
}

69 
	$maö
()

71 
t
,
ˇ
=1,
n
,
m
;

72 
	`sˇnf
("%d",&
t
);

73 
ˇ
=1; ca<=
t
; ca++)

75 
ªt
=
öf
;

76 
˙t
=0;

77 
	`sˇnf
("%d%d",&
n
,&
m
);

78 
i
=0; i<
n
; i++)

79 
li°
[
i
]=-1;

80 
i
=0; i<
m
; i++)

82 
x
,
y
,
v
;

83 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
v
);

84 
x
--,
y
--;

85 
	`ö£π
(
x
,
y
,
v
);

86 
	`ö£π
(
y
,
x
,
v
);

88 
i
=0; i<
n
; i++)

90 
ST
=
i
;

91 
	`mem£t
(
v
,0,(v));

92 
	`dfs
(
i
,0,-1);

94 
	`¥ötf
("%d %d\n",
ªt
,
˙t
);

97 
	}
}

	@problems/fzu/fzu_2012_school/fzu_F.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 10100

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
°rög
 
	gs
;

40 
	gs⁄g
[
N
],
	gq
[N],
	gt›
;

42 
	$maö
()

44 
t
,
ˇ
,
n
,
m
,
x
,
now
;

45 
	`sˇnf
("%d",&
t
);

46 
ˇ
=1; ca<=
t
; ca++)

48 
t›
=-1;

49 
now
=1;

50 
	`mem£t
(
s⁄g
,0,(song));

51 
	`sˇnf
("%d%d",&
n
,&
m
);

52 
i
=0; i<
m
; i++)

54 
cö
>>
s
;

55 if(
s
=="PRE")

57 if(
t›
<=0)

59 
now
=1;

60 
q
[
t›
=0]=
now
;

63 
t›
--,
now
=
q
[top];

64 
	`¥ötf
("%d\n",
now
);

66 if(
s
=="NEXT")

68 if(
now
==
n
)

69 
now
=
n
;

71 
now
++;

72 if(
t›
<0||
q
[t›]!=
now
)

73 
q
[++
t›
]=
now
,
s⁄g
[now]++;

74 
	`¥ötf
("%d\n",
now
);

78 
	`sˇnf
("%d",&
x
);

79 if(
t›
<0||
q
[t›]!=
x
)

80 
q
[++
t›
]=
x
,
s⁄g
[x]++;

81 
now
=
x
;

82 
	`¥ötf
("%d\n",
x
);

87 
	}
}

	@problems/fzu/fzu_2012_school/fzu_G.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 10100

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gdp
[202][11][11][11][11],
	gm
,
	gn
,
	gp
,
	gT
;

40 
	gm©
[11][11];

42 
	sshuijög


44 
	mx
,
	my
,
	mv
,
	mt
;

45 }
	gji
[
N
];

47 
	gvÆ
[220][11][11];

49 
	gdú
[5][2]={{1,0},{-1,0},{0,1},{0,-1},{0,0}};

51 
	$öbﬂrd
(
x
,
y
)

53  0<=
x
&&x<
m
&&
y
<
n
&&0<=y&&
m©
[x][y]!='#';

54 
	}
}

56 
	$dfs
(
t
,
x
,
y
,
u
,
v
)

58 
ªt
=0;

59 if(
dp
[
t
][
x
][
y
][
u
][
v
]>=0)

60  
dp
[
t
][
x
][
y
][
u
][
v
];

61 if(
t
==
T
)

62  
dp
[
t
][
x
][
y
][
u
][
v
]=0;

63 
i
=0; i<5; i++)

65 
nx
=
x
+
dú
[
i
][0],
ny
=
y
+dir[i][1];

66 if(!
	`öbﬂrd
(
nx
,
ny
))

68 
j
=0; j<5; j++)

70 
nu
=
u
+
dú
[
j
][0],
nv
=
v
+dir[j][1];

71 if(!
	`öbﬂrd
(
nu
,
nv
))

74 
tmpv
=0;

75 
tmpv
+=
vÆ
[
t
+1][
nx
][
ny
];

76 if(!(
nx
==
nu
&&
ny
==
nv
))

77 
tmpv
+=
vÆ
[
t
+1][
nu
][
nv
];

78 
ªt
=
	`max
‘ë,
	`dfs
(
t
+1,
nx
,
ny
,
nu
,
nv
)+
tmpv
);

81  
dp
[
t
][
x
][
y
][
u
][
v
]=
ªt
;

82 
	}
}

84 
	$maö
()

86 
t
,
ˇ
;

87 
	`sˇnf
("%d",&
t
);

88 
ˇ
=1; ca<=
t
; ca++)

90 
	`mem£t
(
vÆ
,0,(val));

91 
	`mem£t
(
dp
,-1,(dp));

92 
	`sˇnf
("%d%d",&
m
,&
n
);

93 
i
=0; i<
m
; i++)

94 
	`sˇnf
("%s",
m©
[
i
]);

95 
	`sˇnf
("%d",&
p
);

96 
T
=0;

97 
i
=0; i<
p
; i++)

99 
x
,
y
,
â
,
vv
;

100 
	`sˇnf
("%d%d%d%d",&
â
,&
x
,&
y
,&
vv
);

101 
x
--,
y
--;

102 
vÆ
[
â
][
x
][
y
]+=
vv
;

103 
T
=
	`max
(T,
â
);

105 
	`¥ötf
("%d\n",
	`dfs
(0,0,0,0,0));

108 
	}
}

	@problems/google/2014_google_china_RA/a.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	g™s
[20][20]={"","","double", "triple", "quadruple", "quintuple",

9 
	gnum
[20][20]={"zero","one","two","three","four","five","six","seven","eight","nine"};

10 
	gve˘‹
<> 
	gvec
;

12 
	$go
(
s
[],
l
,
r
) {

13 
c
=0,
¥e
=-1;

14 
i
=
l
; i<
r
; i++) {

15 if(
s
[
i
]-'0'==
¥e
) {

16 
c
++;

20 if(
c
>=1&&
¥e
>=0) {

21 if(
c
==1) {

22 
	`¥ötf
(" %s",
num
[
¥e
]);

24 if(
c
==11) {

25 
j
=0; j<
c
; j++) {

26 
	`¥ötf
(" %s",
num
[
¥e
]);

30 
	`¥ötf
(" %†%s",
™s
[
c
],
num
[
¥e
]);

33 
c
=1;

34 
¥e
=
s
[
i
]-'0';

37 if(
¥e
>=0&&
c
>=1) {

38 if(
c
==1) {

39 
	`¥ötf
(" %s",
num
[
¥e
]);

41 if(
c
==11) {

42 
j
=0; j<
c
; j++) {

43 
	`¥ötf
(" %s",
num
[
¥e
]);

47 
	`¥ötf
(" %†%s",
™s
[
c
],
num
[
¥e
]);

50 
	}
}

52 
	$maö
() {

53 
T
;

54 
	`sˇnf
("%d",&
T
);

55 
ˇ
=1; ca<=
T
; ca++) {

56 
	`¥ötf
("Ca£ #%d:",
ˇ
);

57 
s
[6000],
div
[6000];

58 
	`sˇnf
("%s%s",
s
,
div
);

59 
vec
.
	`˛ór
();

60 
x
=0;

61 
i
=0; i<
	`°æí
(
div
); i++) {

62 if(
div
[
i
]=='-') {

63 
vec
.
	`push_back
(
x
);

64 
x
=0;

67 
x
*=10;

68 
x
+=
div
[
i
]-'0';

70 
vec
.
	`push_back
(
x
);

71 
l
=0,
r
;

72 
i
=0; i<
vec
.
	`size
(); i++) {

73 
r
=
l
+
vec
[
i
];

74 
	`go
(
s
,
l
,
r
);

75 
l
=
r
;

77 
	`puts
("");

80 
	}
}

	@problems/google/2014_google_china_RA/b.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<io°ªam
>

4 
	~<Æg‹ôhm
>

6 
	tULL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gve˘‹
<> 
	gbô
;

10 
ULL
 
	gΩ
,
	grq
;

12 
	$¸_bô
(
ULL
 
n
) {

13 ; 
n
;) {

14 
bô
.
	`push_back
(
n
&1);

15 
n
>>=1;

17 
	`ªvî£
(
bô
.
	`begö
(),bô.
	`íd
());

18 
	}
}

20 
	$dfs
(
id
,
ULL
 
p
,ULL 
q
) {

21 if(
id
==
bô
.
	`size
()) {

22 
Ω
=
p
,
rq
=
q
;

25 if(
bô
[
id
]==0) {

26 
	`dfs
(
id
+1,
p
,p+
q
);

29 
	`dfs
(
id
+1,
p
+
q
,q);

31 
	}
}

33 
ULL
 
	$go
(
ULL
 
p
,ULL 
q
) {

34 if(
p
==1&&
q
==1) {

37 if(
p
>
q
) {

38  1+2*
	`go
(
p
-
q
,q);

41  2*
	`go
(
p
,
q
-p);

43 
	}
}

45 
	$maö
() {

46 
T
;

47 
	`sˇnf
("%d",&
T
);

48 
ˇ
=1; ca<=
T
; ca++) {

49 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

50 
èg
;

51 
	`sˇnf
("%d",&
èg
);

52 if(
èg
==1) {

53 
ULL
 
n
;

54 
cö
>>
n
;

55 
bô
.
	`˛ór
();

56 
	`¸_bô
(
n
);

57 
	`dfs
(1,1,1);

58 
cout
<<
Ω
<<" "<<
rq
<<
ídl
;

61 
ULL
 
p
,
q
;

62 
cö
>>
p
>>
q
;

63 
cout
<<
	`go
(
p
,
q
)<<
ídl
;

67 
	}
}

	@problems/google/2014_google_china_RA/c.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

4 
	#N
 1011

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	g¨r
[
N
];

10 
	$cmp1
(
a
,
b
){ á<b; 
	}
}

11 
	$cmp2
(
a
,
b
){ á>b; 
	}
}

13 
	gve˘‹
<> 
	godd
;

14 
	gve˘‹
<> 
	geve
;

15 
	gve˘‹
<> 
	g™s
;

17 
	$maö
() {

18 
T
;

19 
	`sˇnf
("%d",&
T
);

20 
ˇ
=1; ca<=
T
; ca++) {

21 
	`¥ötf
("Ca£ #%d:",
ˇ
);

22 
odd
.
	`˛ór
();

23 
eve
.
	`˛ór
();

24 
™s
.
	`˛ór
();

25 
n
;

26 
	`sˇnf
("%d",&
n
);

27 
i
=0; i<
n
; i++) {

28 
	`sˇnf
("%d",&
¨r
[
i
]);

29 if(
	`abs
(
¨r
[
i
])&1)

30 
odd
.
	`push_back
(
¨r
[
i
]);

32 
eve
.
	`push_back
(
¨r
[
i
]);

34 
	`s‹t
(
odd
.
	`begö
(),odd.
	`íd
(),
cmp1
);

35 
	`s‹t
(
eve
.
	`begö
(),eve.
	`íd
(),
cmp2
);

36 
lo
=0,
À
=0;

37 
i
=0; i<
n
; i++) {

38 if(
	`abs
(
¨r
[
i
])&1)

39 
™s
.
	`push_back
(
odd
[
lo
++]);

41 
™s
.
	`push_back
(
eve
[
À
++]);

43 
i
=0; i<
™s
.
	`size
(); i++) {

44 
	`¥ötf
(" %d",
™s
[
i
]);

46 
	`puts
("");

49 
	}
}

	@problems/google/gcj2013/R1B/a.cpp

1 
	~<io°ªam
>

2 
	~<c°dio
>

3 
	~<Æg‹ôhm
>

4 
	~<c°rög
>

5 
	~<°rög
>

6 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
	gMAX_N
 = 100 + 10;

9 c⁄° 
	gMAX_VALUE
 = (1e6Ë+ 10, 
	gINF
 = ~0U >> 3;

11 
	ga
[
MAX_N
];

13 
	gdp
[
MAX_N
][
MAX_VALUE
];

15 
	$w‹k
() {

16 
A
, 
n
;

17 
cö
 >> 
A
 >> 
n
;

18 
i
 = 0; i < 
n
; ++i) {

19 
cö
 >> 
a
[
i
];

21 
	`s‹t
(
a
,á + 
n
);

22 
mx
 = 
a
[
n
 - 1] + 1;

23 
A
 = 
	`mö
(A, 
mx
);

24 
i
 = 0; i <
n
; ++i) {

25 
j
 = 0; j <
mx
; ++j) {

26 
dp
[
i
][
j
] = 
INF
;

29 
dp
[0][
A
] = 0;

30 
i
 = 0; i < 
n
; ++i) {

31 
j
 = 0; j <
mx
; ++j) {

32 
c
 = 
dp
[
i
][
j
];

33 i‡(
c
 =
INF
)

35 i‡(
j
 > 
a
[
i
]) {

36 
dp
[
i
 + 1][
	`mö
(
j
 + 
a
[i], 
mx
)] = min(dp[i + 1][min(j +á[i], mx)],

37 
c
);

41 
dp
[
i
 + 1][
j
] = 
	`mö
(dp[ò+ 1][j], 
c
 + 1);

43 i‡(
j
 > 1) {

44 
k
 = 
j
;

45 
k
 <
a
[
i
]) {

46 
k
 += k - 1;

47 ++
c
;

49 
k
 +
a
[
i
];

50 
k
 = 
	`mö
(k, 
mx
);

51 
dp
[
i
 + 1][
k
] = 
	`mö
(dp[ò+ 1][k], 
c
);

55 
™s
 = 
INF
;

56 
i
 = 0; i <
mx
; ++i) {

57 
™s
 = 
	`mö
◊ns, 
dp
[
n
][
i
]);

59  
™s
;

60 
	}
}

62 
	$maö
() {

63 
T
;

64 
cö
 >> 
T
;

65 
i
 = 1; i <
T
; ++i) {

66 
	`¥ötf
("Ca£ #%d: ", 
i
);

67 
cout
 << 
	`w‹k
(Ë<< 
ídl
;

69 
	}
}

	@problems/google/gcj2013/R1B/gcj_2013_R1B_A.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<m≠
>

4 
	#N
 101

	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
	gn
,
	gx
;

10 
	gw
[
N
];

11 
	$cmp
(
a
,
b
){ á<b; 
	}
}

13 
	gm≠
<
	gLL
,> 
	gdp
;

15 
	$gao
(
id
,
LL
 
nw
)

17 
LL
 
ha
=
nw
*
N
+
id
;

18 if(
dp
.
	`cou¡
(
ha
)>0)

19  
dp
[
ha
];

20 if(
id
==
n
Ë 
dp
[
ha
]=0;

22 if(
nw
>
w
[
id
])

23  
dp
[
ha
]=
	`gao
(
id
+1,
nw
+
w
[id]);

24 if(
nw
<=1)

25  
dp
[
ha
]=
n
-
id
;

26 
ªt
=
	`gao
(
id
+1,
nw
)+1,
c
=0;

27 
LL
 
√x
=
nw
;

28 ; 
√x
<=
w
[
id
]; 
c
++)

30 
√x
+=nex-1;

32 
ªt
=
	`mö
‘ë,
	`gao
(
id
+1,
√x
+
w
[id])+
c
);

33  
dp
[
ha
]=
ªt
;

34 
	}
}

36 
	$maö
()

38 
T
;

39 
	`sˇnf
("%d",&
T
);

40 
ˇ
=1; ca<=
T
; ca++)

42 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

43 
	`sˇnf
("%d%d",&
x
,&
n
);

45 
i
=0; i<
n
; i++)

47 
	`sˇnf
("%d",&
w
[
i
]);

51 
	`s‹t
(
w
,w+
n
,
cmp
);

52 
dp
.
	`˛ór
();

53 
	`¥ötf
("%d\n",
	`gao
(0,
x
));

56 
	}
}

	@problems/google/gcj2013/qualification/qua_a.cpp

1 
	~<c°dio
>

3 
	gs
[10][10];

5 
	$wö
(
x
)

7 
i
=0; i<4; i++)

9 
tc
=0,
c
=0;

10 
j
=0; j<4; j++)

12 if(
s
[
i
][
j
]==
x
)

13 
c
++;

14 if(
s
[
i
][
j
]=='T')

15 
tc
++;

17 if(
c
==4||(c==3&&
tc
==1))

20 
i
=0; i<4; i++)

22 
tc
=0,
c
=0;

23 
j
=0; j<4; j++)

25 if(
s
[
j
][
i
]==
x
)

26 
c
++;

27 if(
s
[
j
][
i
]=='T')

28 
tc
++;

30 if(
c
==4||(c==3&&
tc
==1))

33 
c
=0,
tc
=0;

34 
i
=0; i<4; i++)

36 if(
s
[
i
][i]==
x
)

37 
c
++;

38 if(
s
[
i
][i]=='T')

39 
tc
++;

41 if(
c
==4||(c==3&&
tc
==1))

43 
c
=0,
tc
=0;

44 
i
=0; i<4; i++)

46 if(
s
[
i
][3-i]==
x
)

47 
c
++;

48 if(
s
[
i
][3-i]=='T')

49 
tc
++;

51 if(
c
==4||(c==3&&
tc
==1))

54 
	}
}

56 
	$døw
()

58 
c
=0;

59 
i
=0; i<4; i++)

60 
j
=0; j<4; j++)

61 if(
s
[
i
][
j
]=='.')

62 
c
++;

63  (
c
==0);

64 
	}
}

66 
	$gao
()

68 if(
	`wö
('X'))

69 
	`puts
("X won");

70 if(
	`wö
('O'))

71 
	`puts
("O won");

72 if(
	`døw
())

73 
	`puts
("Draw");

75 
	`puts
("Game hasÇot completed");

76 
	}
}

78 
	$maö
()

80 
t
;

81 
	`sˇnf
("%d",&
t
);

82 
ˇ
=1; ca<=
t
; ca++)

84 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

85 
i
=0; i<4; i++)

86 
	`sˇnf
("%s",
s
[
i
]);

87 
	`gao
();

90 
	}
}

	@problems/google/gcj2013/qualification/qua_b.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 111

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gm©
[
N
][N],
	gèg
[N][N];

8 
	snode
{ 
	mx
,
	my
,
	mh
; }
	gno
[10011];

9 
	gm
,
	gn
,
	gt›
;

11 
	$cmp
(
node
 
a
,nodê
b
){ á.
h
<b.h; 
	}
}

13 
	$x_ˇn
(
x
,
h
)

15 
i
=1; i<=
n
; i++)

17 if(
èg
[
x
][
i
])

19 if(
m©
[
x
][
i
]>
h
)

22 
i
=1; i<=
n
; i++)

23 
èg
[
x
][
i
]=1;

25 
	}
}

27 
	$y_ˇn
(
y
,
h
)

29 
i
=1; i<=
m
; i++)

31 if(
èg
[
i
][
y
])

33 if(
m©
[
i
][
y
]>
h
)

36 
i
=1; i<=
m
; i++)

37 
èg
[
i
][
y
]=1;

39 
	}
}

41 
	$ˇn
(
x
,
y
)

43 if(
	`x_ˇn
(
x
,
m©
[x][
y
]))

45 if(
	`y_ˇn
(
y
,
m©
[
x
][y]))

48 
	}
}

50 
	$ok
()

52 
i
=0; i<
t›
; i++)

54 
x
=
no
[
i
].x,
y
=no[i].y;

55 if(
èg
[
x
][
y
])

57 if(!
	`ˇn
(
x
,
y
))

61 
	}
}

63 
	$maö
()

65 
t
;

66 
	`sˇnf
("%d",&
t
);

67 
ˇ
=1; ca<=
t
; ca++)

69 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

70 
	`sˇnf
("%d%d",&
m
,&
n
);

71 
t›
=0;

72 
i
=1; i<=
m
; i++)

73 
j
=1; j<=
n
; j++)

75 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

76 
no
[
t›
].
x
=
i
,no[t›].
y
=
j
;

77 
no
[
t›
++].
h
=
m©
[
i
][
j
];

78 
èg
[
i
][
j
]=0;

80 
	`s‹t
(
no
,no+
t›
,
cmp
);

81 if(
	`ok
())

82 
	`puts
("YES");

84 
	`puts
("NO");

87 
	}
}

	@problems/google/gcj2013/qualification/qua_c.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<ve˘‹
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	$i•
(
x
)

9 
ve˘‹
<> 
v
;

10 ; 
x
; x/=10)

11 
v
.
	`push_back
(
x
%10);

12 
n
=
v
.
	`size
();

13 
i
=0; i<
n
; i++)

14 if(
v
[
i
]!=v[
n
-i-1])

17 
	}
}

19 
	$ok
(
x
)

21 if(!
	`i•
(
x
))

23 
y
=(
	`sqπ
(1.0*
x
));

24 if(
x
!=
y
*y)  0;

25 if(!
	`i•
(
y
))

28 
	}
}

30 
	$maö
()

32 
t
;

33 
	`sˇnf
("%d",&
t
);

34 
ˇ
=1; ca<=
t
; ca++)

36 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

37 
l
,
r
;

38 
	`sˇnf
("%d%d",&
l
,&
r
);

39 
ªt
=0;

40 
i
=
l
; i<=
r
; i++)

41 if(
	`ok
(
i
))

42 
ªt
++;

43 
	`¥ötf
("%d\n",
ªt
);

46 
	}
}

	@problems/google/gcj_1A_2012/gcj2012_round_1A_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 201000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gp
[
N
],
	gµ
[N];

41 
	$maö
()

43 
a
,
b
,
t
,
ˇ
;

44 
ªt
=
öf
,
tmp
;

45 
	`sˇnf
("%d",&
t
);

46 
ˇ
=1; ca<=
t
; ca++)

48 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

49 
	`sˇnf
("%d%d",&
a
,&
b
);

50 
ªt
=
öf
;

51 
µ
[0]=1;

52 
i
=1; i<=
a
; i++)

54 
	`sˇnf
("%lf",&
p
[
i
]);

55 
µ
[
i
]=
p
[i]*pp[i-1];

57 
ªt
=
µ
[
a
]*(
b
-a+1)+(1-pp[a])*(2*(b+1)-a);

58 
ªt
=
	`mö
‘ë,1.0*(
b
+2));

59 
i
=1; i<=
a
; i++)

60 
ªt
=
	`mö
‘ë,
µ
[
a
-
i
]*(2*i+
b
-a+1)+(1-pp[a-i])*(2*i+2*b-a+2));

61 
	`¥ötf
("%.6lf\n",
ªt
);

64 
	}
}

	@problems/google/gcj_1A_2012/gcj2012_round_1A_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 10010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	s⁄e°¨


41 
	ma
,
	mb
,
	mi
;

42 }
	g⁄ëmp
;

43 
	stwo°¨


45 
	ma
,
	mb
,
	mi
;

46 
‰õnd
 
boﬁ
 
	m›î©‹
<(
two°¨
 
	ma
,two°¨ 
	mb
)

48  
	ma
.
	mb
==
b
.b?
a
.a<b.a:a.b>b.b;

50 }
	gtwŸmp
;

51 
	g¥i‹ôy_queue
<
	gtwo°¨
> 
	gtwo
;

52 
	gv⁄e
[
N
],
	gvtwo
[N],
	gsco
,
	gªt
;

53 
⁄e°¨
 
	g⁄e
[
N
];

55 
	$sﬁve_two
()

57 ; 
sco
>=
two
.
	`t›
().
b
&&!—wo.
	`em±y
()); )

59 
twŸmp
=
two
.
	`t›
();

60 
i
=
twŸmp
.i;

61 if(
v⁄e
[
i
]&&
vtwo
[i])

63 
two
.
	`p›
();

66 if(
v⁄e
[
i
])

68 
sco
+=1;

69 
ªt
++;

70 
vtwo
[
i
]=1;

71 
two
.
	`p›
();

73 if(
vtwo
[
i
])

75 
v⁄e
[
i
]=1;

76 
two
.
	`p›
();

80 
sco
+=2;

81 
ªt
++;

82 
vtwo
[
i
]=1;

83 
v⁄e
[
i
]=1;

84 
two
.
	`p›
();

87 
	}
}

89 
	$sﬁve_⁄e
(
n
)

91 
èg
=0;

92 
id
=-1,
mx
=0;

93 
i
=1; i<=
n
; i++)

95 if(
sco
<
⁄e
[
i
].
a
)

97 if(
v⁄e
[
⁄e
[
i
].i]==1||
vtwo
[one[i].i]==1)

99 if(
mx
<
⁄e
[
i
].
b
)

100 
mx
=
⁄e
[
i
].
b
,
id
=i;

102 if(
id
==-1)  0;

103 
ªt
++,
sco
++;

104 
v⁄e
[
⁄e
[
id
].
i
]=1;

106 
	}
}

108 
	$cmp
(
⁄e°¨
 
a
,⁄e°¨ 
b
)

110  
a
.a==
b
.a?a.b>b.b:a.a<b.a;

111 
	}
}

113 
	$maö
()

115 
t
,
ˇ
,
n
,
a
,
b
;

116 
	`sˇnf
("%d",&
t
);

117 
ˇ
=1; ca<=
t
; ca++)

119 
	`mem£t
(
v⁄e
,0,(vone));

120 
	`mem£t
(
vtwo
,0,(vtwo));

121 
ªt
=0;

122 
sco
=0;

123 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

124 ; !
two
.
	`em±y
(); )

125 
two
.
	`p›
();

126 
	`sˇnf
("%d",&
n
);

127 
i
=1; i<=
n
; i++)

129 
	`sˇnf
("%d%d",&
a
,&
b
);

130 
twŸmp
.
a
˜,twŸmp.
b
=b,twŸmp.
i
=i;

131 
two
.
	`push
(
twŸmp
);

132 
⁄e
[
i
].
a
˜,⁄e[i].
b
=b,one[i].i=i;

134 
	`s‹t
(
⁄e
+1,⁄e+1+
n
,
cmp
);

135 ; !
two
.
	`em±y
(); )

137 
	`sﬁve_two
();

138 if(
	`sﬁve_⁄e
(
n
)==0)

141 if(
two
.
	`em±y
())

142 
	`¥ötf
("%d\n",
ªt
);

144 
	`¥ötf
("Too Bad\n");

147 
	}
}

	@problems/google/gcj_qualification_2011/2011_qualification/A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 111

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#ïs
 1e-8

	)

21 
	#öf
 0x3fffffff

	)

22 
	#MOD
 1000000007

	)

23 
	#PB
 
push_back


	)

24 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

25 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

26 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

28 
	tLL
;

29 
usög
 
«me•a˚
 
	g°d
;

31 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

32 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

34 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

36 
	snode
{ 
	mx
; 
	mi
; }
	gno
[
N
];

37 
	gt›
,
	gOO
[
N
],
	gBB
[N],
	gŸ›
,
	gbt›
;

38 
	gs
[6];

40 
	$sig
(
x
){  x>0?1:-1; 
	}
}

42 
	$sﬁve
(&
bp
,
bo
,&
›
,
oo
)

44 
°
=
	`abs
(
bo
-
bp
)+1;

45 if(
°
>=
	`abs
(
oo
-
›
))

46 
›
=
oo
;

48 
›
=›+
	`sig
(
oo
-›)*
°
;

49 
bp
=
bo
;

50  
°
;

51 
	}
}

53 
	$maö
()

55 
t
,
n
,
m
,
ˇ
,
ªt
,
x
;

56 
	`sˇnf
("%d",&
t
);

57 
ˇ
=1; ca<=
t
; ca++)

59 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

60 
	`sˇnf
("%d",&
n
);

61 
t›
=
Ÿ›
=
bt›
=0;

62 
i
=0; i<
n
; i++)

64 
	`sˇnf
("%s%d",
s
,&
x
);

65 
no
[
t›
].
x
=
s
[0];

66 
no
[
t›
++].
i
=
x
;

67 if(
s
[0]=='O')

68 
OO
[
Ÿ›
++]=
x
;

70 
BB
[
bt›
++]=
x
;

72 
bp
=1,
›
=1,
i
,
⁄ow
=0,
bnow
=0;

73 
ªt
=0;

74 
i
=0; i<
t›
; i++)

76 if(
no
[
i
].
x
=='O')

77 
ªt
+=
	`sﬁve
(
›
,
OO
[
⁄ow
++],
bp
,
BB
[
bnow
]);

79 
ªt
+=
	`sﬁve
(
bp
,
BB
[
bnow
++],
›
,
OO
[
⁄ow
]);

81 
	`¥ötf
("%d\n",
ªt
);

84 
	}
}

	@problems/google/gcj_qualification_2012/google_2012_qualification_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gªt
[30]="yhesocvxduiglbkrzäwjpfmaq",
	gs
[300];

41 
	$maö
()

43 
t
,
ˇ
,
l
;

51 
	`sˇnf
("%d",&
t
);

52 
	`gëch¨
();

53 
ˇ
=1; ca<=
t
; ca++)

55 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

56 
	`gës
(
s
);

57 
l
=
	`°æí
(
s
);

58 
i
=0; i<
l
; i++)

60 if(
s
[
i
]==' ')

61 
	`¥ötf
(" ");

63 
	`¥ötf
("%c",
ªt
[
s
[
i
]-'a']);

65 
	`puts
("");

68 
	}
}

	@problems/google/gcj_qualification_2012/google_2012_qualification_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gp
,
	gs
;

41 
	$nŸ_sur
(
x
)

43 
mod
=
x
%3;

44 
x
/=3;

45 if(
x
>=
p
)

47 if(
mod
==0)

49 if(
mod
==1)

51 if(
x
+1>=
p
)

55 if(
x
+1>=
p
)

58 
	}
}

60 
	$sur_ok
(
x
)

62 
mod
=
x
%3;

63 
x
/=3;

64 if(
mod
==0)

66 if(
x
+1>=
p
&&x-1>=0)

70 if(
mod
==1)

72 if(
x
+2>=
p
)

75 
	}
}

77 
	$maö
()

79 
T
,
ˇ
,
n
,
ªt
,
x
;

80 
	`sˇnf
("%d",&
T
);

81 
ˇ
=1; ca<=
T
; ca++)

83 
ªt
=0;

84 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

85 
	`sˇnf
("%d%d%d",&
n
,&
s
,&
p
);

86 
i
=0; i<
n
; i++)

88 
	`sˇnf
("%d",&
x
);

89 if(
	`nŸ_sur
(
x
))

90 
ªt
++;

91 if(
	`sur_ok
(
x
)&&
s
>0)

92 
ªt
++,
s
--;

94 
	`¥ötf
("%d\n",
ªt
);

97 
	}
}

	@problems/google/gcj_qualification_2012/google_2012_qualification_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	gTEN
[20],
	gq
[20];

41 
	$öô
()

43 
TEN
[0]=1;

44 
i
=1; i<10; i++)

45 
TEN
[
i
]=TEN[i-1]*10;

46 
	}
}

48 
	$ok
(
x
,
t›
)

50 
i
=0; i<
t›
; i++)

51 if(
q
[
i
]==
x
)

54 
	}
}

56 
LL
 
	$gë_˙t
(
x
,
y
)

58 
i
,
l
,
t
,
a
,
b
,
t›
=0;

59 
LL
 
ªt
=0;

60 
t
=
x
;

61 
l
=0; 
t
; )

62 
t
/=10,
l
++;

63 
i
=1; i<
l
; i++)

65 
a
=
x
;

66 
b
=
a
%
TEN
[
i
];

67 
a
/=
TEN
[
i
];

68 
a
˜+
b
*
TEN
[
l
-
i
];

69 if(
a
<=
y
&&a>
x
)

71 if(
	`ok
(
a
,
t›
))

73 
q
[
t›
++]=
a
;

74 
ªt
++;

78  
ªt
;

79 
	}
}

81 
	$maö
()

83 
A
,
B
,
t
,
ˇ
;

84 
LL
 
ªt
;

85 
	`öô
();

86 
	`sˇnf
("%d",&
t
);

87 
ˇ
=1; ca<=
t
; ca++)

89 
ªt
=0;

90 
	`¥ötf
("C´†#%d: ",
ˇ
);

91 
	`sˇnf
("%d%d",&
A
,&
B
);

92 
i
=
A
; i<
B
; i++)

93 
ªt
+=
	`gë_˙t
(
i
,
B
);

94 
	`¥ötf
("%Œd\n",
ªt
);

97 
	}
}

	@problems/hackup/2013/HackupQuaA.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1000

	)

6 
	gs
[
N
];

7 
	g˙t
[26];

9 
usög
 
«me•a˚
 
	g°d
;

11 
	$Àâî
(
x
)

13  ('a'<=
x
&&x<='z')||('A'<=x&&x<='Z');

14 
	}
}

16 
	$gë
(
x
)

18 if(
x
>='a')

19  
x
-'a';

20  
x
-'A';

21 
	}
}

23 
	$cmp
(
a
,
b
){ á>b; 
	}
}

25 
	$maö
()

27 
n
;

28 
	`sˇnf
("%d",&
n
);

29 
	`gëch¨
();

30 
i
=0; i<
n
; i++)

32 
	`gës
(
s
);

33 
	`mem£t
(
˙t
,0,(cnt));

34 
j
=0; 
s
[j]; j++)

36 if(
	`Àâî
(
s
[
j
]))

37 
˙t
[
	`gë
(
s
[
j
])]++;

39 
	`s‹t
(
˙t
,˙t+26,
cmp
);

40 
ªt
=0;

41 
i
=0; i<26; i++)

42 
ªt
+=(26-
i
)*
˙t
[i];

43 
	`¥ötf
("Ca£ #%d: %d\n",
i
+1,
ªt
);

46 
	}
}

	@problems/hackup/2013/HackupQuaB.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1001

	)

5 
	gs
[
N
];

6 
	gdp
[101][101],
	gÀn
;

8 
	$isok
(
x
)

10 if('a'<=
x
&&x<='z')

12  
x
==':'||x==' '||x==')'||x=='(';

13 
	}
}

15 
	$dfs
(
l
,
c
)

17 if(
dp
[
l
][
c
]>=0)  dp[l][c];

18 if(
l
==
Àn
)

19  
c
==0;

20 
ªt
=0;

21 if(
s
[
l
]=='(')

23 if(
l
>0&&
s
[l-1]==':')

24 
ªt
+=
	`dfs
(
l
+1,
c
);

25 
ªt
+=
	`dfs
(
l
+1,
c
+1);

27 if(
s
[
l
]==')')

29 if(
l
>0&&
s
[l-1]==':')

30 
ªt
+=
	`dfs
(
l
+1,
c
);

31 if(
c
>0)

32 
ªt
+=
	`dfs
(
l
+1,
c
-1);

35 
ªt
+=
	`dfs
(
l
+1,
c
);

36  
dp
[
l
][
c
]=(
ªt
>0);

37 
	}
}

39 
	$check
(
s
[])

41 
i
=0; 
s
[i]; i++)

42 if(!
	`isok
(
s
[
i
]))

44 
Àn
=
	`°æí
(
s
);

45 
	`mem£t
(
dp
,-1,(dp));

46 if(
	`dfs
(0,0))

49 
	}
}

51 
	$maö
()

53 
n
;

54 
	`sˇnf
("%d",&
n
);

55 
	`gëch¨
();

56 
i
=1; i<=
n
; i++)

58 
	`gës
(
s
);

59 
	`¥ötf
("Ca£ #%d: ",
i
);

60 if(
	`check
(
s
))

61 
	`puts
("YES");

63 
	`puts
("NO");

66 
	}
}

	@problems/hackup/2013/HackupQuaC.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<£t
>

4 
	#N
 100011

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	ga
,
	gb
,
	gc
,
	gr
;

9 
	gèg
[
N
];

10 
	gd©
[
N
];

11 
	g£t
<> 
	g°
;

13 
	$maö
()

15 
t
,
n
,
k
;

16 
	`sˇnf
("%d",&
t
);

17 
i
=1; i<=
t
; i++)

19 
	`mem£t
(
èg
,0,(tag));

20 
°
.
	`˛ór
();

21 
	`sˇnf
("%d%d%d%d%d%d",&
n
,&
k
,&
a
,&
b
,&
c
,&
r
);

22 
j
=0; j<
k
+10; j++)

23 
°
.
	`ö£π
(
j
);

24 
d©
[0]=
a
;

25 
j
=1; j<
k
; j++)

26 
d©
[
j
]=(1LL*
b
*d©[j-1]+
c
)%
r
;

27 
j
=0; j<
k
; j++)

29 if(
d©
[
j
]<
N
)

30 
èg
[
d©
[
j
]]++;

31 if(
°
.
	`cou¡
(
d©
[
j
])>0)

32 
°
.
	`îa£
(
d©
[
j
]);

34 
j
=
k
; j<4*k&&j<
n
; j++)

36 
now
=*
°
.
	`begö
(),
id
=
j
%
N
,
pid
=((j%N-
k
)%N+N)%N;

37 if(
d©
[
pid
]<
N
)

39 
èg
[
d©
[
pid
]]--;

40 if(
èg
[
d©
[
pid
]]==0)

41 
°
.
	`ö£π
(
d©
[
pid
]);

43 
d©
[
id
]=
now
;

44 
èg
[
now
]++;

45 if(
°
.
	`cou¡
(
now
)>0)

46 
°
.
	`îa£
(
now
);

48 
	`¥ötf
("Ca£ #%d: %d\n",
i
,
d©
[]);

51 
	}
}

	@problems/hackup/2013/HackupR1A.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	#N
 11111

	)

5 
	#MOD
 1000000007

	)

7 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

10 
	gd©
[
N
];

11 
	$cmp
(
a
,
b
){ á<b; 
	}
}

13 
LL
 
	gjõ
[
N
];

15 
LL
 
	$powî
(
LL
 
a
,LL 
b
)

17 
LL
 
ªt
=1;

18 ; 
b
; b>>=1)

20 if(
b
&1)

21 
ªt
Ùë*
a
%
MOD
;

22 
a
˜*a%
MOD
;

24  
ªt
;

25 
	}
}

27 
LL
 
	$ˇl
(
a
,
b
)

29  
jõ
[
a
]*
	`powî
(jõ[
b
]*jõ[a-b]%
MOD
,MOD-2)%MOD;

30 
	}
}

32 
	$öô
()

34 
jõ
[0]=1;

35 
i
=1; i<
N
; i++)

36 
jõ
[
i
]=jõ[i-1]*i%
MOD
;

37 
	}
}

39 
	$maö
()

41 
n
,
k
,
T
;

42 
	`öô
();

43 
	`sˇnf
("%d",&
T
);

44 
ˇ
=1; ca<=
T
; ca++)

46 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

47 
	`sˇnf
("%d%d",&
n
,&
k
);

48 
i
=0; i<
n
; i++)

49 
	`sˇnf
("%d",&
d©
[
i
]);

50 
	`s‹t
(
d©
,d©+
n
,
cmp
);

51 
LL
 
ªt
=0;

52 
i
=
k
-1; i<
n
; i++)

54 
ªt
=‘ë+1LL*
d©
[
i
]*
	`ˇl
(i,
k
-1)%
MOD
)%MOD;

56 
cout
<<
ªt
<<
ídl
;

59 
	}
}

	@problems/hackup/2013/HackupR1B.cpp

1 
	~<c°dio
>

2 
	~<°rög
>

3 
	~<ve˘‹
>

4 
	~<Æg‹ôhm
>

5 
	~<c°rög
>

6 
	~<io°ªam
>

7 
	#N
 111

	)

9 
usög
 
«me•a˚
 
	g°d
;

11 
	gs1
[
N
],
	gs2
[N],
	gtmp
[N];

12 
	gÀn
,
	gl
,
	gm
,
	gy
[
N
],
	gm©ch
[N],
	gm©
[N];

14 
	snode
{ 
°rög
 
	ms
; 
	mx
;

15 
node
(
ss
[],
xx
)

17 
	ms
.
˛ór
();

18 
	mi
=0;

19 ; 
	mss
[
i
]; 
	mi
++)

20 
	ms
[
i
]=
ss
[i];

21 
	ms
[
i
]=0;

22 
	mx
=
xx
;

25 
	gve˘‹
<
	gnode
> 
	gvec
[
N
];

27 
	$cmp
(
node
 
a
,nodê
b
){ á.
s
<b.s; 
	}
}

29 
	$check
(
u
,
v
)

31 
i
=0; i<
l
; i++)

33 if(
s1
[
u
+
i
]!='?'&&
s2
[
v
+i]!='?')

35 if(
s1
[
u
+
i
]!=
s2
[
v
+i])

39 
	`mem£t
(
tmp
,0,(tmp));

40 
i
=0; i<
l
; i++)

42 if(
s1
[
u
+
i
]=='?'&&
s2
[
v
+i]=='?')

43 
tmp
[
i
]='a';

44 if(
s1
[
u
+
i
]=='?')

45 
tmp
[
i
]=
s2
[
v
+i];

46 if(
s2
[
v
+
i
]=='?')

47 
tmp
[
i
]=
s1
[
u
+i];

49 
tmp
[
i
]=
s1
[
u
+i];

52 
	}
}

54 
	$föd
(
now
)

56 
i
=0; i<
vec
[
now
].
	`size
(); i++)

58 
to
=
vec
[
now
][
i
].
x
;

59 if(!
y
[
to
])

61 
y
[
to
]=1;

62 if(
m©ch
[
to
]<0||
	`föd
(match[to]))

64 
m©ch
[
to
]=
now
;

65 
m©
[
now
]=
to
;

71 
	}
}

73 
	$gao
()

75 
i
=0; i<
m
; i++)

76 
vec
[
i
].
	`˛ór
();

77 
i
=0; i<
m
; i++)

79 
j
=0; j<
m
; j++)

81 if(
	`check
(
i
*
l
,
j
*l))

83 
vec
[
i
].
	`push_back
(
	`node
(
tmp
,
j
));

87 
i
=0; i<
m
; i++)

88 
	`s‹t
(
vec
[
i
].
	`begö
(),vec[i].
	`íd
(),
cmp
);

89 
	`mem£t
(
m©ch
,-1,(match));

90 
ªt
=0;

91 
i
=
m
-1; i>=0; i--)

93 
	`mem£t
(
y
,0,(y));

94 if(
	`föd
(
i
))

95 
ªt
++;

97 if(
ªt
==
m
)

99 
°rög
 
™s
=
	`°rög
("");

100 
i
=0; i<
m
; i++)

102 
	`check
(
i
*
l
,
m©
[i]*l);

103 
™s
+=
	`°rög
(
tmp
);

105 
cout
<<
™s
<<
ídl
;

108 
	`puts
("IMPOSSIBLE");

109 
	}
}

111 
	$maö
()

113 
T
;

114 
	`sˇnf
("%d",&
T
);

115 
ˇ
=1; ca<=
T
; ca++)

117 
	`sˇnf
("%d%s%s",&
m
,
s1
,
s2
);

118 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

119 
Àn
=
	`°æí
(
s1
);

120 
l
=
Àn
/
m
;

121 
	`gao
();

124 
	}
}

	@problems/hackup/2013/HackupR1C.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<ve˘‹
>

4 
	#N
 40100

	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
	gve˘‹
<> 
	gvec
[
N
];

11 
	snode
{ 
	mc
,
	mlc
,
	mrc
,
	ml
,
	mr
,
	mx
;

12 
gm
(){  (
	ml
+
	mr
)>>1; }

13 
Àn
(){  
	mr
-
	ml
+1; }

14 }
	gno
[
N
<<2];

16 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

17 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

18 
	gp
,
	gq
;

20 
	$ˇl
(
l
)

22 if(
l
>=
q
)

23  
l
-
q
+1;

25 
	}
}

27 
	$gë
(
id
)

29 
ªt
=
no
[
id
].
c
;

30 
ªt
+=
	`ˇl
(
no
[
id
].
lc
);

31 
ªt
+=
	`ˇl
(
no
[
id
].
rc
);

32 if(
no
[
id
].
lc
=Úo[id].
	`Àn
())

33 
ªt
-=
no
[
id
].
lc
-
q
+1;

34  
ªt
;

35 
	}
}

37 
	$buûd
(
id
,
l
,
r
)

39 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
lc
Úo[id].
rc
Úo[id].
	`Àn
(),no[id].
x
=0;

40 
no
[
id
].
c
=0;

41 if(
l
==
r
) ;

42 
	`buûd
(
	`L
(
id
),
l
,
no
[id].
	`gm
());

43 
	`buûd
(
	`R
(
id
),
no
[id].
	`gm
()+1,
r
);

44 
	}
}

46 
	$up
(
id
)

48 
no
[
id
].
c
Úo[
	`L
(id)].c+no[
	`R
(id)].c;

49 if(
no
[
	`L
(
id
)].
lc
=Úo[L(id)].
	`Àn
())

50 
no
[
id
].
lc
Úo[
	`L
(id)].lc+no[
	`R
(id)].lc;

52 
no
[
id
].
lc
Úo[
	`L
(id)].lc;

53 if(
no
[
	`R
(
id
)].
rc
=Úo[R(id)].
	`Àn
())

54 
no
[
id
].
rc
Úo[
	`R
(id)].rc+no[
	`L
(id)].rc;

56 
no
[
id
].
rc
Úo[
	`R
(id)].rc;

57 if(
no
[
	`L
(
id
)].
lc
=Úo[L(id)].
	`Àn
()||no[
	`R
(id)].
rc
==no[R(id)].len())

59 
no
[
id
].
c
+=
	`ˇl
“o[
	`L
(id)].
rc
+no[
	`R
(id)].
lc
);

60 
	}
}

62 
	$upd©e
(
id
,
po
,
x
)

64 
l
=
no
[
id
].l,
r
Úo[id].r,
m
Úo[id].
	`gm
();

65 if(
l
==
r
)

67 
no
[
id
].
x
+=x;

68 
no
[
id
].
c
=0;

69 if(
no
[
id
].
x
==0)

70 
no
[
id
].
lc
Úo[id].
rc
=1;

72 
no
[
id
].
lc
Úo[id].
rc
=0;

75 if(
po
<=
m
)

76 
	`upd©e
(
	`L
(
id
),
po
,
x
);

78 
	`upd©e
(
	`R
(
id
),
po
,
x
);

79 
	`up
(
id
);

80 
	}
}

82 
	$maö
()

84 
T
;

85 
	`sˇnf
("%d",&
T
);

86 
ˇ
=1; ca<=
T
; ca++)

88 
i
=0; i<
N
; i++)

89 
vec
[
i
].
	`˛ór
();

90 
w
,
h
,
n
,
x
,
y
,
a
,
b
,
c
,
d
;

91 
LL
 
ªt
=0;

92 
	`sˇnf
("%d%d%d%d%d%d%d%d%d%d%d",&
w
,&
h
,&
p
,&
q
,&
n
,&
x
,&
y
,&
a
,&
b
,&
c
,&
d
);

93 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

94 
vec
[
x
+1].
	`push_back
(
y
+1);

95 
i
=1; i<
n
; i++)

97 
px
=
x
,
py
=
y
;

98 
x
=(
a
*
px
+
b
*
py
+1)%
w
;

99 
y
=(
c
*
px
+
d
*
py
+1)%
h
;

100 
vec
[
x
+1].
	`push_back
(
y
+1);

102 
	`buûd
(1,1,
h
);

103 
i
=1; i<=
p
; i++)

105 
j
=0; j<
vec
[
i
].
	`size
(); j++)

106 
	`upd©e
(1,
vec
[
i
][
j
],1);

108 
ªt
+=
	`gë
(1);

109 
i
=
p
+1; i<=
w
; i++)

111 
j
=0; j<
vec
[
i
-
p
].
	`size
(); j++)

112 
	`upd©e
(1,
vec
[
i
-
p
][
j
],-1);

113 
j
=0; j<
vec
[
i
].
	`size
(); j++)

114 
	`upd©e
(1,
vec
[
i
][
j
],1);

115 
ªt
+=
	`gë
(1);

117 
cout
<<
ªt
<<
ídl
;

120 
	}
}

	@problems/hackup/2013_facebook_hack_cup/qua_round/a.cpp

1 
	~<c°dio
>

3 
	gn
;

5 
	gs
[30][30];

7 
	$gao
(
x
,
y
) {

8 
ux
=
n
,
uy
=n;

9 
i
=
x
; i<
n
; i++)

10 if(
s
[
i
][
y
]!='#') {

11 
ux
=
i
;

14 
i
=
y
; i<
n
; i++) {

15 if(
s
[
x
][
i
]!='#') {

16 
uy
=
i
;

20 if(
ux
-
x
!=
uy
-
y
)

22 
i
=
x
; i<
ux
; i++)

23 
j
=
y
; j<
uy
; j++) {

24 if(
s
[
i
][
j
]!='#')

26 
s
[
i
][
j
]='.';

29 
	}
}

31 
	$ok
() {

32 
èg
=1,
exi
=0;

33 
i
=0; i<
n
&&
èg
; i++) {

34 
j
=0; j<
n
&&
èg
; j++) {

35 if(
s
[
i
][
j
]=='#') {

36 if(
	`gao
(
i
,
j
))

37 
èg
=0,
exi
=1;

43 if(
exi
==0)  0;

44 
i
=0; i<
n
; i++) {

45 
j
=0; j<
n
; j++) {

46 if(
s
[
i
][
j
]=='#')

51 
	}
}

53 
	$maö
() {

54 
T
;

55 
	`sˇnf
("%d",&
T
);

56 
ˇ
=1; ca<=
T
; ca++) {

57 
	`sˇnf
("%d",&
n
);

58 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

59 
i
=0; i<
n
; i++)

60 
	`sˇnf
("%s",
s
[
i
]);

61 if(
	`ok
())

62 
	`puts
("YES");

64 
	`puts
("NO");

67 
	}
}

	@problems/hackup/2013_facebook_hack_cup/qua_round/b.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<°rög
>

4 
	~<io°ªam
>

5 
	~<ve˘‹
>

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
 {

10 
°rög
 
	m«me
;

11 
	mh
,
	mp
,
	m⁄
,
	m⁄t
,
	mπ
;

12 
node
(){}

13 
node
(
°rög
 
«me
,
p
,
h
):name(name),p(p),h(h) {

14 
	m⁄
=
⁄t
=
π
=0;

18 
	gn
,
	gm
,
	gp
;

20 
	gve˘‹
<
	gnode
> 
	gvec
[2];

21 
	gve˘‹
<
	gnode
> 
	gtv
;

22 
	gve˘‹
<
	g°rög
> 
	g™s
;

24 
	$cmp
(
node
 
a
,nodê
b
) {

25  
a
.
p
==
b
.p?a.
h
>b.h:a.p>b.p;

26 
	}
}

28 
	$cmp1
(
node
 
a
,nodê
b
) {

29 if(
a
.
⁄
!=
b
.on)

30  
a
.
⁄
>
b
.on;

31  
a
.
⁄t
==
b
.⁄t?a.
π
<b.rt:a.ont<b.ont;

32 
	}
}

34 
	$go
(
id
) {

35 
i
=0; i<
p
; i++) {

36 
vec
[
id
][
i
].
⁄
=1;

37 
vec
[
id
][
i
].
⁄t
=1;

39 
i
=0; i<
m
; i++) {

40 
	`s‹t
(
vec
[
id
].
	`begö
(),vec[id].
	`íd
(),
cmp1
);

50 if(
vec
[
id
].
	`size
()>
p
) {

51 
vec
[
id
][
p
-1].
⁄
=0;

52 
vec
[
id
][
p
].
⁄
=1;

53 
vec
[
id
][
p
].
⁄t
++;

56 
vec
[
id
][
p
-1].
⁄t
++;

57 
j
=0; j<
p
-1; j++)

58 
vec
[
id
][
j
].
⁄t
++;

60 
	`s‹t
(
vec
[
id
].
	`begö
(),vec[id].
	`íd
(),
cmp1
);

61 
	}
}

63 
	$maö
() {

64 
T
;

65 
	`sˇnf
("%d",&
T
);

66 
ˇ
=1; ca<=
T
; ca++) {

67 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

68 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
p
);

69 
tv
.
	`˛ór
();

70 
i
=0; i<2; i++)

71 
vec
[
i
].
	`˛ór
();

72 
i
=0; i<
n
; i++) {

73 
°rög
 
s
;

74 
x
,
y
;

75 
cö
>>
s
>>
x
>>
y
;

76 
tv
.
	`push_back
(
	`node
(
s
,
x
,
y
));

78 
	`s‹t
(
tv
.
	`begö
(),tv.
	`íd
(),
cmp
);

79 
i
=0; i<
n
; i++)

80 
vec
[
i
&1].
	`push_back
(
tv
[i]);

81 
i
=0; i<2; i++)

82 
j
=0; j<
vec
[
i
].
	`size
(); j++)

83 
vec
[
i
][
j
].
π
=j;

84 
i
=0; i<2; i++)

85 
	`go
(
i
);

86 
™s
.
	`˛ór
();

87 
i
=0; i<
p
; i++) {

88 
™s
.
	`push_back
(
vec
[0][
i
].
«me
);

89 
™s
.
	`push_back
(
vec
[1][
i
].
«me
);

91 
	`s‹t
(
™s
.
	`begö
(),™s.
	`íd
());

92 
i
=0; i<
™s
.
	`size
(); i++) {

93 if(
i
>0)

94 
	`¥ötf
(" ");

95 
cout
<<
™s
[
i
];

97 
	`puts
("");

100 
	}
}

	@problems/hackup/2013_facebook_hack_cup/qua_round/c.wa.cpp

1 
	~<c°dio
>

3 c⁄° 
	gN
 = 110;

5 
	gk
;

6 
	gps
,
	g¥
,
	gpi
,
	gpu
,
	gpw
,
	gpd
,
	g∂
;

7 
	gdp
[
N
][N];

9 
	$dfs
(
x
,
y
) {

10 if(
dp
[
x
][
y
]>=0)

11  
dp
[
x
][
y
];

12 if(
x
>=
k
) {

13  
dp
[
x
][
y
]=1;

15 if(
y
>=
k
) {

16  
dp
[
x
][
y
]=0;

18 
ªt
=0;

19 
sun
=
pi
+
x
*
pu
*
pw
-
y
*
pd
*
∂
;

20 if(
sun
>1) sun=1;

21 if(
sun
<0) sun=0;

22 
ªt
Ùë+
	`dfs
(
x
+1,
y
)*(
sun
*
ps
+(1-sun)*
¥
);

23 
ªt
Ùë+
	`dfs
(
x
,
y
+1)*(1-(
sun
*
ps
+(1-sun)*
¥
));

24  
dp
[
x
][
y
]=
ªt
;

25 
	}
}

28 
	$maö
() {

29 
T
;

30 
	`sˇnf
("%d",&
T
);

31 
ˇ
=1; ca<=
T
; ca++) {

32 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

33 
	`sˇnf
("%d",&
k
);

34 
	`sˇnf
("%lf%lf%lf%lf%lf%lf%lf",&
ps
,&
¥
,&
pi
,&
pu
,&
pw
,&
pd
,&
∂
);

35 
i
=0; i<=
k
; i++)

36 
j
=0; j<=
k
; j++)

37 
dp
[
i
][
j
]=-1;

38 
	`¥ötf
("%.6lf\n",
	`dfs
(0,0));

41 
	}
}

	@problems/hdoj/4379.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	tLL
;

4 
	gn
;

5 
LL
 
	ga
,
	gb
,
	gl
,
	gmod
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
	$sﬁve
()

10 
LL
 
now
=
b
,
mx1
=0,
mx2
=0,
™t
;

11 
ªt
=0;

12 
i
=0; i<
n
; i++)

14 
now
=(
a
+now)%
mod
;

15 if(
now
<=
l
)

17 
mx1
=
	`max
(mx1,
now
);

18 
ªt
++;

21 
™t
=2*
l
-
mx1
;

22 
now
=
b
;

23 
i
=0; i<
n
; i++)

25 
now
=(
a
+now)%
mod
;

26 if(
now
<=
™t
)

27 
mx2
=
	`max
(mx2,
now
);

29 if(
mx2
>
l
)

30  
ªt
+1;

31  
ªt
;

32 
	}
}

34 
	$maö
()

36 
Ø
,
bb
,
Œ
,
mm
;

37 
	`sˇnf
("%d%d%d%d%d",&
n
,&
Œ
,&
Ø
,&
bb
,&
mm
)!=
EOF
)

39 
a
=
Ø
<<1,
b
=
bb
<<1,
mod
=
mm
<<1,
l
=
Œ
;

40 if(
mod
-1<=
l
)

41 
	`¥ötf
("%d\n",
n
);

44 
	`¥ötf
("%d\n",
	`sﬁve
());

48 
	}
}

	@problems/hdoj/hd_4365.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<io°ªam
>

4 
	~<£t
>

5 
	#N
 10001

	)

6 
	#MOD
 100000007

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	g£t
<
	g∑ú
<,> > 
	g°
;

11 
LL
 
	g˙t
[
N
];

13 
	$öô
()

15 
˙t
[2]=1,cnt[1]=1;

16 
˙t
[0]=0;

17 
i
=3; i<
N
; i++)

18 
˙t
[
i
]=cnt[i-2]+(i+1)/2;

19 
	}
}

21 
	$ok
(
x
,
y
,
n
)

23 
t
,
nx
=
x
,
ny
=
n
-
y
+1;

24 
i
=0; i<4; i++)

26 if(
°
.
	`cou¡
(
	`make_∑ú
(
x
,
y
))>0)

28 
t
=
x
,x=
y
,y=
n
-t+1;

30 
i
=0; i<4; i++)

32 if(
°
.
	`cou¡
(
	`make_∑ú
(
nx
,
ny
))>0)

34 
t
=
nx
,nx=
ny
,ny=
n
-t+1;

37 
	}
}

39 
LL
 
	$sﬁve
(
LL
 
b
,LL 
a
)

41 
LL
 
ªt
=1;

42 ; 
b
;)

44 if(
b
&1)

45 
ªt
=‘ë*
a
)%
MOD
;

46 
a
=◊*a)%
MOD
;

47 
b
>>=1;

49  
ªt
;

50 
	}
}

52 
	$maö
()

54 
n
,
m
,
k
,
x
,
y
;

55 
	`öô
();

56 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)!=
EOF
)

58 
°
.
	`˛ór
();

59 
i
=0; i<
m
; i++)

61 
	`sˇnf
("%d%d",&
x
,&
y
);

62 
x
++,
y
++;

63 if(
	`ok
(
x
,
y
,
n
))

66 
°
.
	`ö£π
(
	`make_∑ú
(
x
,
y
));

68 
cout
<<
	`sﬁve
(
˙t
[
n
]-
°
.
	`size
(),(
LL
)
k
)<<
ídl
;

71 
	}
}

	@problems/hdoj/hdoj_3722.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x7ffffff

	)

5 
	#N
 1111

	)

6 
	#S
 1000100

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

12 
	g¶ack
[
N
],
	gvÆx
[N],
	gvÆy
[N],
	gm©
[N][N],
	gm2y
[N],
	gvx
[N],
	gvy
[N],
	gli°
[N],
	gt›
;

14 
	$ö£π
(
f
,
t
)

16 
e
[
t›
].
f
=f,e[t›].
t
=t;

17 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

18 
	}
}

20 
	$föd_∑th
(
now
)

22 
t
,
i
,
v
;

23 
vx
[
now
]=1;

24 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

26 
t
=
e
[
i
].t;

27 
v
=
vÆx
[
now
]+
vÆy
[
t
]-
m©
[now][t];

28 if(!
vy
[
t
]&&
v
==0)

30 
vy
[
t
]=1;

31 if(
m2y
[
t
]==-1||
	`föd_∑th
(m2y[t]))

33 
m2y
[
t
]=
now
;

37 if(
¶ack
[
t
]>
v
)

38 
¶ack
[
t
]=
v
;

41 
	}
}

43 
	$km_m©ch
(
n
)

45 
i
,
j
,
k
,
ªt
=0,
d
;

46 
i
=0; i<
n
; i++)

48 
m2y
[
i
]=-1;

49 
vÆx
[
i
]=-
öf
,
vÆy
[i]=0;

50 
j
=0; j<
n
; j++)

51 
vÆx
[
i
]=
	`max
(vÆx[i],
m©
[i][
j
]);

53 
i
=0; i<
n
; i++)

55 
	`mem£t
(
vx
,0,(vx));

56 
	`mem£t
(
vy
,0,(vy));

57 
k
=0; k<
n
; k++)

58 
¶ack
[
k
]=
öf
;

59 ; !
	`föd_∑th
(
i
); )

61 
d
=
öf
;

62 
k
=0; k<
n
; k++)

63 if(!
vy
[
k
]&&
¶ack
[k]<
d
)

64 
d
=
¶ack
[
k
];

65 
k
=0; k<
n
; k++)

67 if(
vx
[
k
])

68 
vÆx
[
k
]-=
d
,
vx
[k]=0;

69 if(
vy
[
k
])

70 
vÆy
[
k
]+=
d
,
vy
[k]=0;

74 
i
=0; i<
n
; i++)

75 
ªt
+=
vÆx
[
i
]+
vÆy
[i];

76  
ªt
;

77 
	}
}

79 
	gs
[
N
][N];

80 
	gl
[
N
];

82 
	$maö
()

84 
n
,
u
,
v
,
ªt
;

85 
	`sˇnf
("%d",&
n
)!=
EOF
)

87 
	`mem£t
(
m©
,0,(mat));

88 
t›
=0;

89 
i
=0; i<
n
; i++)

90 
li°
[
i
]=-1;

91 
i
=0; i<
n
; i++)

93 
	`sˇnf
("%s",
s
[
i
]);

94 
l
[
i
]=
	`°æí
(
s
[i]);

96 
i
=0; i<
n
; i++)

97 
j
=0; j<
n
; j++)

99 
	`ö£π
(
i
,
j
);

100 if(
i
==
j
) ;

101 
tmp
=0;

102 
u
=
l
[
i
]-1,
v
=0; u>=0&&v<l[
j
]; u--,v++)

104 if(
s
[
i
][
u
]!=s[
j
][
v
])

106 
tmp
++;

108 
m©
[
i
][
j
]=
tmp
;

110 
ªt
=
	`km_m©ch
(
n
);

111 
	`¥ötf
("%d\n",
ªt
);

114 
	}
}

	@problems/hdoj/hdoj_3831_DICS_dp.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#öf
 10000000

	)

18 
	#N
 510

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

22 
	#X
 53

	)

24 
	gdp
[
N
][N][
X
];

26 
	tLL
;

27 
usög
 
«me•a˚
 
	g°d
;

29 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

30 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

31 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

32 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

34 
	gs
[
N
],
	gt
[N];

35 
	gls
,
	g…
;

37 
	$gë_vÆ
(
x
)

39 if(
x
>='a')

40  
x
-'a'+26;

41  
x
-'A';

42 
	}
}

44 
	$gë_ch¨
(
x
)

46 if(
x
<26)

47  
x
+'A';

48  
x
-26+'a';

49 
	}
}

51 
	$dfs
(
i
,
j
,
èg
)

53 
ªt
=
öf
;

54 
x
;

55 if(
dp
[
i
][
j
][
èg
]>=0)  dp[i][j][tag];

56 if(
j
==
…
)

57  
dp
[
i
][
j
][
èg
]=
ls
-i;

58 if(
i
==
ls
)

59  
dp
[
i
][
j
][
èg
]=
…
-j;

60 if(
èg
==52)

61 
x
=
s
[
i
];

63 
x
=
	`gë_ch¨
(
èg
);

64 if(
x
==
t
[
j
])

65 
ªt
=
	`mö
‘ë,
	`dfs
(
i
+1,
j
+1,
èg
));

66 
ªt
=
	`mö
‘ë,
	`dfs
(
i
,
j
+1,
èg
)+1);

67 
ªt
=
	`mö
‘ë,
	`dfs
(
i
+1,
j
,
èg
)+1);

68 
ªt
=
	`mö
‘ë,
	`dfs
(
i
+1,
j
+1,
èg
)+1);

69 if(
x
!=
t
[
j
])

70 
ªt
=
	`mö
‘ë,
	`dfs
(
i
+1,
j
+1,
	`gë_vÆ
(
t
[j]))+1);

72  
dp
[
i
][
j
][
èg
]=
ªt
;

73 
	}
}

75 
	$maö
()

77 
ªt
;

78 
	`sˇnf
("%s",
s
)!=
EOF
)

80 if(
s
[0]=='#')

82 
	`sˇnf
("%s",
t
);

83 
	`mem£t
(
dp
,-1,(dp));

84 
ls
=
	`°æí
(
s
);

85 
…
=
	`°æí
(
t
);

86 
ªt
=
	`dfs
(0,0,52);

87 
	`¥ötf
("%d\n",
ªt
);

90 
	}
}

	@problems/hdoj/hdoj_3832_Earth_hour.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#öf
 100000000

	)

18 
	#ïs
 1e-8

	)

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#MOD
 1000000007

	)

24 
	tLL
;

25 
usög
 
«me•a˚
 
	g°d
;

27 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

28 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

29 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

30 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

32 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	ml
; }
	ge
[
S
];

33 
	scú˛e
{ 
	mx
,
	my
,
	mr
; }
	gc
[
N
];

34 
	shóp_t
{ 
	mv
,
	ml
;

35 
‰õnd
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
)

37  
	ma
.
	ml
>
	mb
.l;

39 }
	gh_t
;

40 
	gt›
,
	gli°
[
N
],
	gmö_l
[N],
	gv
[N];

42 
	$ö£π
(
f
,
t
,
l
)

44 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

45 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

46 
	}
}

48 
	g¥i‹ôy_queue
<
	ghóp_t
> 
	gq
;

50 
	$dijk°ø
(
n
,
s
)

52 
i
;

53 ; !
q
.
	`em±y
(); q.
	`p›
());

54 
i
=0; i<
n
; i++)

55 
v
[
i
]=0,
mö_l
[i]=
öf
;

56 
mö_l
[
h_t
.
v
=
s
]=h_t.
l
=0;

57 
q
.
	`push
(
h_t
);

58 ; !
q
.
	`em±y
();)

60 
h_t
=
q
.
	`t›
();

61 
q
.
	`p›
();

62 if(!
v
[
h_t
.v])

63 
v
[
h_t
.v]=1,
i
=
li°
[h_t.v]; i!=-1; i=
e
[i].
n
)

64 if(!
v
[
e
[
i
].
t
]&&
mö_l
[e[i].
f
]+e[i].
l
<min_l[e[i].t])

65 
mö_l
[
h_t
.
v
=
e
[
i
].
t
]=h_t.
l
=mö_l[e[i].
f
]+e[i].l,
q
.
	`push
(h_t);

67 
	}
}

69 
	$Àn
(
i
,
j
)

71  
	`sqπ
((
c
[
i
].
x
-c[
j
].x)*(c[i].x-c[j].x)+(c[i].
y
-c[j].y)*(c[i].y-c[j].y));

72 
	}
}

74 
	$c⁄√˘
(
i
,
j
)

76  
	`Àn
(
i
,
j
)<=
c
[i].
r
+c[j].r;

77 
	}
}

79 
	$maö
()

81 
t
,
ªt
,
n
;

82 
	`sˇnf
("%d",&
t
);

83 ;
t
--;)

85 
	`sˇnf
("%d",&
n
);

86 
t›
=0;

87 
i
=0; i<=
n
; i++)

88 
li°
[
i
]=-1;

89 
i
=0; i<
n
; i++)

90 
	`sˇnf
("%lf%lf%lf",&
c
[
i
].
x
,&c[i].
y
,&c[i].
r
);

91 
i
=0; i<
n
; i++)

92 
j
=0; j<
i
; j++)

93 if(
	`c⁄√˘
(
i
,
j
))

95 
	`ö£π
(
i
,
j
,1);

96 
	`ö£π
(
j
,
i
,1);

98 
ªt
=
öf
;

99 
i
=0; i<
n
; i++)

101 
	`dijk°ø
(
n
,
i
);

102 
ªt
=
	`mö
‘ë,
mö_l
[0]+min_l[1]+min_l[2]);

104 if(
ªt
>=
öf
)

105 
	`puts
("-1");

107 
	`¥ötf
("%d\n",
n
-
ªt
-1);

110 
	}
}

	@problems/hdoj/hdoj_3833_YYs_new_problem.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 10100

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gn
;

31 
	gid
[
N
],
	gd©
[N];

33 
	$is_ok
()

35 
i
,
v
;

36 
i
=1; i<=
n
; i++)

37 
v
=1; 
i
-v>0&&i+v<=
n
; v++)

39 if(
id
[
i
+
v
]>id[i])

41 if(
id
[
i
]>id[i-
v
])

46 if(
id
[
i
]<id[i-
v
])

51 
	}
}

53 
	$maö
()

55 
t
;

56 
	`sˇnf
("%d",&
t
);

57 ;
t
--;)

59 
	`sˇnf
("%d",&
n
);

60 
i
=1; i<=
n
; i++)

62 
	`sˇnf
("%d",&
d©
[
i
]);

63 
id
[
d©
[
i
]]=i;

65 if(
	`is_ok
())

66 
	`puts
("Y");

68 
	`puts
("N");

72 
	}
}

	@problems/hdoj/hdoj_3859.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	$dfs
(
LL
 
a
,LL 
b
)

41 
LL
 
x
=
a
&1,
y
=
b
&1;

42 if(
x
==1&&
y
==0)

44 if(
a
%
b
==0)

45  
a
/
b
;

46 if(
a
/2+
x
>
b
)

48 if((
b
+
a
%b)&1)

49  
a
/
b
+2;

51  
a
/
b
+1;

55 if(
x
==0&&
y
==0)

57 if(
x
==1&&
y
==1)

60  
	`dfs
(
a
,a-
b
);

62 
	}
}

64 
	$maö
()

66 
LL
 
a
,
b
,
ªt
;

67 
	`sˇnf
("%I64d%I64d",&
a
,&
b
)!=
EOF
)

70 
ªt
=
	`dfs
(
a
,
b
);

71 if(
ªt
<0)

72 
	`puts
("No Solution!");

74 
cout
<<
ªt
<<
ídl
;

77 
	}
}

	@problems/hdoj/hdoj_3874.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<io°ªam
>

5 
	#N
 51000

	)

6 
	#M
 1100000

	)

7 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

10 
LL
 
	gsum
[
N
],
	gªt
[
M
];

11 
	gid
[
M
],
	gn
,
	gm
,
	gnum
[
N
];

13 
	snode
{ 
	ml
,
	mr
,
	mi
; }
	gno
[
M
];

14 
	$cmp
(
node
 
a
,nodê
b
){ á.
r
<b.r; 
	}
}

15 
ölöe
 
	$lowbô
(
i
){  i&(-i); 
	}
}

17 
	$add
(
x
,
id
)

19 
i
=
id
; i<
N
; i+=
	`lowbô
(i))

20 
sum
[
i
]+=
x
;

21 
	}
}

23 
LL
 
	$ˇlc
(
n
)

25 
LL
 
ªt
=0;

26 
i
=
n
; i; i-=
	`lowbô
(i))

27 
ªt
+=
sum
[
i
];

28  
ªt
;

29 
	}
}

31 
	$maö
()

33 
t
,
ˇ
;

34 
	`sˇnf
("%d",&
t
);

35 
ˇ
=1; ca<=
t
; ca++)

37 
	`sˇnf
("%d",&
n
);

38 
i
=1; i<=
n
; i++)

39 
	`sˇnf
("%d",&
num
[
i
]);

40 
	`sˇnf
("%d",&
m
);

41 
i
=0; i<
m
; i++)

43 
	`sˇnf
("%d%d",&
no
[
i
].
l
,&no[i].
r
);

44 if(
no
[
i
].
l
>no[i].
r
)

45 
	`sw≠
(
no
[
i
].
l
,no[i].
r
);

46 
no
[
i
].i=i;

48 
	`s‹t
(
no
,no+
m
,
cmp
);

49 
	`mem£t
(
sum
,0,(sum));

51 
	`mem£t
(
id
,0,(id));

52 
now
=1;

53 
i
=0; i<
m
; i++)

55 
º
=
no
[
i
].
r
;

56 ; 
º
>=
now
;Çow++)

58 
x
=
num
[
now
];

59 if(
id
[
x
]>0)

60 
	`add
(-
x
,
id
[x]);

61 
id
[
x
]=
now
;

62 
	`add
(
x
,
now
);

64 
ªt
[
no
[
i
].i]=
	`ˇlc
(
º
)-ˇlc“o[i].
l
-1);

66 
i
=0; i<
m
; i++)

67 
	`¥ötf
("%I64d\n",
ªt
[
i
]);

70 
	}
}

	@problems/hdoj/hdoj_3936.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	tLL
;

25 
	#MOD
 1000000007LL

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	gm©
[2][2],
	gnow
[2][2],
	gtmp
[2][2];

41 
	$m_mu…
(
LL
 
now
[][2],LL 
m©
[][2])

43 
i
,
j
;

44 
tmp
[0][0]=(
now
[0][0]*
m©
[0][0]%
MOD
+now[0][1]*mat[1][0]%MOD)%MOD;

45 
tmp
[1][0]=(
now
[1][0]*
m©
[0][0]%
MOD
+now[1][1]*mat[1][0]%MOD)%MOD;

46 
tmp
[0][1]=(
now
[0][0]*
m©
[0][1]%
MOD
+now[0][1]*mat[1][1]%MOD)%MOD;

47 
tmp
[1][1]=(
now
[1][0]*
m©
[0][1]%
MOD
+now[1][1]*mat[1][1]%MOD)%MOD;

48 
i
=0; i<2; i++)

49 
j
=0; j<2; j++)

50 
now
[
i
][
j
]=
tmp
[i][j];

51 
	}
}

53 
	$m©rix
(
LL
 
n
)

55 
LL
 
x
=
n
;

56 
	`mem£t
(
now
,0,(now));

57 
now
[0][0]=now[1][1]=1;

58 ; 
x
; x>>=1)

60 if(
x
&1)

61 
	`m_mu…
(
now
,
m©
);

62 
	`m_mu…
(
m©
,mat);

64 
i
=0; i<2; i++)

65 
j
=0; j<2; j++)

66 
m©
[
i
][
j
]=
now
[i][j];

67 
	}
}

69 
LL
 
	$fib
(
LL
 
n
)

71 
m©
[0][0]=mat[0][1]=mat[1][0]=1;

72 
m©
[1][1]=0;

73 
	`m©rix
(
n
-1);

74  (
m©
[1][0]+m©[1][1])%
MOD
;

75 
	}
}

77 
LL
 
	$sﬁve
(
LL
 
n
)

79 if(
n
<=0)  0LL;

80 
LL
 
Q
,
R
;

81 
Q
=
	`fib
(2*
n
)*fib(2*n)%
MOD
;

82 
R
=(
	`fib
(2*
n
+1)*fib(2*n+1)%
MOD
-1)%MOD;

83  (
R
-
Q
+
MOD
)%MOD;

84 
	}
}

86 
	$maö
()

88 
q
;

89 
LL
 
x
,
y
;

90 
	`sˇnf
("%d",&
q
);

91 
q
--)

93 
cö
>>
x
>>
y
;

95 
cout
<<(
	`sﬁve
(
y
)-sﬁve(
x
-1)+
MOD
)%MOD<<
ídl
;

102 
	}
}

	@problems/hdoj/hdoj_3939.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
LL
 
	g∂i°
[
N
],
	gp
[N],
	gt›
,
	gŸh
[N],
	gtmµ
[N],
	gç
;

41 
	$öô
()

43 
LL
 
i
,
j
;

44 
t›
=0;

45 
i
=0; i<
N
; i++)

46 
p
[
i
]=i;

47 
i
=2; i<
N
; i++)

49 if(
p
[
i
]==i)

50 
∂i°
[
t›
++]=
i
;

51 
j
=0; j<
t›
&&(
i
*
∂i°
[j]<
N
); j++)

53 
p
[
i
*
∂i°
[
j
]]=plist[j];

54 if(
i
%
∂i°
[
j
]==0)

58 
Ÿh
[1]=1;

59 
i
=2; i<
N
; i++)

61 
LL
 
tmp
=
i
;

62 ; (
tmp
%
p
[
i
]==0)&&tmp>1;)

63 
tmp
/=
p
[
i
];

64 
Ÿh
[
i
]=
tmp
;

66 
	}
}

68 
LL
 
	$ˇlc
(
LL
 
x
,LL 
y
,LL 
˙t
,LL 
id
)

70 
LL
 
ªt
=0;

71 if(
id
==
ç
)

73 if(
˙t
&1)

74  -
x
/
y
;

76  
x
/
y
;

78 
ªt
+=
	`ˇlc
(
x
,
y
*
tmµ
[
id
],
˙t
+1,id+1);

79 
ªt
+=
	`ˇlc
(
x
,
y
,
˙t
,
id
+1);

80  
ªt
;

81 
	}
}

83 
	$maö
()

85 
t
;

86 
LL
 
x
,
l
,
a
,
ªt
,
tmp
;

87 
	`öô
();

88 
	`sˇnf
("%d",&
t
);

91 
cö
>>
l
,
t
--)

93 if(
l
<=4)

95 
	`puts
("0");

98 
ªt
=0;

99 
a
=2;á*a<
l
;á+=2)

101 
x
=(
LL
)
	`sqπ
((
l
-
a
*a));

102 
LL
 
tmp
=
a
;

103 
ç
=0; 
tmp
>1; )

105 
tmµ
[
ç
++]=
p
[
tmp
];

106 
tmp
=
Ÿh
[tmp];

108 
tmp
=
	`ˇlc
(
x
,1LL,0LL,0LL);

109 
ªt
+=
tmp
;

113 
cout
<<
ªt
<<
ídl
;

116 
	}
}

	@problems/hdoj/hdoj_4300.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 110001

	)

5 
	gÁû
[
N
];

6 
	gmi
[
N
],
	gs
[N],
	gö
[N];

8 
	$gë_Áû
(
n
)

10 
p
;

11 
Áû
[0]=-1;

12 
i
=1; i<
n
; i++)

14 
p
=
Áû
[
i
-1];

15 ; 
p
>=0;Ö=
Áû
[p])

16 if(
s
[
p
+1]==
mi
[s[
i
]-'a'])

18 if(
s
[
p
+1]==
mi
[s[
i
]-'a'])

19 
Áû
[
i
]=
p
+1;

21 
Áû
[
i
]=-1;

23 
	}
}

25 
	$maö
()

27 
t
,
l
;

28 
	`sˇnf
("%d",&
t
);

29 ; 
t
--;)

31 
	`sˇnf
("%s%s",
mi
,
s
);

32 
l
=
	`°æí
(
s
);

33 
Œ
=
	`°æí
(
mi
);

34 
i
=0; i<
Œ
; i++)

35 
ö
[
mi
[
i
]-'a']=i+'a';

36 
	`gë_Áû
(
l
);

37 
mid
=
l
/2,
id
;

38 
id
=
Áû
[
l
-1]; id>=0; id=fail[id])

39 if(
id
<
mid
)

41 
i
=0; i<
l
-
id
-1; i++)

42 
	`¥ötf
("%c",
s
[
i
]);

43 
i
=0; i<
l
-
id
-1; i++)

44 
	`¥ötf
("%c",
ö
[
s
[
i
]-'a']);

45 
	`puts
("");

48 
	}
}

	@problems/hdoj/hdu_1166.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	#N
 50001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	ml
,
	mr
,
	ms
; }
	gno
[
N
<<2];

8 
	gd©
[
N
];

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
	$buûd
(
id
,
l
,
r
)

15 
no
[
id
].
l
ˆ,no[id].
r
=r;

16 
mid
=(
l
+
r
)>>1;

17 if(
l
==
r
)

19 
no
[
id
].
s
=
d©
[
l
];

22 
	`buûd
(
	`L
(
id
),
l
,
mid
);

23 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

24 
no
[
id
].
s
Úo[
	`L
(id)].s+no[
	`R
(id)].s;

25 
	}
}

27 
	$upd©e
(
id
,
p
,
x
)

29 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

30 if(
l
==
r
)

32 
no
[
id
].
s
+=
x
;

35 if(
p
<=
mid
Ë
	`upd©e
(
	`L
(
id
),p,
x
);

36 
	`upd©e
(
	`R
(
id
),
p
,
x
);

37 
no
[
id
].
s
Úo[
	`L
(id)].s+no[
	`R
(id)].s;

38 
	}
}

40 
	$quîy
(
id
,
Œ
,
º
)

42 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=÷+r)>>1,
ªt
=0;

43 if(
l
==
Œ
&&
r
==
º
)

44  
no
[
id
].
s
;

45 if(
º
<=
mid
)

46 
ªt
+=
	`quîy
(
	`L
(
id
),
Œ
,
º
);

47 if(
Œ
>
mid
)

48 
ªt
+=
	`quîy
(
	`R
(
id
),
Œ
,
º
);

51 
ªt
+=
	`quîy
(
	`L
(
id
),
Œ
,
mid
);

52 
ªt
+=
	`quîy
(
	`R
(
id
),
mid
+1,
º
);

54  
ªt
;

55 
	}
}

57 
	gqq
[20];

59 
	$maö
()

61 
n
,
t
,
ˇ
=1;

62 
	`sˇnf
("%d",&
t
);

63 
ˇ
=1; ca<=
t
; ca++)

65 
	`¥ötf
("Ca£ %d:\n",
ˇ
);

66 
	`sˇnf
("%d",&
n
);

67 
i
=1; i<=
n
; i++)

68 
	`sˇnf
("%d",&
d©
[
i
]);

69 
	`buûd
(1,1,
n
);

70 
x
,
y
;

71 
	`sˇnf
("%s",
qq
))

73 if(
qq
[0]=='E')

75 if(
qq
[0]=='Q')

77 
	`sˇnf
("%d%d",&
x
,&
y
);

78 
	`¥ötf
("%d\n",
	`quîy
(1,
x
,
y
));

80 if(
qq
[0]=='A')

82 
	`sˇnf
("%d%d",&
x
,&
y
);

83 
	`upd©e
(1,
x
,
y
);

87 
	`sˇnf
("%d%d",&
x
,&
y
);

88 
	`upd©e
(1,
x
,-
y
);

93 
	}
}

	@problems/hdoj/hdu_1255.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#N
 2101

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	ml
,
	mr
,
	mc
; 
	ms
,
	mss
; }
	gno
[
N
<<3];

8 
	s£gmít
{ 
	mx
,
	my1
,
	my2
; 
	mèg
; }
	g£g
[
N
];

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
	gy
[
N
];

14 
	gt›
,
	g°›
;

16 
	$Àn
(
l
,
r
)

18  
y
[
r
-1]-y[
l
-1];

19 
	}
}

21 
	$buûd
(
id
,
l
,
r
)

23 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=0,no[id].
s
Úo[id].
ss
=0;

24 if(
l
==
r
-1) ;

25 
mid
=(
l
+
r
)>>1;

26 
	`buûd
(
	`L
(
id
),
l
,
mid
);

27 
	`buûd
(
	`R
(
id
),
mid
,
r
);

28 
	}
}

30 
	$up
(
id
,
l
,
r
)

32 if(
no
[
id
].
c
>0Ëno[id].
s
=
	`Àn
(
l
,
r
);

33 if(
r
==
l
+1Ë
no
[
id
].
s
=0;

34 
no
[
id
].
s
Úo[
	`L
(id)].s+no[
	`R
(id)].s;

36 if(
no
[
id
].
c
>1Ëno[id].
ss
=
	`Àn
(
l
,
r
);

37 if(
r
==
l
+1Ë
no
[
id
].
ss
=0;

38 if(
no
[
id
].
c
>0Ëno[id].
ss
Úo[
	`L
(id)].
s
+no[
	`R
(id)].s;

39 
no
[
id
].
ss
Úo[
	`L
(id)].ss+no[
	`R
(id)].ss;

40 
	}
}

42 
	$upd©e
(
id
,
Œ
,
º
,
x
)

44 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

45 if(
l
>=
Œ
&&
r
<=
º
)

47 
no
[
id
].
c
+=
x
;

48 
	`up
(
id
,
l
,
r
);

51 if(
mid
>
Œ
&&
l
<
º
)

52 
	`upd©e
(
	`L
(
id
),
Œ
,
º
,
x
);

53 if(
mid
<
º
&&
r
>
Œ
)

54 
	`upd©e
(
	`R
(
id
),
Œ
,
º
,
x
);

55 
	`up
(
id
,
l
,
r
);

56 
	}
}

58 
	$cmp1
(
a
,
b
){ á<b; 
	}
}

59 
	$cmp2
(
£gmít
 
a
,£gmíà
b
){ á.
x
==b.x?a.
èg
>b.èg:a.x<b.x; 
	}
}

61 
	$gëid
(
x
)

63 
l
=0,
r
=
t›
-1,
mid
;

64 ; 
l
<=
r
;)

66 
mid
=(
l
+
r
)>>1;

67 if(
x
>
y
[
mid
])

68 
l
=
mid
+1;

69 if(
x
<
y
[
mid
])

70 
r
=
mid
-1;

72  
mid
;

75 
	}
}

77 
	$maö
()

79 
t
,
n
;

80 
	`sˇnf
("%d",&
t
);

81 
t
--)

83 
	`sˇnf
("%d",&
n
);

84 
t›
=0;

85 
°›
=0;

86 
x1
,
y1
,
x2
,
y2
;

87 
i
=0; i<
n
; i++)

89 
	`sˇnf
("%lf%lf%lf%lf",&
x1
,&
y1
,&
x2
,&
y2
);

90 
£g
[
°›
].
x
=
x1
,£g[°›].
y1
=y1,£g[°›].
y2
=y2,£g[°›++].
èg
=1;

91 
£g
[
°›
].
x
=
x2
,£g[°›].
y1
=y1,£g[°›].
y2
=y2,£g[°›++].
èg
=-1;

92 
y
[
t›
++]=
y1
;

93 
y
[
t›
++]=
y2
;

95 
	`s‹t
(
y
,y+
t›
,
cmp1
);

96 
	`s‹t
(
£g
,£g+
°›
,
cmp2
);

97 
¡›
=1;

98 
i
=1; i<
t›
; i++)

100 if(
y
[
i
]==y[
¡›
-1])

103 
y
[
¡›
++]=y[
i
];

105 
t›
=
¡›
;

106 
	`buûd
(1,1,
t›
);

107 
nowx
,
¥ex
=
£g
[0].
x
,
ªt
=0,
tmp
;

108 
i
=0; i<
°›
; i++)

110 
l
=
	`gëid
(
£g
[
i
].
y1
)+1,
r
=gëid(£g[i].
y2
)+1;

111 
nowx
=
£g
[
i
].
x
;

112 
tmp
=
no
[1].
ss
;

113 
ªt
+=
tmp
*(
nowx
-
¥ex
);

114 
¥ex
=
nowx
;

115 
	`upd©e
(1,
l
,
r
,
£g
[
i
].
èg
);

117 
	`¥ötf
("%.2lf\n",
ªt
);

120 
	}
}

	@problems/hdoj/hdu_1394.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 5011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gd©
[
N
<<1],
	gbô
[N];

9 
ölöe
 
	$lowbô
(
i
){  (-i)&i; 
	}
}

11 
	$upd©e
(
x
,
v
)

13 ; 
x
<
N
; x+=
	`lowbô
(x))

14 
bô
[
x
]+=
v
;

15 
	}
}

17 
	$ˇl
(
x
)

19 
ªt
=0;

20 ; 
x
; x-=
	`lowbô
(x))

21 
ªt
+=
bô
[
x
];

22  
ªt
;

23 
	}
}

25 
	$maö
()

27 
n
;

28 
	`sˇnf
("%d",&
n
)!=
EOF
)

30 
	`mem£t
(
bô
,0,(bit));

31 
i
=1; i<=
n
; i++)

33 
	`sˇnf
("%d",&
d©
[
i
]);

34 
d©
[
i
]++;

36 
ªt
,
˙t
=0,
¥e
;

37 
i
=
n
; i>=1; i--)

39 
˙t
+=
	`ˇl
(
d©
[
i
]);

40 
	`upd©e
(
d©
[
i
],1);

42 
ªt
=
¥e
=
˙t
;

43 
i
=1; i<
n
; i++)

45 
˙t
=
¥e
;

46 
	`upd©e
(
d©
[
i
],-1);

47 
˙t
-=
	`ˇl
(
d©
[
i
]);

48 
˙t
+=
	`ˇl
(
n
)-ˇl(
d©
[
i
]);

49 
	`upd©e
(
d©
[
i
],1);

50 
¥e
=
˙t
;

51 
ªt
=
	`mö
‘ë,
˙t
);

53 
	`¥ötf
("%d\n",
ªt
);

56 
	}
}

	@problems/hdoj/hdu_1698.cpp

1 
	~<c°dio
>

2 
	#N
 100011

	)

4 
	snode
{ 
	ml
,
	mr
,
	ms
,
	mc
; }
	gno
[
N
<<2];

5 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

6 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

8 
	$buûd
(
id
,
l
,
r
)

10 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=0;

11 if(
l
==
r
)

12  
no
[
id
].
s
=1;

13 
mid
=(
l
+
r
)>>1;

14  
no
[
id
].
s
=
	`buûd
(
	`L
(id),
l
,
mid
)+buûd(
	`R
(id),mid+1,
r
);

15 
	}
}

17 
	$pushdown
(
id
,
l
,
r
)

19 
m
=(
l
+
r
)>>1;

20 if(
no
[
id
].
c
)

22 
no
[
	`L
(
id
)].
c
=no[id].c;

23 
no
[
	`R
(
id
)].
c
=no[id].c;

24 
no
[
	`L
(
id
)].
s
Úo[id].
c
*(
m
-
l
+1);

25 
no
[
	`R
(
id
)].
s
Úo[id].
c
*(
r
-
m
);

26 
no
[
id
].
c
=0;

28 
	}
}

30 
	$upd©e
(
id
,
Œ
,
º
,
x
)

32 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

33 if(
l
>=
Œ
&&
r
<=
º
)

35 
no
[
id
].
c
=
x
;

36 
no
[
id
].
s
=(
r
-
l
+1)*
x
;

39 
	`pushdown
(
id
,
l
,
r
);

40 if(
mid
>=
Œ
&&
l
<=
º
Ë
	`upd©e
(
	`L
(
id
),Œ,º,
x
);

41 if(
mid
<
º
&&
r
>=
Œ
Ë
	`upd©e
(
	`R
(
id
),Œ,º,
x
);

42 
no
[
id
].
s
Úo[
	`L
(id)].s+no[
	`R
(id)].s;

43 
	}
}

45 
	$quîy
(
id
,
Œ
,
º
)

47 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

48 if(
l
>=
Œ
&&
r
<=
º
)

49  
no
[
id
].
s
;

50 
	`pushdown
(
id
,
l
,
r
);

51 
ªt
=0;

52 if(
mid
>=
Œ
&&
l
<=
º
Ë
ªt
+=
	`quîy
(
	`L
(
id
),ll,rr);

53 if(
mid
<
º
&&
r
>=
Œ
Ë
ªt
+=
	`quîy
(
	`R
(
id
),ll,rr);

54  
mid
;

55 
	}
}

57 
	$maö
()

59 
n
,
t
,
m
;

60 
	`sˇnf
("%d",&
t
);

61 
ˇ
=1; ca<=
t
; ca++)

63 
	`¥ötf
("Ca£ %d: ",
ˇ
);

64 
	`sˇnf
("%d%d",&
n
,&
m
);

65 
	`buûd
(1,1,
n
);

66 
x
,
y
,
z
;

67 
i
=0; i<
m
; i++)

69 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

70 
	`upd©e
(1,
x
,
y
,
z
);

72 
	`¥ötf
("ThêtŸÆ vÆuêo‡thêhook i†%d.\n",
	`quîy
(1,1,
n
));

75 
	}
}

	@problems/hdoj/hdu_1754.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 200011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	snode
{ 
	ml
,
	mr
,
	mv
;

7 
gm
(){  (
	ml
+
	mr
)>>1; };

8 }
	gno
[3*
N
];

9 
	gd©
[
N
];

11 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

12 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

14 
	$buûd
(
id
,
l
,
r
)

16 
no
[
id
].
l
ˆ,no[id].
r
=r;

17 if(
l
==
r
)

19 
no
[
id
].
v
=
d©
[
l
];

22 
mid
=(
l
+
r
)>>1;

23 
	`buûd
(
	`L
(
id
),
l
,
mid
);

24 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

25 
no
[
id
].
v
=
	`max
“o[
	`L
(id)].v,no[
	`R
(id)].v);

26 
	}
}

28 
	$upd©e
(
id
,
p
,
x
)

30 
mid
=
no
[
id
].
	`gm
();

31 if(
no
[
id
].
l
=Úo[id].
r
)

33 
no
[
id
].
v
=
x
;

36 if(
p
<=
mid
)

37 
	`upd©e
(
	`L
(
id
),
p
,
x
);

39 
	`upd©e
(
	`R
(
id
),
p
,
x
);

40 
no
[
id
].
v
=
	`max
“o[
	`L
(id)].v,no[
	`R
(id)].v);

41 
	}
}

43 
	$quîy
(
id
,
Œ
,
º
)

45 
mid
=
no
[
id
].
	`gm
();

46 if(
Œ
==
no
[
id
].
l
&&
º
=Úo[id].
r
)

47  
no
[
id
].
v
;

48 if(
º
<=
mid
)

49  
	`quîy
(
	`L
(
id
),
Œ
,
º
);

50 if(
Œ
>
mid
)

51  
	`quîy
(
	`R
(
id
),
Œ
,
º
);

53  
	`max
(
	`quîy
(
	`L
(
id
),
Œ
,
mid
),quîy(
	`R
(id),mid+1,
º
));

54 
	}
}

56 
	$maö
()

58 
n
,
m
,
x
,
y
;

59 
s
[10];

60 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

62 
i
=1; i<=
n
; i++)

63 
	`sˇnf
("%d",&
d©
[
i
]);

64 
	`buûd
(1,1,
n
);

65 
i
=0; i<
m
; i++)

67 
	`sˇnf
("%s%d%d",
s
,&
x
,&
y
);

68 if(
s
[0]=='Q')

69 
	`¥ötf
("%d\n",
	`quîy
(1,
x
,
y
));

71 
	`upd©e
(1,
x
,
y
);

75 
	}
}

	@problems/hdoj/hdu_1823_2wei_segmentTree.cpp

2 
	~<c°dio
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	ssub_node
{ 
	ml
,
	mr
,
	mv
; };

8 
	snode


10 
	ml
,
	mr
;

11 
sub_node
 
	msub
[
N
<<2];

12 
gm
(){  (
	ml
+
	mr
)>>1; }

13 }
	gno
[440];

15 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

16 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

18 
	$_buûd
(
pid
,
id
,
l
,
r
)

20 
no
[
pid
].
sub
[
id
].
l
ˆ,no[pid].sub[id].
r
Ù,no[pid].sub[id].
v
=-1;

21 if(
l
==
r
)

23 
mid
=(
l
+
r
)>>1;

24 
	`_buûd
(
pid
,
	`L
(
id
),
l
,
mid
);

25 
	`_buûd
(
pid
,
	`R
(
id
),
mid
+1,
r
);

26 
	}
}

28 
	$buûd
(
id
,
l
,
r
)

30 
	`_buûd
(
id
,1,1,
N
);

31 
no
[
id
].
l
ˆ,no[id].
r
=r;

32 if(
l
==
r
)

34 
mid
=(
l
+
r
)>>1;

35 
	`buûd
(
	`L
(
id
),
l
,
mid
);

36 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

37 
	}
}

39 
	$_upd©e
(
pid
,
id
,
p
,
x
)

42 
l
=
no
[
pid
].
sub
[
id
].l,
r
Úo[pid].sub[id].r,
mid
=(l+r)>>1;

43 if(
l
==
r
)

45 
no
[
pid
].
sub
[
id
].
v
=
	`max
“o[pid].sub[id].v,
x
);

48 if(
p
<=
mid
)

49 
	`_upd©e
(
pid
,
	`L
(
id
),
p
,
x
);

51 
	`_upd©e
(
pid
,
	`R
(
id
),
p
,
x
);

52 
no
[
pid
].
sub
[
id
].
v
=
	`max
“o[pid].sub[
	`L
(id)].v,no[pid].sub[
	`R
(id)].v);

53 
	}
}

55 
	$upd©e
(
id
,
p
,
subp
,
x
)

58 
	`_upd©e
(
id
,1,
subp
,
x
);

59 if(
no
[
id
].
l
=Úo[id].
r
)

61 if(
p
<=
no
[
id
].
	`gm
())

62 
	`upd©e
(
	`L
(
id
),
p
,
subp
,
x
);

64 
	`upd©e
(
	`R
(
id
),
p
,
subp
,
x
);

65 
	}
}

67 
	$_quîy
(
pid
,
id
,
Œ
,
º
)

69 
l
=
no
[
pid
].
sub
[
id
].l,
r
Úo[pid].sub[id].r,
mid
=÷+r)>>1,
ªt
=-1;

70 if(
l
>=
Œ
&&
r
<=
º
)

71  
no
[
pid
].
sub
[
id
].
v
;

72 if(
mid
>=
Œ
&&
l
<=
º
)

73 
ªt
=
	`_quîy
(
pid
,
	`L
(
id
),
Œ
,
º
);

74 if(
mid
<
º
&&
r
>=
Œ
)

75 
ªt
=
	`max
‘ë,
	`_quîy
(
pid
,
	`R
(
id
),
Œ
,
º
));

76  
ªt
;

77 
	}
}

79 
	$quîy
(
id
,
Œ
,
º
,
subŒ
,
subº
)

81 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=÷+r)>>1,
ªt
=-1;

82 if(
l
>=
Œ
&&
r
<=
º
)

83  
	`_quîy
(
id
,1,
subŒ
,
subº
);

84 if(
mid
>=
Œ
&&
l
<=
º
)

85 
ªt
=
	`quîy
(
	`L
(
id
),
Œ
,
º
,
subŒ
,
subº
);

86 if(
mid
<
º
&&
r
>=
Œ
)

87 
ªt
=
	`max
‘ë,
	`quîy
(
	`R
(
id
),
Œ
,
º
,
subŒ
,
subº
));

88  
ªt
;

89 
	}
}

91 
	$maö
()

93 
n
,
x
,
h1
,
h2
;

94 
y
,
z
;

95 
	`sˇnf
("%d",&
n
)!=
EOF
)

97 if(
n
==0) ;

98 
	`buûd
(1,1,101);

99 
s
[10];

100 
i
=0; i<
n
; i++)

102 
	`sˇnf
("%s",
s
);

103 if(
s
[0]=='I')

105 
	`sˇnf
("%d%lf%lf",&
x
,&
y
,&
z
);

106 
	`upd©e
(1,
x
-99,(
y
*10)+1,(
z
*10));

110 
	`sˇnf
("%d%d%lf%lf",&
h1
,&
h2
,&
y
,&
z
);

111 if(
h1
>
h2
Ë
	`sw≠
(h1,h2);

112 if(
y
>
z
Ë
	`sw≠
(y,z);

113 
ªt
=
	`quîy
(1,
h1
-99,
h2
-99,(
y
*10)+1,(
z
*10)+1);

114 if(
ªt
<0)

115 
	`puts
("-1");

117 
	`¥ötf
("%.1lf\n",0.1*
ªt
);

122 
	}
}

	@problems/hdoj/hdu_2795.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 200111

	)

4 
	tLL
;

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	ml
,
	mr
,
	mv
; }
	gno
[
N
<<2];

8 
	gh
,
	gw
,
	gn
;

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
LL
 
	gd©
[
N
];

15 
	$buûd
(
id
,
l
,
r
)

17 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
v
=l;

18 if(
l
==
r
)

20 
mid
=(
l
+
r
)>>1;

21 
	`buûd
(
	`L
(
id
),
l
,
mid
);

22 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

24 
	}
}

26 
	$quîy
(
id
,
l
,
r
,
LL
 
x
)

28 if(
x
>
d©
[
no
[
id
].
v
])

30 
mid
=(
l
+
r
)>>1,
ªt
;

31 if(
l
==
r
)

33 
d©
[
l
]-=
x
;

34  
l
;

36 if(
x
<=
d©
[
no
[
	`L
(
id
)].
v
])

37 
ªt
=
	`quîy
(
	`L
(
id
),
l
,
mid
,
x
);

39 
ªt
=
	`quîy
(
	`R
(
id
),
mid
+1,
r
,
x
);

40 
no
[
id
].
v
=
d©
[no[
	`L
(id)].v]>d©[no[
	`R
(id)].v]?no[L(id)].v:no[R(id)].v;

41  
ªt
;

42 
	}
}

44 
	$maö
()

46 
¬
;

47 
	`sˇnf
("%d%d%d",&
h
,&
w
,&
n
)!=
EOF
)

49 
¬
=
	`mö
(
h
,
n
);

50 
i
=1; i<=
n
; i++)

51 
d©
[
i
]=
w
;

52 
	`buûd
(1,1,
¬
);

53 
i
=1; i<=
n
; i++)

55 
x
;

56 
	`sˇnf
("%d",&
x
);

57 
	`¥ötf
("%d\n",
	`quîy
(1,1,
¬
,(
LL
)
x
));

61 
	}
}

	@problems/hdoj/hdu_2871.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	~<ve˘‹
>

5 
	#N
 50010

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	snode
{ 
	ml
,
	mr
,
	mc
,
	mlv
,
	mrv
,
	mv
,
	mi
;

9 
Àn
(){  
	mr
-
	ml
+1; }

10 
pos
(){  
	mr
-
	mrv
+1; }

11 }
	gno
[
N
<<2];

12 
	s£gs
{ 
	ml
,
	mr
;

13 
£gs
(
Œ
,
º
){ 
	ml
ˆl,
	mr
=rr; }

15 
	gve˘‹
<
	g£gs
> 
	gvec
;

17 
	gs
[100];

19 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

20 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

22 
	$buûd
(
id
,
l
,
r
)

24 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=-1;

25 
no
[
id
].
lv
Úo[id].
rv
Úo[id].
v
Úo[id].
	`Àn
();

26 
no
[
id
].
i
=
l
;

27 if(
l
==
r
)

29 
mid
=(
l
+
r
)>>1;

30 
	`buûd
(
	`L
(
id
),
l
,
mid
);

31 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

32 
	}
}

34 
	$up
(
id
,
l
,
r
)

36 
no
[
id
].
lv
Úo[
	`L
(id)].lv+“o[L(id)].lv=Úo[L(id)].
	`Àn
())*no[
	`R
(id)].lv;

37 
no
[
id
].
rv
Úo[
	`R
(id)].rv+“o[R(id)].rv=Úo[R(id)].
	`Àn
())*no[
	`L
(id)].rv;

38 
no
[
id
].
v
=
	`max
(max“o[
	`L
(id)].v,no[
	`R
(id)].v),no[L(id)].
rv
+no[R(id)].
lv
);

39 if(
no
[
id
].
v
=Úo[
	`L
(id)].v)

40 
no
[
id
].
i
Úo[
	`L
(id)].i;

41 if(
no
[
id
].
v
=Úo[
	`L
(id)].
rv
+no[
	`R
(id)].
lv
)

42 
no
[
id
].
i
Úo[
	`L
(id)].
	`pos
();

44 
no
[
id
].
i
Úo[
	`R
(id)].i;

45 
	}
}

47 
	$down
(
id
,
l
,
r
)

49 if(
no
[
id
].
c
>=0)

51 
no
[
	`L
(
id
)].
c
=no[id].c;

52 
no
[
	`R
(
id
)].
c
=no[id].c;

53 
no
[
	`L
(
id
)].
v
Úo[L(id)].
lv
Úo[L(id)].
rv
Úo[L(id)].
	`Àn
()*(1-no[id].
c
);

54 
no
[
	`R
(
id
)].
v
Úo[R(id)].
lv
Úo[R(id)].
rv
Úo[R(id)].
	`Àn
()*(1-no[id].
c
);

55 
no
[
	`L
(
id
)].
i
Úo[L(id)].
l
;

56 
no
[
	`R
(
id
)].
i
Úo[R(id)].
l
;

57 
no
[
id
].
c
=-1;

59 
	}
}

61 
	$upd©e
(
id
,
Œ
,
º
,
x
)

63 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

64 if(
l
>=
Œ
&&
r
<=
º
)

66 
no
[
id
].
c
=
x
;

67 
no
[
id
].
v
Úo[id].
lv
Úo[id].
rv
Úo[id].
	`Àn
()*(1-
x
);

68 
no
[
id
].
i
=
l
;

71 
	`down
(
id
,
l
,
r
);

72 if(
mid
>=
Œ
&&
l
<=
º
)

73 
	`upd©e
(
	`L
(
id
),
Œ
,
º
,
x
);

74 if(
mid
<
º
&&
r
>=
Œ
)

75 
	`upd©e
(
	`R
(
id
),
Œ
,
º
,
x
);

76 
	`up
(
id
,
l
,
r
);

77 
	}
}

79 
	$quîy
(
id
,
x
)

81 if(
no
[
id
].
v
<
x
)

83 if(
no
[
id
].
c
==0)

84  
no
[
id
].
i
;

85 if(
no
[
id
].
l
=Úo[id].
r
)

86  
no
[
id
].
i
;

87 if(
no
[
	`L
(
id
)].
v
>=
x
)

88  
	`quîy
(
	`L
(
id
),
x
);

89 if(
no
[
	`L
(
id
)].
rv
+no[
	`R
(id)].
lv
>=
x
)

90  
no
[
	`L
(
id
)].
	`pos
();

91 if(
no
[
	`R
(
id
)].
v
>=
x
)

92  
	`quîy
(
	`R
(
id
),
x
);

93  
no
[
id
].
i
;

94 
	}
}

96 
	$gë_id
(
x
)

98 
l
=0,
r
=
vec
.
	`size
()-1,
mid
;

99 ; 
l
<=
r
;)

101 
mid
=(
l
+
r
)>>1;

102 if(
vec
[
mid
].
l
<=
x
)

103 
l
=
mid
+1;

105 
r
=
mid
-1;

107  
l
;

108 
	}
}

110 
	$maö
()

112 
n
,
m
;

113 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

115 
	`buûd
(1,1,
n
);

116 
vec
.
	`˛ór
();

117 
x
,
id
;

118 
i
=0; i<
m
; i++)

120 
	`sˇnf
("%s",
s
);

121 if(
	`°rcmp
(
s
,"Reset")==0)

123 
	`upd©e
(1,1,
n
,0);

125 
	`puts
("Reset Now");

126 
vec
.
	`˛ór
();

128 if(
	`°rcmp
(
s
,"New")==0)

130 
	`sˇnf
("%d",&
x
);

131 
id
=
	`quîy
(1,
x
);

132 if(
id
==0)

133 
	`puts
("Reject New");

136 
	`¥ötf
("Newáà%d\n",
id
);

137 
	`upd©e
(1,
id
,id+
x
-1,1);

138 
ii
=
	`gë_id
(
id
);

139 
vec
.
	`ö£π
(
ii
+vec.
	`begö
(),
	`£gs
(
id
,id+
x
-1));

142 if(
	`°rcmp
(
s
,"Free")==0)

144 
	`sˇnf
("%d",&
x
);

145 
id
=
	`gë_id
(
x
)-1;

146 if(
id
==-1||
vec
[id].
r
<
x
)

148 
	`puts
("Reject Free");

151 
	`upd©e
(1,
vec
[
id
].
l
,vec[id].
r
,0);

152 
	`¥ötf
("Fªê‰om %dÅÿ%d\n",
vec
[
id
].
l
,vec[id].
r
);

153 
vec
.
	`îa£
(vec.
	`begö
()+
id
,vec.begin()+id+1);

157 
	`sˇnf
("%d",&
x
);

158 if(
x
>
vec
.
	`size
())

160 
	`puts
("Reject Get");

163 
	`¥ötf
("Gëáà%d\n",
vec
[
x
-1].
l
);

166 
	`puts
("");

169 
	}
}

	@problems/hdoj/hdu_3016.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3ffffff

	)

4 
	#N
 100011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	ml
,
	mr
,
	mc
; }
	gno
[
N
<<2];

8 
	s£gmít
{ 
	ml
,
	mr
,
	mv
,
	mh
; }
	g£g
[
N
];

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
	gdp
[
N
],
	gnx
[N][2];

15 
	$buûd
(
id
,
l
,
r
)

17 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=0;

18 if(
l
==
r
)

20 
mid
=(
l
+
r
)>>1;

21 
	`buûd
(
	`L
(
id
),
l
,
mid
);

22 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

23 
	}
}

25 
	$down
(
id
,
l
,
r
)

27 if(
no
[
id
].
c
>=0)

29 
no
[
	`L
(
id
)].
c
=no[id].c;

30 
no
[
	`R
(
id
)].
c
=no[id].c;

31 
no
[
id
].
c
=-1;

33 
	}
}

35 
	$upd©e
(
id
,
Œ
,
º
,
x
)

37 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

38 if(
l
>=
Œ
&&
r
<=
º
)

40 
no
[
id
].
c
=
x
;

43 
	`down
(
id
,
l
,
r
);

44 if(
mid
>=
Œ
&&
l
<=
º
)

45 
	`upd©e
(
	`L
(
id
),
Œ
,
º
,
x
);

46 if(
mid
<
º
&&
r
>=
Œ
)

47 
	`upd©e
(
	`R
(
id
),
Œ
,
º
,
x
);

48 
	}
}

50 
	$quîy
(
id
,
p
)

52 if(
no
[
id
].
c
>=0)

53  
no
[
id
].
c
;

54 
mid
=(
no
[
id
].
l
+no[id].
r
)>>1;

55 if(
p
<=
mid
)

56  
	`quîy
(
	`L
(
id
),
p
);

58  
	`quîy
(
	`R
(
id
),
p
);

59 
	}
}

61 
	$cmp
(
£gmít
 
a
,£gmíà
b
){ á.
h
<b.h; 
	}
}

63 
	$maö
()

65 
n
,
mx
;

66 
	`sˇnf
("%d",&
n
)!=
EOF
)

68 
mx
=0;

69 
£g
[0].
v
=0,£g[0].
h
=0;

70 
i
=1; i<=
n
; i++)

72 
	`sˇnf
("%d%d%d%d",&
£g
[
i
].
h
,&£g[i].
l
,&£g[i].
r
,&£g[i].
v
);

73 
mx
=
	`max
(mx,
£g
[
i
].
r
);

75 
	`s‹t
(
£g
,£g+
n
+1,
cmp
);

76 
	`buûd
(1,1,
mx
);

77 
i
=1; i<=
n
; i++)

79 
nx
[
i
][0]=
	`quîy
(1,
£g
[i].
l
);

80 
nx
[
i
][1]=
	`quîy
(1,
£g
[i].
r
);

81 
	`upd©e
(1,
£g
[
i
].
l
,£g[i].
r
,i);

83 
i
=0; i<=
n
; i++)

84 
dp
[
i
]=-
öf
;

85 
dp
[
n
]=100+
£g
[n].
v
;

86 
i
=
n
; i>0; i--)

88 
x
=
nx
[
i
][0];

89 if(
dp
[
i
]==
öf
||dp[i]<=0)

91 
dp
[
x
]=
	`max
(dp[x],dp[
i
]+
£g
[x].
v
);

92 
x
=
nx
[
i
][1];

93 
dp
[
x
]=
	`max
(dp[x],dp[
i
]+
£g
[x].
v
);

95 if(
dp
[0]>0)

96 
	`¥ötf
("%d\n",
dp
[0]);

98 
	`puts
("-1");

101 
	}
}

	@problems/hdoj/hdu_3899.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	ml
,
	mn
; }
	ge
[
S
];

35 
	gp˙t
[
N
],
	gâl
[N],
	gdis
[N],
	gt›
,
	gli°
[N],
	gçp
;

36 
	gv
[
N
];

38 
	$ö£π
(
f
,
t
,
l
)

40 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

41 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

42 
	}
}

44 
	$dfs
(
now
,
l
)

46 
v
[
now
]=1;

47 
dis
[
now
]=
l
;

48 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

50 
to
=
e
[
i
].
t
;

51 if(!
v
[
to
])

53 
	`dfs
(
to
,
l
+
e
[
i
].l);

54 
âl
[
now
]+Òé[
to
];

57 
âl
[
now
]+=
p˙t
[now];

58 
	}
}

60 
	$dfs1
(
now
)

62 
v
[
now
]=1;

63 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

65 
to
=
e
[
i
].
t
;

66 if(!
v
[
to
])

68 if(
âl
[
to
]>
çp
-ttl[to])

70  
	`dfs1
(
to
);

74  
now
;

75 
	}
}

77 
LL
 
	$gë_ªt
(
n
)

79 
LL
 
ªt
=0;

80 
i
=0; i<
n
; i++)

81 
ªt
+=1LL*
dis
[
i
]*
p˙t
[i];

82  
ªt
;

83 
	}
}

85 
	$maö
()

87 
n
;

88 
	`sˇnf
("%d",&
n
)!=
EOF
)

90 
t›
=0,
çp
=0;

91 
i
=0; i<
n
; i++)

92 
li°
[
i
]=-1;

93 
	`mem£t
(
âl
,0,(ttl));

94 
	`mem£t
(
dis
,0,(dis));

95 
i
=0; i<
n
; i++)

97 
	`sˇnf
("%d",&
p˙t
[
i
]);

98 
çp
+=
p˙t
[
i
];

100 
i
=0; i<
n
-1; i++)

102 
x
,
y
,
l
;

103 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
);

104 
	`ö£π
(
x
-1,
y
-1,
l
);

105 
	`ö£π
(
y
-1,
x
-1,
l
);

107 
	`mem£t
(
v
,0,(v));

108 
	`dfs
(0,0);

109 
	`mem£t
(
v
,0,(v));

110 
r
=
	`dfs1
(0);

111 
	`mem£t
(
v
,0,(v));

112 
	`dfs
(
r
,0);

113 
cout
<<
	`gë_ªt
(
n
)<<
ídl
;

116 
	}
}

	@problems/hdoj/hdu_4055.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1011

	)

4 
	#MOD
 1000000007

	)

6 
	gs
[
N
];

7 
	gn
;

8 
	gdp
[
N
][N],
	gsum
[N][N];

10 
	$sﬁve
()

12 
	`mem£t
(
dp
,0,(dp));

13 
	`mem£t
(
sum
,0,(sum));

14 
dp
[1][1]=1;

15 
i
=1; i<=
n
; i++)

16 
sum
[1][
i
]=1;

17 
i
=2; i<=
n
; i++)

19 
j
=1; j<=
i
; j++)

21 if(
s
[
i
-2]=='I')

23 
dp
[
i
][
j
]=
sum
[i-1][j-1];

25 if(
s
[
i
-2]=='D')

27 
dp
[
i
][
j
]=
sum
[i-1][i-1]-sum[i-1][j-1];

28 if(
dp
[
i
][
j
]<0)

29 
dp
[
i
][
j
]+=
MOD
;

32 
dp
[
i
][
j
]=
sum
[i-1][i-1];

35 
j
=1; j<=
n
; j++)

36 
sum
[
i
][
j
]=(sum[i][j-1]+
dp
[i][j])%
MOD
;

38  
sum
[
n
][n];

39 
	}
}

41 
	$maö
()

43 
	`sˇnf
("%s",
s
)!=
EOF
)

45 
n
=
	`°æí
(
s
);

46 
n
++;

47 
	`¥ötf
("%d\n",
	`sﬁve
());

50 
	}
}

	@problems/hdoj/hdu_4059.cpp

1 
	~<c°dio
>

2 
	#N
 30000

	)

3 
	#MOD
 1000000007

	)

4 
	tLL
;

6 
	gt›
,
	g∂i°
[
N
],
	gp
[N],
	g¡›
,
	gli°
[N];

7 
LL
 
	gªs
;

9 
	$öô
()

11 
t›
=0;

12 
i
=0; i<
N
; i++)

13 
p
[
i
]=i;

14 
i
=2; i<
N
; i++)

16 if(
p
[
i
]==iË
∂i°
[
t›
++]=i;

17 
j
=0; j<
t›
&&
∂i°
[j]*
i
<
N
; j++)

19 
p
[
i
*
∂i°
[
j
]]=plist[j];

20 if(
i
%
∂i°
[
j
]==0)

24 
	}
}

26 
LL
 
	$expow
(
LL
 
a
,LL 
b
)

28 
LL
 
ªt
=1;

29 ; 
b
;)

31 if(
b
&1)

32 
ªt
Ùë*
a
%
MOD
;

33 
a
˜*a%
MOD
;

34 
b
>>=1;

36  
ªt
;

37 
	}
}

39 
LL
 
	$gë
(
LL
 
n
)

41 
LL
 
ªt
,
tmp
;

42 
ªt
=
n
*“+1)%
MOD
;

43 
ªt
Ùë*(2*
n
+1)%
MOD
;

44 
tmp
=(3*
n
*n+3*n-1)%
MOD
;

45 
ªt
Ùë*
tmp
%
MOD
;

46  
ªt
*
	`expow
(30,
MOD
-2)%MOD;

47 
	}
}

49 
	$div
(
n
)

51 
¡›
=0;

52 
i
=0; i<
t›
; i++)

54 if(
∂i°
[
i
]*∂i°[i]>
n
)

56 if(
n
%
∂i°
[
i
]==0)

58 
li°
[
¡›
++]=
∂i°
[
i
];

59 ; 
n
%
∂i°
[
i
]==0; )

60 
n
/=
∂i°
[
i
];

63 if(
n
>1)

64 
li°
[
¡›
++]=
n
;

65 
	}
}

67 
LL
 
	$four
(
x
)

69 
LL
 
ªt
=
x
;

70 
ªt
Ùë*
x
%
MOD
;

71 
ªt
Ùë*
x
%
MOD
;

72  
ªt
*
x
%
MOD
;

73 
	}
}

75 
	$dfs
(
œy
,
˙t
,
now
,
n
)

77 if(
œy
==
¡›
)

79 if(
˙t
&1)

81 
ªs
=(‘es-
	`four
(
now
)*
	`gë
(
n
/now)%
MOD
)%MOD+MOD)%MOD;

85 
ªs
=(‘es+
	`four
(
now
)*
	`gë
(
n
/now)%
MOD
)%MOD+MOD)%MOD;

89 
	`dfs
(
œy
+1,
˙t
,
now
,
n
);

90 
	`dfs
(
œy
+1,
˙t
+1,
now
*
li°
[œy],
n
);

91 
	}
}

93 
	$maö
()

95 
	`öô
();

96 
t
,
n
;

97 
	`sˇnf
("%d",&
t
);

98 ;
t
--;)

100 
	`sˇnf
("%d",&
n
);

101 
	`div
(
n
);

102 
ªs
=0;

103 
	`dfs
(0,0,1,
n
);

105 
	`¥ötf
("%I64d\n",
ªs
);

108 
	}
}

	@problems/hdoj/hdu_4203.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	~<Æg‹ôhm
>

5 
	#N
 300100

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mc
; }
	ge
[
N
<<1];

11 
	gvÆ
[
N
],
	gt›
,
	gli°
[N];

12 
LL
 
	gªs
;

14 
	$cmp
(
a
,
b
){  
e
[a].
c
<e[b].c; 
	}
}

16 
	$ö£π
(
f
,
t
,
c
)

18 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c;

19 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

20 
	}
}

22 
	$dfs
(
now
,
p
,
pc
,
LL
 &
nowc
,LL &
nows
)

24 
ve˘‹
<> 
es
;

25 
ve˘‹
<
LL
> 
cc
,
ss
;

26 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

28 if(
e
[
i
].
t
==
p
)

30 
es
.
	`push_back
(
i
);

32 
	`s‹t
(
es
.
	`begö
(),es.
	`íd
(),
cmp
);

33 
LL
 
√xtc
,
√xts
,
sum
=0,
˙t
=0;

34 
nowc
=0,
nows
=0;

35 
¥e
=-1;

36 
i
=0; i<
es
.
	`size
(); i++)

38 
ii
=
es
[
i
];

39 
to
=
e
[
ii
].
t
,
c
=e[ii].c;

40 
	`dfs
(
to
,
now
,
c
,
√xtc
,
√xts
);

41 if(
c
!=
pc
)

42 
nowc
+=
√xtc
+1,
nows
+Úextc*
vÆ
[
now
]+vÆ[
to
]+vÆ[now]+
√xts
;

43 
˙t
+=
√xtc
+1,
sum
+=
√xts
+
vÆ
[
to
];

44 if(
c
!=
¥e
)

46 
cc
.
	`push_back
(
√xtc
+1);

47 
ss
.
	`push_back
(
√xts
+
vÆ
[
to
]);

51 
n
=
cc
.
	`size
();

52 
cc
[
n
-1]+=
√xtc
+1;

53 
ss
[
n
-1]+=
√xts
+
vÆ
[
to
];

55 
¥e
=
c
;

57 
LL
 
r1
=0,
r2
=0;

58 
i
=0; i<
cc
.
	`size
(); i++)

60 
r1
+=
cc
[
i
]*
vÆ
[
now
]+
ss
[i];

61 
r2
+=(
˙t
-
cc
[
i
])*
ss
[i]+cc[i]*(
sum
-ss[i])+(˙t-cc[i])*cc[i]*
vÆ
[
now
];

63 
ªs
+=
r1
+
r2
/2;

64 
	}
}

66 
	$maö
()

68 
n
;

69 
	`sˇnf
("%d",&
n
)!=
EOF
)

71 
t›
=0;

72 
i
=0; i<
n
; i++)

74 
	`sˇnf
("%d",&
vÆ
[
i
]);

75 
li°
[
i
]=-1;

77 
i
=0; i<
n
-1; i++)

79 
x
,
y
,
z
;

80 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

81 
x
--,
y
--;

82 
	`ö£π
(
x
,
y
,
z
);

83 
	`ö£π
(
y
,
x
,
z
);

85 
LL
 
˙t
,
sum
;

86 
ªs
=0;

87 
	`dfs
(0,-1,-1,
˙t
,
sum
);

89 
	`¥ötf
("%I64d\n",
ªs
);

92 
	}
}

	@problems/hdoj/hdu_4245.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<°rög
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
°rög
 
	$gë
(
°rög
 
x
)

8 
°rög
 
ªt
=
x
;

9 if(
ªt
.
	`Àngth
()==2)

11 if(
ªt
[1]=='#')

13 
ªt
[1]='b';

14 if(
ªt
[0]=='G')

15 
ªt
[0]='A';

17 
ªt
[0]++;

18  
ªt
;

22 if(
ªt
[0]=='A')

23 
ªt
[0]='G';

25 
ªt
[0]--;

26 
ªt
[1]='#';

27  
ªt
;

30  
ªt
;

31 
	}
}

33 
	$maö
()

35 
°rög
 
a
,
b
,
c
;

36 
ˇ
=1;

37 
cö
>>
a
>>
b
)

39 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

40 
c
=
	`gë
(
a
);

41 if(
c
==
a
)

42 
	`puts
("UNIQUE");

45 
cout
<<
c
<<" "<<
b
<<
ídl
;

49 
	}
}

	@problems/hdoj/hdu_4246.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 512

	)

5 
	gˇn
[9][
N
],
	gway
[N],
	gthªe
[12],
	gvis
[3][3],
	gdp
[7001],
	gâ
,
	ghash
[6600][N];

6 
	gs
[9][9];

8 
	$öô
()

10 
thªe
[0]=1;

11 
i
=1; i<12; i++)

12 
thªe
[
i
]=three[i-1]*3;

13 
	}
}

15 
ölöe
 
	$gë
(
x
)

17 if(
x
=='B')  1;

18 if(
x
=='G')  2;

20 
	}
}

22 
	$dfs1
(
x
,
y
)

24 if(
x
==0&&
y
==0)  1;

25 if(
x
<0||
y
<0||x>2||y>2||
vis
[x][y])  0;

26 
vis
[
x
][
y
]=1;

27  
	`dfs1
(
x
+1,
y
)||dfs1(x-1,y)||dfs1(x,y+1)||dfs1(x,y-1);

28 
	}
}

30 
	$ok
(
ii
,
now
)

32 
°
=0,
dig
=
now
/
thªe
[8-
ii
];

33 
i
=0; i<9; i++)

34 
°
<<=1,°+=(
now
%3>0),now/=3;

35 if(
ˇn
[
ii
][
°
]>=0)

36  
ˇn
[
ii
][
°
];

37 if(
dig
%3==0)

38  
ˇn
[
ii
][
°
]=0;

39 
i
=0; i<9; i++)

40 
vis
[
i
/3][i%3]=(
°
&(1<<i));

41 
vis
[
ii
/3][ii%3]=0;

42 if(
	`dfs1
(
ii
/3,ii%3))

43  
ˇn
[
ii
][
°
]=1;

44  
ˇn
[
ii
][
°
]=0;

45 
	}
}

47 
	$dfs
(
now
,
w
)

49 if(
hash
[
now
][
w
]==
â
) ;

50 
hash
[
now
][
w
]=
â
;

51 if(
now
==0)

53 
way
[
w
]=
â
;

56 
i
=0; i<9; i++)

58 if(
	`ok
(
i
,
now
))

60 
x
=
now
/
thªe
[8-
i
],
y
;

61 
y
=
x
%3;

62 
x
/=3,x*=
thªe
[9-
i
];

63 
	`dfs
(
x
+
now
%
thªe
[8-
i
],(
w
<<1)+(
y
>1));

66 
	}
}

68 
	$maö
()

70 
°
,
ˇ
=1;

71 
	`mem£t
(
ˇn
,-1,(can));

72 
	`mem£t
(
dp
,-1,(dp));

73 
	`mem£t
(
way
,0,(way));

74 
	`mem£t
(
hash
,0,(hash));

75 
â
=0;

76 
	`öô
();

77 
	`sˇnf
("%s",
s
[0])!=
EOF
)

79 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

80 
i
=1; i<=2; i++)

81 
	`sˇnf
("%s",
s
[
i
]);

82 
°
=0;

83 
i
=0; i<3; i++)

84 
j
=0; j<3; j++)

86 
°
*=3;

87 
°
+=
	`gë
(
s
[
i
][
j
]);

89 
ªt
;

90 if(
dp
[
°
]==-1)

92 
ªt
=0;

93 
â
++;

94 
	`dfs
(
°
,0);

95 
i
=0; i<
N
; i++)

96 if(
way
[
i
]==
â
)

97 
ªt
++;

98 
dp
[
°
]=
ªt
;

101 
ªt
=
dp
[
°
];

102 
	`¥ötf
("%d\n",
ªt
);

105 
	}
}

	@problems/hdoj/hdu_4247.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
usög
 
«me•a˚
 
	g°d
;

5 
	gd
[9];

7 
	$maö
()

9 
ˇ
=1;

10 
	`sˇnf
("%d",&
d
[0])!=
EOF
)

12 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

13 
i
=1; i<4; i++)

14 
	`sˇnf
("%d",&
d
[
i
]);

15 
	`s‹t
(
d
,d+4);

16 
	`¥ötf
("%d\n",
d
[3]+d[2]);

19 
	}
}

	@problems/hdoj/hdu_4248.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	#MOD
 1000000007

	)

5 
	#N
 10001

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
LL
 
	gdp
[101][
N
],
	gc
[N][101];

11 
	$öô
()

13 
c
[0][0]=1;

14 
i
=1; i<
N
; i++)

16 
c
[
i
][0]=1;

17 
j
=1; j<101&&j<
i
; j++)

19 
c
[
i
][
j
]=(c[i-1][j]+c[i-1][j-1])%
MOD
;

21 if(
i
<101)

22 
c
[
i
][i]=1;

24 
	}
}

26 
	$maö
()

28 
n
,
ˇ
=1;

29 
	`öô
();

30 
	`sˇnf
("%d",&
n
)!=
EOF
)

32 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

33 
m
,
âl
;

34 
	`mem£t
(
dp
,0,(dp));

35 
i
=0; i<=
n
; i++)

36 
dp
[
i
][0]=1;

37 
LL
 
ªt
=0;

38 
âl
=0;

39 
i
=1; i<=
n
; i++)

41 
	`sˇnf
("%d",&
m
);

42 
âl
+=
m
;

43 
j
=1; j<=
âl
; j++)

45 
k
=0; k<=
j
&&k<=
m
; k++)

46 
dp
[
i
][
j
]=(dp[i][j]+dp[i-1][j-
k
]*
c
[j][k]%
MOD
)%MOD;

47 if(
i
==
n
)

48 
ªt
=‘ë+
dp
[
i
][
j
])%
MOD
;

51 
cout
<<
ªt
<<
ídl
;

54 
	}
}

	@problems/hdoj/hdu_4249.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	#N
 101

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gs1
[
N
],
	gs2
[N],
	gs3
[N],
	gs
[N];

10 
LL
 
	gdp
[
N
][2];

11 
	gd©
[3][
N
];

13 
	$gë£
(
x
,&
°1
,&
ed1
)

15 if(
x
==-1)

16 
°1
=0,
ed1
=10;

17 if(
x
==-2)

18 
°1
=1,
ed1
=10;

20 
°1
=
x
,
ed1
=x+1;

21 
	}
}

23 
	$maö
()

25 
l
,
l1
,
l2
,
l3
,
ˇ
=1;

26 
	`sˇnf
("%s",
s
)!=
EOF
)

28 
	`mem£t
(
d©
,0,(dat));

29 
	`mem£t
(
dp
,0,(dp));

30 
Œ
=
	`°æí
(
s
),
i
;

31 
i
=0; i<
Œ
; i++)

33 if(
s
[
i
]=='+')

35 
s1
[
i
]=
s
[i];

37 
l1
=
i
;

38 
s1
[
i
++]='\0';

39 ; 
i
<
Œ
; i++)

41 if(
s
[
i
]=='=')

43 
s2
[
i
-
l1
-1]=
s
[i];

45 
l2
=
i
-
l1
-1;

46 
s2
[
l2
]='\0';

47 
i
++;

48 ; 
i
<
Œ
; i++)

49 
s3
[
i
-
l1
-
l2
-2]=
s
[i];

50 
l3
=
Œ
-
l1
-
l2
-2;

51 
s3
[
l3
]='\0';

52 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

53 
i
=0; i<
l1
; i++)

54 
d©
[0][
l1
-
i
-1]=(
s1
[i]=='?')?-1:s1[i]-'0';

55 
i
=0; i<
l2
; i++)

56 
d©
[1][
l2
-
i
-1]=(
s2
[i]=='?')?-1:s2[i]-'0';

57 
i
=0; i<
l3
; i++)

58 
d©
[2][
l3
-
i
-1]=(
s3
[i]=='?')?-1:s3[i]-'0';

59 
l
=
	`max
(
l1
,max(
l2
,
l3
));

60 if(
s1
[0]=='?'&&
l1
>1)

61 
d©
[0][
l1
-1]=-2;

62 if(
s2
[0]=='?'&&
l2
>1)

63 
d©
[1][
l2
-1]=-2;

64 if(
s3
[0]=='?'&&
l3
>1)

65 
d©
[2][
l3
-1]=-2;

66 
dp
[0][0]=1;

67 
°1
,
ed1
,
°2
,
ed2
,
°3
,
ed3
;

68 
i
=1; i<=
l
; i++)

70 
	`gë£
(
d©
[0][
i
-1],
°1
,
ed1
);

71 
u
=
°1
; u<
ed1
; u++)

73 
	`gë£
(
d©
[1][
i
-1],
°2
,
ed2
);

74 
v
=
°2
; v<
ed2
; v++)

76 
	`gë£
(
d©
[2][
i
-1],
°3
,
ed3
);

77 
t
=
°3
;Å<
ed3
;Å++)

79 if(
u
+
v
-
t
==-1)

80 
dp
[
i
][0]+=dp[i-1][1];

81 if(
u
+
v
-
t
==9)

82 
dp
[
i
][1]+=dp[i-1][1];

83 if(
u
+
v
-
t
==0)

84 
dp
[
i
][0]+=dp[i-1][0];

85 if(
u
+
v
-
t
==10)

86 
dp
[
i
][1]+=dp[i-1][0];

91 
cout
<<
dp
[
l
][0]<<
ídl
;

94 
	}
}

	@problems/hdoj/hdu_4250_classic.cpp

2 
	~<c°dio
>

3 
	~<m≠
>

4 
	~<Æg‹ôhm
>

5 
	~<c°rög
>

6 
	#S
 200001

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mi
; }
	ge
[
S
<<1],
	ges
[S];

10 
	gn
,
	gm
,
	gö
[
S
],
	gt›
,
	gli°
[S],
	gvis
[S],
	gdñ
[2],
	gdeg
[S],
	godd
[S];

11 
	geg
[
S
][2];

12 
	gˇ
=1;

13 
	gm≠
<
	g∑ú
<,>,> 
	gids
;

15 
	suföd


17 
	mp
[
S
];

18 
öô
(){ 
	mi
=0; i<
	mn
; i++Ë
	mp
[
i
]=i; }

19 
run
(&
x
)

21 
	my
=
x
,
	mt
;

22 ; 
	mp
[
x
]!=x; 
	mx
=
p
[x]);

23 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

25 
£t‰õnd
(
i
,
j
)

27 
run
(
i
);

28 
run
(
j
);

29 
	mp
[
i
]=
j
;

31 
is‰õnd
(
i
,
j
)

33 
run
(
i
);

34 
run
(
j
);

35  
	mi
==
j
;

38 }
	guf
,
	guf1
;

40 
	g∑ú
<,> 
	$mp
(
x
,
y
){  
	`make_∑ú
(
	`mö
(x,y),
	`max
(x,y)); 
	}
}

42 
	$ö£π
(
f
,
t
,
i
)

44 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
i
=i;

45 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

46 
	}
}

48 
	$c⁄
(
u
,
v
)

50 
ªt
=0;

51 
uf1
.
	`öô
();

52 
i
=0; i<
m
; i++)

54 if(
i
==
u
||i==
v
)

56 if(
uf1
.
	`is‰õnd
(
es
[
i
].
f
,es[i].
t
)==0)

57 
ªt
++;

58 
uf1
.
	`£t‰õnd
(
es
[
i
].
f
,es[i].
t
);

60  (
ªt
==
n
-1);

61 
	}
}

63 
	$ok
(&
˙t
)

65 
˙t
=0;

66 
t›
=0;

67 
ids
.
	`˛ór
();

68 
i
=0; i<
n
; i++)

69 
ö
[
i
]=0,
li°
[i]=-1;

70 
i
=0; i<
m
; i++)

72 
	`sˇnf
("%d%d",&
es
[
i
].
f
,&es[i].
t
);

73 
es
[
i
].
f
--,es[i].
t
--;

75 
ids
[
	`mp
(
es
[
i
].
f
,es[i].
t
)]=i;

76 
es
[
i
].i=i;

77 
ö
[
es
[
i
].
f
]++,ö[es[i].
t
]++;

78 
	`ö£π
(
es
[
i
].
f
,es[i].
t
,i);

79 
	`ö£π
(
es
[
i
].
t
,es[i].
f
,i);

81 
i
=0; i<
n
; i++)

83 if(
ö
[
i
]<=1)

85 if(
ö
[
i
]&1)

86 
odd
[
˙t
++]=
i
;

89 
	}
}

91 
	$sﬁve
()

93 
˙t
;

94 if(!
	`ok
(
˙t
))

96 if(!
	`c⁄
(-1,-1))

98 if(
˙t
>=6||(cnt&1)||cnt==0)

100 if(
˙t
==4)

102 
c
,
x
,
y
,
a
[2],
u
,
v
,
i
=0;

103 
dñ
[0]=
S
,del[1]=S;

104 
j
=1; j<4; j++)

106 
c
=0;

107 
k
=0; k<4; k++)

109 if(
k
==
i
||k==
j
)

111 
a
[
c
++]=
odd
[
k
];

113 
x
=
odd
[
i
],
y
=odd[
j
];

114 if(
ids
.
	`cou¡
(
	`mp
(
x
,
y
))>0&&ids.cou¡(mp(
a
[0],a[1]))>0)

116 
u
=
ids
[
	`mp
(
x
,
y
)];

117 
v
=
ids
[
	`mp
(
a
[0],a[1])];

118 if(
	`c⁄
(
u
,
v
)&&
	`mö
(u,v)<
dñ
[0])

120 
dñ
[0]=
	`mö
(
u
,
v
);

121 
dñ
[1]=
	`max
(
u
,
v
);

125  
dñ
[0]<
S
;

127 
c
=2,
x
,
y
;

128 
i
=0; i<
n
; i++)

129 
deg
[
i
]=0;

130 
i
=0; i<
m
; i++)

132 
x
=
es
[
i
].
f
,
y
Ûs[i].
t
;

133 if(
x
==
odd
[0]||x==odd[1])

135 
eg
[
y
][
deg
[y]]=
i
,deg[y]++;

137 if(
y
==
odd
[0]||y==odd[1])

139 
eg
[
x
][
deg
[x]]=
i
,deg[x]++;

142 
uf
.
	`öô
();

143 
i
=0; i<
m
; i++)

145 
x
=
es
[
i
].
f
,
y
Ûs[i].
t
;

146 if(
x
==
odd
[0]||x==odd[1]||
y
==odd[0]||y==odd[1])

148 
uf
.
	`£t‰õnd
(
x
,
y
);

150 
i
=0; i<
n
; i++)

151 
ö
[
i
]=0;

152 
i
=0; i<
n
; i++)

154 if(
i
==
odd
[0]||i==odd[1])

156 
p
=
i
;

157 
uf
.
	`run
(
p
);

158 
ö
[
p
]+=
deg
[
i
];

160 
¥b
[2],
p
;

161 
c
=0;

162 
i
=0; i<
m
&&
c
<2; i++)

164 
x
=
es
[
i
].
f
,
y
Ûs[i].
t
;

165 if((
x
==
odd
[0]||x==odd[1])&&(
y
==odd[0]||y==odd[1]))

167 if(
x
==
odd
[0]||x==odd[1])

169 if(
deg
[
y
]<2)

171 
p
=
y
;

172 
uf
.
	`run
(
p
);

173 if(
ö
[
p
]>=3)

175 if(
c
==0)

176 
¥b
[
c
++]=
y
;

177 if(
¥b
[0]!=
y
)

178 
¥b
[
c
++]=
y
;

182 if(
y
==
odd
[0]||y==odd[1])

184 if(
deg
[
x
]<2)

186 
p
=
x
;

187 
uf
.
	`run
(
p
);

188 if(
ö
[
p
]>=3)

190 if(
c
==0)

191 
¥b
[
c
++]=
x
;

192 if(
¥b
[0]!=
x
)

193 
¥b
[
c
++]=
x
;

197 if(
c
==0)

199 
now
=
¥b
[0];

200 if(
	`c⁄
(
eg
[
now
][0],eg[now][1]))

202 
dñ
[0]=
eg
[
now
][0];

203 
dñ
[1]=
eg
[
now
][1];

206 if(
c
==2)

208 
now
=
¥b
[1];

209 
dñ
[0]=
eg
[
now
][0];

210 
dñ
[1]=
eg
[
now
][1];

214 
	}
}

216 
	$maö
()

218 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

220 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

221 if(
	`sﬁve
())

223 
	`puts
("YES");

224 
	`¥ötf
("%d %d\n",
dñ
[0]+1,del[1]+1);

227 
	`puts
("NO");

230 
	}
}

	@problems/hdoj/hdu_4251.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 100011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	g≥rm
[
N
],
	gd©
[N],
	g˙t
[20][N],
	gåì
[20][N];

8 
	$cmp
(
a
,
b
){ á<b; 
	}
}

10 
	$buûd
(
c
,
l
,
r
)

12 
mid
=(
l
+
r
)>>1,
lc
=mid-l+1,
Õ
ˆ,
Ω
=mid+1;

13 if(
l
==
r
) ;

14 
i
=
l
; i<=
mid
; i++)

15 if(
≥rm
[
i
]<≥rm[
mid
])

16 
lc
--;

17 
i
=
l
; i<=
r
; i++)

19 if(
i
==
l
)

20 
˙t
[
c
][
i
]=0;

22 
˙t
[
c
][
i
]=cnt[c][i-1];

23 if(
åì
[
c
][
i
]==
≥rm
[
mid
])

25 if(
lc
>0)

27 
lc
--;

28 
˙t
[
c
][
i
]++;

29 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

32 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

34 if(
åì
[
c
][
i
]<
≥rm
[
mid
])

36 
˙t
[
c
][
i
]++;

37 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

40 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

42 
	`buûd
(
c
+1,
l
,
mid
);

43 
	`buûd
(
c
+1,
mid
+1,
r
);

44 
	}
}

46 
	$quîy
(
c
,
l
,
r
,
ql
,
qr
,
k
)

48 if(
l
==
r
Ë 
≥rm
[l];

49 
c1
,
c2
=
˙t
[
c
][
qr
],
mid
=(
l
+
r
)>>1,
d1
=
ql
-l,
d2
=qr-ql+1;

50 if(
ql
==
l
Ë
c1
=0;

51 
c1
=
˙t
[
c
][
ql
-1];

52 
c2
-=
c1
;

53 if(
k
<=
c2
)

54  
	`quîy
(
c
+1,
l
,
mid
,l+
c1
,l+c1+
c2
-1,
k
);

56  
	`quîy
(
c
+1,
mid
+1,
r
,mid+1+
d1
-
c1
,mid+d1+
d2
-c1-
c2
,
k
-c2);

57 
	}
}

59 
	$maö
()

61 
n
,
m
,
ˇ
=1;

62 
	`sˇnf
("%d",&
n
)!=
EOF
)

64 
	`¥ötf
("Ca£ %d:\n",
ˇ
++);

65 
i
=1; i<=
n
; i++)

67 
	`sˇnf
("%d",&
d©
[
i
]);

68 
åì
[0][
i
]=
≥rm
[i]=
d©
[i];

70 
	`s‹t
(
≥rm
+1,≥rm+1+
n
,
cmp
);

71 
	`buûd
(0,1,
n
);

72 
	`sˇnf
("%d",&
m
);

73 
x
,
y
,
k
;

74 
i
=0; i<
m
; i++)

76 
	`sˇnf
("%d%d",&
x
,&
y
);

77 
k
=(
y
-
x
+2)>>1;

78 
	`¥ötf
("%d\n",
	`quîy
(0,1,
n
,
x
,
y
,
k
));

82 
	}
}

	@problems/hdoj/hdu_4252.cpp

1 
	~<c°dio
>

2 
	~<£t
>

3 
usög
 
«me•a˚
 
	g°d
;

4 
	#N
 100010

	)

6 
	g°
[
N
];

8 
	$maö
()

10 
n
,
ªt
,
x
,
ˇ
=1,
t›
;

11 
	`sˇnf
("%d",&
n
)!=
EOF
)

13 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

14 
t›
=0,
ªt
=0;

15 
i
=0; i<
n
; i++)

17 
	`sˇnf
("%d",&
x
);

18 if(
x
==0)

20 
ªt
+=
t›
;

21 
t›
=0;

24 if(
t›
==0)

26 
°
[
t›
++]=
x
;

29 if(
°
[
t›
-1]>=
x
)

31 ; 
t›
>0&&
°
[t›-1]>=
x
; )

33 if(
°
[
t›
-1]>
x
Ë
ªt
++;

34 
t›
--;

36 
°
[
t›
++]=
x
;

39 
°
[
t›
++]=
x
;

41 
ªt
+=
t›
;

42 
	`¥ötf
("%d\n",
ªt
);

45 
	}
}

	@problems/hdoj/hdu_4253.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 200011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	ml
,
	mi
; }
	ge
[
N
];

7 
	gn
,
	gm
,
	gk
,
	gmx
,
	gadd
,
	gâl
;

9 
	suföd


11 
	mp
[
N
];

12 
öô
(){ 
	mi
=0; i<
	mn
; i++Ë
	mp
[
i
]=i; }

13 
run
(&
x
)

15 
	my
=
x
,
	mt
;

16 ; 
	mp
[
x
]!=x; 
	mx
=
p
[p[x]]);

17 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

19 
£t‰õnd
(
i
,
j
)

21 
run
(
i
);

22 
run
(
j
);

23 
	mp
[
i
]=
j
;

25 
is‰õnd
(
i
,
j
)

27 
run
(
i
);

28 
run
(
j
);

29  
	mi
==
j
;

31 }
	guf
;

33 
	$cmp
(
edge
 
a
,edgê
b
)

35 
œ
=
a
.
l
+◊.
i
==0)*
add
,
lb
=
b
.l+(b.i==0)*add;

36  
œ
==
lb
?
a
.
i
<
b
.i:la<lb;

37 
	}
}

39 
	$cou¡a
()

41 
ªt
=0,
f
,
t
,
j
=0;

42 
âl
=0;

43 
uf
.
	`öô
();

44 
i
=0; i<
m
&&
j
<
n
; i++)

46 
f
=
e
[
i
].f,
t
=e[i].t;

47 if(
uf
.
	`is‰õnd
(
f
,
t
))

49 
uf
.
	`£t‰õnd
(
f
,
t
);

50 
j
++;

51 
âl
+=
e
[
i
].
l
;

52 if(
e
[
i
].i==0)

53 
ªt
++,
âl
+=
add
;

55  
ªt
;

56 
	}
}

58 
	$sﬁve
()

60 
l
=-
mx
,
r
=mx,
mid
,
c
;

61 ; 
l
<=
r
; )

63 
mid
=(
l
+
r
)>>1;

64 
add
=
mid
;

65 
	`s‹t
(
e
,e+
m
,
cmp
);

66 
c
=
	`cou¡a
();

67 if(
c
>=
k
)

68 
l
=
mid
+1;

70 
r
=
mid
-1;

72 
add
=
r
;

73 
	`s‹t
(
e
,e+
m
,
cmp
);

74 
c
=
	`cou¡a
();

75 
	}
}

77 
	$maö
()

79 
ˇ
=1;

80 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)!=
EOF
)

82 
mx
=0;

83 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

84 
i
=0; i<
m
; i++)

86 
	`sˇnf
("%d%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
l
,&e[i].i);

87 
e
[
i
].
l
*=2;

88 
mx
=
	`max
(
e
[
i
].
l
,mx);

90 
	`sﬁve
();

91 
	`¥ötf
("%d\n",(
âl
-
k
*
add
)/2);

94 
	}
}

	@problems/hdoj/hdu_4254.cpp

1 
	~<c°dio
>

2 
	#öf
 1e8

	)

4 
	$maö
()

6 
n
,
p
,
q
,
ˇ
=1;

7 
ªt
,
now
,
âl
;

8 
	`sˇnf
("%d%d%d",&
n
,&
p
,&
q
)!=
EOF
)

10 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

11 
ªt
=0;

12 
âl
=1;

13 
now
=1;

14 
i
=
q
+1; i<=
n
-
p
+q; i++)

16 
now
/=
n
-
i
+1;

17 
now
*=
i
;

18 
now
*=
n
-
i
-
p
+
q
+1;

19 
ªt
+=
now
;

20 
now
/=
i
-
q
;

21 
âl
+=
now
;

22 ; 
âl
>
öf
||
ªt
>öf||
now
>inf; )

23 
âl
/=
öf
,
ªt
/=öf,
now
/=inf;

25 
ªt
*=1.0/(
n
-
p
);

26 
ªt
Ùë/
âl
;

27 
	`¥ötf
("%.4lf\n",
ªt
);

30 
	}
}

	@problems/hdoj/hdu_4255.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 400

	)

4 
	#S
 160001

	)

5 
	#M
 160011

	)

6 
	#X
 200

	)

7 
	#Y
 200

	)

9 
	snode
{ 
	mx
,
	my
,
	m˙t
; }
	gno
[
S
],
	gq
[S];

10 
	gdú
[4][2]={{-1,0},{0,-1},{1,0},{0,1}},
	gp
[
M
],
	g∂i°
[M],
	gm©
[
N
][N],
	gvis
[N][N],
	gt›
;

12 
ölöe
 
	$öbﬂrd
(
x
,
y
){  0<=x&&x<
N
&&0<=y&&y<N; 
	}
}

14 
	$fûl
(
x
,
y
,
°
,
r
)

16 
i
=0; i<4; i++)

18 
j
=0; j<
r
; j++)

20 if(!(
i
==0&&
j
==0))

21 
x
+=
dú
[
i
][0],
y
+=dir[i][1];

22 
m©
[
x
][
y
]=
°
;

23 
no
[
°
].
x
=x,no[°].
y
=y;

24 
°
++;

27 
	}
}

29 
	$öô
()

31 
x
,
y
,
i
,
j
;

32 
	`mem£t
(
m©
,-1,(mat));

33 
no
[1].
x
=
X
;

34 
no
[1].
y
=
Y
;

35 
m©
[
X
][
Y
]=1;

36 
x
=
X
,
y
=
Y
+1,
j
=2;

37 
i
=2; 
x
<260; i+=
j
*4,j+=2)

39 
	`fûl
(
x
,
y
,
i
,
j
);

40 
x
++,
y
++;

42 
t›
=0;

43 
p
[0]=-1,p[1]=-1;

44 
i
=2; i<
M
; i++)

45 
p
[
i
]=i;

46 
i
=2; i<
M
; i++)

48 if(
p
[
i
]==i)

49 
∂i°
[
t›
++]=
i
;

50 
j
=0; j<
t›
&&
∂i°
[j]*
i
<
M
; j++)

52 
p
[
∂i°
[
j
]*
i
]=plist[j];

53 if(
i
%
∂i°
[
j
]==0)

57 
	}
}

59 
	$sﬁve
(
node
 
°
,nodê
ed
)

61 
l
,
r
;

62 
°
.
˙t
=0;

63 
i
=140; i<260; i++)

64 
j
=140; j<260; j++)

65 
vis
[
i
][
j
]=0;

66 
q
[
l
=
r
=0]=
°
;

67 
vis
[
°
.
x
][°.
y
]=1;

68 ; 
l
<=
r
; )

70 
node
 
now
=
q
[
l
++],
√xt
;

71 if(
now
.
x
==
ed
.x&&now.
y
==ed.y)

72  
now
.
˙t
;

73 
i
=0; i<4; i++)

75 
x
=
now
.x+
dú
[
i
][0],
y
=now.y+dir[i][1];

76 if(!
	`öbﬂrd
(
x
,
y
))

78 if(
vis
[
x
][
y
])

80 if(
m©
[
x
][
y
]<=0)

82 
√xt
.
x
=x,√xt.
y
=y;

83 
√xt
.
˙t
=
now
.cnt+1;

84 if(
√xt
.
x
==
ed
.x&&√xt.
y
==ed.y)

85  
√xt
.
˙t
;

86 if(
p
[
m©
[
x
][
y
]]==mat[x][y])

88 
q
[++
r
]=
√xt
;

89 
vis
[
√xt
.
x
][√xt.
y
]=1;

93 
	}
}

95 
	$maö
()

97 
	`öô
();

98 
a
,
b
,
ˇ
=1,
ªt
;

99 
	`sˇnf
("%d%d",&
a
,&
b
)!=
EOF
)

101 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

103 
ªt
=
	`sﬁve
(
no
[
a
],no[
b
]);

104 if(
ªt
>=0)

105 
	`¥ötf
("%d\n",
ªt
);

107 
	`puts
("impossible");

110 
	}
}

	@problems/hdoj/hdu_4256.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	~<°rög
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gªt
[21][100]={"","I","II" ,"III" ,"IV", "V", "VI" ,"VII", "VIII","IX","X","XI","XII"};

8 
	gm≠
<
	g°rög
,> 
	gmp
;

9 
	gs
[100];

11 
	$maö
()

13 
n
,
ˇ
=1;

14 
i
=1; i<=12; i++)

15 
mp
[
	`°rög
(
ªt
[
i
])]=i;

16 
	`sˇnf
("%s",&
s
)!=
EOF
)

18 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

19 
	`¥ötf
("%d\n",
mp
[
	`°rög
(
s
)]);

22 
	}
}

	@problems/hdoj/hdu_4291.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	tLL
;

5 c⁄° 
	gMOD
=1000000007;

6 c⁄° 
	gX
=222222224;

8 
LL
 
	gm©
[2][2]={3,1,1,0},
	gªt
[2][2],
	gtmp
[2][2];

10 
	$mul
(
LL
 
a
[][2],LL 
b
[][2],LL 
c
[][2],
mod
)

12 
	`mem£t
(
tmp
,0,(tmp));

13 
i
=0; i<2; i++)

14 
j
=0; j<2; j++)

15 
k
=0; k<2; k++)

16 
tmp
[
i
][
j
]=—mp[i][j]+
b
[i][
k
]*
c
[k][j])%
mod
;

17 
i
=0; i<2; i++)

18 
j
=0; j<2; j++)

19 
a
[
i
][
j
]=
tmp
[i][j];

20 
	}
}

22 
	$show
(
LL
 
ªt
[][2])

24 
i
=0; i<2; i++,
	`puts
(""))

25 
j
=0; j<2; j++)

26 
	`¥ötf
("%Œd ",
ªt
[
i
][
j
]);

27 
	}
}

29 
LL
 
	$g
(
LL
 
n
,
mod
)

31 if(
n
==0)

33 
n
--;

34 
	`mem£t
(
ªt
,0,(ret));

35 
ªt
[1][1]=ret[0][0]=1;

36 
m©
[0][0]=3,mat[0][1]=1,mat[1][0]=1,mat[1][1]=0;

37 ; 
n
;Ç>>=1)

39 if(
n
&1)

40 
	`mul
(
ªt
,ªt,
m©
,
mod
);

41 
	`mul
(
m©
,m©,m©,
mod
);

43  
ªt
[0][0];

44 
	}
}

46 
	$maö
()

48 
LL
 
n
;

49 
	`sˇnf
("%I64d",&
n
)!=
EOF
)

52 
n
%=240;

54 
	`¥ötf
("%I64d\n",
	`g
(g(g(
n
,183120),
X
),
MOD
));

68 
	}
}

	@problems/hdoj/hdu_4293.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<m≠
>

4 
	~<Æg‹ôhm
>

5 
	#N
 511

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gm≠
<,> 
	gmp
;

9 
	gm≠
<,>::
ôî©‹
 
ô
;

11 
	gdp
[
N
];

13 
	snode
{ 
	ml
,
	mr
,
	mc
; }
	gqu
[
N
];

14 
	$cmp
(
node
 
a
,nodê
b
){ á.
r
==b.r?a.
l
<b.l:a.r<b.r; 
	}
}

16 
	$maö
()

18 
ªt
=0,
n
;

19 
	`sˇnf
("%d",&
n
)!=
EOF
)

21 
a
,
b
,
l
,
r
;

22 
mp
.
	`˛ór
();

23 
i
=0; i<
n
; i++)

25 
	`sˇnf
("%d%d",&
a
,&
b
);

26 
l
=
a
+1;

27 
r
=
n
-
b
;

28 if(
l
>
r
)

30 
mp
[
l
*
N
+
r
]++;

32 
t›
=0;

33 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++)

35 
l
=
ô
->
fú°
/
N
,
r
=it->first%N;

36 
qu
[
t›
].
l
ˆ,qu[t›].
r
=r;

37 
qu
[
t›
].
c
=(
r
-
l
+1)>(
ô
->
£c⁄d
)?it->second:r-l+1;

38 
t›
++;

40 
	`s‹t
(
qu
,qu+
t›
,
cmp
);

41 
	`mem£t
(
dp
,0,(dp));

42 
i
=0; i<
t›
; i++)

44 
dp
[
qu
[
i
].
r
]=
	`max
(dp[qu[i].r],dp[qu[i].
l
-1]+qu[i].
c
);

45 
j
=
qu
[
i
].
r
; j<=
n
; j++)

46 
dp
[
j
]=
	`max
(dp[j],dp[
qu
[
i
].
r
]);

48 
	`¥ötf
("%d\n",
dp
[
n
]);

51 
	}
}

	@problems/hdoj/hdu_4294.cpp

1 
	~<c°dio
>

2 
	~<£t
>

3 
	~<Æg‹ôhm
>

4 
	~<c°rög
>

5 
	#N
 10001

	)

6 
	#S
 1000001

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gn
,
	gk
,
	gbe°
,
	gªtc
,
	gªtid
;

10 
	gdp
[
N
],
	gTT
;

11 
	gvis
[
N
][1025];

12 
	snode
{ 
	mx
,
	md
,
	mp
,
	mc
,
	m°
; }
	gq
[
S
];

14 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

16 
	$sﬁve
()

18 
l
,
r
,
nowdp
;

19 
i
=0; i<
N
; i++)

20 
dp
[
i
]=11;

21 
ªtc
=
k
+1;

22 
q
[
l
=
r
=0].
p
=-1;

23 
q
[0].
c
=0,q[0].
x
=0,q[0].
d
=0,q[0].
°
=0;

24 ; 
l
<=
r
;Ü++)

26 
node
 
now
=
q
[
l
],
√xt
;

27 if(
now
.
c
>=
ªtc
)

29 if(
now
.
c
>
dp
[now.
x
])

31 if(
now
.
x
==0&&now.
p
!=-1)

33 
i
=0; i<
k
; i++)

35 if(
i
==0&&
now
.
p
==-1)

37 
√xt
.
x
=(
now
.x*
k
+
i
)%
n
;

38 
√xt
.
d
=
i
;

39 
√xt
.
p
=
l
;

40 if(
now
.
°
&
	`B
(
i
))

42 
√xt
.
c
=
now
.c;

43 
√xt
.
°
=
now
.st;

47 
√xt
.
c
=
now
.c+1;

48 
√xt
.
°
=
now
.°+
	`B
(
i
);

50 if(
√xt
.
c
>=
ªtc
)

52 if(
√xt
.
c
>
dp
[√xt.
x
])

54 if(
vis
[
√xt
.
x
][√xt.
°
]==
TT
)

56 
vis
[
√xt
.
x
][√xt.
°
]=
TT
;

57 
q
[++
r
]=
√xt
;

58 
dp
[
√xt
.
x
]=
	`mö
(dp[√xt.x],√xt.
c
);

59 if(
√xt
.
x
==0)

61 if(
√xt
.
c
<
ªtc
)

63 
ªtc
=
√xt
.
c
;

64 
ªtid
=
r
;

69 
	}
}

71 
	$show
(
i
)

73 if(
q
[
i
].
p
==-1)

75 
	`show
(
q
[
i
].
p
);

76 
	`¥ötf
("%d",
q
[
i
].
d
);

77 
	}
}

79 
	$maö
()

81 
	`mem£t
(
vis
,0,(vis));

82 
TT
=0;

83 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

85 
TT
++;

86 
	`sﬁve
();

87 
	`show
(
ªtid
);

88 
	`puts
("");

91 
	}
}

	@problems/hdoj/hdu_4301.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 100000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gg
[
N
][2*N],
	gf
[N][2*N];

36 
	$maö
()

38 
	`mem£t
(
f
,0,(f));

39 
	`mem£t
(
g
,0,(g));

40 
i
=1; i<
N
; i++)

41 
g
[
i
][1]=1;

42 
f
[1][2]=1;

43 
i
=2; i<
N
; i++)

44 
j
=2; j<=
i
+i; j++)

46 
f
[
i
][
j
]=((f[i-1][j-2]+
g
[i-1][j-2])+2*(f[i-1][j-1]+g[i-1][j-1])+f[i-1][j])%
MOD
;

47 
g
[
i
][
j
]=((
f
[i-1][j-1]+g[i-1][j-1])+(f[i-1][j]+g[i-1][j])+f[i-1][j])%
MOD
;

49 
t
;

50 
	`sˇnf
("%d",&
t
);

51 
t
--)

53 
x
,
y
;

54 
	`sˇnf
("%d%d",&
x
,&
y
);

55 
cout
<<(
f
[
x
][
y
]+
g
[x][y])%
MOD
<<
ídl
;

58 
	}
}

	@problems/hdoj/hdu_4302.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3ffffff

	)

5 
	#N
 100001

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	ml
,
	mr
,
	mÕ
,
	mΩ
,
	m˙t
;

10 
gm
(){  (
	ml
+
	mr
)>>1; }

11 }
	gno
[
N
<<2];

12 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

13 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

15 
	$buûd
(
id
,
l
,
r
)

17 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
˙t
=0;

18 if(
l
==
r
)

20 
	`buûd
(
	`L
(
id
),
l
,
no
[id].
	`gm
());

21 
	`buûd
(
	`R
(
id
),
no
[id].
	`gm
()+1,
r
);

22 
	}
}

24 
	$upd©e
(
id
,
p
,
x
)

26 
mid
=
no
[
id
].
	`gm
();

27 if(
no
[
id
].
l
=Úo[id].
r
)

29 
no
[
id
].
˙t
+=
x
;

30 
no
[
id
].
Õ
Úo[id].
Ω
Úo[id].
l
;

33 if(
p
<=
mid
Ë
	`upd©e
(
	`L
(
id
),p,
x
);

34 
	`upd©e
(
	`R
(
id
),
p
,
x
);

35 
no
[
id
].
˙t
Úo[
	`L
(id)].˙t+no[
	`R
(id)].cnt;

36 
no
[
id
].
Õ
Úo[
	`L
(id)].
˙t
>0?no[L(id)].Õ:no[
	`R
(id)].lp;

37 
no
[
id
].
Ω
Úo[
	`R
(id)].
˙t
>0?no[R(id)].Ω:no[
	`L
(id)].rp;

38 
	}
}

40 
	$quîy
(
id
,
Œ
,
º
,
èg
)

42 if(
no
[
id
].
˙t
==0)

43  
öf
;

44 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
Úo[id].
	`gm
(),
ªt
;

45 if(
l
>=
Œ
&&
r
<=
º
)

46  
èg
>0?
no
[
id
].
Õ
:no[id].
Ω
;

47 if(
èg
==1)

49 
ªt
=
öf
;

50 if(
mid
>=
Œ
&&
l
<=
º
)

52 
ªt
=
	`quîy
(
	`L
(
id
),
Œ
,
º
,
èg
);

53 if(
ªt
<
öf
)

54  
ªt
;

56 if(
mid
<
º
&&
r
>=
Œ
)

58 
ªt
=
	`quîy
(
	`R
(
id
),
Œ
,
º
,
èg
);

63 
ªt
=
öf
;

64 if(
mid
<
º
&&
r
>=
Œ
)

66 
ªt
=
	`quîy
(
	`R
(
id
),
Œ
,
º
,
èg
);

67 if(
ªt
<
öf
)

68  
ªt
;

70 if(
mid
>=
Œ
&&
l
<=
º
)

71 
ªt
=
	`quîy
(
	`L
(
id
),
Œ
,
º
,
èg
);

73  
ªt
;

74 
	}
}

76 
	$maö
()

78 
ts
,
Àn
,
n
,
pos
,
dú
;

79 
	`sˇnf
("%d",&
ts
);

80 
ˇ
=1; ca<=
ts
; ca++)

82 
	`¥ötf
("Ca£ %d: ",
ˇ
);

83 
	`sˇnf
("%d%d",&
Àn
,&
n
);

84 
	`buûd
(1,1,
Àn
+1);

85 
pos
=1,
dú
=0;

86 
LL
 
ªt
=0;

87 
i
=0; i<
n
; i++)

89 
x
;

90 
	`sˇnf
("%d",&
x
);

91 if(
x
==1)

93 
Õ
,
Ω
,
nowp
;

94 
Õ
=
	`quîy
(1,1,
pos
,-1);

95 
Ω
=
	`quîy
(1,
pos
,
Àn
+1,1);

96 if(
Õ
==
öf
&&
Ω
==inf)

98 if(
	`abs
(
pos
-
Õ
)=˜bs(
Ω
-pos))

100 if(
dú
==1)

101 
nowp
=
Ω
;

103 
nowp
=
Õ
;

107 if(
	`abs
(
pos
-
Õ
)>abs(
Ω
-pos))

108 
nowp
=
Ω
;

110 
nowp
=
Õ
;

112 
	`upd©e
(1,
nowp
,-1);

113 
ªt
+=
	`abs
(
nowp
-
pos
);

114 if(
nowp
<
pos
)

115 
dú
=-1;

116 if(
nowp
>
pos
)

117 
dú
=1;

118 
pos
=
nowp
;

122 
	`sˇnf
("%d",&
x
);

123 
x
++;

124 
	`upd©e
(1,
x
,1);

127 
	`¥ötf
("%Œd\n",
ªt
);

130 
	}
}

	@problems/hdoj/hdu_4325.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 501000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	mx
,
	mt
; }
	gno
[
N
];

35 
	gt›
,
	gxx
[
N
],
	gç
,
	gªt
[N],
	gq
[N];

37 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
==b.x?a.
t
>b.t:a.x<b.x; 
	}
}

38 
	$cmp1
(
x
,
y
){  x<y; 
	}
}

40 
	$gë_id
(
x
)

42 
l
=0,
r
=
ç
-1,
mid
;

43 ; 
l
<=
r
;)

45 
mid
=(
l
+
r
)>>1;

46 if(
xx
[
mid
]<
x
)

47 
l
=
mid
+1;

48 if(
xx
[
mid
]>
x
)

49 
r
=
mid
-1;

50  
mid
;

53 
	}
}

55 
	$maö
()

57 
t
,
n
,
ˇ
=1,
m
;

58 
	`sˇnf
("%d",&
t
);

59 ; 
ˇ
<=
t
; ca++)

61 
	`¥ötf
("Ca£ #%d:\n",
ˇ
);

62 
	`sˇnf
("%d%d",&
n
,&
m
);

63 
t›
=0,
ç
=0;

64 
i
=0; i<
n
; i++)

66 
x
,
y
;

67 
	`sˇnf
("%d%d",&
x
,&
y
);

68 
no
[
t›
].
x
=x,no[t›++].
t
=1;

69 
no
[
t›
].
x
=
y
+1,no[t›++].
t
=-1;

71 
i
=0; i<
m
; i++)

73 
x
;

74 
	`sˇnf
("%d",&
x
);

75 
xx
[
ç
++]=
x
;

76 
q
[
i
]=
x
;

78 
	`s‹t
(
xx
,xx+
ç
,
cmp1
);

79 
	`s‹t
(
no
,no+
t›
,
cmp
);

80 
¥e
=
xx
[0];

81 
¡p
=1;

82 
i
=1; i<
ç
; i++)

84 if(
¥e
==
xx
[
i
])

88 
xx
[
¡p
++]=xx[
i
];

89 
¥e
=
xx
[
i
];

92 
ç
=
¡p
;

93 
˙t
=0,
j
=0;

94 
i
=0; i<
ç
; i++)

96 ; 
no
[
j
].
x
<=
xx
[
i
]&&j<
t›
; j++)

97 
˙t
+=
no
[
j
].
t
;

98 
ªt
[
i
]=
˙t
;

100 
i
=0; i<
m
; i++)

102 
id
=
	`gë_id
(
q
[
i
]);

103 
	`¥ötf
("%d\n",
ªt
[
id
]);

107 
	}
}

	@problems/hdoj/hdu_4339.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1000011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	ml
,
	mr
,
	mlv
,
	mrv
;

8 
Àn
(){  
	mr
-
	ml
+1; }

9 }
	gno
[
N
<<2];

11 
	gs1
[
N
],
	gs2
[N];

12 
	gn
,
	gl1
,
	gl2
;

13 
	gd©
[
N
];

15 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

16 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

18 
	$up
(
id
,
l
,
r
)

20 
no
[
id
].
lv
Úo[
	`L
(id)].lv+“o[L(id)].lv=Úo[L(id)].
	`Àn
())*no[
	`R
(id)].lv;

21 
no
[
id
].
rv
Úo[
	`R
(id)].rv+“o[R(id)].rv=Úo[R(id)].
	`Àn
())*no[
	`L
(id)].rv;

22 
	}
}

24 
	$buûd
(
id
,
l
,
r
)

26 
no
[
id
].
l
ˆ,no[id].
r
=r;

27 if(
l
==
r
)

29 
no
[
id
].
lv
Úo[id].
rv
=(
d©
[
l
]==0);

32 
mid
=(
l
+
r
)>>1;

33 
	`buûd
(
	`L
(
id
),
l
,
mid
);

34 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

35 
	`up
(
id
,
l
,
r
);

36 
	}
}

38 
	$upd©e
(
id
,
p
,
x
)

40 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

41 if(
l
==
r
)

43 
no
[
id
].
lv
Úo[id].
rv
=(1-
x
);

46 if(
p
<=
mid
)

47 
	`upd©e
(
	`L
(
id
),
p
,
x
);

49 
	`upd©e
(
	`R
(
id
),
p
,
x
);

50 
	`up
(
id
,
l
,
r
);

51 
	}
}

53 
	$quîy
(
id
,
Œ
,
º
)

55 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=÷+r)>>1,
ªt
=0;

56 if(
l
>=
Œ
&&
r
<=
º
)

58  
no
[
id
].
lv
;

60 if(
mid
>=
Œ
&&
l
<=
º
)

62 
ªt
=
	`quîy
(
	`L
(
id
),
Œ
,
º
);

63 if(
ªt
<
	`mö
(
mid
-
Œ
+1,mö(mid-
l
+1,
º
-l+1)))

65  
ªt
;

68 if(
mid
<
º
&&
r
>=
Œ
)

70 
y
;

71 
y
=
	`quîy
(
	`R
(
id
),
Œ
,
º
);

72 if(
y
<
	`mö
(
r
-
Œ
+1,mö‘-
mid
,
º
-mid)))

73  
ªt
+
y
;

74 
ªt
+=
y
;

76  
ªt
;

77 
	}
}

79 
	$maö
()

81 
t
,
ˇ
,
m
;

82 
	`sˇnf
("%d",&
t
);

83 
ˇ
=1; ca<=
t
; ca++)

85 
	`¥ötf
("Ca£ %d:\n",
ˇ
);

86 
	`sˇnf
("%s%s",
s1
,
s2
);

87 
l1
=
	`°æí
(
s1
);

88 
l2
=
	`°æí
(
s2
);

89 
n
=
	`max
(
l1
,
l2
);

90 
i
=
l1
; i<
n
; i++)

91 
s1
[
i
]='#';

92 
i
=
l2
; i<
n
; i++)

93 
s2
[
i
]='$';

94 
s1
[
n
]='\0',
s2
[n]='\0';

95 
i
=0; i<
n
; i++)

97 if(
s1
[
i
]==
s2
[i])

98 
d©
[
i
+1]=0;

100 
d©
[
i
+1]=1;

102 
	`buûd
(1,1,
n
);

103 
	`sˇnf
("%d",&
m
);

104 
x
,
y
;

105 
c
[10];

106 
i
=0; i<
m
; i++)

108 
	`sˇnf
("%d",&
x
);

109 if(
x
==1)

111 
	`sˇnf
("%d%d%s",&
x
,&
y
,
c
);

112 if(
x
==1)

114 
s1
[
y
]=
c
[0];

115 
	`upd©e
(1,
y
+1,
s1
[y]!=
s2
[y]);

119 
s2
[
y
]=
c
[0];

120 
	`upd©e
(1,
y
+1,
s1
[y]!=
s2
[y]);

125 
	`sˇnf
("%d",&
x
);

126 
y
=
	`quîy
(1,
x
+1,
n
);

127 
	`¥ötf
("%d\n",
y
);

132 
	}
}

	@problems/hdoj/hdu_4342.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<io°ªam
>

4 
	tLL
;

5 
usög
 
«me•a˚
 
	g°d
;

7 c⁄° 
LL
 
	gN
=(1LL<<32LL);

8 
LL
 
	gd©
[100000];

10 
	$öô
()

12 
d©
[0]=0;

13 
LL
 
i
=1; i<100000; i++)

15 
d©
[
i
]=dat[i-1]+(2*i+1)*i;

17 
	}
}

19 
LL
 
	$gë
(
LL
 
x
)

21 
LL
 
l
=2,
r
=
N
,
mid
,
tmp
;

22 ; 
l
<=
r
;)

24 
mid
=(
l
+
r
)>>1;

25 
tmp
=(
LL
)
	`sqπ
((
mid
));

26 if(
mid
-
tmp
>
x
)

27 
r
=
mid
-1;

29 
l
=
mid
+1;

31 
tmp
=(
LL
)
	`sqπ
((
r
));

32 if(
tmp
*tmp==
r
)

33  
r
-1;

34  
r
;

35 
	}
}

37 
	$maö
()

39 
t
;

40 
LL
 
n
,
m
;

41 
	`sˇnf
("%d",&
t
);

42 
	`öô
();

43 ; 
t
--;)

45 
cö
>>
n
;

46 
m
=
	`gë
(
n
);

47 
LL
 
tmp
=(LL)
	`sqπ
((
m
));

48 
LL
 
x
=
tmp
,
y
=
m
-tmp*tmp+1,
ªt
=0;

49 
ªt
=
x
*
y
;

50 
x
--;

51 
ªt
+=
d©
[
x
];

52 
cout
<<
m
<<" "<<
ªt
<<
ídl
;

55 
	}
}

	@problems/hdoj/hdu_4344.cpp

1 
	~<c°dio
>

2 
	~<c°dlib
>

3 
	~<˘ime
>

4 
	~<io°ªam
>

5 
	~<m≠
>

6 
	#N
 1001

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
LL
 
	gli°
[
N
];

11 
	gt›
;

13 
LL
 
	$mulmod
(
LL
 
a
,LL 
b
,LL 
n
)

15 
LL
 
ªt
=0;

16 
a
˜%
n
;

17 ; 
b
; )

19 if(
b
&1)

21 
ªt
Ùë+
a
;

22 if(
ªt
>
n
)Ñet-=n;

24 
a
<<=1;

25 if(
a
>
n
)

26 
a
-=
n
;

27 
b
>>=1;

29  
ªt
;

30 
	}
}

32 
LL
 
	$expmod
(
LL
 
a
,LL 
b
,LL 
n
)

34 
LL
 
ªt
=1;

35 ; 
b
;)

37 if(
b
&1)

38 
ªt
=
	`mulmod
‘ë,
a
,
n
);

39 
a
=
	`mulmod
◊,a,
n
);

40 
b
>>=1;

42  
ªt
;

43 
	}
}

45 
	$mûÀr_øbbö
(
LL
 
n
,
times
=8)

47 if(
n
==2)  1;

48 if((
n
&1)==0||n<2)  0;

49 
LL
 
m
=
n
-1,
x
,
y
;

50 
k
=0;

51 ; (
m
&1)==0; m>>=1,
k
++);

52 
i
=0; i<
times
; i++)

54 
x
=
	`ønd
()%(
n
-2)+2;

55 
y
=
x
=
	`expmod
(x,
m
,
n
);

56 if(
x
==1) ;

57 
j
=0; j<
k
; j++)

59 
y
=
	`mulmod
(
x
,x,
n
);

60 if(
y
==1&&
x
!=
n
-1&&x!=1)  0;

61 
x
=
y
;

63 if(
y
!=1)  0;

66 
	}
}

68 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

70 
LL
 
	$pﬁœr_rho
(
LL
 
n
,
c
)

72 
LL
 
x
,
y
,
p
;

73 
i
=1,
k
=2;

74 
y
=
x
=
	`ønd
()%(
n
-1)+1;

77 
i
++;

78 
x
=(
	`mulmod
(x,x,
n
)+
c
)%n;

79 if(
x
==
y
Ë 
n
;

80 
p
=
	`gcd
(
x
-
y
,
n
);

81 if(1<
p
&&p<
n
) Ö;

82 if(
i
==
k
)

84 
k
<<=1;

85 
y
=
x
;

88 
	}
}

91 
	$föd_Ác
(
LL
 
n
,
c
)

93 if(
n
==1)

95 if(
	`mûÀr_øbbö
(
n
))

97 
li°
[
t›
++]=
n
;

100 
LL
 
x
=
n
;

101 
nc
=
c
;

102 ; 
x
>=
n
; )

103 
x
=
	`pﬁœr_rho
(
n
,
nc
--);

104 
	`föd_Ác
(
n
/
x
,
c
);

105 
	`föd_Ác
(
x
,
c
);

106 
	}
}

108 
	gm≠
<
	gLL
,> 
	gmp
;

110 
LL
 
	$gë
(
LL
 
a
,
b
)

112 
LL
 
ªt
=1;

113 ; 
b
;)

115 if(
b
&1)

116 
ªt
Ùë*
a
;

117 
a
*=a;

118 
b
>>=1;

120  
ªt
;

121 
	}
}

123 
	$maö
()

125 
t
;

126 
LL
 
n
;

127 
	`§™d
(
	`time
(0));

128 
	`sˇnf
("%d",&
t
);

129 ; 
t
--; )

132 
	`sˇnf
("%I64d",&
n
);

133 
t›
=0;

134 
	`föd_Ác
(
n
,120);

135 
mp
.
	`˛ór
();

136 
i
=0; i<
t›
; i++)

137 
mp
[
li°
[
i
]]++;

138 
s
=
mp
.
	`size
();

139 if(
s
==1)

143 
	`¥ötf
("%d %I64d\n",
s
,
n
/
li°
[0]);

147 
LL
 
ªt
=0;

148 
m≠
<
LL
,>::
ôî©‹
 
ô
;

149 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++)

151 
ªt
+=
	`gë
(
ô
->
fú°
,ô->
£c⁄d
);

155 
	`¥ötf
("%d %I64d\n",
s
,
ªt
);

159 
	}
}

	@problems/hdoj/hdu_4345.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1001

	)

4 
	tLL
;

6 
	gp
[
N
],
	g∂i°
[N],
	gt›
;

7 
LL
 
	gdp
[
N
][N];

9 
	$öô
()

11 
t›
=0;

12 
i
=0; i<
N
; i++)

13 
p
[
i
]=i;

14 
i
=2; i<
N
; i++)

16 if(
p
[
i
]==i)

17 
∂i°
[
t›
++]=
i
;

18 
j
=0; j<
t›
&&
∂i°
[j]*
i
<
N
; j++)

20 
p
[
∂i°
[
j
]*
i
]=plist[j];

21 if(
i
%
∂i°
[
j
]==0)

25 
	}
}

27 
	$sﬁve
()

29 
	`mem£t
(
dp
,0,(dp));

30 
i
=0; i<
N
; i++)

31 
dp
[0][
i
]=1,dp[i][0]=1,dp[i][1]=1;

32 
i
=1; i<=
t›
; i++)

34 
j
=2; j<
N
; j++)

35 
dp
[
i
][
j
]=dp[i-1][j];

36 
j
=2; j<
N
; j++)

38 
x
=
∂i°
[
i
-1],
y
=x;

39 ; 
y
<=
j
; y*=
x
)

41 
dp
[
i
][
j
]+=dp[i-1][j-
y
];

45 
	}
}

47 
	$maö
()

49 
	`öô
();

50 
	`sﬁve
();

51 
n
;

52 
	`sˇnf
("%d",&
n
)!=
EOF
)

55 
	`¥ötf
("%I64d\n",
dp
[
t›
][
n
]);

58 
	}
}

	@problems/hdoj/hdu_4355.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#ïs
 1e-4

	)

4 
	#N
 50011

	)

6 
	snode
{ 
	mx
,
	mw
; }
	gno
[
N
];

8 
	$gë
(
x
,
n
)

10 
ªt
=0,
d
;

11 
i
=1; i<=
n
; i++)

13 
d
=
	`Ábs
(
no
[
i
].
x
-x);

14 
ªt
+=
d
*d*d*
no
[
i
].
w
;

16  
ªt
;

17 
	}
}

19 
	$sﬁve
(
n
)

21 
l
=
no
[1].
x
,
r
Úo[
n
].x,
m1
,
m2
,
f1
,
f2
;

22 ; 
r
-
l
>
ïs
; )

24 
m1
=(2*
l
+
r
)/3;

25 
m2
=(
l
+2*
r
)/3;

26 
f1
=
	`gë
(
m1
,
n
);

27 
f2
=
	`gë
(
m2
,
n
);

28 if(
f1
<=
f2
)

29 
r
=
m2
;

30 if(
f1
>
f2
)

31 
l
=
m1
;

33  
	`gë
(
l
,
n
);

34 
	}
}

36 
	$maö
()

38 
t
,
ˇ
=1,
n
;

39 
	`sˇnf
("%d",&
t
);

40 ; 
ˇ
<=
t
; ca++)

42 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

43 
	`sˇnf
("%d",&
n
);

44 
i
=1; i<=
n
; i++)

45 
	`sˇnf
("%lf%lf",&
no
[
i
].
x
,&no[i].
w
);

46 
	`¥ötf
("%.0lf\n",
	`sﬁve
(
n
));

49 
	}
}

	@problems/hdoj/hdu_4359.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	#N
 371

	)

6 
	#MOD
 1000000007

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
LL
 
	gdp
[
N
][N],
	gsum
[N][N],
	gc
[N][N];

12 
	$öô
()

14 
	`mem£t
(
dp
,0,(dp));

15 
	`mem£t
(
c
,0,(c));

16 
	`mem£t
(
sum
,0,(sum));

17 
c
[0][0]=1;

18 
i
=1; i<
N
; i++)

20 
c
[
i
][0]=1;

21 
j
=1; j<
i
; j++)

22 
c
[
i
][
j
]=(c[i-1][j-1]+c[i-1][j])%
MOD
;

23 
c
[
i
][i]=1;

25 
dp
[0][0]=1;

26 
sum
[0][0]=1;

27 
i
=1; i<
N
; i++)

28 
sum
[0][
i
]=1,sum[1][i]=1;

29 
dp
[1][1]=1;

30 
sum
[1][1]=1;

31 
LL
 
d
;

32 
i
=2; i<
N
; i++)

34 
j
=2; j<=
i
; j++)

36 
dp
[
i
][
j
]=0;

37 
k
=0; k<
i
; k++)

39 if(
k
>0&&
i
-k-1>=1)

40 
d
=
c
[
i
-2][i-
k
-2];

42 
d
=1;

43 
dp
[
i
][
j
]=((dp[i][j]+
d
*((dp[
k
][j-1]*
sum
[i-k-1][j-1]%
MOD
+sum[k][j-1]*dp[i-k-1][j-1]%MOD-dp[k][j-1]*dp[i-k-1][j-1]%MOD)%MOD)%MOD)%MOD+MOD)%MOD;

45 
dp
[
i
][
j
]=(i*dp[i][j])%
MOD
;

46 
sum
[
i
][
j
]=(sum[i][j-1]+
dp
[i][j])%
MOD
;

48 
k
=
i
+1; k<
N
; k++)

49 
sum
[
i
][
k
]=sum[i][k-1];

51 
	}
}

53 
	$maö
()

55 
t
,
ˇ
=1;

56 
	`öô
();

57 
	`sˇnf
("%d",&
t
);

58 
m
,
n
;

59 ; 
ˇ
<=
t
; ca++)

61 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

62 
	`sˇnf
("%d%d",&
m
,&
n
);

63 
cout
<<
dp
[
m
][
n
]<<
ídl
;

66 
	}
}

	@problems/hdoj/hdu_4364.cpp

1 
	~<c°dio
>

2 
	#N
 4

	)

3 
	tuöt
;

5 c⁄° 
uöt
 
	gsmod
=0x1B;

6 c⁄° 
uöt
 
	gMOD
=0xFF;

7 
uöt
 
	gm©
[
N
][N],
	gªt
[N][N];

8 
	gmt
[4][4]={{2,3,1,1},{1,2,3,1},{1,1,2,3},{3,1,1,2}};

10 
uöt
 
	$mul
(
uöt
 
x
,
i
)

12 
uöt
 
y
=
x
,
ªt
;

13 if(
i
==1)

14  
x
;

15 if(
i
==2)

17 
ªt
=(
x
<<1);

18 if(
ªt
>0xFF)

19  
ªt
^
smod
;

21  
ªt
;

23 
ªt
=(
x
<<1);

24 if(
ªt
>0xFF)

25 
ªt
^=
smod
;

26  
ªt
^
y
;

27 
	}
}

29 
	$m©rix_mul
()

31 
i
=0; i<
N
; i++)

32 
j
=0; j<
N
; j++)

33 
ªt
[
i
][
j
]=0;

34 
i
=0; i<
N
; i++)

35 
j
=0; j<
N
; j++)

36 
k
=0; k<
N
; k++)

38 
ªt
[
i
][
j
]^=
	`mul
(
m©
[
k
][j],
mt
[i][k]);

40 
	}
}

42 
	$maö
()

44 
t
;

45 
	`sˇnf
("%d",&
t
);

46 ; 
t
--; )

48 
i
=0; i<4; i++)

49 
j
=0; j<4; j++)

50 
	`sˇnf
("%x",&
m©
[
i
][
j
]);

51 
	`m©rix_mul
();

52 
i
=0; i<4; i++)

54 
	`¥ötf
("%02X",
ªt
[
i
][0]&
MOD
);

55 
j
=1; j<4; j++)

56 
	`¥ötf
(" %02X",
ªt
[
i
][
j
]&
MOD
);

57 
	`puts
("");

59 if(
t
>0)

60 
	`puts
("");

63 
	}
}

	@problems/hdoj/hdu_4377.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#N
 100011

	)

5 
	gªt
[
N
];

7 
	$sﬁve
(
n
)

9 if(
n
==1)

11 
ªt
[1]=1;

14 if(
n
==2)

16 
ªt
[1]=1,ret[2]=2;

19 
a
=()
	`sqπ
(1.0*
n
),
b
,
˙t
,
id
,
now
,
sum
;

20 if(
a
*a==
n
)

21 
b
=
a
;

23 
b
=
a
+1;

24 
sum
=
n
/
b
;

25 if(
sum
*
b
==
n
&&sum<b)

26 
sum
--;

27 
id
=
n
-
b
+1,
now
=n;

28 
˙t
=0; c¡<
sum
; cnt++)

30 
i
=0; i<
b
; i++)

31 
ªt
[
id
+
i
]=
now
-i;

32 
now
-=
b
;

33 
id
-=
b
;

35 
y
=
b
-
sum
,
z
=
n
-sum*b;

36 
i
=1; i<=
y
-1; i++)

37 
ªt
[
i
]=i;

38 
j
=0;

39 
i
=
y
; i<=
z
; i++,
j
++)

40 
ªt
[
i
]=
z
-
j
;

41 
	}
}

43 
	$show
(
n
)

45 
	`¥ötf
("%d",
ªt
[1]);

46 
i
=2; i<=
n
; i++)

47 
	`¥ötf
(" %d",
ªt
[
i
]);

48 
	`puts
("");

49 
	}
}

51 
	$maö
()

53 
n
,
t
;

54 
	`sˇnf
("%d",&
t
);

55 
t
--)

57 
	`sˇnf
("%d",&
n
);

58 
	`sﬁve
(
n
);

59 
	`show
(
n
);

62 
	}
}

	@problems/hdoj/hdu_4389.cpp

1 
	~<c°dio
>

2 
	gd©
[10011]={23038,43691,62344,79494,95428,117251,136926,154753,171215,186561,207319,226142,243273,259122,273964,293749,311777,328266,343560,357923,376842,394196,410102,424906,438795,456935,473705,489121,503491,516988,534432,550627,565578,579518,592666,609471,625153,639668,653243,666027,682185,697359,711460,724669,737096,752684,767362,781082,793957,806095,827912,847505,865348,881829,897228,917958,936644,953748,969593,984457,1004246,1022150,1038599,1053893,1068251,1087182,1104383,1120224,1134999,1148898,1167083,1183663,1198988,1213284,1226769,1244283,1260310,1275181,1289050,1302141,1319012,1334553,1348965,1362477,1375194,1391506,1406579,1420620,1433752,1446173,1461907,1476483,1490129,1502903,1514990,1530199,1544339,1557612,1570094,1581855,1602519,1621202,1638352,1654240,1669171,1688855,1706723,1723174,1738471,1752886,1771743,1788901,1804751,1819529,1833499,1851587,1868075,1883358,1897646,1911166,1928604,1944532,1959309,1973139,1986220,2003059,2018498,2032861,2046299,2059035,2075318,2090283,2104235,2117319,2129704,2145464,2159997,2173585,2186330,2198383,2213611,2227715,2240925,2253328,2265047,2279834,2293525,2306406,2318480,2329984,2349563,2367444,2383947,2399319,2413838,2432533,2449651,2465529,2480347,2494379,2512304,2528778,2544072,2558405,2571992,2589245,2605125,2619881,2633724,2646896,2663574,2678924,2693224,2706624,2719392,2735522,2750405,2764291,2777339,2789743,2805369,2819833,2833334,2846056,2858080,2873233,2887292,2900473,2912873,2924630,2939314,2952939,2965768,2977813,2989257,3003491,3016763,3029225,3040992,3052160,3070810,3087935,3103866,3118775,3132961,3150784,3167212,3182541,3196945,3210653,3227800,3243650,3258456,3272346,3285645,3302173,3317444,3331742,3345157,3358037,3374014,3388829,3402658,3415677,3428135,3443601,3457971,3471414,3484045,3496170,3511200,3525126,3538227,3550533,3562323,3576928,3590511,3603263,3615293,3626798,3640941,3654135,3666545,3678248,3689474,3703248,3716068,3728163,3739560,3750525,3768368,3784857,3800280,3814795,3828640,3845731,3861558,3876416,3890413,3903809,3920254,3935541,3949897,3963419,3976405,3992271,4007043,4020913,4033968,4046550,4061913,4076225,4089680,4102288,4114501,4129399,4143282,4156326,4168604,4180462,4194923,4208446,4221125,4233077,4244641,4258729,4271874,4284236,4295907,4307251,4320953,4333726,4345745,4357099,4368127,4381443,4393918,4405618,4416724,4427492,4444608,4460526,4475477,4489698,4503070,4519477,4534790,4549222,4562954,4575951,4591795,4606580,4620542,4633801,4646413,4661706,4675988,4689473,4702274,4714477,4729282,4743148,4756221,4768606,4780451,4794821,4808276,4820985,4832996,4844581,4858557,4871639,4883959,4895644,4906971,4920601,4933355,4945346,4956769,4967829,4981078,4993494,5005165,5016303,5027126,5040064,5052151,5063546,5074389,5084970,5101431,5116842,5131436,5145295,5158330,5174152,5188978,5203052,5216456,5229087,5244346,5258689,5272273,5285249,5297507,5312261,5326115,5339278,5351804,5363730,5378048,5391460,5404245,5416390,5427989,5441864,5454907,5467241,5479054,5490370,5503845,5516543,5528524,5540019,5551100,5564270,5576637,5588334,5599544,5610431,5623259,5635301,5646688,5657629,5668264,5680733,5692492,5703586,5714304,5724686,5740568,5755509,5769765,5783154,5795749,5811019,5825429,5839203,5852170,5864428,5879197,5893125,5906465,5919016,5930950,5945229,5958684,5971571,5983726,5995318,6009173,6022241,6034731,6046569,6057901,6071352,6084018,6096132,6107639,6118762,6131845,6144152,6155917,6167148,6178017,6190748,6202765,6214207,6225199,6235854,6248238,6259936,6271122,6281842,6292282,6304401,6315811,6326727,6337241,6347468,6362850,6377364,6391270,6404220,6416462,6431293,6445302,6458763,6471348,6483225,6497539,6511123,6524149,6536365,6547969,6561819,6574923,6587544,6599372,6610705,6624168,6636874,6649128,6660672,6671740,6684816,6697162,6709022,6720314,6731176,6743849,6755843,6767401,6778405,6789058,6801426,6813069,6824364,6835105,6845573,6857599,6868982,6879972,6890536,6900765,6912509,6923628,6934386,6944738,6954793,6976583,6996285,7014095,7030588,7045942,7066672,7085511,7102619,7118527,7133324,7153096,7171148,7187588,7202960,7217267,7236173,7253551,7269451,7284339,7298238,7316346,7333102,7348488,7362912,7376359,7393745,7409939,7424845,7438854,7451901,7468651,7484336,7498853,7512453,7525188,7541342,7556515,7570617,7583868,7596271,7611835,7626540,7640228,7653107,7665191,7680213,7694457,7707794,7720323,7732131,7752829,7771537,7788609,7804493,7819332,7839107,7857044,7873447,7888788,7903158,7922072,7939289,7955106,7969917,7983801,8001955,8018568,8033854,8048239,8061674,8079146,8095190,8110000,8123944,8137010,8153844,8169358,8183759,8197305,8209989,8226256,8241296,8255293,8268482,8280812,8296532,8311160,8324781,8337637,8349662,8364873,8379035,8392319,8404796,8416558,8431245,8444976,8457899,8470072,8481543,8501214,8519098,8535530,8550862,8565293,8584112,8601284,8617098,8631916,8645838,8663896,8680430,8695652,8709973,8723430,8740833,8756791,8771553,8785438,8798508,8815311,8830751,8845054,8858566,8871242,8887488,8902422,8916325,8929457,8941769,8957507,8972020,8985565,8998341,9010332,9025589,9039681,9052898,9065355,9077035,9091800,9105507,9118363,9130510,9141930,9156211,9169498,9182051,9193866,9205050,9223708,9240868,9256704,9271565,9285593,9303493,9320003,9335273,9349618,9363199,9380409,9396299,9411040,9424902,9438009,9454621,9470000,9484265,9497747,9510443,9526527,9541425,9555264,9568346,9580694,9596276,9610699,9624166,9636889,9648877,9664007,9678043,9691160,9703588,9715239,9729925,9743594,9756386,9768499,9779898,9794149,9807402,9819898,9831686,9842802,9856617,9869498,9881674,9893214,9904095,9921920,9938397,9953693,9968116,9981880,9998988,10014875,10029631,10043568,10056856,10073334,10088643,10102895,10116381,10129221,10145145,10159963,10173779,10186831,10199288,10214736,10229102,10242501,10255201,10267274,10282245,10296199,10309229,10321576,10333318,10347900,10361462,10374190,10386204,10397657,10411833,10425034,10437437,10449184,10460350,10474116,10486974,10499050,10510525,10521428,10534804,10547282,10559107,10570322,10581019,10598074,10613991,10628824,10642859,10656301,10672739,10688069,10702398,10715968,10728985,10744812,10759579,10773398,10786514,10799059,10814375,10828695,10842081,10854804,10866960,10881836,10895746,10908761,10921080,10932932,10947378,10960872,10973539,10985524,10997055,11011094,11024236,11036544,11048231,11059473,11073146,11085947,11097967,11109367,11120363,11133713,11146143,11157892,11169032,11179797,11192779,11204881,11216341,11227265,11237788,11254191,11269585,11284001,11297740,11310752,11326535,11341389,11355287,11368604,11381211,11396460,11410781,11424209,11437061,11449286,11464064,11477919,11490945,11503371,11515232,11529591,11543049,11555674,11567757,11579304,11593240,11606330,11618613,11630331,11641607,11655193,11667918,11679922,11691349,11702365,11715602,11727997,11739665,11750833,11761612,11774511,11786589,11797968,11808873,11819414,11831994,11843762,11854914,11865605,11875940,11891709,11906656,11920708,11934148,11946798,11962036,11976447,11990033,12003027,12015315,12030031,12043940,12057022,12069608,12081517,12095783,12109262,12121935,12134133,12145732,12159629,12172719,12185034,12196860,12208192,12221682,12234381,12246341,12257893,12268919,12282050,12294425,12306066,12317326,12328147,12340947,12352977,12364355,12375338,12385962,12398464,12410178,12421296,12432031,12442408,12454619,12466073,12476902,12487443,12497616,12512881,12527353,12541137,12554144,12566393,12581112,12595117,12608409,12621021,12632958,12647192,12660699,12673545,12685745,12697371,12711187,12724276,12736708,12748547,12759893,12773347,12786075,12798124,12809685,12820745,12833815,12846167,12857891,12869161,12880002,12892743,12904723,12916175,12927189,12937821,12950227,12961918,12973061,12983858,12994262,13006355,13017779,13028665,13039220,13049421,13061255,13072394,13083081,13093416,13103432,13118208,13132276,13145728,13158335,13170250,13184533,13198137,13211156,13223405,13235027,13248822,13261988,13274520,13286411,13297720,13311112,13323865,13336038,13347603,13358682,13371747,13384129,13395989,13407262,13418117,13430808,13442814,13454333,13465374,13475977,13488326,13500029,13511263,13522081,13532516,13544566,13555938,13566939,13577509,13587773,13599537,13610626,13621368,13631739,13641793,13653298,13664179,13674680,13684846,13694682,13715445,13734267,13751415,13767294,13782106,13801878,13819928,13836441,13851754,13866076,13884983,13902362,13918311,13933165,13947004,13965103,13981854,13997313,14011739,14025210,14042583,14058750,14073727,14087732,14100803,14117512,14133184,14147718,14161347,14174040,14190134,14205324,14219424,14232672,14245038,14260578,14275326,14289069,14301961,14314021,14329001,14343280,14356614,14369176,14380947,14395419,14409278,14422249,14434511,14446019,14465791,14483711,14500177,14515465,14529813,14548726,14565946,14581794,14596564,14610415,14628564,14645165,14660523,14674847,14688297,14705770,14721809,14736685,14750636,14763678,14780479,14795996,14810408,14823965,14836624,14852859,14867907,14881928,14895104,14907435,14923119,14937719,14951365,14964213,14976195,14991343,15005568,15018851,15031393,15043070,15057705,15071492,15084429,15096609,15108076,15122242,15135609,15148222,15160132,15171368,15190220,15207384,15223235,15238019,15251961,15270013,15286534,15301812,15316103,15329564,15346955,15362913,15377701,15391574,15404599,15421399,15436822,15451178,15464665,15477345,15493571,15508514,15522438,15535557,15547862,15563571,15578103,15591642,15604436,15616379,15631584,15645701,15658888,15671355,15683003,15697747,15711485,15724381,15736535,15747911,15762177,15775517,15788053,15799935,15811043,15824853,15837843,15850059,15861682,15872614,15890538,15907024,15922300,15936647,15950217,15967434,15983311,15998072,16011922,16025027,16041654,16056991,16071299,16084755,16097440,16113516,16128391,16142250,16155357,16167641,16183184,16197631,16211097,16223831,16235766,16250869,16264911,16278049,16290446,16302070,16316718,16330366,16343163,16355271,16366576,16380791,16394117,16406613,16418469,16429517,16443301,16456244,16468423,16479983,16490838,16504230,16516792,16528691,16540018,16550673,16567838,16583699,16598483,16612400,16625756,16642250,16657532,16671790,16685245,16698107,16714047,16728845,16742656,16755720,16768140,16783579,16797939,16811365,16824065,16836156,16851120,16865056,16878116,16890441,16902159,16916672,16930247,16942941,16954971,16966346,16980442,16993660,17006057,17017790,17028895,17042636,17055527,17067650,17079144,17089987,17103312,17115854,17127643,17138920,17149548,17162506,17174723,17186266,17197275,17207734,17224196,17239530,17253843,17267410,17280452,17296322,17311103,17324932,17338025,17350626,17365990,17380295,17393682,17406387,17418595,17433471,17447358,17460354,17472712,17484533,17498957,17512481,17525113,17537112,17548623,17562651,17575790,17588130,17599787,17611005,17624639,17637428,17649451,17660865,17671766,17685042,17697539,17709272,17720452,17731162,17744104,17756275,17767754,17778684,17789201,17801810,17813661,17824897,17835647,17845948,17861810,17876646,17890601,17903888,17916553,17931840,17946169,17959595,17972439,17984678,17999470,18013351,18026350,18038791,18050685,18065077,18078537,18091173,18103233,18114815,18128785,18141878,18154145,18165900,18177141,18190692,18203444,18215408,18226883,18237861,18251072,18263458,18275119,18286315,18297052,18309921,18322026,18333446,18344400,18354881,18367422,18379226,18390377,18401113,18411412,18423629,18435181,18446118,18456630,18466778,18482067,18496484,18510055,18523079,18535402,18550157,18564069,18577178,18589739,18601707,18616018,18629495,18642164,18654336,18665965,18679853,18692963,18705222,18717087,18728405,18741905,18754638,18766583,18778131,18789194,18802361,18814723,18826354,18837630,18848449,18861241,18873277,18884623,18895649,18906195,18918653,18930430,18941517,18952308,18962677,18974851,18986343,18997243,19007778,19017938,19029803,19041055,19051715,19062068,19072027,19086827,19100793,19114116,19126725,19138702,19152973,19166486,19179295,19191488,19203124,19216943,19230047,19242437,19254279,19265635,19279094,19291822,19303864,19315391,19326482,19339580,19351957,19363630,19374910,19385730,19398472,19410526,19421889,19432946,19443553,19455973,19467689,19478795,19489599,19500013,19512107,19523544,19534431,19545006,19555170,19566959,19578177,19588825,19599194,19609185,19620739,19631696,19642193,19652345,19662166,19676499,19690109,19703088,19715335,19727005,19740854,19753996,19766562,19778434,19789801,19803224,19815970,19828114,19839693,19850772,19863795,19876183,19887954,19899243,19910096,19922803,19934836,19946313,19957322,19967975,19980377,19992102,20003301,20014122,20024535,20036573,20048008,20058932,20069555,20079764,20091499,20102659,20113360,20123756,20133785,20145272,20156182,20166699,20176871,20186696,20197957,20208646,20218955,20229013,20238658,20258443,20276474,20293012,20308298,20322597,20341515,20358867,20374879,20389689,20403565,20421696,20438435,20453944,20468322,20481807,20499199,20515368,20530382,20544365,20557471,20574177,20589807,20604414,20617983,20630756,20646853,20661989,20676155,20689361,20701761,20717274,20731987,20745746,20758602,20770688,20785688,20799944,20813311,20825817,20837653,20852142,20865971,20878984,20891179,20902755,20916739,20930188,20942775,20954695,20966010,20984943,21002118,21018024,21032794,21046638,21064811,21081389,21096764,21111081,21124505,21141974,21157999,21172928,21186808,21199886,21216716,21232205,21246708,21260205,21272915,21289141,21304162,21318229,21331393,21343731,21359396,21373960,21387635,21400427,21412464,21427629,21441774,21455102,21467540,21479291,21493961,21507723,21520686,21532839,21544298,21558467,21571860,21584470,21596331,21607602,21621310,21634299,21646585,21658154,21669203,21687307,21703785,21719094,21733379,21746853,21764279,21780185,21795033,21808867,21821937,21838735,21854138,21868544,21881994,21894655,21910877,21925806,21939795,21952864,21965192,21980882,21995366,22008994,22021733,22033727,22048923,22062990,22076230,22088633,22100308,22115033,22128735,22141625,22153714,22165121,22179410,22192762,22205350,22217145,22228315,22242142,22255124,22267393,22278956,22289922,22303284,22315901,22327830,22339156,22349898,22367185,22383021,22397784,22411660,22424773,22441419,22456741,22471054,22484503,22497209,22513301,22528142,22542082,22555121,22567447,22582999,22597396,22610931,22623637,22635611,22650690,22664678,22677849,22690219,22701850,22716482,22730092,22742926,22754963,22766328,22780559,22793830,22806368,22818101,22829202,22842997,22855944,22868151,22879665,22890498,22903873,22916487,22928405,22939669,22950338,22963331,22975586,22987254,22998281,23008770,23025332,23040600,23054881,23068330,23081223,23097216,23111962,23125826,23138880,23151361,23166827,23181131,23194599,23207304,23219386,23234352,23248238,23261322,23273649,23285374,23299903,23313401,23326167,23338160,23349599,23363703,23376870,23389295,23400985,23412111,23425805,23438661,23450789,23462218,23473093,23486441,23498963,23510842,23522022,23532684,23545639,23557860,23569448,23580430,23590877,23603442,23615356,23626681,23637463,23647763,23663684,23678448,23692301,23705412,23718020,23733400,23747691,23761108,23773815,23786035,23800943,23814784,23827859,23840165,23852041,23866502,23879935,23892615,23904614,23916158,23930179,23943279,23955621,23967288,23978539,23992177,24004927,24016985,24028334,24039334,24052609,24065037,24076814,24087921,24098643,24111536,24123704,24135228,24146131,24156609,24169145,24181011,24192306,24202990,24213314,24225535,24237120,24248152,24258645,24268780,24284132,24298444,24311934,24324774,24337060,24351925,24365758,24378830,24391269,24403174,24417579,24431019,24443669,24455758,24467363,24481341,24494387,24506707,24518439,24529756,24543359,24556062,24568036,24579471,24590507,24603716,24616088,24627767,24638911,24649665,24662517,24674597,24686051,24696961,24707495,24720025,24731806,24743030,24753721,24764046,24776226,24787757,24798739,24809226,24819346,24831203,24842497,24853246,24863531,24873479,24888321,24902193,24915325,24927930,24939873,24954234,24967673,24980376,24992577,25004239,25018194,25031235,25043606,25055441,25066837,25080389,25093070,25105028,25116564,25127672,25140852,25153210,25164857,25176098,25186940,25199771,25211781,25223184,25234158,25244759,25257266,25268986,25280132,25290903,25301271,25313414,25324911,25335824,25346396,25356565,25368419,25379652,25390361,25400691,25410686,25422265,25433270,25443768,25453901,25463707,25478072,25491533,25504414,25516628,25528324,25542227,25555262,25567704,25579566,25590933,25604408,25617079,25629130,25640691,25651802,25664907,25677227,25688966,25700203,25711100,25723890,25735876,25747310,25758309,25768962,25781369,25793070,25804208,25814988,25825376,25837468,25848872,25859776,25870327,25880547,25892397,25903556,25914260,25924634,25934669,25946217,25957180,25967681,25977845,25987687,25998952,26009682,26019975,26029938,26039575,26053485,26066610,26079170,26091078,26102480,26115969,26128639,26140806,26152366,26163518,26176612,26188920,26200749,26212033,26222912,26235649,26247619,26259110,26270140,26280781,26293170,26304840,26316078,26326866,26337314,26349393,26360749,26371713,26382287,26392515,26404286,26415406,26426121,26436508,26446544,26458035,26468948,26479449,26489649,26499504,26510759,26521437,26531777,26541783,26551479,26562495,26572971,26583117,26592911,26602369,26621266,26638678,26654638,26669440,26683245,26701348,26718165,26733646,26748010,26761451,26778830,26795069,26810094,26824033,26837125,26853835,26869554,26884134,26897724,26910481,26926567,26941765,26955905,26969099,26981529,26997085,27011794,27025573,27038411,27050529,27065525,27079810,27093186,27105695,27117492,27131991,27145849,27158874,27171047,27182620,27196645,27210051,27222705,27234577,27245924,27259484,27272489,27284778,27296374,27307487,27325637,27342246,27357599,27371903,27385285,27402735,27418818,27433716,27447615,27460604,27477412,27492956,27507424,27520905,27533591,27549811,27564879,27578970,27592104,27604488,27620156,27634753,27648419,27661190,27673208,27688357,27702550,27715844,27728276,27740021,27754702,27768475,27781472,27793575,27805078,27819304,27832688,27845330,27857175,27868454,27882172,27895158,27907440,27919017,27930034,27943304,27955906,27967856,27979159,27990025,28007421,28023367,28038157,28052021,28065008,28081802,28097228,28111617,28125057,28137692,28153903,28168867,28182836,28195927,28208210,28223883,28238409,28252026,28264760,28276739,28291926,28306017,28319253,28331609,28343294,28358031,28371724,28384639,28396686,28408093,28422371,28435724,28448295,28460059,28471204,28485066,28498071,28510350,28521861,28532834,28546271,28558874,28570860,28582095,28592888,28605898,28618151,28629827,28640863,28651439,28668075,28683409,28697716,28711167,28723827,28739895,28754756,28768641,28781728,28794004,28809552,28823961,28837479,28850148,28862093,28877178,28891174,28904370,28916716,28928375,28942995,28956620,28969453,28981458,28992806,29006992,29020267,29032785,29044475,29055572,29069374,29082303,29094551,29105955,29116819,29130263,29142894,29154857,29166059,29176722,29189713,29201998,29213663,29224662,29235135,29247758,29259700,29271105,29281861,29292198,29308159,29322941,29336768,29349866,29362287,29377745,29392070,29405511,29418195,29430277,29445252,29459145,29472230,29484576,29496277,29510798,29524338,29537081,29549099,29560539,29574643,29587802,29600233,29611888,29623050,29636775,29649584,29661720,29673107,29683980,29697311,29709840,29721690,29732825,29743472,29756460,29768703,29780358,29791264,29801754,29814384,29826285,29837669,29848389,29858678,29870926,29882551,29893660,29904179,29914298,29929676,29943968,29957390,29970131,29982292,29997172,30011035,30024070,30036438,30048258,30062711,30076152,30088850,30100809,30112355,30126409,30139498,30151875,30163530,30174775,30188410,30201167,30213205,30224581,30235534,30248801,30261224,30273003,30284094,30294831,30307758,30319878,30331435,30342269,30352769,30365370,30377226,30388535,30399196,30409484,30421709,30433313,30444386,30454859,30464981,30476902,30488220,30499097,30509358,30519347,30534184,30548038,30561093,30573588,30585451,30599841,30613274,30625960,30638056,30649620,30663573,30676617,30688929,30700676,30711925,30725494,30738196,30750176,30761607,30772617,30785855,30798225,30809944,30821076,30831849,30844722,30856770,30868228,30879116,30889653,30902178,30913940,30925143,30935793,30946123,30958350,30969890,30980916,30991357,31001498,31013426,31024697,31035497,31045765,31055711,31067302,31078367,31088960,31099045,31108837,31123226,31136670,31149379,31161650,31173242,31187160,31200204,31212526,31224445,31235760,31249292,31261945,31273942,31285469,31296547,31309744,31322046,31333740,31344998,31355812,31368635,31380652,31392017,31403020,31413586,31426081,31437794,31448928,31459662,31470052,31482254,31493697,31504623,31515138,31525303,31537227,31548480,31559193,31569520,31579509,31591110,31602128,31612662,31622772,31632605,31643963,31654731,31665099,31675011,31684643,31698552,31711588,31724024,31735936,31747292,31760800,31773445,31785514,31797117,31808192,31821302,31833579,31845292,31856613,31867425,31880185,31892127,31903575,31914581,31925208,31937673,31949303,31960491,31971231,31981642,31993789,32005157,32016073,32026621,32036810,32048654,32059820,32070518,32080834,32090863,32102454,32113396,32123923,32134063,32143901,32155232,32165969,32176290,32186263,32195905,32206973,32217532,32227673,32237462,32246926,32260417,32273125,32285275,32296898,32307990,32321091,32333387,32345206,32356546,32367418,32380160,32392077,32403605,32414661,32425302,32437701,32449286,32460507,32471332,32481722,32493792,32505130,32516088,32526674,32536891,32548689,32559775,32570525,32580874,32590908,32602443,32613285,32623840,32633998,32643839,32655119,32665803,32676142,32686130,32695804,32706851,32717320,32727484,32737279,32746742,32757589,32767849,32777867,32787489,32796782,32814880,32831723,32847182,32861562,32874968,32892314,32908592,32923576,32937516,32950587,32967287,32983056,32997620,33011185,33023953,33040032,33055320,33069457,33082689,33095113,33110602,33125420,33139116,33152004,33164127,33179106,33193430,33206772,33219316,33231148,33245646,33259527,33272493,33284746,33296316,33310319,33323763,33336348,33348271,33359587,33373156,33386160,33398405,33410029,33421118,33434234,33446795,33458691,33470054,33480907,33498345,33514419,33529316,33543201,33556228,33573030,33588613,33603070,33616571,33629225,33645412,33660544,33674578,33687732,33700084,33715702,33730398,33744062,33756838,33768904,33784018,33798263,33811563,33824024,33835776,33850393,33864228,33877142,33889314,33900799,33914973,33928409,33940964,33952831,33964089,33977828,33990851,34003113,34014703,34025744,34039049,34051684,34063592,34074950,34085770,34098583,34110822,34122425,34133513,34144108,34160883,34176351,34190701,34204189,34216817,34233000,34247987,34261927,34275004,34287282,34302937,34317502,34331072,34343813,34355794,34370928,34385102,34398329,34410741,34422414,34437075,34450845,34463706,34475787,34487205,34501433,34514814,34527350,34539135,34550325,34564162,34577182,34589389,34600931,34611889,34625303,34637998,34649897,34661191,34671945,34684949,34697227,34708874,34719928,34730521,34743095,34755002,34766343,34777188,34787529,34803596,34818475,34832365,34845427,34857718,34873249,34887703,34901194,34913897,34925813,34940837,34954901,34968041,34980410,34992032,35006616,35020279,35033109,35045134,35056488,35070638,35083938,35096412,35108153,35119231,35132964,35145937,35158084,35169573,35180431,35193815,35206472,35218352,35229559,35240221,35253233,35265536,35277163,35288156,35298620,35311237,35323233,35334568,35345370,35355655,35367853,35379514,35390621,35401206,35411317,35426732,35441115,35454560,35467282,35479293,35494213,35508175,35521271,35533604,35545295,35559791,35573351,35586112,35598133,35609550,35623598,35636825,35649233,35660957,35672064,35685719,35698589,35710681,35722105,35732999,35746315,35758855,35770670,35781824,35792513,35805466,35817732,35829281,35840225,35850682,35863275,35875245,35886564,35897296,35907566,35919820,35931483,35942589,35953121,35963231,35975125,35986477,35997311,36007667,36017597,36032475,36046372,36059450,36071824,36083617,36098003,36111500,36124188,36136193,36147675,36161653,36174796,36187164,36198859,36210061,36223667,36236453,36248505,36259917,36270874,36284116,36296597,36308331,36319477,36330182,36343046,36355230,36366688,36377581,36388092,36400652,36412552,36423822,36434468,36444784,36457033,36468672,36479730,36490220,36500333,36512227,36523599,36534418,36544733,36554676,36566259,36577336,36587940,36598027,36607817,36622169,36635651,36648345,36660512,36671993,36685902,36698980,36711328,36723098,36734324,36747877,36760598,36772608,36784091,36795077,36808240,36820657,36832351,36843546,36854284,36867110,36879205,36890622,36901532,36912058,36924560,36936380,36947571,36958244,36968561,36980755,36992339,37003304,37013803,37023907,37035786,37047110,37057891,37068184,37078147,37089756,37100825,37111411,37121519,37131327,37142648,37153464,37163802,37173723,37183292,37197223,37210290,37222656,37234580,37245833,37259329,37272039,37284008,37295641,37306604,37319718,37332079,37343753,37355065,37365847,37378643,37390678,37402066,37413076,37423645,37436093,37447865,37458984,37469765,37480077,37492186,37503701,37514596,37525130,37535283,37547159,37558417,37569155,37579470,37589462,37601072,37612118,37622631,37632794,37642603,37653942,37664785,37675095,37685074,37694729,37705803,37716394,37726520,37736282,37745713,37759182,37771885,37783967,37795610,37806644,37819735,37832028,37843773,37855101,37865914,37878654,37890635,37902056,37913119,37923694,37936073,37947750,37958895,37969705,37980059,37992147,38003568,38014482,38025038,38035222,38047017,38058195,38068897,38079237,38089202,38100729,38111695,38122178,38132352,38142136,38153461,38164236,38174542,38184511,38194179,38205286,38215865,38225986,38235791,38245263,38256079,38266450,38276374,38285979,38295232,38308315,38320652,38332491,38343883,38354701,38367397,38379374,38390856,38401963,38412552,38424890,38436529,38447750,38458594,38468981,38481033,38492376,38503334,38513954,38524132,38535871,38546969,38557705,38568108,38578081,38589540,38600402,38610936,38621127,38630964,38642231,38652895,38663236,38673224,38682866,38693899,38704390,38714542,38724381,38733828,38744654,38754988,38764959,38774610,38783911,38794522,38804637,38814416,38823828,38832914,38850330,38866580,38881569,38895473,38908583,38925334,38941063,38955594,38969144,38981897,38998010,39013256,39027387,39040565,39053029,39068626,39083433,39097168,39110043,39122221,39137240,39151575,39164892,39177438,39189297,39203819,39217716,39230638,39242857,39254476,39268516,39281977,39294556,39306471,39317805,39331390,39344435,39356648,39368342,39379416,39392515,39405096,39416936,39428324,39439158,39451847,39464036,39475610,39486732,39497335,39514162,39529700,39544141,39557576,39570288,39586532,39601597,39615639,39628749,39641115,39656791,39671444,39685080,39697856,39709901,39725061,39739307,39752597,39765064,39776869,39791541,39805349,39818257,39830396,39841927,39856125,39869577,39882122,39893988,39905236,39918950,39932013,39944190,39955811,39966831,39980157,39992811,40004705,40016061,40026905,40039774,40051986,40063562,40074680,40085269,40097693,40109589,40120863,40131750,40142121,40158340,40173313,40187268,40200321,40212631,40228316,40242861,40256416,40269123,40281128,40296313,40310436,40323641,40336013,40347739,40362484,40376242,40389109,40401203,40412657,40426904,40440292,40452805,40464603,40475820,40489642,40502676,40514865,40526369,40537361,40550773,40563443,40575304,40586592,40597348,40610365,40622704,40634274,40645371,40655927,40668504,40680468,40691752,40702596,40712973,40725160,40736790,40747843,40758480,40768651,40784194,40798637,40812165,40824799,40836794,40851868,40865886,40879033,40891363,40903033,40917633,40931302,40944064,40956085,40967460,40981644,40994969,41007421,41019142,41030286,41044066,41057025,41069170,41080640,41091552,41104921,41117581,41129404,41140649,41151325,41164300,41176627,41188162,41199161,41209639,41222298,41234328,41245644,41256427,41266742,41278987,41290666,41301710,41312303,41322423,41334288,41345706,41356495,41366906,41376852,41391786,41405718,41418833,41431167,41442902,41457406,41470962,41483713,41495680,41507137,41521220,41534412,41546829,41558492,41569660,41583358,41596236,41608330,41619751,41630662,41643952,41656523,41668305,41679473,41690170,41703128,41715363,41726910,41737842,41748361,41760970,41772933,41784183,41794921,41805197,41817447,41829178,41840178,41850747,41860855,41872750,41884163,41894950,41905288,41915224,41926820,41937952,41948551,41958730,41968476,41982900,41996385,42009141,42021079,42032593,42046600,42059727,42072111,42083773,42095005,42108580,42121382,42133423,42144788,42155775,42168997,42181495,42193243,42204327,42215075,42227967,42240135,42251618,42262507,42273030,42285566,42297484,42308706,42319407,42329738,42341952,42353590,42364575,42375037,42385199,42397127,42408519,42419310,42429587,42439557,42451173,42462306,42472852,42482978,42492725,42504012,42514913,42525255,42535218,42544806,42558753,42571838,42584193,42595951,42607199,42620738,42633481,42645528,42656959,42667971,42681140,42693529,42705260,42716403,42727171,42739987,42752091,42763519,42774417,42784944,42797409,42809257,42820435,42831123,42841453,42853637,42865219,42876192,42886669,42896829,42908700,42920057,42930771,42941060,42951025,42962628,42973771,42984287,42994401,43004191,43015506,43026393,43036726,43046644,43056253,43067323,43077965,43088108,43097882,43107279,43120817,43133517,43145579,43157106,43168113,43181257,43193635,43205331,43216607,43227382,43240129,43252186,43263593,43274585,43285164,43297601,43309346,43320506,43331240,43341612,43353750,43365244,43376150,43386674,43396821,43408648,43419965,43430648,43440990,43450971,43462554,43473620,43484121,43494233,43504065,43515423,43526283,43536600,43546570,43556222,43567267,43577916,43587991,43597783,43607184,43617993,43628442,43638350,43647923,43657184,43670267,43682584,43694338,43705611,43716428,43729154,43741158,43752622,43763624,43774223,43786599,43798275,43809464,43820255,43830647,43842692,43854111,43865011,43875572,43885764,43897502,43908684,43919370,43929688,43939671,43951188,43962162,43972663,43982810,43992660,44003946,44014768,44025045,44035012,44044641,44055669,44066280,44076386,44086186,44095641,44106477,44116859,44126779,44136356,44145637,44156235,44166441,44176173,44185553,44194636,44207330,44219288,44230851,44241883,44252494,44264834,44276495,44287749,44298580,44308986,44320959,44332331,44343304,44353890,44364108,44375807,44386881,44397632,44407986,44418014,44429471,44440340,44450852,44461042,44470872,44482082,44492776,44503097,44513087,44522725,44533709,44544211,44554357,44564164,44573633,44584424,44594755,44604718,44614363,44623628,44634173,44644340,44654092,44663523,44672601,44682952,44692935,44702487,44711720,44720629,44737428,44753119,44767673,44781230,44794005,44810203,44825415,44839524,44852743,44865198,44880825,44895579,44909314,44922178,44934349,44949459,44963743,44977142,44989674,45001584,45016183,45030056,45043050,45055279,45066911,45080979,45094409,45107026,45118960,45130333,45143948,45156933,45169192,45180832,45191976,45205145,45217683,45229566,45240916,45251787,45264505,45276688,45288274,45299390,45310025,45322377,45334196,45345536,45356407,45366844,45383129,45398195,45412203,45425310,45437696,45453436,45468044,45481675,45494454,45506553,45521805,45535980,45549271,45561755,45573530,45588255,45602061,45614978,45627148,45638699,45652946,45666329,45678950,45690805,45702135,45715910,45728888,45741142,45752751,45763831,45777152,45789756,45801665,45813024,45823880,45836758,45848961,45860555,45871618,45882265,45894772,45906599,45917918,45928765,45939191,45951277,45962846,45973920,45984590,45994799,46010532,46025063,46038633,46051322,46063347,46078580,46092690,46105870,46118246,46129966,46144757,46158473,46171330,46183392,46194870,46209203,46222537,46235086,46246890,46258127,46272011,46284992,46297213,46308762,46319762,46333206,46345802,46357699,46369002,46379779,46392812,46405062,46416682,46427732,46438321,46450947,46462851,46474162,46484978,46495363,46507557,46519155,46530213,46540829,46551000,46562880,46574180,46585029,46595437,46605449,46620531,46634581,46647723,46660000,46671687,46686344,46699982,46712786,46724754,46736169,46750404,46763714,46776176,46787904,46799035,46812845,46825807,46837954,46849422,46860364,46873797,46886366,46898255,46909470,46920203,46933267,46945502,46957086,46968087,46978609,46991258,47003223,47014534,47025330,47035651,47047925,47059549,47070609,47081155,47091288,47103217,47114547,47125392,47135752,47145705,47157282,47168396,47179009,47189223,47198975,47213513,47227091,47239875,47251811,47263262,47277362,47290583,47303016,47314675,47325865,47339593,47352475,47364591,47375973,47386941,47400309,47412833,47424665,47435839,47446554,47459550,47471786,47483323,47494306,47504820,47517457,47529373,47540665,47551406,47561735,47574054,47585683,47596749,47607275,47617432,47629374,47640752,47651560,47661892,47671839,47683446,47694523,47705134,47715277,47725059,47736399,47747256,47757664,47767643,47777248,47791270,47804415,47816833,47828438,47839686,47853319,47866096,47878185,47889497,47900480,47913749,47926219,47938004,47949101,47959851,47972770,47984925,47996452,48007314,48017897,48030505,48042360,48053632,48064291,48074653,48086921,48098515,48109519,48119992,48130154,48142096,48153464,48164263,48174557,48184527,48196185,48207280,48217881,48227977,48237785,48249141,48259994,48270370,48280320,48289914,48300973,48311609,48321777,48331576,48340949,48354547,48367303,48379381,48390757,48401734,48414907,48427327,48439062,48450171,48460940,48473803,48485885,48497359,48508219,48518784,48531326,48543144,48554367,48565036,48575385,48587586,48599165,48610128,48620603,48630774,48642683,48653995,48664754,48675004,48684983,48696637,48707710,48718297,48728367,48738184,48749533,48760390,48770728,48780661,48790253,48801330,48811948,48822106,48831839,48841257,48852121,48862534,48872512,48882062,48891281,48904462,48916853,48928610,48939775,48950568,48963397,48975450,48986906,48997835,49008406,49020873,49032628,49043803,49054519,49064893,49077066,49088573,49099506,49109978,49120186,49132093,49143357,49154103,49164387,49174403,49186020,49197079,49207579,49217694,49227508,49238849,49249693,49260025,49269961,49279587,49290701,49301295,49311447,49321204,49330650,49341542,49351972,49361902,49371510,49380748,49391361,49401573,49411342,49420708,49429749,49442507,49454521,49466036,49477019,49487593,49499983,49511671,49522866,49533591,49544003,49556111,49567529,49578474,49588966,49599175,49610986,49622177,49632908,49643212,49653214,49664780,49675759,49686271,49696407,49706263,49717565,49728321,49738662,49748580,49758231,49769307,49779874,49790026,49799805,49809251,49820105,49830481,49840417,49850000,49859258,49869887,49880068,49889845,49899225,49908319,49918766,49928768,49938344,49947525,49956416,49968790,49980424,49991756,50002516,50012939,50024980,50036330,50047354,50057891,50068106,50079817,50090931,50101698,50112022,50122054,50133523,50144402,50154968,50165071,50174919,50186164,50196835,50207203,50217183,50226849,50237853,50248353,50258482,50268317,50277769,50288572,50298870,50308843,50318465,50327748,50338342,50348468,50358261,50367672,50376753,50387160,50397107,50406698,50415932,50424815,50435003,50444804,50454175,50463196,50471934,50488091,50503290,50517354,50530592,50543022,50558620,50573354,50587064,50599984,50612052,50627117,50641400,50654715,50667322,50679125,50693710,50707553,50720565,50732849,50744445,50758526,50771929,50784562,50796534,50807863,50821460,50834450,50846693,50858361,50869439,50882575,50895111,50907024,50918353,50929201,50941960,50954094,50965705,50976803,50987429,50999791,51011602,51022922,51033806,51044220,51056218,51067703,51078779,51089395,51099607,51115294,51129928,51143509,51156337,51168361,51183546,51197732,51210970,51223454,51235216,51249942,51263701,51276604,51288806,51300300,51314549,51327939,51340524,51352481,51363750,51377533,51390485,51402728,51414346,51425403,51438739,51451292,51463245,51474593,51485421,51498303,51510469,51522085,51533174,51543742,51556219,51568035,51579371,51590216,51600619,51612735,51624249,51635338,51645976,51656190,51667975,51679200,51690043,51700466,51710497,51725689,51739783,51752957,51765345,51777039,51791780,51805514,51818332,51830463,51841877,51856180,51869520,51882003,51893848,51905040,51918941,51931913,51944119,51955710,51966703,51980167,51992736,52004649,52015986,52026746,52039774,52051990,52063593,52074695,52085255,52097849,52109679,52121013,52131843,52142191,52154450,52165956,52177047,52187660,52197819,52209726,52221005,52231850,52242270,52252283,52263852,52274860,52285487,52295690,52305518,52320106,52333768,52346532,52358575,52369942,52384135,52397405,52409847,52421581,52432732,52446543,52459455,52471573,52483055,52493946,52507369,52519967,52531805,52543104,52553782,52566827,52579049,52590645,52601669,52612187,52624859,52636708,52648055,52658877,52669180,52681453,52692982,52704015,52714626,52724716,52736651,52747925,52758753,52769120,52779054,52790694,52801708,52812349,52822511,52832283,52843610,52854420,52864835,52874839,52884417,52898510,52911730,52924125,52935820,52946983,52960685,52973581,52985650,52997106,53008002,53021330,53033890,53045680,53056859,53067584,53080592,53092806,53104370,53115339,53125847,53138486,53150389,53161672,53172444,53182737,53195031,53206630,53217688,53228261,53238405,53250379,53261645,53272472,53282817,53292758,53304435,53315459,53326051,53336210,53345986,53357346,53368182,53378583,53388544,53398129,53409222,53419802,53430047,53439839,53449198,53462822,53475652,53487666,53499035,53510010,53523290,53535766,53547520,53558634,53569397,53582333,53594504,53605995,53616885,53627408,53639988,53651881,53663127,53673833,53684177,53696439,53708030,53719046,53729537,53739690,53751678,53762980,53773792,53784109,53794086,53805748,53816790,53827343,53837483,53847263,53858640,53869466,53879821,53889755,53899332,53910468,53921057,53931265,53941023,53950433,53961309,53971695,53981698,53991307,54000471,54013703,54026145,54037820,54048970,54059725,54072566,54084718,54096139,54107042,54117567,54130078,54141910,54153097,54163776,54174125,54186362,54197908,54208889,54219384,54229534,54241448,54252755,54263502,54273807,54283787,54295436,54306493,54317032,54327156,54336960,54348350,54359129,54369493,54379417,54389024,54400178,54410765,54420925,54430689,54440074,54450947,54461344,54471313,54480896,54490073,54500710,54510870,54520684,54530072,54539065,54551857,54563968,54575364,54586292,54596858,54609349,54621135,54632271,54642977,54653321,54665497,54677040,54687943,54698464,54708606,54720463,54731748,54742447,54752787,54762796,54774427,54785441,54795950,54806063,54815894,54827266,54838088,54848380,54858347,54867984,54879093,54889707,54899805,54909588,54919003,54929901,54940270,54950237,54959802,54969042,54979715,54989868,54999646,55009027,55018064,55028532,55038543,55048108,55057296,55066115,55078541,55090276,55101423,55112160,55122511,55134575,55146057,55156957,55167480,55177648,55189447,55200661,55211354,55221685,55231720,55243305,55254268,55264771,55274902,55284761,55296076,55306840,55317118,55327074,55336740,55347855,55358418,55368528,55378311,55387782,55398668,55409007,55418939,55428507,55437779,55448448,55458609,55468389,55477782,55486799,55497233,55507214,55516798,55525984,55534858,55545102,55554888,55564253,55573243,55581915,55593935,55605330,55616335,55626898,55637110,55648853,55659969,55670710,55681083,55691089,55702554,55713457,55723957,55734114,55743955,55755188,55765888,55776204,55786186,55795845,55806884,55817361,55827518,55837308,55846788,55857618,55867939,55877892,55887523,55896814,55907421,55917530,55927290,55936710,55945777,55956202,55966117,55975719,55984918,55993821,56004071,56013825,56023215,56032267,56040967,56050996,56060568,56069759,56078589,56087100,56102658,56117391,56131083,56143982,56156071,56171131,56185403,56198735,56211325,56223092,56237634,56251511,56264484,56276797,56288279,56302329,56315774,56328409,56340418,56351665,56365246,56378242,56390520,56402222,56413249,56426335,56438937,56450858,56462278,56473056,56485728,56497910,56509506,56520629,56531247,56543563,56555395,56566720,56577585,56587992,56599960,56611498,56622552,56633206,56643393,56655039,56666330,56677136,56687579,56697604,56712779,56726975,56740204,56752705,56764416,56779099,56792889,56805788,56817985,56829445,56843673,56857046,56869632,56881564,56892787,56906560,56919562,56931816,56943497,56954471,56967765,56980372,56992294,57003723,57014495,57027322,57039512,57051120,57062247,57072818,57085246,57097093,57108421,57119319,57129649,57141697,57153255,57164317,57174994,57185152,57196851,57208128,57218961,57229378,57239377,57250815,57261813,57272438,57282669,57292496,57307216,57320919,57333749,57345853,57357282,57371560,57384896,57397378,57409206,57420361,57434204,57447218,57459407,57471041,57481948,57495376,57508006,57519908,57531287,57542029,57555031,57567258,57578874,57589988,57600539,57613097,57624964,57636293,57647177,57657469,57669637,57681201,57692269,57702919,57713058,57724912,57736193,57747062,57757486,57767453,57778952,57789981,57800601,57810838,57820606,57831826,57842648,57853049,57863107,57872728,57886919,57900221,57912638,57924413,57935511,57949272,57962218,57974333,57985827,57996697,58010099,58022684,58034555,58045821,58056498,58069500,58081804,58093374,58104472,58114926,58127515,58139438,58150745,58161603,58171898,58184122,58195691,58206760,58217383,58227468,58239347,58250645,58261449,58271876,58281754,58293305,58304366,58314974,58325221,58334967,58346259,58357049,58367486,58377485,58387038,58398061,58408635,58418880,58428722,58438097,58451831,58464721,58476771,58488211,58499132,58512481,58525036,58536824,58548042,58558706,58571665,58583926,58595462,58606465,58616928,58629536,58641463,58652771,58663561,58673870,58686134,58697765,58708836,58719438,58729547,58741443,58752764,58763572,58773959,58783867,58795458,58806511,58817087,58827276,58837026,58848369,58859196,58869604,58879605,58889151,58900196,58910809,58921008,58930849,58940211,58951013,58961414,58971444,58981081,58990253,59003538,59016074,59027771,59038906,59049654,59062566,59074758,59086212,59097099,59107613,59120205,59132084,59143329,59154048,59164359,59176596,59188243,59199242,59209776,59219899,59231808,59243165,59253955,59264305,59274282,59285892,59296959,59307525,59317651,59327409,59338751,59349592,59359937,59369896,59379443,59390528,59401161,59411329,59421142,59430529,59441381,59451777,59461808,59471383,59480562,59491178,59501377,59511230,59520655,59529673,59542572,59554742,59566130,59577021,59587580,59600127,59611979,59623106,59633828,59644141,59656348,59667952,59678876,59689385,59699522,59711465,59722777,59733540,59743858,59753844,59765496,59776593,59787134,59797292,59807078,59818393,59829262,59839577,59849539,59859126,59870200,59880807,59890939,59900700,59910056,59920926,59931324,59941316,59950922,59960092,59970724,59980937,59990710,60000125,60009102,60019514,60029544,60039175,60048389,60057199,60069690,60081547,60092597,60103325,60113684,60125860,60137425,60148289,60158811,60168991,60180887,60192192,60202838,60213177,60223138,60234739,60245832,60256282,60266437,60276243,60287614,60298481,60308771,60318761,60328395,60339505,60350120,60360233,60370014,60379431,60390261,60400669,60410584,60420168,60429373,60440023,60450222,60459991,60469374,60478378,60488831,60498833,60508443,60517642,60526472,60536715,60546556,60555962,60565009,60573660,60585774,60597272,60608133,60618662,60628848,60640663,60651898,60662527,60672875,60682884,60694440,60705453,60715905,60726019,60735882,60747191,60757983,60768270,60778233,60787876,60798968,60809582,60819675,60829489,60838961,60849776,60860173,60870072,60879687,60888926,60899536,60909709,60919462,60928836,60937892,60948322,60958315,60967883,60977097,60985975,60996213,61006032,61015403,61024401,61033028,61043079,61052711,61061932,61070742,61079255,61090990,61102173,61112857,61123220,61133247,61144724,61155656,61166147,61176315,61186172,61197425,61208148,61218431,61228440,61238101,61249084,61259619,61269701,61279502,61288972,61299790,61310110,61320071,61329701,61338974,61349578,61359688,61369459,61378887,61387988,61398378,61408344,61417873,61427101,61435986,61446206,61455977,61465338,61474367,61483093,61493120,61502707,61511888,61520709,61529229,61539100,61548504,61557500,61566191,61574510};

4 
	g˙t
[10011];

6 
	$f
(
x
)

8 
ªt
=0;

9 ; 
x
;)

10 
ªt
+=
x
%10,x/=10;

11  
ªt
;

12 
	}
}

14 
	$gë
(
n
)

16 if(
n
==0)

18 
ªt
=0;

19 
x
=
n
/200000;

20 
ªt
+=
˙t
[
x
];

21 
i
=
x
*200000+1; i<=
n
; i++)

22 if(
i
%
	`f
(i)==0)

23 
ªt
++;

24  
ªt
;

25 
	}
}

27 
	$öô
()

29 
˙t
[0]=0;

30 
˙t
[1]=
d©
[0];

31 
i
=2; i<10002; i++)

32 
˙t
[
i
]=
d©
[i-1];

33 
	}
}

35 
	$maö
()

37 
	`öô
();

38 
t
,
ˇ
,
l
,
r
;

39 
	`sˇnf
("%d",&
t
);

40 
ˇ
=1; ca<=
t
; ca++)

42 
	`¥ötf
("Ca£ %d: ",
ˇ
);

43 
	`sˇnf
("%d%d",&
l
,&
r
);

44 
	`¥ötf
("%d\n",
	`gë
(
r
)-gë(
l
-1));

47 
	}
}

	@problems/hdoj/hdu_4403.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	gs
[100];

6 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

7 
	tLL
;

9 
	$sﬁve
()

11 
i
,
l
=
	`°æí
(
s
);

12 
ªt
=0;

13 
ªt
=0;

14 
i
=0; i<
l
-1; i++)

16 
j
=0; j<
	`B
(
l
-1); j++)

18 if(
	`B
(
i
)&
j
)

20 
LL
 
Œ
=0,
º
=0,
now
=
s
[0]-'0';

21 
k
=0; k<
i
; k++)

23 if(
	`B
(
k
)&
j
)

24 
Œ
+=
now
,now=
s
[
k
+1]-'0';

26 
now
*=10,now+=
s
[
k
+1]-'0';

28 
Œ
+=
now
;

29 
now
=
s
[
i
+1]-'0';

30 
k
=
i
+1; k<
l
-1; k++)

32 if(
	`B
(
k
)&
j
)

33 
º
+=
now
,now=
s
[
k
+1]-'0';

35 
now
*=10,now+=
s
[
k
+1]-'0';

37 
º
+=
now
;

38 if(
Œ
==
º
)

39 
ªt
++;

43  
ªt
;

44 
	}
}

46 
	$maö
()

48 
	`sˇnf
("%s",
s
)!=
EOF
)

50 if(
	`°rcmp
(
s
,"END")==0)

52 
	`sﬁve
();

53 
	`¥ötf
("%d\n",
	`sﬁve
());

56 
	}
}

	@problems/hdoj/hdu_4407.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	~<ve˘‹
>

4 
	#N
 400100

	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
	gp
[
N
],
	g∂i°
[N],
	gt›
;

10 
	gve˘‹
<> 
	gÁc
;

11 
	gm≠
<,> 
	gmp
;

12 
	gm≠
<,>::
ôî©‹
 
ô
;

14 
	$öô
()

16 
t›
=0;

17 
i
=0; i<
N
; i++)

18 
p
[
i
]=i;

19 
i
=2; i<
N
; i++)

21 if(
p
[
i
]==i)

22 
∂i°
[
t›
++]=
i
;

23 
j
=0; j<
t›
&&
∂i°
[j]*
i
<
N
; j++)

25 
p
[
∂i°
[
j
]*
i
]=plist[j];

26 if(
i
%
∂i°
[
j
]==0)

30 
	}
}

32 
LL
 
	$f
(
n
)

34  1LL*
n
*(n+1)/2;

35 
	}
}

37 
	$dfs
(
id
,
x
,
n
,
sz
,
LL
 &
ªt
,
sig
)

39 if(
id
==
sz
)

41 
ªt
+=
sig
*
x
*
	`f
(
n
/x);

44 
	`dfs
(
id
+1,
x
,
n
,
sz
,
ªt
,
sig
);

45 
	`dfs
(
id
+1,
x
*
Ác
[id],
n
,
sz
,
ªt
,-
sig
);

46 
	}
}

48 
	$gcd
(
a
,
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

50 
LL
 
	$sﬁve
(
n
,
c
)

52 
cc
=
c
;

53 if(
n
==0)

55 
LL
 
ªt
=0;

56 
Ác
.
	`˛ór
();

57 ; 
c
>1; )

59 
Ác
.
	`push_back
(
p
[
c
]);

60 
x
=
p
[
c
];

61 ; 
c
%
x
==0;)

62 
c
/=
x
;

64 
	`dfs
(0,1,
n
,
Ác
.
	`size
(),
ªt
,1);

65 
c
=
cc
;

66 
ô
=
mp
.
	`begö
(); it!=mp.
	`íd
(); it++)

68 if(
ô
->
fú°
>
n
)

70 
x
=
ô
->
fú°
,
y
=ô->
£c⁄d
;

71 
g
=
	`gcd
(
y
,
c
),
g2
=gcd(
x
,c);

74 if(
g2
>1)

77 
ªt
-=
x
;

79 if(
g
>1)

82 
ªt
+=
y
;

84  
ªt
;

85 
	}
}

87 
	$maö
()

89 
n
,
m
,
t
;

90 
	`öô
();

91 
	`sˇnf
("%d",&
t
);

92 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
,
t
--)

94 
mp
.
	`˛ór
();

95 
i
=0; i<
m
; i++)

97 
èg
,
x
,
c
,
y
;

98 
	`sˇnf
("%d",&
èg
);

99 if(
èg
==2)

101 
	`sˇnf
("%d%d",&
x
,&
c
);

102 
mp
[
x
]=
c
;

106 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
c
);

107 
	`¥ötf
("%I64d\n",
	`sﬁve
(
y
,
c
)-sﬁve(
x
-1,c));

113 
	}
}

	@problems/hdoj/hdu_4408.cpp

1 
	~<ve˘‹
>

2 
	~<c°rög
>

3 
	~<c°dio
>

4 
	~<Æg‹ôhm
>

5 
	#M
 1011

	)

6 
	#N
 111

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gn
,
	gm
,
	gmod
,
	gvis
[
N
];

11 
	sedge
{ 
	mf
,
	mt
,
	ml
; }
	ge
[
M
];

13 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
<b.l; 
	}
}

14 
	gö
[
N
][N];

15 
LL
 
	gm©
[
N
][N];

16 
	gve˘‹
<> 
	gvec
[
N
];

18 
	suföd


20 
	mp
[101];

21 
öô
(
n
)

23 
	mi
=0; i<
	mn
; i++Ë
	mp
[
i
]=i;

25 
Á
(
x
)

27 
	my
=
x
,
	mt
;

28 ; 
	mx
!=
p
[
x
]; x=p[x]);

29 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

30  
	mx
;

32 
£tf
(
a
,
b
)

34 
	ma
=
Á
(
a
),
	mb
=Á(
b
);

35 
	mp
[
a
]=
b
;

36  
	ma
!=
b
;

38 }
	guf
,
	gnowu
;

40 
LL
 
	$ˇlm©
(
LL
 
m©
[][
N
],
n
)

42 
i
=0;i<
n
;i++)

43 
j
=0;j<
n
;j++)

44 
m©
[
i
][
j
]%=
mod
;

45 
LL
 
ªt
=1;

46 
i
=1; i<
n
; i++)

48 
j
=
i
+1; j<
n
; j++)

49 
m©
[
j
][
i
]!=0)

51 
LL
 
t
=
m©
[
i
][i]/m©[
j
][i];

52 
k
=
i
; k<
n
; k++)

53 
m©
[
i
][
k
]=(m©[i][k]-m©[
j
][k]*
t
)%
mod
;

54 
k
=
i
; k<
n
; k++)

55 
	`sw≠
(
m©
[
i
][
k
],m©[
j
][k]);

56 
ªt
=-ret;

58 if(
m©
[
i
][i]==0)

60 
ªt
Ùë*
m©
[
i
][i]%
mod
;

62  (
ªt
+
mod
)%mod;

63 
	}
}

65 
	$maö
()

67 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
mod
)!=
EOF
)

69 if(
n
==0&&
m
==0&&
mod
==0)

71 
i
=0; i<
m
; i++)

73 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
l
);

74 
e
[
i
].
f
--,e[i].
t
--;

76 
	`s‹t
(
e
,e+
m
,
cmp
);

77 
uf
.
	`öô
(
n
);

78 
nowu
.
	`öô
(
n
);

79 
	`mem£t
(
vis
,0,(vis));

80 
	`mem£t
(
ö
,0,(in));

81 
j
,
nowl
;

82 
LL
 
ªt
=1;

83 
i
=0; i<
m
; i=
j
)

85 
nowu
=
uf
;

86 
nowl
=
e
[
i
].
l
;

87 
j
=
i
; j<
m
; j++)

88 if(
e
[
j
].
l
!=
nowl
)

90 
	`mem£t
(
vis
,0,(vis));

91 
k
=
i
; k<
j
; k++)

93 
x
=
e
[
k
].
f
,
y
Û[k].
t
,
px
=
uf
.
	`Á
(x),
py
=uf.fa(y);

94 if(
px
==
py
)

96 
vis
[
px
]=vis[
py
]=1;

97 
nowu
.
	`£tf
(
px
,
py
);

98 
ö
[
px
][
py
]++;

99 
ö
[
py
][
px
]++;

101 
j
=0; j<
n
; j++)

102 
vec
[
j
].
	`˛ór
();

103 
j
=0; j<
n
; j++)

104 if(
vis
[
j
])

106 
u
=
nowu
.
	`Á
(
j
);

107 
vec
[
u
].
	`push_back
(
j
);

108 
vis
[
j
]=0;

110 
j
=0; j<
n
; j++)

111 if(
vec
[
j
].
	`size
()>0)

113 
u
=0; u<
n
; u++)

114 
v
=0; v<
n
; v++)

115 
m©
[
u
][
v
]=mat[v][u]=0;

117 
sz
=
vec
[
j
].
	`size
();

118 
u
=0; u<
sz
; u++)

119 
v
=
u
+1; v<
sz
; v++)

121 
pu
=
vec
[
j
][
u
],
pv
=vec[j][
v
];

122 
m©
[
v
][
u
]-=
ö
[
pu
][
pv
];

123 
m©
[
u
][
v
]=mat[v][u];

124 
m©
[
u
][u]+=
ö
[
pu
][
pv
];

125 
m©
[
v
][v]+=
ö
[
pu
][
pv
];

127 
LL
 
nowc
=
	`ˇlm©
(
m©
,
sz
);

128 
ªt
Ùë*
nowc
%
mod
;

130 
uf
=
nowu
;

132 
	`mem£t
(
vis
,0,(vis));

133 
i
=0; i<
n
; i++)

134 
vis
[
uf
.
	`Á
(
i
)]=1;

135 
num
=0;

136 
i
=0; i<
n
; i++)

137 if(
vis
[
i
])

138 
num
++;

139 
ªt
=‘ë%
mod
+mod)%mod;

140 
™s
=(
ªt
);

141 if(
num
!=1)

142 
	`puts
("0");

144 
	`¥ötf
("%d\n",
™s
);

147 
	}
}

	@problems/microsoft/ms2013qua/MsBOP2013QuaA.cpp

1 
	~<c°dio
>

2 
	~<s°ªam
>

3 
	~<io°ªam
>

4 
	~<m≠
>

5 
	#N
 1001

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gm≠
<
	g°rög
,°rög> 
	gmp
;

10 
°rög
 
	gs
[
N
];

12 
	$maö
()

14 
T
;

15 
	`sˇnf
("%d",&
T
);

16 
ˇ
=1; ca<=
T
; ca++)

18 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

19 
mp
.
	`˛ór
();

20 
m
,
n
;

21 
	`sˇnf
("%d%d",&
n
,&
m
);

22 
i
=0; i<
m
; i++)

24 
°rög
 
s1
,
s2
;

25 
cö
>>
s1
>>
s2
;

26 
mp
[
s1
]=
s2
;

28 
°rög
 
tmp
;

29 
	`gëch¨
();

30 
	`gëlöe
(
cö
,
tmp
);

31 
°rög°ªam
 
	`ss
(
tmp
);

32 
t›
=0;

33 
ss
>>
s
[
t›
++]);

34 
t›
--;

35 
i
=0; i<
n
-1; i++) {

36 
j
=0; j<
t›
; j++) {

37 if(
mp
.
	`cou¡
(
s
[
j
])>0)

38 
s
[
j
]=
mp
[s[j]];

41 
i
=0; i<
t›
; i++)

43 
cout
<<
s
[
i
];

44 if(
i
<
t›
-1Ë
cout
<<" ";

46 
	`puts
("");

49 
	}
}

	@problems/microsoft/ms2013qua/MsBOP2013QuaB.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
	$gë
(
n
){ Ç*“-1)/2; 
	}
}

10 
LL
 
	$gao
(
m
,
n
,
k
)

12 
LL
 
ªt
=0;

13 
i
=2; i<=
m
; i++)

15 if(
k
-
i
*
n
>=n) ;

16 
a
=
k
/
i
,
b
=k%i;

17 
j
=
	`mö
(
a
,
n
); j>=2; j--)

19 
À
=
k
-
i
*
j
;

20 if(
À
>=
j
)

22 if(
i
+1<=
m
||
À
==0)

23 
ªt
=
	`max
‘ë,1LL*
	`gë
(
i
)*gë(
j
)+1LL*gë(
À
)*i);

28  
ªt
;

29 
	}
}

31 
	$maö
()

33 
T
;

34 
	`sˇnf
("%d",&
T
);

35 
ˇ
=1; ca<=
T
; ca++)

37 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

38 
m
,
n
,
k
;

39 
	`sˇnf
("%d%d%d",&
m
,&
n
,&
k
);

40 
LL
 
ªt
=0;

41 
ªt
=
	`max
‘ë,
	`gao
(
m
,
n
,
k
));

42 
ªt
=
	`max
‘ë,
	`gao
(
n
,
m
,
k
));

43 
cout
<<
ªt
<<
ídl
;

46 
	}
}

	@problems/microsoft/ms2013qua/MsBOP2013QuaC.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<utûôy
>

4 
	~<ve˘‹
>

5 
	~<£t
>

6 
	#N
 100011

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gve˘‹
<
	g∑ú
<,> > 
	gå
[
N
];

11 
	gve˘‹
<> 
	gvec
;

13 
	gÀv
[
N
],
	g¥e
[N][18],
	gÀn
[N];

15 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

17 
	$add
(
v
,
p
)

19 ; 
v
!=
p
; v=
¥e
[v][0])

20 
vec
.
	`push_back
(
Àn
[
v
]);

21 
	}
}

23 
	$dfs
(
now
,
p
,
d
)

25 
Àv
[
now
]=
d
;

26 
¥e
[
now
][0]=
p
;

27 
i
=0; i<
å
[
now
].
	`size
(); i++)

29 
to
=
å
[
now
][
i
].
fú°
;

30 if(
to
==
p
) ;

31 
Àn
[
to
]=
å
[
now
][
i
].
£c⁄d
;

32 
	`dfs
(
to
,
now
,
d
+1);

34 
	}
}

36 
	$ˇl
(
x
,
y
)

38 if(
Àv
[
x
]>Àv[
y
]Ë 
	`ˇl
(y,x);

39 
d
=
Àv
[
y
]-Àv[
x
];

40 
i
=0; i<18; i++)

41 if(
d
&
	`B
(
i
))

43 
y
=
¥e
[y][
i
];

45 if(
x
==
y
)  x;

46 
i
=17; i>=0; i--)

48 if(
¥e
[
x
][
i
]=ıª[
y
][i])

50 
x
=
¥e
[x][
i
],
y
=pre[y][i];

52  
¥e
[
x
][0];

53 
	}
}

55 
	$maö
()

57 
T
,
n
;

58 
	`sˇnf
("%d",&
T
);

59 
ˇ
=1; ca<=
T
; ca++)

61 
	`¥ötf
("Ca£ #%d:\n",
ˇ
);

62 
	`sˇnf
("%d",&
n
);

63 
i
=0; i<
n
; i++Ë
å
[i].
	`˛ór
();

64 
i
=0; i<
n
-1; i++)

66 
x
,
y
,
z
;

67 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

68 
x
--,
y
--;

69 
å
[
x
].
	`push_back
(
	`make_∑ú
(
y
,
z
));

70 
å
[
y
].
	`push_back
(
	`make_∑ú
(
x
,
z
));

72 
	`dfs
(0,-1,0);

73 
i
=1; i<18; i++)

74 
j
=0; j<
n
; j++)

75 
¥e
[
j
][
i
]=pre[pre[j][i-1]][i-1];

76 
m
;

77 
	`sˇnf
("%d",&
m
);

78 
i
=0; i<
m
; i++)

80 
x
,
y
;

81 
	`sˇnf
("%d%d",&
x
,&
y
);

82 
x
--,
y
--;

83 
p
=
	`ˇl
(
x
,
y
);

84 
vec
.
	`˛ór
();

85 
	`add
(
x
,
p
);

86 
	`add
(
y
,
p
);

87 
	`s‹t
(
vec
.
	`begö
(),vec.
	`íd
());

88 
èg
=0;

89 
i
=2; i<
vec
.
	`size
(); i++)

90 if(
vec
[
i
-2]+vec[i-1]>vec[i])

91 
èg
=1;

92 if(
èg
Ë
	`puts
("Yes");

93 
	`puts
("No");

97 
	}
}

	@problems/microsoft/ms2013r1/MsBOP2013R1A.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[20][12][12],
	gn
;

9 
	$gao
(
id
,
a
,
b
)

11 if(
dp
[
id
][
a
][
b
]>=0)  dp[id][a][b];

12 if(
id
==
n
Ë 
dp
[id][
a
][
b
]=0;

13 if(
a
==0) {

14  
dp
[
id
][
a
][
b
]=
	`max
(-(
n
-id),-b);

16 
ªt
=-100;

17 
i
=1; i<=
a
; i++)

19 
xa
,
xb
=100;

20 
xa
=
	`gao
(
id
+1,
a
-
i
,
b
)+1;

21 if(
b
-
i
-1>=0)

22 
xb
=
	`gao
(
id
+1,
a
,
b
-
i
-1)-1;

23 
ªt
=
	`max
‘ë,
	`mö
(
xa
,
xb
));

25  
dp
[
id
][
a
][
b
]=
ªt
;

26 
	}
}

28 
	$maö
()

30 
a
,
b
,
t
;

31 
	`sˇnf
("%d",&
t
);

32 
ˇ
=1; ca<=
t
; ca++)

34 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

35 
	`sˇnf
("%d%d%d",&
n
,&
a
,&
b
);

36 
	`mem£t
(
dp
,-1,(dp));

37 
x
=
	`gao
(0,
a
,
b
);

38 if(
x
>0)

39 
	`puts
("1");

40 if(
x
==0)

41 
	`puts
("0");

43 
	`puts
("-1");

46 
	}
}

	@problems/microsoft/ms2013r1/MsBOP2013R1B.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 100000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gs
[
N
],
	gs2
[N];

10 
	$maö
()

12 
t
;

13 
	`sˇnf
("%d",&
t
);

14 
ˇ
=1; ca<=
t
; ca++)

16 
	`sˇnf
("%s%s",
s
,
s2
);

17 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

18 
l1
=
	`°æí
(
s
);

19 
l2
=
	`°æí
(
s2
);

20 
ªt
=
l2
;

21 
i
=0; i<=
l1
-
l2
; i++)

23 
˙t
=0;

24 
j
=0; j<
l2
&&
˙t
<
ªt
; j++)

25 if(
s
[
i
+
j
]!=
s2
[j])

26 
˙t
++;

27 
ªt
=
	`mö
‘ë,
˙t
);

29 
	`¥ötf
("%d\n",
ªt
);

32 
	}
}

	@problems/microsoft/ms2013r2/Ms2013R2A.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 310

	)

5 
	#S
 200100

	)

6 
	#öf
 1000000

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mw
,
	mn
; }
	ge
[
S
];

11 
	gli°
[
N
],
	gt›
,
	gœy
[N],
	gq
[
S
];

13 
	$ö£π
(
f
,
t
,
w
)

15 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$_ö£π
(
f
,
t
,
w
)

21 
	`ö£π
(
f
,
t
,
w
);

22 
	`ö£π
(
t
,
f
,0);

23 
	}
}

25 
	$bfs
(
s
,
t
,
n
)

27 
l
,
r
;

28 
i
=0; i<
n
; i++)

29 
œy
[
i
]=-1;

30 
q
[
l
=
r
=0]=
s
;

31 
œy
[
s
]=0;

32 ; 
l
<=
r
;)

34 
now
=
q
[
l
++];

35 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

37 
to
=
e
[
i
].
t
;

38 if(
œy
[
to
]<0&&
e
[
i
].
w
>0)

39 
œy
[
to
]ˆay[
now
]+1,
q
[++
r
]=to;

42  
œy
[
t
]>=0;

43 
	}
}

45 
	$dfs
(
now
,
t
,
now_Êow
)

47 
âl
=0,
sögÀ
;

48 if(
now
==
t
Ë 
now_Êow
;

49 
i
=
li°
[
now
]; i!=-1&&
now_Êow
>
âl
; i=
e
[i].
n
)

51 
to
=
e
[
i
].
t
;

52 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
w
>0&&(
sögÀ
=
	`dfs
—o,
t
,
	`mö
(
now_Êow
-
âl
,e[i].w))))

54 
e
[
i
].
w
-=
sögÀ
;

55 
e
[
i
^1].
w
+=
sögÀ
;

56 
âl
+=
sögÀ
;

59 if(
âl
==0Ë
œy
[
now
]=-1;

60  
âl
;

61 
	}
}

63 
	$di˙ic
(
s
,
t
,
n
)

65 
ªt
=0;

66 
	`bfs
(
s
,
t
,
n
))

68 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

70  
ªt
;

71 
	}
}

73 
	$maö
()

75 
t
;

76 
	`sˇnf
("%d",&
t
);

77 
ˇ
=1; ca<=
t
; ca++)

79 
	`¥ötf
("Ca£ #%d:\n",
ˇ
);

80 
now
=0,
¥e
=0;

81 
n
,
m
;

82 
	`sˇnf
("%d%d",&
n
,&
m
);

83 
t›
=0;

84 
i
=0; i<
n
; i++)

85 
li°
[
i
]=-1;

86 
i
=0; i<
m
; i++)

88 
x
,
y
,
c
;

89 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
c
);

90 
	`_ö£π
(
x
-1,
y
-1,
c
);

91 
	`_ö£π
(
y
-1,
x
-1,
c
);

92 
now
=
	`di˙ic
(0,
n
-1,n);

93 if(
now
>0)

94 
	`¥ötf
("%d %d\n",
i
+1,
now
);

95 
¥e
=
now
;

99 
	}
}

	@problems/microsoft/ms2013r2/Ms2013R2B.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#N
 51000

	)

5 
	#ïs
 1e-10

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	mx
,
	my
,
	myy
; }
	gno
[
N
];

10 
	s£g
{ 
	mx
,
	my
; }
	g£g
[
N
];

12 c⁄° 
	göf
=10000000;

14 
	$cmp
(
node
 
a
,nodê
b
){ á.
y
>b.y; 
	}
}

16 
	gn
;

18 
	$ok
(
R
,&
p
)

20 
º
=
R
*R,
d
,
l
,
r
;

21 if(
no
[0].
y
>
R
)

23 
d
=
	`sqπ
(
º
-
no
[0].
yy
);

24 
l
=
no
[0].
x
-
d
;

25 
r
=
no
[0].
x
+
d
;

26 
i
=1; i<
n
; i++)

28 if(
no
[
i
].
y
>
R
)

30 
d
=
	`sqπ
(
º
-
no
[
i
].
yy
);

31 
l
=
	`max
÷,
no
[
i
].
x
-
d
);

32 
r
=
	`mö
‘,
no
[
i
].
x
+
d
);

33 if(
l
>
r
)

36 
p
=(
l
+
r
)*0.5;

38 
	}
}

40 
	$gao
()

42 
l
=0,
r
=
öf
,
m
,
p
;

43 ; 
r
-
l
>
ïs
;)

45 
m
=(
l
+
r
)*0.5;

46 if(
	`ok
(
m
,
p
))

47 
r
=
m
;

49 
l
=
m
;

51 
	`ok
((
l
+
r
)*0.5,
p
);

52  
p
;

53 
	}
}

55 
	$maö
()

57 
T
;

58 
	`sˇnf
("%d",&
T
);

59 
ˇ
=1; ca<=
T
; ca++)

61 
	`¥ötf
("Ca£ #%d: ",
ˇ
);

62 
	`sˇnf
("%d",&
n
);

63 
i
=0; i<
n
; i++)

65 
	`sˇnf
("%lf%lf",&
no
[
i
].
x
,&no[i].
y
);

66 
no
[
i
].
yy
Úo[i].
y
*no[i].y;

68 
	`s‹t
(
no
,no+
n
,
cmp
);

69 
	`¥ötf
("%.6lf\n",
	`gao
());

72 
	}
}

	@problems/microsoft/ms2013r2/ms2013R2D.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<cm©h
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	$gëh
(
a
,
b
,
c
)

9 
coß
=(
b
*b+
c
*c-
a
*a)/(2*b*c);

10  
c
*
	`sqπ
(1-
coß
*cosa);

11 
	}
}

13 
	$gao
(
a
,
b
,
c
)

15 
h
=
	`gëh
(
a
,
b
,
c
);

16 
d1
=
	`sqπ
(
a
*a-
h
*h);

17 
ªt
=0;

18 
s
=
b
*
h
;

19 if(
d1
>
b
*0.5)

20 
s
*0.75;

22  
s
-
d1
*
h
-(
b
*0.5-d1)*h;

23 
	}
}

25 
	$maö
()

27 
T
;

28 
	`sˇnf
("%d",&
T
);

29 
ˇ
=1; ca<=
T
; ca++)

31 
l1
,
l2
,
l3
,
l4
,
l5
;

32 
	`sˇnf
("%d%d%d%d%d",&
l1
,&
l2
,&
l3
,&
l4
,&
l5
);

33 
ªt
;

34 
ªt
=
	`gao
(
l1
,
l2
,
l5
);

35 
ªt
=
	`mö
‘ë,
	`gao
(
l2
,
l1
,
l5
));

36 
	`¥ötf
("%.4lf\n",
ªt
);

39 
	}
}

	@problems/multi/2012/site2/Matrix_D.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<io°ªam
>

5 
	tLL
;

6 
	#N
 111001

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	sedge
{ 
	mf
,
	mt
,
	ml
; }
	ge
[
N
];

10 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
>b.l; 
	}
}

12 
	gèg
[
N
];

14 
	suföd


16 
	mp
[
N
],
	mt
;

17 
öô
()

19 
	mi
=0; i<
	mN
; i++)

20 
	mp
[
i
]=i;

22 
run
(&
x
)

24 
	my
=
x
;

25 ; 
	mp
[
t
=
x
]!=x; 
	mx
=
p
[x],p[t]=p[x]);

26 ; 
	mp
[
t
=
y
]!=
x
;Ö[t]=x,
	my
=
p
[y]);

28 
£t‰õnd
(
i
,
j
)

30 
run
(
i
);

31 
run
(
j
);

32 
	mp
[
i
]=
j
;

34 
is‰õnd
(
i
,
j
)

36 
run
(
i
);

37 
run
(
j
);

38  
	mi
==
j
;

40 }
	guf
;

42 
	$maö
()

44 
t
,
n
,
m
;

45 
	`sˇnf
("%d",&
t
);

46 
t
--)

48 
uf
.
	`öô
();

49 
	`mem£t
(
èg
,0,(tag));

50 
	`sˇnf
("%d%d",&
n
,&
m
);

51 
i
=0; i<
n
-1; i++)

52 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
l
);

53 
i
=0; i<
m
; i++)

55 
x
;

56 
	`sˇnf
("%d",&
x
);

57 
èg
[
x
]=1;

59 
	`s‹t
(
e
,e+
n
-1,
cmp
);

60 
LL
 
ªt
=0;

61 
i
=0; i<
n
-1; i++)

63 
x
=
e
[
i
].
f
,
y
Û[i].
t
;

64 
uf
.
	`run
(
x
),uf.run(
y
);

65 if(
èg
[
x
]&&èg[
y
])

66 
ªt
+=
e
[
i
].
l
;

69 
uf
.
	`£t‰õnd
(
x
,
y
);

70 if(
èg
[
x
]||èg[
y
])

71 
èg
[
y
]Òag[
x
]=1;

74 
cout
<<
ªt
<<
ídl
;

77 
	}
}

	@problems/multi/2012/site2/Meeting-point1_B.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	#N
 110001

	)

5 
	tLL
;

6 
	#öf
 10000000000000000LL

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
LL
 
	gdisx1
[
N
],
	gdisy1
[N],
	gdisx2
[N],
	gdisy2
[N],
	gx
[N],
	gy
[N];

10 
	gn
;

11 
	snode
{ 
LL
 
	mx
,
	my
; }
	gno
[
N
];

13 
	$cmp
(
LL
 
a
,LL 
b
){ á<b; 
	}
}

15 
	$gë_id
(
LL
 
x
,LL *
¨r
)

17 
l
=0,
r
=
n
-1,
mid
;

18 ; 
l
<=
r
;)

20 
mid
=(
l
+
r
)>>1;

21 if(
¨r
[
mid
]<
x
)

22 
l
=
mid
+1;

23 if(
¨r
[
mid
]>
x
)

24 
r
=
mid
-1;

26  
mid
;

29 
	}
}

31 
	$öô
()

33 
disx1
[0]=0;

34 
disy1
[0]=0;

35 
i
=1; i<
n
; i++)

37 
disx1
[
i
]=disx1[i-1]+i*(
x
[i]-x[i-1]);

38 
disy1
[
i
]=disy1[i-1]+i*(
y
[i]-y[i-1]);

40 
disx2
[
n
-1]=0;

41 
disy2
[
n
-1]=0;

42 
i
=
n
-2; i>=0; i--)

44 
disx2
[
i
]=disx2[i+1]+(
n
-i-1)*(
x
[i+1]-x[i]);

45 
disy2
[
i
]=disy2[i+1]+(
n
-i-1)*(
y
[i+1]-y[i]);

47 
	}
}

49 
	$maö
()

51 
t
;

52 
	`sˇnf
("%d",&
t
);

53 
	`sˇnf
("%d",&
n
),
t
--)

55 
i
=0; i<
n
; i++)

57 
xx
, 
yy
;

58 
	`sˇnf
("%d%d", &
xx
, &
yy
);

59 
no
[
i
].
x
 = 
xx
;

60 
no
[
i
].
y
 = 
yy
;

61 
x
[
i
]=
no
[i].x;

62 
y
[
i
]=
no
[i].y;

64 
	`s‹t
(
x
,x+
n
,
cmp
);

65 
	`s‹t
(
y
,y+
n
,
cmp
);

66 
	`öô
();

67 
LL
 
ªt
=
öf
,
tmp
;

68 
i
=0; i<
n
; i++)

70 
id
=
	`gë_id
(
no
[
i
].
x
,x);

71 
tmp
=
disx1
[
id
]+
disx2
[id];

72 
id
=
	`gë_id
(
no
[
i
].
y
,y);

73 
tmp
+=
disy1
[
id
]+
disy2
[id];

74 
ªt
=
	`mö
‘ë,
tmp
);

76 
cout
<<
ªt
<<
ídl
;

79 
	}
}

	@problems/multi/2012/site2/Meeting-point2_C.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 110001

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 10000000000000000LL

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gdisx1
[
N
],
	gdisy1
[N],
	gdisx2
[N],
	gdisy2
[N],
	gx
[N],
	gy
[N];

35 
	gn
;

36 
	snode
{ 
LL
 
	mx
,
	my
; }
	gno
[
N
];

38 
	$cmp
(
LL
 
a
,LL 
b
){ á<b; 
	}
}

40 
	$gë_id
(
LL
 
x
,LL *
¨r
)

42 
l
=0,
r
=
n
-1,
mid
;

43 ; 
l
<=
r
;)

45 
mid
=(
l
+
r
)>>1;

46 if(
¨r
[
mid
]<
x
)

47 
l
=
mid
+1;

48 if(
¨r
[
mid
]>
x
)

49 
r
=
mid
-1;

51  
mid
;

54 
	}
}

56 
	$öô
()

58 
disx1
[0]=0;

59 
disy1
[0]=0;

60 
i
=1; i<
n
; i++)

62 
disx1
[
i
]=disx1[i-1]+i*(
x
[i]-x[i-1]);

63 
disy1
[
i
]=disy1[i-1]+i*(
y
[i]-y[i-1]);

65 
disx2
[
n
-1]=0;

66 
disy2
[
n
-1]=0;

67 
i
=
n
-2; i>=0; i--)

69 
disx2
[
i
]=disx2[i+1]+(
n
-i-1)*(
x
[i+1]-x[i]);

70 
disy2
[
i
]=disy2[i+1]+(
n
-i-1)*(
y
[i+1]-y[i]);

72 
	}
}

74 
	$maö
()

76 
t
;

77 
	`sˇnf
("%d",&
t
);

78 
	`sˇnf
("%d",&
n
),
t
--)

80 
i
=0; i<
n
; i++)

82 
xx
, 
yy
;

83 
	`sˇnf
("%d%d", &
xx
, &
yy
);

84 
no
[
i
].
x
 = 
xx
+
yy
;

85 
no
[
i
].
y
 = 
yy
-
xx
;

86 
x
[
i
]=
xx
+
yy
;

87 
y
[
i
]=
yy
-
xx
;

89 
	`s‹t
(
x
,x+
n
,
cmp
);

90 
	`s‹t
(
y
,y+
n
,
cmp
);

91 
	`öô
();

92 
LL
 
ªt
=
öf
,
tmp
;

93 
i
=0; i<
n
; i++)

95 
id
=
	`gë_id
(
no
[
i
].
x
,x);

96 
tmp
=
disx1
[
id
]+
disx2
[id];

97 
id
=
	`gë_id
(
no
[
i
].
y
,y);

98 
tmp
+=
disy1
[
id
]+
disy2
[id];

99 
ªt
=
	`mö
‘ë,
tmp
);

101 
cout
<<
ªt
/2<<
ídl
;

104 
	}
}

	@problems/nkoj/nkoj_2076.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 101

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gdp
[
N
][N][9][1<<8];

9 
	gd©
[
N
],
	gt°
;

10 
	gn
,
	gk
;

12 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

14 
ölöe
 
	$gë
(
x
)

16 
ªt
=0;

17 
i
=0; i<8; i++)

18 if(
t°
&
	`B
(
i
))

19 if((
x
&
	`B
(
i
))==0)

20 
ªt
++;

21  
ªt
;

22 
	}
}

24 
	$dfs
(
id
,
tk
,
¥e
,
°
)

26 if(
dp
[
id
][
tk
][
¥e
][
°
]>=0)  dp[id][tk][pre][st];

27 if(
id
==
n
)

28  
dp
[
id
][
tk
][
¥e
][
°
]=
	`gë
(st);

29 
ªt
=
N
;

30 if(
tk
==
k
)

31 
ªt
=
	`dfs
(
id
+1,
tk
,
d©
[id],
°
|
	`B
(d©[id]))+(d©[id]!=
¥e
);

34 
ªt
=
	`mö
‘ë,
	`dfs
(
id
+1,
tk
,
d©
[id],
°
|
	`B
(d©[id]))+(d©[id]!=
¥e
));

35 
ªt
=
	`mö
‘ë,
	`dfs
(
id
+1,
tk
+1,
¥e
,
°
));

37  
dp
[
id
][
tk
][
¥e
][
°
]=
ªt
;

38 
	}
}

40 
	$maö
()

42 
ˇ
=1;

43 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

45 if(
n
==0&&
k
==0) ;

46 
t°
=0;

47 
i
=0; i<
n
; i++)

49 
	`sˇnf
("%d",&
d©
[
i
]);

50 
d©
[
i
]-=25;

51 
t°
|=
	`B
(
d©
[
i
]);

53 
	`mem£t
(
dp
,-1,(dp));

54 
	`¥ötf
("Ca£ %d: %d\n\n",
ˇ
++,
	`dfs
(0,0,8,0));

57 
	}
}

	@problems/nkoj/nkoj_2172.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<£t
>

4 
	~<Æg‹ôhm
>

5 
	#N
 1011

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	ml
,
	mr
,
	mi
;

10 
‰õnd
 
	m›î©‹
 <(
node
 
	ma
,nodê
	mb
){ á.
	mr
==
b
.
r
?
a
.
l
>b.l:a.r<b.r; }

11 }
	gno
[
N
];

13 
	gmu…i£t
<
	gnode
> 
	g°
;

14 
	gmu…i£t
<
	gnode
>::
ôî©‹
 
ô
;

15 
	gtu∫
;

16 
	gs
[100];

18 
	$cmp
(
node
 
a
,nodê
b
){ á.
l
==b.l?a.
r
<b.r:a.l>b.l; 
	}
}

20 
	$maö
()

22 
ts
,
n
;

23 
	`sˇnf
("%d",&
ts
);

24 ; 
ts
--;)

26 
°
.
	`˛ór
();

27 
	`sˇnf
("%d%s",&
n
,
s
);

28 if(
	`°rcmp
(
s
,"Petra")==0)

29 
tu∫
=0;

31 
tu∫
=1;

32 
i
=0; i<
n
; i++)

34 
	`sˇnf
("%d%d",&
no
[
i
].
l
,&no[i].
r
);

36 
	`s‹t
(
no
,no+
n
,
cmp
);

37 
Æ
=0,
¨
=0;

38 
i
=0; i<
n
; i++)

40 
°
.
	`ö£π
(
no
[
i
]);

41 if(
tu∫
==0)

43 
ô
=
°
.
	`begö
();

44 
Æ
+=
ô
->
l
;

45 
°
.
	`îa£
(
ô
);

47 
tu∫
^=1;

49 
ô
=
°
.
	`begö
(); it!=°.
	`íd
(); it++)

50 
¨
+=
ô
->
r
;

51 
	`¥ötf
("%d %d\n",
Æ
,
¨
);

54 
	}
}

	@problems/nkoj/nkoj_2187_water.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gs
[20];

31 
	gn
,
	gk
;

32 
LL
 
	gªt
=0;

34 
	$dfs
(
id
,
˙t
,
LL
 
sum
,LL 
mul
)

36 if(
˙t
+
n
-
id
<
k
)

38 if(
id
==
n
)

40 
ªt
=
	`max
‘ë,
mul
);

43 
	`dfs
(
id
+1,
˙t
,
sum
*10+
s
[id],
mul
);

44 if(
˙t
<
k
)

45 
	`dfs
(
id
+1,
˙t
+1,0,
mul
*(
sum
*10+
s
[id]));

46 
	}
}

48 
	$maö
()

50 
	`sˇnf
("%d%d%s",&
n
,&
k
,
s
);

51 
i
=0; i<
n
; i++)

52 
s
[
i
]-='0';

53 
	`dfs
(0,0,0,1);

54 
	`¥ötf
("%Œd\n",
ªt
);

56 
	}
}

	@problems/nkoj/nkoj_2190_NKU_football_ufind.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 301000

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	g˙t
[
N
];

32 
	suföd


34 
	mp
[
N
],
	mt
;

35 
öô
()

37 
	mi
=0; i<=
N
; i++)

38 
	mp
[
i
]=i;

40 
run
(&
x
)

42 ; 
	mp
[
t
=
x
]!=x; 
	mx
=
p
[x],p[t]=p[x]);

44 
is‰õnd
(
i
,
j
)

46 
run
(
i
);Ñun(
j
);

47  
	mi
==
j
;

49 
£t‰õnd
(
i
,
j
)

51 
run
(
i
);Ñun(
j
);

52 
	mp
[
i
]=
p
[
j
];

54 }
	guf
;

56 
	$maö
()

58 
x
,
y
,
n
,
m
,
ªt
;

59 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

61 
uf
.
	`öô
();

62 
	`mem£t
(
˙t
,0,(cnt));

63 
i
=0; i<
m
; i++)

65 
	`sˇnf
("%d%d",&
x
,&
y
);

66 
uf
.
	`£t‰õnd
(
x
,
y
);

68 
i
=1; i<=
n
; i++)

70 
tmp
=
i
;

71 
uf
.
	`run
(
tmp
);

72 
˙t
[
tmp
]++;

74 
ªt
=0;

75 
i
=1; i<=
n
; i++)

76 
ªt
+=
˙t
[
i
]/8+(cnt[i]%8>=5);

77 
	`¥ötf
("%d\n",
ªt
);

80 
	}
}

	@problems/nkoj/nkoj_2193_road_to_Mauritius_dijkstra.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#öf
 1e10

	)

18 
	#N
 501

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	gm≠
<
	g°rög
,> 
	gid
;

32 
	gs
[30],
	gt
[30];

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
	ml
; }
	ge
[
S
];

35 
	shóp_t
{

36 
	mv
; 
	ml
;

37 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
)

39  
	ma
.
	ml
>
	mb
.l;

41 }
	gh_t
;

42 
	gt›
,
	gli°
[
N
],
	g°
,
	ged
,
	gv
[N];

43 
	gmö_l
[
N
];

44 
	g¥i‹ôy_queue
<
	ghóp_t
> 
	gq
;

46 
	$ö£π
(
f
,
t
,
l
)

48 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

49 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

50 
	}
}

52 
	$dijk°ø
(
°
,
ed
,
n
)

54 
now
,
to
,
i
;

55 ; !
q
.
	`em±y
(); q.
	`p›
());

56 
i
=0; i<
n
; i++)

57 
mö_l
[
i
]=
öf
,
v
[i]=0;

58 
mö_l
[
h_t
.
v
=
°
]=h_t.
l
=0;

59 
q
.
	`push
(
h_t
);

60 ; !
q
.
	`em±y
(); )

62 
h_t
=
q
.
	`t›
();

63 
q
.
	`p›
();

64 
now
=
h_t
.
v
;

65 if(!
v
[
now
])

66 
v
[
now
]=1,
i
=
li°
[now]; i!=-1; i=
e
[i].
n
)

68 
to
=
e
[
i
].
t
;

69 if(!
v
[
to
]&&
mö_l
[to]>mö_l[
now
]+
e
[
i
].
l
)

70 
h_t
.
v
=
to
,h_t.
l
=
mö_l
[to]=mö_l[
now
]+
e
[
i
].l,
q
.
	`push
(h_t);

73 
	}
}

75 
	$maö
()

77 
n
,
m
,
x
,
y
;

78 
u
,
v
;

79 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

81 
t›
=0;

82 
i
=0; i<
n
; i++)

83 
li°
[
i
]=-1;

84 
i
=0; i<
n
; i++)

86 
	`sˇnf
("%s",
s
);

87 
id
[
	`°rög
(
s
)]=
i
;

89 
i
=0; i<
m
; i++)

91 
	`sˇnf
("%s%s%lf%lf",
s
,
t
,&
u
,&
v
);

92 
x
=
id
[
	`°rög
(
s
)];

93 
y
=
id
[
	`°rög
(
t
)];

94 
u
/=
v
;

95 
	`ö£π
(
x
,
y
,
u
);

96 
	`ö£π
(
y
,
x
,
u
);

98 
°
=
id
[
	`°rög
("China")];

99 
ed
=
id
[
	`°rög
("Mauritius")];

100 
	`dijk°ø
(
°
,
ed
,
n
);

101 
	`¥ötf
("%.2lf\n",
mö_l
[
ed
]);

104 
	}
}

	@problems/nkoj/nkpc8/solves/nkpc8_Lees_Game_2nd.cpp

6 
	~<c°rög
>

7 
	~<c°dio
>

8 
	~<ve˘‹
>

9 
	~<£t
>

10 
	~<m≠
>

11 
	~<queue
>

12 
	~<°rög
>

13 
	~<io°ªam
>

14 
	~<Æg‹ôhm
>

15 
	#MAXM
 1000010

	)

16 
	#MOD
 1000000007

	)

17 
	#N
 1011

	)

19 
	#DIGIT
 4

	)

20 
	#DEPTH
 10000

	)

21 
	#MAXN
 2502

	)

22 
	tbig_num
[
MAXN
+1];

24 
	tLL
;

25 
usög
 
«me•a˚
 
	g°d
;

27 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

28 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

29 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

30 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

31 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

33 
	$wrôe
(c⁄° 
big_num
 
a
)

35 
i
,
j
;

36 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

37 
j
=
DEPTH
/10; j; j/=10)

38 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

39 
	}
}

41 
	$add
(
big_num
 
a
,big_num 
b
)

43 
i
;

44 
i
=1; i<=
b
[0]; i++)

45 if((
a
[
i
]+=
b
[i])>=
DEPTH
)

46 
a
[
i
]-=
DEPTH
,a[i+1]++;

47 if(
b
[0]>=
a
[0])á[0]=b[0];

48 ; 
a
[
i
]>=
DEPTH
 && i<=a[0];á[i]-=DEPTH,i++,a[i]++ );

49 
a
[0]+=(a[a[0]+1]>0);

50 
	}
}

52 
big_num
 
	gg
[
N
],
	gf
[N];

54 
	$öô
()

56 
i
;

57 
	`mem£t
(
g
,0,(g));

58 
	`mem£t
(
f
,0,(f));

59 
i
=0; i<
N
; i++)

61 
g
[
i
][0]=1;

62 
f
[
i
][0]=1;

64 
g
[1][1]=1;

65 
g
[2][1]=1;

66 
g
[3][1]=1;

67 
f
[1][1]=1;

68 
f
[2][1]=1;

69 
f
[3][1]=2;

70 
i
=4; i<
N
; i++)

72 
	`add
(
g
[
i
],g[i-1]);

73 
	`add
(
g
[
i
],g[i-3]);

74 
	`add
(
f
[
i
],f[i-1]);

75 
	`add
(
f
[
i
],
g
[i-2]);

76 
	`add
(
f
[
i
],
g
[i-3]);

85 
	}
}

87 
	$maö
()

89 
n
;

90 
	`öô
();

91 
	`sˇnf
("%d",&
n
)!=
EOF
)

93 
	`wrôe
(
f
[
n
]);

94 
	`puts
("");

97 
	}
}

	@problems/nkoj/nkpc8/solves/nkpc8_Lees_Travel_4th.cpp

7 
	~<c°rög
>

8 
	~<cm©h
>

9 
	~<c°dio
>

10 
	~<ve˘‹
>

11 
	~<£t
>

12 
	~<m≠
>

13 
	~<queue
>

14 
	~<°rög
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#ïs
 1e-8

	)

19 
	#MAXM
 1000010

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 c⁄° 
	gpi
=
acos
(-1);

27 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

29 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

30 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

31 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

33 
	gR
,
	gH
,
	gV
,
	gD
[
MAXN
],
	gNV
,
	gsôa
;

34 
	gn
;

36 
	$ˇl
(
h
)

38 
t
=(
H
-
h
)/H*
R
;

39  1.0/3*
n
*
pi
*(
R
*R*
H
-
t
*t*(H-
h
));

40 
	}
}

42 
	$fú°_f
(
x
,
d
)

44 
t
=
	`sqπ
(1-
d
*d/(
x
*x));

45  2*(1.0/3*
x
*x*x*
	`acos
(
d
/x)-1.0/6*d*(x*x*
t
+d*d*
	`log
(x*(t+1))));

46 
	}
}

48 
	$£c⁄d_f
(
x
,
d
)

50 
t
=
	`sqπ
(
x
*x-
d
*d);

51  
d
*(
x
*
t
-d*d*
	`log
(t+x));

52 
	}
}

54 
	$ª≥©
(
h
,
i
)

56 if(
D
[
i
]>=2*
R
)  0;

57 
M
=
	`max
(
D
[
i
]/2,(
H
-
h
)/H*
R
);

58 
d
=
D
[
i
]/2;

59 
fú°
=
	`fú°_f
(
R
,
d
)-fú°_f(
M
,d);

60 
£c⁄d
=
	`£c⁄d_f
(
R
,
d
)-£c⁄d_f(
M
,d);

61  
H
/
R
*(
fú°
-
£c⁄d
);

62 
	}
}

64 
	$too_low
(
h
)

66 
i
;

67 
NV
=
	`ˇl
(
h
);

68 
i
=0; i<
n
-1; i++)

69 
NV
-=
	`ª≥©
(
h
,
i
);

71  
NV
>
V
?0:1;

72 
	}
}

74 
	$maö
()

76 
i
;

77 
l
,
r
,
m
;

78 
	`sˇnf
("%d",&
n
)!=
EOF
)

80 
	`sˇnf
("%lf%lf%lf",&
R
,&
H
,&
V
);

81 
i
=0; i<
n
-1; i++)

82 
	`sˇnf
("%lf",&
D
[
i
]);

83 
l
=0,
r
=
H
;

84 ; 
r
-
l
>=
ïs
;)

86 
m
=(
r
+
l
)/2;

88 if(
	`too_low
(
m
))

89 
l
=
m
;

91 
r
=
m
;

93 
m
=(
l
+
r
)/2;

94 if((
m
>
H
-
ïs
)&&
	`too_low
(m))

95 
	`puts
("No way");

97 
	`¥ötf
("%.3lf\n",
m
);

100 
	}
}

	@problems/nkoj/nkpc8/solves/nkpc8_Lees_and_the_locked_gift.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 10000011

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
	gn
,
	gdp
[
MAXN
],
	g˙t
[111],
	gD
[111],
	gsum
,
	gªs
;

31 
	sd©a
{ 
	ms
[110]; 
	ml
; }
	gd©
[111];

33 
ölöe
 
	$cmp
(
d©a
 
a
,d©®
b
){ á.
l
<b.l; 
	}
}

35 
	$öô
()

37 
i
;

38 
	`mem£t
(
D
,0,(D));

39 
sum
=
D
[0]=1;

40 
ªs
=0;

41 
i
=1; i<
n
; i++)

42 
D
[
i
]=D[i-1]*
d©
[i-1].
l
,
sum
+=D[i];

43 
i
=0; i<
n
; i++)

44 
ªs
+=
D
[
i
]*(
d©
[i].
l
-1);

45 
	}
}

47 
	$dfs
(
now
,
id
)

49 
i
,
èg
,
â
;

50 
x
;

51 if(
now
==
n
)

53 
x
=
d©
[0].
s
[
˙t
[0]];

54 
â
=
èg
=1,
i
=0; i<
n
; i++)

56 if(
x
!=
d©
[
i
].
s
[
˙t
[i]])

57 
èg
=0;

58 if(
˙t
[
i
]>0)

60 
dp
[
id
]=
	`max
(dp[id],dp[id-
D
[
i
]]);

63 
â
=0;

65 if(
èg
)

67 if(
â
==0)

68 
dp
[
id
]=
	`max
(dp[id],1);

70 
dp
[
id
]=
	`max
(dp[id],dp[id-
sum
]+1);

75 
i
=0; i<
d©
[
now
].
l
; i++)

77 
˙t
[
now
]=
i
;

78 
	`dfs
(
now
+1,
id
+
i
*
D
[now]);

80 
	}
}

82 
	$maö
()

84 
i
;

85 
	`sˇnf
("%d",&
n
)!=
EOF
)

87 
i
=0; i<
n
; i++)

89 
	`sˇnf
("%s",
d©
[
i
].
s
);

90 
d©
[
i
].
l
=
	`°æí
(d©[i].
s
);

93 
	`s‹t
(
d©
,d©+
n
,
cmp
);

94 
	`öô
();

95 
	`mem£t
(
˙t
,0,(cnt));

96 
	`mem£t
(
dp
,0,(dp));

97 
	`dfs
(0,0);

98 
	`¥ötf
("%d\n",
dp
[
ªs
]);

101 
	}
}

	@problems/nkoj/nkpc8/solves/nkpc8_online_1st.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
	gs
[
MAXN
][MAXN],
	gt
[MAXN][MAXN];

31 
	$check
(
r
,
c
,
n
)

33 
i
,
j
,
u
,
v
;

40 
i
=0; i+
r
<=
n
; i+=r)

41 
j
=0; j+
c
<=
n
; j+=c)

42 
u
=0; u<
r
; u++)

43 
v
=0; v<
c
; v++)

45 if(
t
[
u
][
v
]=='1')

47 
	`¥ötf
("%c",
s
[
i
+
u
][
j
+
v
]);

50 
	}
}

52 
	$sﬁve
(
n
)

54 
r
,
c
,
u
,
v
,
i
,
j
;

55 
r
=
c
=
n
; ; )

57 
	`check
(
r
,
c
,
n
);

58 if(
c
&1) ;

59 
c
>>=1;

60 
i
=0; i<
r
; i++)

61 
j
=0; j<
c
; j++)

63 if(
t
[
i
][2*
c
-
j
-1]=='1')

64 
t
[
i
][
j
]='1';

66 
t
[
i
][
j
]='0';

68 
	`check
(
r
,
c
,
n
);

69 
r
>>=1;

70 
i
=0; i<
r
; i++)

71 
j
=0; j<
c
; j++)

73 if(
t
[2*
r
-
i
-1][
j
]=='1')

74 
t
[
i
][
j
]='1';

76 
t
[
i
][
j
]='0';

79 
	}
}

81 
	$maö
()

83 
n
,
i
;

84 
	`sˇnf
("%d",&
n
)!=
EOF
)

86 
i
=0; i<
n
; i++)

87 
	`sˇnf
("%s",
s
[
i
]);

88 
i
=0; i<
n
; i++)

89 
	`sˇnf
("%s",
t
[
i
]);

90 
	`sﬁve
(
n
);

91 
	`puts
("");

94 
	}
}

	@problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_A.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

21 
	#X
 9

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	$maö
()

33 
n
,
t
;

34 
	`sˇnf
("%d",&
n
)!=
EOF
)

36 
t
=0; 
n
;)

37 
t
=—+
n
%10)%
X
,n/=10;

38 
	`¥ötf
("%d\n",9-
t
);

41 
	}
}

	@problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_B.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

31 
	gli°
[
N
],
	gv
[N],
	gt›
;

33 
	$ö£π
(
f
,
t
)

35 
e
[
t›
].
f
=f,e[t›].
t
=t;

36 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

37 
	}
}

39 
	$dfs
(
now
,
ed
,
l
)

41 
	`¥ötf
("%d %d\n",
now
,
ed
);

42 if(
ed
==
now
)  1;

43 if(
l
==6)  0;

44 
v
[
now
]=1;

45 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

46 if(!
v
[
e
[
i
].
t
])

48 if(
	`dfs
(
e
[
i
].
t
,
ed
,
l
+1))  1;

50 
v
[
now
]=0;

52 
	}
}

54 
	$maö
()

56 
n
,
m
,
°
,
ed
,
x
,
y
;

57 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

59 
t›
=0;

60 
i
=0; i<=
n
; i++Ë
li°
[i]=-1;

61 
i
=0; i<
m
; i++)

63 
	`sˇnf
("%d%d",&
x
,&
y
);

64 
	`ö£π
(
x
,
y
);

65 
	`ö£π
(
y
,
x
);

67 
	`sˇnf
("%d%d",&
°
,&
ed
);

68 
	`mem£t
(
v
,0,(v));

69 if(
	`dfs
(
°
,
ed
,0))

70 
	`puts
("YES");

72 
	`puts
("NO");

75 
	}
}

	@problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_D.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	$maö
()

32 
n
;

33 
	`sˇnf
("%d",&
n
)!=
EOF
)

35 
	`¥ötf
("%d\n",
n
*(n-1)/2+1);

38 
	}
}

	@problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_E.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 101000

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#öf
 0x7fffffff

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
<<1];

33 
	gli°
[
N
],
	gt›
,
	gv
[N],
	gvis
[N],
	gªt
,
	gèg
,
	gcﬁ
[N],
	gdp
[N][3],
	gn
,
	gföd_id
;

35 
	$ö£π
(
f
,
t
)

37 
e
[
t›
].
f
=f,e[t›].
t
=t;

38 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

39 
	}
}

41 
	$dfs
(
now
,
¥e
)

43 
r
=0;

44 if(
dp
[
now
][
cﬁ
[
¥e
]]>=0)  dp[now][col[pre]];

45 
v
[
now
]=1;

47 
cﬁ
[
now
]=1;

48 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

49 if(!
v
[
e
[
i
].
t
])

50 
r
+=
	`dfs
(
e
[
i
].
t
,
now
);

51 
r
++;

52 
cﬁ
[
now
]=-1;

54 if(
cﬁ
[
¥e
]==1)

56 
cﬁ
[
now
]=0;

57 
tmp
=0;

58 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

59 if(!
v
[
e
[
i
].
t
])

60 
tmp
+=
	`dfs
(
e
[
i
].
t
,
now
);

61 
r
=
	`mö
‘,
tmp
);

62 
cﬁ
[
now
]=-1;

65 
v
[
now
]=0;

66  
dp
[
now
][
cﬁ
[
¥e
]]=
r
;

67 
	}
}

69 
	$ˇlc
(
now
,
ign‹e
)

71 
r
=0;

72 
	`mem£t
(
v
,0,(v));

73 
	`mem£t
(
cﬁ
,-1,(col));

74 
	`mem£t
(
dp
,-1,(dp));

75 
v
[
now
]=1,
cﬁ
[now]=1;

76 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

77 if(
e
[
i
].
t
!=
ign‹e
)

78 
r
+=
	`dfs
(
e
[
i
].
t
,
now
);

79  
r
+1;

80 
	}
}

82 
	$sﬁve
(
id
)

84 
ªt
=
öf
;

85 
ªt
=
	`mö
‘ë,
	`ˇlc
(
e
[
id
].
f
,e[id].
t
));

86 
ªt
=
	`mö
‘ë,
	`ˇlc
(
e
[
id
].
t
,e[id].
f
));

87 
	}
}

89 
	$föd_round
(
now
,
¥e
)

91 
vis
[
now
]=1;

92 
i
=
li°
[
now
]; i!=-1&&
èg
==0; i=
e
[i].
n
)

94 if(
e
[
i
].
t
==
¥e
) ;

95 if(!
vis
[
e
[
i
].
t
])

96 
	`föd_round
(
e
[
i
].
t
,
now
);

99 
èg
=1;

100 
föd_id
=
i
;

104 
	}
}

106 
	$maö
()

108 
x
,
y
,
m
;

109 
	`sˇnf
("%d",&
n
)!=
EOF
)

111 
t›
=0;

112 
i
=0; i<
n
; i++)

113 
li°
[
i
]=-1;

114 
i
=0; i<
n
; i++)

116 
	`sˇnf
("%d",&
m
);

117 
j
=0; j<
m
; j++)

119 
	`sˇnf
("%d",&
x
);

120 
x
--;

121 
	`ö£π
(
i
,
x
);

124 
	`mem£t
(
vis
,0,(vis));

125 
èg
=0;

126 
	`föd_round
(0,-1);

127 
	`sﬁve
(
föd_id
);

128 
	`¥ötf
("%d\n",
ªt
);

131 
	}
}

	@problems/poj/left_probs.cpp

1 
	g°ï
 1:

2 
Hash
:

3 (
poj
 2503)

4 
Trõ_åì


5 (
poj
 2513)

6 
°ï
 2:

7 
	$Gauss
(
POJ
 2947 1487 2056 1166 1222)

8 
M©h
:
	$ZaTi
(
POJ
 3296)

9 
°ï
 3:

10 
Quick_föish
:

11 (
POJ
 2050 3306 3434)

	@problems/poj/poj_1018.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 101

	)

5 
	#öf
 0x3ffffff

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gd©
[
N
][N],
	gdp
[N][1001];

10 
	$maö
()

12 
t
,
n
,
mx
,
nmx
,
m
;

13 
	`sˇnf
("%d",&
t
);

14 ; 
t
--;)

16 
i
=0; i<
N
; i++)

17 
j
=0; j<1001; j++)

18 
dp
[
i
][
j
]=
öf
;

19 
	`sˇnf
("%d",&
n
);

20 
dp
[0][0]=0;

21 
mx
=0;

22 
i
=1; i<=
n
; i++)

24 
	`sˇnf
("%d",&
m
);

25 
b
,
p
,
now
;

26 
nmx
=
mx
;

27 
j
=1; j<=
m
; j++)

29 
	`sˇnf
("%d%d",&
b
,&
p
);

30 
k
=
mx
; k>=0; k--)

32 if(
dp
[
i
-1][
k
]<
öf
)

34 if(
i
==1)

35 
now
=
b
;

37 
now
=
	`mö
(
b
,
k
);

38 
dp
[
i
][
now
]=
	`mö
(dp[i][now],dp[i-1][
k
]+
p
);

39 
nmx
=
	`max
“mx,
now
);

43 
mx
=
nmx
;

45 
ªt
=0;

46 
i
=1; i<1001; i++)

48 if(
dp
[
n
][
i
]<
öf
)

51 
ªt
=
	`max
‘ë,1.0*
i
/
dp
[
n
][i]);

54 
	`¥ötf
("%.3f\n",
ªt
);

57 
	}
}

	@problems/poj/poj_1026_Cipher_Polya.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 210

	)

5 
	gcú
[
MAXN
],
	gèg
[MAXN],
	gÀn
[MAXN],
	gd©
[MAXN][MAXN];

6 
	gs
[
MAXN
],
	gªt
[MAXN];

8 
	$ˇlc
(
id
)

10 
t
=
cú
[
id
],
ªt
=1;

11 
èg
[
id
]=1;

12 ; !
èg
[
t
]; 
ªt
++)

13 
èg
[
t
]=1,t=
cú
[t];

14  
ªt
;

15 
	}
}

17 
	$upd©e
(
id
,
l
)

19 
x
=
cú
[
id
];

20 
Àn
[
id
]=
l
; 
x
!=id; )

21 
Àn
[
x
]=
l
,x=
cú
[x];

22 
	}
}

24 
	$öô
(
id
)

26 
x
=
cú
[
id
],
˙t
=1;

27 
d©
[
id
][0]=id;

28 ; 
x
!=
id
; )

29 
d©
[
id
][
˙t
++]=
x
,x=
cú
[x];

30 
	}
}

32 
	$maö
()

34 
n
,
k
,
i
,
l
,
ls
;

35 
	`sˇnf
("%d",&
n
)&&n)

37 
	`mem£t
(
èg
,0,(tag));

38 
	`mem£t
(
d©
,0,(dat));

39 
i
=1; i<=
n
; i++)

40 
	`sˇnf
("%d",&
cú
[
i
]);

41 
i
=1; i<=
n
; i++)

42 if(!
èg
[
i
])

44 
l
=
	`ˇlc
(
i
);

45 
	`upd©e
(
i
,
l
);

52 
i
=1; i<=
n
; i++)

53 
	`öô
(
i
);

59 
	`sˇnf
("%d",&
k
)&&k)

61 
	`gëch¨
();

62 
	`gës
(
s
);

63 
ls
=
	`°æí
(
s
);

64 
i
=
ls
; i<
n
; i++)

65 
s
[
i
]=' ';

66 
i
=0; i<
n
; i++)

68 
ªt
[
d©
[
i
+1][
k
%
Àn
[i+1]]-1]=
s
[i];

70 
i
=0; i<
n
; i++)

71 
	`¥ötf
("%c",
ªt
[
i
]);

72 
	`puts
("");

74 
	`puts
("");

77 
	}
}

	@problems/poj/poj_1037.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 30

	)

4 
	tLL
;

6 
LL
 
	gupdp
[
N
][N],
	gdndp
[N][N],
	gdp
[N][N];

7 
	gvis
[
N
];

9 
	$öô
()

11 
	`mem£t
(
dp
,0,(dp));

12 
dp
[1][1]=1;

13 
updp
[1][1]=1;

14 
dndp
[1][1]=1;

15 
updp
[2][1]=1;

16 
dndp
[2][2]=1;

17 
dp
[2][1]=dp[2][2]=1;

18 
i
=3; i<
N
; i++)

20 
j
=1; j<=
i
; j++)

22 
k
=
j
+1; k<=
i
; k++)

23 
updp
[
i
][
j
]+=
dndp
[i-1][
k
-1];

24 
k
=1; k<
j
; k++)

25 
dndp
[
i
][
j
]+=
updp
[i-1][
k
];

26 
dp
[
i
][
j
]=
updp
[i][j]+
dndp
[i][j];

29 
	}
}

31 
	gªs
[
N
],
	gt›
;

33 
	$föd
(
k
,
n
)

35 
i
=1; i<=
n
; i++)

36 if(!
vis
[
i
])

38 
k
--;

39 if(
k
==0)

41 
ªs
[
t›
++]=
i
;

42 
vis
[
i
]=1;

46 
	}
}

48 
	$maö
()

50 
n
,
T
;

51 
LL
 
c
;

52 
	`sˇnf
("%d",&
T
);

53 
	`öô
();

54 
	`sˇnf
("%d%Œd",&
n
,&
c
),
T
--)

56 
	`mem£t
(
vis
,0,(vis));

57 
t›
=0;

58 
¥e
=0,
èg
;

59 
i
=1; i<=
n
; i++)

61 if(
i
<=2)

62 
èg
=0;

63 
j
=1; j<=
n
-
i
+1; j++)

65 if(
i
<=2)

66 
èg
=0;

67 if(
èg
==1&&
j
>=
¥e
)

69 if(
èg
==-1&&
j
<
¥e
)

71 
LL
 
now
;

72 if(
i
==1)

73 
now
=
dp
[
n
-
i
+1][
j
];

74 if(
j
<
¥e
)

75 
now
=
updp
[
n
-
i
+1][
j
];

77 
now
=
dndp
[
n
-
i
+1][
j
];

78 if(
now
>=
c
)

80 if(
èg
==-1||(
i
==2&&
j
>=
¥e
))

81 
èg
=1;

83 
èg
=-1;

84 
¥e
=
j
;

85 
	`föd
(
j
,
n
);

89 
c
-=
now
;

92 
	`¥ötf
("%d",
ªs
[0]);

93 
i
=1; i<
t›
; i++)

94 
	`¥ötf
(" %d",
ªs
[
i
]);

95 
	`puts
("");

98 
	}
}

	@problems/poj/poj_1048_Follow_My_Logic_string.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gm©
[
N
][N],
	gvÆ
[30];

31 
	gn
;

32 
	gv
[
N
][N];

33 
	gdú
[4][2]={{-1,0},{1,0},{0,1},{0,-1}};

35 
	$has_√xt
()

37 
	`mem£t
(
m©
,0,(mat));

38 
i
=0;

39 ; 
	`gës
(
m©
[
i
])!=
NULL
; i++)

40 if(
m©
[
i
][0]=='*')

42 
n
=
i
;

43  
i
>0;

44 
	}
}

46 
	$föd_qus
(&
x
,&
y
)

48 
i
=0; i<
n
; i++)

49 
j
=0; 
m©
[
i
][j]; j++)

50 if(
m©
[
i
][
j
]=='?')

51 
x
=
i
,
y
=
j
;

52 
	}
}

54 
	$is_Àâî
(
x
)

56  'A'<=
x
&&x<='Z';

57 
	}
}

59 
	$to_go
(
x
,
y
)

61 
c
=
m©
[
x
][
y
];

62 if(
x
<0||
y
<0)

64 if(
v
[
x
][
y
])

66 if(
c
=='-'||c=='|'||c==')'||c=='>'||
	`is_Àâî
(c)||c=='o'||c=='+')

69 
	}
}

71 
	$dfs
(
x
,
y
)

74 
èg
=0,
ªt
;

75 
c
=
m©
[
x
][
y
];

76 
v
[
x
][
y
]=1;

77 if(
	`is_Àâî
(
c
))

78  
vÆ
[
c
-'A']-'0';

79 if(
c
=='>')

80  
	`dfs
(
x
-1,
y
-3)|dfs(x+1,y-3);

81 if(
c
==')')

82  
	`dfs
(
x
-1,
y
-3)&dfs(x+1,y-3);

83 if(
c
=='|')

85 if(
	`to_go
(
x
-1,
y
))

86  
	`dfs
(
x
-1,
y
);

88  
	`dfs
(
x
+1,
y
);

90 if(
c
=='-')

92 if(
	`to_go
(
x
,
y
-1))

93  
	`dfs
(
x
,
y
-1);

95  
	`dfs
(
x
,
y
+1);

97 if(
c
=='+')

99 if(
	`to_go
(
x
,
y
-1)&&
m©
[x][y-1]=='-')

100  
	`dfs
(
x
,
y
-1);

101 if(
	`to_go
(
x
,
y
+1)&&
m©
[x][y+1]=='-')

102  
	`dfs
(
x
,
y
+1);

103 if(
	`to_go
(
x
-1,
y
)&&
m©
[x-1][y]=='|')

104  
	`dfs
(
x
-1,
y
);

105 if(
	`to_go
(
x
+1,
y
)&&
m©
[x+1][y]=='|')

106  
	`dfs
(
x
+1,
y
);

108 if(
c
=='?'||c=='o')

110 
i
=0; i<4; i++)

112 
tx
=
x
+
dú
[
i
][0],
ty
=
y
+dir[i][1];

113 if(
	`to_go
(
tx
,
ty
))

115 if(
c
=='o')

116  !
	`dfs
(
tx
,
ty
);

117  
	`dfs
(
tx
,
ty
);

121 
	}
}

123 
	$maö
()

125 
x
,
y
;

126 
p_c
=0;

127 
	`has_√xt
())

129 if(
p_c
)

130 
	`puts
("");

132 
p_c
=1;

137 
	`föd_qus
(
x
,
y
);

138 
	`sˇnf
("%s",
vÆ
)!=
EOF
)

140 if(
vÆ
[0]=='*')

142 
	`mem£t
(
v
,0,(v));

143 
	`¥ötf
("%d\n",
	`dfs
(
x
,
y
));

145 
	`gëch¨
();

148 
	}
}

	@problems/poj/poj_1054_The_Troublesome_Frog_force.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#MAXN
 5010

	)

5 
usög
 
	g°d
::
s‹t
;

7 
	gm©
[
MAXN
][MAXN],
	gªt
,
	gm
,
	gn
;

8 
	spoöt
{ 
	mx
,
	my
; }
	gp
[
MAXN
];

10 
	$cmp
(
poöt
 
a
,poöà
b
)

12  
a
.
x
==
b
.x?a.
y
<b.y:a.x<b.x;

13 
	}
}

15 
ölöe
 
	$öbﬂrd
(
x
,
y
)

17  0<
x
&&x<=
m
&&
y
>0&&y<=
n
;

18 
	}
}

20 
ölöe
 
	$ˇl
(
x
,
y
,
dx
,
dy
)

22 
ªt
=2;

23 
	`öbﬂrd
(
x
,
y
))

25 if(
m©
[
x
][
y
]==0)  0;

26 
ªt
++;

27 
x
+=
dx
,
y
+=
dy
;

29  
ªt
;

30 
	}
}

32 
	$sﬁve
(
num
)

34 
j
,
i
,
dx
,
dy
,
sx
,
sy
,
tmp
;

35 
i
=0; i<
num
; i++)

36 
j
=
i
+1; j<
num
; j++)

38 
dx
=
p
[
j
].
x
-p[
i
].x;

39 
dy
=
p
[
j
].
y
-p[
i
].y;

40 if(
	`öbﬂrd
(
p
[
i
].
x
-
dx
,p[i].
y
-
dy
))

42 if(!
	`öbﬂrd
(
p
[
i
].
x
+(
ªt
-1)*
dx
,p[i].
y
+‘ë-1)*
dy
)) ;

43 
tmp
=
	`ˇl
(
p
[
j
].
x
+
dx
,p[j].
y
+
dy
,dx,dy);

44 if(
tmp
>
ªt
)Ñet=tmp;

46 
	}
}

48 
	$maö
()

50 
≤um
,
i
;

51 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

53 
	`mem£t
(
m©
,0,(mat));

54 
	`sˇnf
("%d",&
≤um
);

55 
i
=0; i<
≤um
; i++)

57 
	`sˇnf
("%d%d",&
p
[
i
].
x
,&p[i].
y
);

58 
m©
[
p
[
i
].
x
][p[i].
y
]=1;

60 
	`s‹t
(
p
,p+
≤um
,
cmp
);

61 
ªt
=2;

62 
	`sﬁve
(
≤um
);

63 if(
ªt
>2Ë
	`¥ötf
("%d\n",ret);

64 
	`¥ötf
("0\n");

67 
	}
}

	@problems/poj/poj_1066_Treasure_Hunt_geometry.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	g˙t
[
N
];

32 
	spoöt
{ 
	mx1
,
	my1
,
	mx2
,
	my2
; }
	gp
[
N
];

34 
	$gë_id
(
x
,
y
)

36 if(
y
==0Ë 
x
;

37 if(
y
==100Ë 300-
x
;

38 if(
x
==100Ë 100+
y
;

39  400-
y
;

40 
	}
}

42 
	$xmu…
(
ax
,
ay
,
bx
,
by
,
cx
,
cy
)

44  (
ax
-
cx
)*(
by
-
cy
)-(
ay
-cy)*(
bx
-cx);

45 
	}
}

47 
	$maö
()

49 
n
,
ªt
,
i
,
a
,
b
,
t
,
j
,
k
;

50 
x
,
y
,
xmul
;

51 
	`sˇnf
("%d",&
n
)!=
EOF
)

53 
i
=0; i<400; i++Ë
˙t
[i]=1;

54 
˙t
[0]=˙t[100]=˙t[200]=˙t[300]=˙t[400]=
N
;

55 
ªt
=
N
;

56 
i
=0; i<
n
; i++)

57 
	`sˇnf
("%lf%lf%lf%lf",&
p
[
i
].
x1
,&p[i].
y1
,&p[i].
x2
,&p[i].
y2
);

58 
	`sˇnf
("%lf%lf",&
x
,&
y
);

59 
i
=0; i<
n
; i++)

61 
a
=
	`gë_id
((
p
[
i
].
x1
),’[i].
y1
));

62 
b
=
	`gë_id
((
p
[
i
].
x2
),’[i].
y2
));

63 
xmul
=
	`xmu…
(
p
[
i
].
x1
,p[i].
y1
,p[i].
x2
,p[i].
y2
,
x
,
y
);

64 if(
xmul
<0)

65 
t
=
a
,a=
b
,b=t;

66 if(
a
>
b
)

67 
k
=
b
+400-
a
-1;

69 
k
=
b
-
a
-1;

70 
j
=(
a
+1)%400; 
k
>0; k--,j=(j+1)%400)

71 
˙t
[
j
]++;

73 
i
=0; i<400; i++)

74 
ªt
=
	`mö
‘ë,
˙t
[
i
]);

75 
	`¥ötf
("Numbî o‡do‹†%d\n",
ªt
);

78 
	}
}

	@problems/poj/poj_1077_EightNumber.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 400000

	)

20 
	#M
 1000010

	)

21 
	#S
 400100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	mx
,
	mpos
,
	m˙t
,
	m¥e
,
	mdú
; }
	gq
[
S
];

35 
	gvis
[
N
];

36 
	gs
[10];

37 
	gdúe˘
[4]={'r','l','u','d'};

38 
	gdú
[4][2]={{0,1},{0,-1},{-1,0},{1,0}},
	gãn
[11],
	gjõ
[11];

39 
	gnum
[11];

41 
	$öô
()

43 
ãn
[0]=1;

44 
jõ
[0]=1;

45 
i
=1; i<11; i++)

46 
ãn
[
i
]=ten[i-1]*10;

47 
i
=1; i<11; i++)

48 
jõ
[
i
]=jie[i-1]*i;

49 
	}
}

51 
ölöe
 
	$öbﬂrd
(
x
,
y
)

53  0<=
x
&&x<3&&0<=
y
&&y<3;

54 
	}
}

56 
ölöe
 
	$gë_≥rm
(
x
)

58 
ªt
=1;

59 
i
=0; i<9; i++)

60 
num
[
i
]=(
x
/
ãn
[8-i])%10;

61 
i
=7; i>=0; i--)

63 
j
=
i
+1; j<9; j++)

65 if(
num
[
j
]<num[
i
])

66 
ªt
+=
jõ
[8-
i
];

69  
ªt
;

70 
	}
}

72 
ölöe
 
	$_sw≠
(
a
,
b
,&
x
)

74 
Ø
=(
x
/
ãn
[
a
-1])%10;

75 
bb
=(
x
/
ãn
[
b
-1])%10;

76 
x
+=
bb
*
ãn
[
a
-1]-
Ø
*ten[a-1];

77 
x
+=
Ø
*
ãn
[
b
-1]-
bb
*ten[b-1];

78 
	}
}

80 
ölöe
 
node
 
	$gë_√xt
(
x
,
id
,
pos
)

82 
node
 
ªt
;

83 
nowx
=
pos
/3,
nowy
=pos%3;

84 
√xtx
=
nowx
+
dú
[
id
][0],
√xty
=
nowy
+dir[id][1];

85 if(!
	`öbﬂrd
(
√xtx
,
√xty
))

87 
ªt
.
x
=-1;

88  
ªt
;

90 
√xç
=
√xtx
*3+
√xty
;

91 
	`_sw≠
(9-
pos
,9-
√xç
,
x
);

92 
ªt
.
x
=x,ªt.
pos
=
√xç
;

93  
ªt
;

94 
	}
}

96 
	$sﬁve
(
°
,
pos
)

98 
l
,
r
;

99 
q
[
l
=
r
=0].
x
=
°
,q[0].
pos
=pos;

100 
q
[0].
˙t
=0,q[0].
¥e
=-1;

101 
	`mem£t
(
vis
,0,(vis));

102 
vis
[
	`gë_≥rm
(
°
)]=1;

103 ; 
l
<=
r
;)

105 
node
 
now
=
q
[
l
++];

106 
i
=0; i<4; i++)

108 
node
 
√xt
=
	`gë_√xt
(
now
.
x
,
i
,now.
pos
);

109 if(
√xt
.
x
<0)

111 
ønk
=
	`gë_≥rm
(
√xt
.
x
);

112 if(
vis
[
ønk
])

114 
vis
[
ønk
]=1;

115 
q
[++
r
]=
√xt
;

116 
q
[
r
].
˙t
=
now
.cnt+1;

117 
q
[
r
].
¥e
=
l
-1;

118 
q
[
r
].
dú
=
i
;

119 if(
√xt
.
x
==123456780)

120  
r
;

123 
	}
}

125 
	$shownum
(
x
)

127 
	`¥ötf
("%d\n",
x
/
ãn
[6]);

128 
	`¥ötf
("%d\n",(
x
/
ãn
[3])%ten[3]);

129 
	`¥ötf
("%d\n",
x
%
ãn
[3]);

130 
	}
}

132 
	$show
(
id
)

134 if(
q
[
id
].
¥e
==-1)

139 
	`show
(
q
[
id
].
¥e
);

140 
	`¥ötf
("%c",
dúe˘
[
q
[
id
].
dú
]);

141 
	}
}

143 
	$maö
()

145 
	`öô
();

146 
	`sˇnf
("%s",
s
)!=
EOF
)

148 
now
,
pos
;

149 if(
s
[0]=='x')

150 
now
=0,
pos
=0;

152 
now
=
s
[0]-'0';

153 
i
=0; i<8; i++)

157 
s
[0]=
	`gëch¨
();

158 if(
s
[0]==' ')

163 
now
*=10;

164 if(
s
[0]=='x')

165 
now
+=0,
pos
=
i
+1;

167 
now
+=
s
[0]-'0';

169 
id
=
	`sﬁve
(
now
,
pos
);

170 
	`show
(
id
);

171 
	`puts
("");

174 
	}
}

	@problems/poj/poj_1087.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 160010

	)

21 
	#S
 1001100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mw
; }
	ge
[
S
];

35 
	gli°
[
N
],
	gt›
,
	gœy
[N],
	gq
[
S
],
	gç
;

37 
	$ö£π
(
f
,
t
,
w
)

39 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

40 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

41 
	}
}

43 
	$_ö£π
(
f
,
t
,
w
)

45 
	`ö£π
(
f
,
t
,
w
);

46 
	`ö£π
(
t
,
f
,0);

47 
	}
}

49 
	$bfs
(
s
,
t
,
n
)

51 
l
,
r
;

52 
	`mem£t
(
œy
,-1,(lay));

53 
q
[
l
=
r
=0]=
s
;

54 
œy
[
s
]=0;

55 ; 
l
<=
r
;)

57 
now
=
q
[
l
++];

58 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

60 
to
=
e
[
i
].
t
;

61 if(
œy
[
to
]<0&&
e
[
i
].
w
>0)

62 
œy
[
to
]ˆay[
now
]+1,
q
[++
r
]=to;

65  
œy
[
t
]>=0;

66 
	}
}

68 
	$dfs
(
now
,
t
,
now_Êow
)

70 if(
now
==
t
Ë 
now_Êow
;

71 
âl
=0,
sögÀ
;

72 
i
=
li°
[
now
]; i!=-1&&
now_Êow
>
âl
; i=
e
[i].
n
)

74 
to
=
e
[
i
].
t
;

75 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
w
>0&&(
sögÀ
=
	`dfs
—o,
t
,
	`mö
(
now_Êow
-
âl
,e[i].w))))

77 
e
[
i
].
w
-=
sögÀ
;

78 
e
[
i
^1].
w
+=
sögÀ
;

79 
âl
+=
sögÀ
;

82 if(
âl
==0)

83 
œy
[
now
]=-1;

84  
âl
;

85 
	}
}

87 
	$di˙ic
(
s
,
t
,
n
)

89 
ªt
=0;

90 
	`bfs
(
s
,
t
,
n
))

92 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

94  
ªt
;

95 
	}
}

97 
°rög
 
	gs
;

98 
	gm≠
<
	g°rög
,> 
	gmp
;

100 
	$maö
()

102 
n
,
m
,
k
;

103 
	`sˇnf
("%d",&
n
)!=
EOF
)

105 
t›
=
ç
=0;

106 
i
=0; i<
N
; i++)

107 
li°
[
i
]=-1;

108 
i
=0; i<
n
; i++)

110 
cö
>>
s
;

111 
mp
[
s
]=
ç
++;

113 
	`sˇnf
("%d",&
m
);

114 
i
=0; i<
m
; i++)

116 
cö
>>
s
;

117 
cö
>>
s
;

118 
to
;

119 if(
mp
.
	`cou¡
(
s
)<=0)

121 
mp
[
s
]=
ç
++;

122 
to
=
ç
-1;

125 
to
=
mp
[
s
];

127 
	`_ö£π
(
i
,
m
+
to
,1);

129 
	`sˇnf
("%d",&
k
);

130 
°rög
 
a
,
b
;

131 
i
=0; i<
k
; i++)

133 
cö
>>
a
>>
b
;

134 
ß
,
sb
;

135 if(
mp
.
	`cou¡
(
a
)<=0)

137 
mp
[
a
]=
ç
++;

138 
ß
=
ç
-1;

141 
ß
=
mp
[
a
];

142 if(
mp
.
	`cou¡
(
b
)<=0)

144 
mp
[
b
]=
ç
++;

145 
sb
=
ç
-1;

148 
sb
=
mp
[
b
];

149 
	`_ö£π
(
m
+
ß
,m+
sb
,
öf
);

151 
i
=0; i<
m
; i++)

152 
	`_ö£π
(
m
+
ç
,
i
,1);

153 
i
=0; i<
n
; i++)

154 
	`_ö£π
(
m
+
i
,m+
ç
+1,1);

155 
	`¥ötf
("%d\n",
m
-
	`di˙ic
(m+
ç
,m+tp+1,m+tp+2));

158 
	}
}

	@problems/poj/poj_1101.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 201

	)

20 
	#M
 1000010

	)

21 
	#S
 40100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gm©
[
N
][N];

35 
	snode
{ 
	mx
,
	my
,
	mdú
,
	m˙t
; }
	gq
[
S
],
	g°
,
	ged
;

36 
	gdú
[4][2]={{1,0},{0,-1},{-1,0},{0,1}};

37 
	gdis
[
N
][N],
	gm
,
	gn
;

38 
	gs
[
N
];

40 
	$öbﬂrd
(
x
,
y
)

42  0<=
x
&&x<
m
+2&&0<=
y
&&y<
n
+2;

43 
	}
}

45 
	$sﬁve
()

47 
l
,
r
;

48 
°
.
dú
=-1;

49 
°
.
˙t
=0;

50 
q
[
l
=
r
=0]=
°
;

51 
i
=0; i<
N
; i++)

52 
j
=0; j<
N
; j++)

53 
dis
[
i
][
j
]=
öf
;

54 
dis
[
°
.
x
][°.
y
]=0;

55 
l
<=
r
)

57 
node
 
now
=
q
[
l
++];

59 
i
=0; i<4; i++)

61 
x
=
now
.x+
dú
[
i
][0],
y
=now.y+dir[i][1];

62 if(!
	`öbﬂrd
(
x
,
y
))

64 
√xt_˙t
=
now
.
˙t
+(
i
!Úow.
dú
);

65 if(
x
==
ed
.x&&
y
==ed.y)

67 if(
√xt_˙t
<
dis
[
ed
.
x
][ed.
y
])

68 
dis
[
ed
.
x
][ed.
y
]=
√xt_˙t
;

71 if(
m©
[
x
][
y
]==1)

73 if(
dis
[
x
][
y
]<=
√xt_˙t
)

75 
dis
[
x
][
y
]=
√xt_˙t
;

76 ++
r
;

77 
q
[
r
].
x
=x,q[r].
y
=y,q[r].
˙t
=
√xt_˙t
,q[r].
dú
=
i
;

80 
	}
}

82 
	$maö
()

84 
bd
=1;

85 
	`sˇnf
("%d%d",&
n
,&
m
)&&(m||n))

87 
	`mem£t
(
m©
,0,(mat));

88 
	`gëch¨
();

89 
	`¥ötf
("Bﬂrd #%d:\n",
bd
++);

90 
i
=1; i<=
m
; i++)

92 
	`gës
(
s
);

93 
j
=1; j<=
n
; j++)

94 if(
s
[
j
-1]=='X')

95 
m©
[
i
][
j
]=1;

97 
m©
[
i
][
j
]=0;

99 
¥
=1;

100 
	`sˇnf
("%d%d%d%d",&
°
.
y
,&°.
x
,&
ed
.y,&ed.x)!=
EOF
)

102 if(
°
.
x
==0&&°.
y
==0&&
ed
.x==0&&ed.y==0)

104 
	`sﬁve
();

105 
	`¥ötf
("Paú %d: ",
¥
++);

106 if(
dis
[
ed
.
x
][ed.
y
]>=
öf
)

107 
	`puts
("impossible.");

109 
	`¥ötf
("%d segmíts.\n",
dis
[
ed
.
x
][ed.
y
]);

111 
	`puts
("");

114 
	}
}

	@problems/poj/poj_1143.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 21

	)

5 
	gvis
,
	gt›
,
	gq
[
N
],
	gnvis
,
	gdp
[1<<19];

6 
ölöe
 
	$B
(
i
){  1<<(i-2); 
	}
}

8 
	$gë_√xt
(
vis
,&
nvis
,
x
)

10 
nvis
=
vis
;

11 
nvis
-=
	`B
(
x
);

12 
i
=
x
+1; i<
N
; i++)

13 if(
nvis
&
	`B
(
i
))

15 
j
=2; j<
i
&&i-j>=2; j++)

17 if(((
nvis
&
	`B
(
j
))==0)&&(“vis&B(
i
-j))==0))

19 
nvis
-=
	`B
(
i
);

24 
	}
}

26 
	$dfs
(
v
)

28 
nv
;

29 if(
dp
[
v
]>=0)

30  
dp
[
v
];

31 
i
=2; i<
N
; i++)

32 if(
v
&
	`B
(
i
))

34 
	`gë_√xt
(
v
,
nv
,
i
);

35 if(
	`dfs
(
nv
)==0)

36  
dp
[
v
]=1;

38  
dp
[
v
]=0;

39 
	}
}

41 
	$maö
()

43 
ˇ
=1,
n
;

44 
	`sˇnf
("%d",&
n
)!=
EOF
)

46 if(
n
==0)

48 
	`¥ötf
("Te° Ca£ #%d\n",
ˇ
++);

49 
t›
=0;

50 
vis
=0;

51 
i
=0; i<
n
; i++)

53 
x
;

54 
	`sˇnf
("%d",&
x
);

55 
vis
+=
	`B
(
x
);

57 
	`mem£t
(
dp
,-1,(dp));

58 
i
=2; i<
N
; i++)

60 if(
vis
&
	`B
(
i
))

62 
	`gë_√xt
(
vis
,
nvis
,
i
);

63 if(
	`dfs
(
nvis
)==0)

64 
q
[
t›
++]=
i
;

67 if(
t›
==0)

68 
	`puts
("There'sÇo winning move.\n");

71 
	`¥ötf
("The winning movesáre:");

72 
i
=0; i<
t›
; i++)

73 
	`¥ötf
(" %d",
q
[
i
]);

74 
	`puts
("\n");

78 
	}
}

	@problems/poj/poj_1151_Atlantis_segt_scanning.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

20 
	#N
 801

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

26 
	slöe
{ 
	mx
,
	my1
,
	my2
; 
	mt
; }
	g 
[
N
];

27 
	gco‹
[
N
];

28 
	gt›
,
	g˘›
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

33 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

34 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

35 
ölöe
 
	$lowî_bound
(
x
){  x&(-x); 
	}
}

36 
ölöe
 
	$Àngth
(
l
,
r
){  
co‹
[r-1]-co‹[l-1]; 
	}
}

37 
	$cmp
(
löe
 
a
,löê
b
){ á.
x
<b.x; 
	}
}

39 
	s£g_åì


41 
	ml
,
	mr
,
	mcﬁ
,
	m˙t
,
	mbl
,
	mbr
; 
	mÀn
;

42 }
	g£gt
[
N
<<2];

44 
	$¸óã_åì
(
id
,
l
,
r
)

46 
m
=(
l
+
r
)>>1;

47 
£gt
[
id
].
l
ˆ,£gt[id].
r
=r;

48 
£gt
[
id
].
cﬁ
=£gt[id].
Àn
=0;

49 
£gt
[
id
].
bl
=£gt[id].
br
=£gt[id].
˙t
=0;

50 if(
r
-
l
<=1)

52 
	`¸óã_åì
(
	`L
(
id
),
l
,
m
);

53 
	`¸óã_åì
(
	`R
(
id
),
m
,
r
);

54 
	}
}

56 
	$upd©e
(
id
,
l
,
r
)

58 if(
£gt
[
id
].
cﬁ
||
r
==
l
)

60 
£gt
[
id
].
Àn
=
	`Àngth
(
l
,
r
);

61 
£gt
[
id
].
˙t
=£gt[id].
bl
=£gt[id].
br
=1;

65 
£gt
[
id
].
Àn
=£gt[
	`L
(id)].Àn+£gt[
	`R
(id)].len;

66 
£gt
[
id
].
˙t
=£gt[
	`L
(id)].˙t+£gt[
	`R
(id)].cnt;

67 if(
£gt
[
	`L
(
id
)].
br
&&£gt[
	`R
(id)].
bl
)

68 
£gt
[
id
].
˙t
--;

69 
£gt
[
id
].
bl
=£gt[
	`L
(id)].bl;

70 
£gt
[
id
].
br
=£gt[
	`R
(id)].br;

72 
	}
}

74 
	$ö£π_£g
(
id
,
Œ
,
º
)

76 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

77 if(
Œ
==
l
&&
º
==
r
)

78 
£gt
[
id
].
cﬁ
++;

81 if(
Œ
<
m
)

82 
	`ö£π_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

83 if(
º
>
m
)

84 
	`ö£π_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

85 if(
£gt
[
	`L
(
id
)].
cﬁ
&&£gt[
	`R
(id)].col)

87 
£gt
[
	`L
(
id
)].
cﬁ
--;

88 
	`upd©e
(
	`L
(
id
),
l
,
m
);

89 
£gt
[
	`R
(
id
)].
cﬁ
--;

90 
	`upd©e
(
	`R
(
id
),
m
,
r
);

91 
£gt
[
id
].
cﬁ
++;

94 
	`upd©e
(
id
,
l
,
r
);

95 
	}
}

97 
	$dñ_£g
(
id
,
Œ
,
º
)

99 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

100 if(
Œ
==
l
&&
º
==
r
)

101 
£gt
[
id
].
cﬁ
--;

102 if(
£gt
[
id
].
cﬁ
)

104 
£gt
[
id
].
cﬁ
--;

105 if(
Œ
>
l
)

106 
	`ö£π_£g
(
id
,
l
,
Œ
);

107 if(
º
<
r
)

108 
	`ö£π_£g
(
id
,
º
,
r
);

112 if(
Œ
<
m
)

113 
	`dñ_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

114 if(
º
>
m
)

115 
	`dñ_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

117 
	`upd©e
(
id
,
l
,
r
);

118 
	}
}

120 
	$£g_Àn
(
id
,
Œ
,
º
)

122 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

123 
ªt
=0;

124 if(
£gt
[
id
].
cﬁ
||(
Œ
==
l
&&
º
==
r
))

125  
£gt
[
id
].
Àn
;

126 if(
Œ
<
m
)

127 
ªt
+=
	`£g_Àn
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

128 if(
º
>
m
)

129 
ªt
+=
	`£g_Àn
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

130  
ªt
;

131 
	}
}

133 
	$gë_id
(
x
)

135 
l
,
r
,
m
;

136 
l
=0,
r
=
˘›
-1;Ü<=r; )

138 
m
=(
l
+
r
)>>1;

139 if(
co‹
[
m
]>
x
)

140 
r
=
m
-1;

141 if(
co‹
[
m
]<
x
)

142 
l
=
m
+1;

144  
m
;

147 
	}
}

149 
	$maö
()

151 
n
,
i
,
j
,
l
,
r
,
èg
,
ˇ
=1;

152 
x1
,
x2
,
y1
,
y2
,
¥e
,
ªt
;

153 
	`sˇnf
("%d",&
n
)&&n)

155 
	`¥ötf
("Te° ca£ #%d\n",
ˇ
++);

156 
˘›
=
t›
=
i
=0; i<
n
; i++)

158 
	`sˇnf
("%lf%lf%lf%lf",&
x1
,&
y1
,&
x2
,&
y2
);

159 
 
[
t›
].
x
=
x1
, [t›].
y1
=y1, [t›].
y2
=y2;

160 
 
[
t›
++].
t
=0;

161 
 
[
t›
].
x
=
x2
, [t›].
y1
=y1, [t›].
y2
=y2;

162 
 
[
t›
++].
t
=1;

163 
co‹
[
˘›
++]=
y1
,co‹[˘›++]=
y2
;

165 
	`s‹t
(
co‹
,co‹+
˘›
);

166 
	`s‹t
(
 
, +
t›
,
cmp
);

167 
j
=0,
i
=1; i<
˘›
; i++)

169 if(
co‹
[
j
]==co‹[
i
])

172 
co‹
[++
j
]=co‹[
i
];

174 
˘›
=
j
+1;

175 
	`¸óã_åì
(1,1,
˘›
+1);

176 
¥e
=
 
[0].
x
;

177 
ªt
=
i
=0; i<
t›
; i++)

179 
l
=
	`gë_id
(
 
[
i
].
y1
)+1;

180 
r
=
	`gë_id
(
 
[
i
].
y2
)+1;

181 
èg
=
 
[
i
].
t
;

183 
ªt
+=(
 
[
i
].
x
-
¥e
)*
£gt
[1].
Àn
;

184 if(
èg
)

185 
	`dñ_£g
(1,
l
,
r
);

187 
	`ö£π_£g
(1,
l
,
r
);

188 
¥e
=
 
[
i
].
x
;

190 
	`¥ötf
("TŸÆÉx∂‹edáªa: %.2f\n\n",
ªt
);

193 
	}
}

	@problems/poj/poj_1157.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3ffffff

	)

4 
	#N
 111

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
][N];

9 
	$maö
()

11 
n
,
m
;

12 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

14 
i
=0; i<
N
; i++)

15 
j
=0; j<
N
; j++)

16 
dp
[
i
][
j
]=-
öf
;

17 
dp
[0][0]=0;

18 
x
;

19 
i
=1; i<=
n
; i++)

21 
j
=1; j<=
m
; j++)

23 
	`sˇnf
("%d",&
x
);

24 
k
=0; k<
j
; k++)

26 
dp
[
i
][
j
]=
	`max
(dp[i][j],dp[i-1][
k
]+
x
);

30 
ªt
=-
öf
;

31 
i
=1; i<=
m
; i++)

32 
ªt
=
	`max
‘ë,
dp
[
n
][
i
]);

33 
	`¥ötf
("%d\n",
ªt
);

36 
	}
}

	@problems/poj/poj_1167_cut_search_classic.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#X
 60

	)

21 
	#M
 1000010

	)

22 
	#S
 1000100

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3fffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
	g˙t
[
N
],
	gd©
[N],
	gªt
,
	gfi
[N];

36 
	$ok
(
x
,
d
)

38 
ªt
=
öf
;

39 
i
=
x
; i<
X
; i+=
d
)

41 if(
˙t
[
i
]<=0)

45 
	}
}

47 
	$add
(
x
,
d
,
v
)

49 
i
=
x
; i<
X
; i+=
d
)

50 
˙t
[
i
]+=
v
;

51 
	}
}

53 
	$dfs
(
œy
,
now
)

55 
√xt
;

56 if(
œy
>17)

58 
i
=
now
; i<
X
; i++)

59 if(
œy
+
˙t
[
i
]>
ªt
)

62 if(
now
>=60)

64 
ªt
=
	`mö
‘ë,
œy
);

67 if(
˙t
[
now
]==0)

69 
√xt
=
now
;Çext<
X
;Çext++)

70 if(
˙t
[
√xt
]>0)

72 
	`dfs
(
œy
,
√xt
);

75 
i
=
d©
[0]; i<
now
-i; i++)

77 if(
fi
[
i
]>0)

79 if(
	`ok
(
now
,now-
i
))

81 
	`add
(
now
,now-
i
,-1);

82 
fi
[
i
]--;

83 
	`dfs
(
œy
,
now
);

84 
fi
[
i
]++;

85 
	`add
(
now
,now-
i
,1);

89 if(2*
now
+1<
X
)

91 
fi
[
now
]++;

92 
˙t
[
now
]--;

93 
	`dfs
(
œy
+1,
now
);

94 
fi
[
now
]--;

95 
˙t
[
now
]++;

97 
	}
}

99 
	$maö
()

101 
n
;

102 
	`sˇnf
("%d",&
n
)!=
EOF
)

104 if(
n
==0)

106 
	`puts
("0");

109 
	`mem£t
(
fi
,0,(fi));

110 
	`mem£t
(
˙t
,0,(cnt));

111 
i
=0; i<
n
; i++)

113 
	`sˇnf
("%d",&
d©
[
i
]);

114 
˙t
[
d©
[
i
]]++;

116 
ªt
=
öf
;

117 
	`dfs
(0,
d©
[0]);

118 
	`¥ötf
("%d\n",
ªt
);

121 
	}
}

	@problems/poj/poj_1170.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3fffffff

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	snode
{ 
	mi
,
	mc
,
	mp
; }
	gno
[6];

7 
	sb¨g
{ 
	mn
,
	mp
; 
node
 
	mb
[6]; }
	gbg
[100];

8 
	gn
,
	gm
,
	gdp
[7777];

9 
	gid
[1001],
	gsix
[10];

11 
	$gë
(
j
,
i
)

13 
n
=
bg
[
i
].n,
dñ
=0;

14 
k
=0; k<
n
; k++)

15 
dñ
+=
bg
[
i
].
b
[
k
].
c
*
six
[
id
[bg[i].b[k].i]];

16  
j
-
dñ
;

17 
	}
}

19 
	$ˇl
(
x
)

21 
ªt
=0;

22 
i
=0; i<
n
; i++)

23 
ªt
+=
no
[
i
].
p
*(
x
%6),x/=6;

24  
ªt
;

25 
	}
}

27 
	$maö
()

29 
six
[0]=1;

30 
i
=1; i<10; i++)

31 
six
[
i
]=six[i-1]*6;

32 
	`sˇnf
("%d",&
n
)!=
EOF
)

34 
i
=0; i<
n
; i++)

36 
	`sˇnf
("%d%d%d",&
no
[
i
].i,&no[i].
c
,&no[i].
p
);

37 
id
[
no
[
i
].i]=i;

39 
	`sˇnf
("%d",&
m
);

40 
i
=0; i<
m
; i++)

42 
	`sˇnf
("%d",&
bg
[
i
].
n
);

43 
j
=0; j<
bg
[
i
].
n
; j++)

45 
	`sˇnf
("%d%d",&
bg
[
i
].
b
[
j
].i,&bg[i].b[j].
c
);

46 
	`sˇnf
("%d",&
bg
[
i
].
p
);

48 
i
=0; i<
six
[
n
]; i++)

50 
dp
[
i
]=
	`ˇl
(i);

53 
dp
[0]=0;

54 
i
=0; i<
m
; i++)

56 
j
=0; j<
six
[
n
]; j++)

58 
¥e
=
	`gë
(
j
,
i
);

59 if(
¥e
<0)

61 
dp
[
j
]=
	`mö
(dp[j],dp[
¥e
]+
bg
[
i
].
p
);

64 
™s
=0;

65 
i
=0; i<
n
; i++)

66 
™s
+=
six
[
i
]*
no
[i].
c
;

67 
	`¥ötf
("%d\n",
dp
[
™s
]);

70 
	}
}

	@problems/poj/poj_1178.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#öf
 1001

	)

5 
	#N
 10

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gs
[1001];

9 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
],
	gq
[1001];

10 
	gdú
[8][2]={{-2,-1},{-2,1},{2,-1},{2,1},{1,2},{1,-2},{-1,2},{-1,-2}},
	gvis
[
N
][N],
	gt›
,
	gm©
[N][N][N][N];

12 
ölöe
 
	$öbﬂrd
(
x
,
y
)

14  0<=
x
&&x<8&&0<=
y
&&y<8;

15 
	}
}

17 
	$dis
(
node
 
°
,nodê
ed
)

19 
l
,
r
;

20 
	`mem£t
(
vis
,-1,(vis));

21 
q
[
l
=
r
=0]=
°
;

22 
vis
[
°
.
x
][°.
y
]=0;

23 ; 
l
<=
r
;)

25 
node
 
now
=
q
[
l
++],
nx
;

26 if(
now
.
x
==
ed
.x&&now.
y
==ed.y)

27  
vis
[
now
.
x
][now.
y
];

28 
i
=0; i<8; i++)

30 
x
=
now
.x+
dú
[
i
][0],
y
=now.y+dir[i][1];

31 if(!
	`öbﬂrd
(
x
,
y
))

33 if(
vis
[
x
][
y
]>=0)

35 
vis
[
x
][
y
]=vis[
now
.x][now.y]+1;

36 
nx
.
x
=x,nx.
y
=y;

37 
q
[++
r
]=
nx
;

40  
öf
;

41 
	}
}

43 
	$maö
()

45 
node
 
a
,
b
;

46 
i
=0; i<8; i++)

47 
j
=0; j<8; j++)

48 
u
=0; u<8; u++)

49 
v
=0; v<8; v++)

51 
a
.
x
=
i
,a.
y
=
j
,
b
.x=
u
,b.y=
v
;

52 
m©
[
i
][
j
][
u
][
v
]=
	`dis
(
a
,
b
);

54 
	`sˇnf
("%s",
s
)!=
EOF
)

56 
l
=
	`°æí
(
s
);

57 
t›
=0;

58 
i
=0; i<
l
; i+=2)

60 
y
=
s
[
i
]-'A',
x
=s[i+1]-'1';

61 
y
=7-y,
x
=7-x;

62 
no
[
t›
].
x
=x,no[t›++].
y
=y;

64 
ªt
=
öf
,
tmp
;

65 
i
=0; i<8; i++)

66 
j
=0; j<8; j++)

68 
tmp
=0;

69 
k
=1; k<
t›
; k++)

70 
tmp
+=
m©
[
no
[
k
].
x
][no[k].
y
][
i
][
j
];

71 
u
=0; u<8; u++)

72 
v
=0; v<8; v++)

74 
k
=1; k<
t›
; k++)

76 
now
=
tmp
-
m©
[
no
[
k
].
x
][no[k].
y
][
i
][
j
];

77 
now
+=
m©
[
no
[
k
].
x
][no[k].
y
][
u
][
v
];

78 
now
+=
m©
[
i
][
j
][
u
][
v
];

79 
now
+=
	`max
(
	`abs
(
no
[0].
x
-
u
),abs“o[0].
y
-
v
));

80 
ªt
=
	`mö
‘ë,
now
);

84 if(
t›
==1)

85 
ªt
=0;

86 
	`¥ötf
("%d\n",
ªt
);

89 
	}
}

	@problems/poj/poj_1179.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 111

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	g›
[
N
],
	gd©
[N];

8 
	gdp1
[
N
][N],
	gdp2
[N][N],
	gq
[N];

10 
	$maö
()

12 
n
;

13 
	`sˇnf
("%d",&
n
)!=
EOF
)

15 
s
[10];

16 
x
;

17 
i
=1; i<=
n
; i++)

19 
	`sˇnf
("%s%d",
s
,&
x
);

20 
›
[
i
]=(
s
[0]!='t');

21 
d©
[
i
]=
x
;

23 
i
=1; i<
n
; i++)

24 
d©
[
n
+
i
]=d©[i],
›
[i+n]=op[i];

25 
i
=1; i<2*
n
; i++)

26 
dp1
[
i
][i]=
dp2
[i][i]=
d©
[i];

35 
d
=1; d<
n
; d++)

37 
i
=1; i+
d
<2*
n
; i++)

39 
ªt1
=-
öf
,
ªt2
=inf;

40 
j
=
i
+1; j<=i+
d
; j++)

42 if(
›
[
j
]==0)

44 
ªt1
=
	`max
‘ë1,
dp1
[
i
][
j
-1]+dp1[j][i+
d
]);

45 
ªt2
=
	`mö
‘ë2,
dp2
[
i
][
j
-1]+dp2[j][i+
d
]);

49 
ªt1
=
	`max
‘ë1,
dp1
[
i
][
j
-1]*dp1[j][i+
d
]);

50 
ªt1
=
	`max
‘ë1,
dp2
[
i
][
j
-1]*dp2[j][i+
d
]);

51 
ªt2
=
	`mö
‘ë2,
dp1
[
i
][
j
-1]*
dp2
[j][i+
d
]);

52 
ªt2
=
	`mö
‘ë2,
dp2
[
i
][
j
-1]*
dp1
[j][i+
d
]);

56 
dp1
[
i
][i+
d
]=
ªt1
;

57 
dp2
[
i
][i+
d
]=
ªt2
;

60 
ªt
=-
öf
;

61 
i
=1; i<=
n
; i++)

62 
ªt
=
	`max
‘ë,
dp1
[
i
][i+
n
-1]);

63 
	`¥ötf
("%d\n",
ªt
);

64 
èg
=0;

65 
i
=1; i<=
n
; i++)

66 if(
ªt
==
dp1
[
i
][i+
n
-1])

68 if(
èg
Ë
	`¥ötf
(" ");

69 
èg
=1;

70 
	`¥ötf
("%d",
i
);

72 
	`puts
("");

75 
	}
}

	@problems/poj/poj_1185_PaoBingZhenDi_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#X
 70

	)

5 
	gdp
[110][
X
][X],
	gm
,
	gn
,
	gli°
[X],
	gt›
,
	gsum
[X],
	gm©
[110];

6 
	gm≠
[110][14];

8 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

9 
ölöe
 
	$max
(
x
,
y
){  x>y?x:y; 
	}
}

11 
	$£c
(
x
,&
˙t
)

13 
b
=-3,
now
=0;

14 
˙t
=0; 
x
; 
now
++,x>>=1)

15 if(
x
&1)

17 if(
now
-
b
<=2)  0;

18 
b
=
now
;

19 
˙t
++;

22 
	}
}

24 
	$öô
()

26 
i
,
N
=1<<
m
,
˙t
;

27 
t›
=
i
=0; i<
N
; i++)

28 if(
	`£c
(
i
,
˙t
))

30 
sum
[
t›
]=
˙t
;

31 
li°
[
t›
++]=
i
;

33 
	}
}

35 
	$ˇlc2
(
s
[])

37 
ªt
=0,
i
;

38 
i
=0; i<
m
; i++)

40 
ªt
<<=1;

41 if(
s
[
i
]=='H')

42 
ªt
++;

44  
ªt
;

45 
	}
}

47 
	$sﬁve
()

49 
i
,
fú
,
£c
,
now
,
ªt
;

50 
i
=0; i<
t›
; i++)

52 if(
li°
[
i
]&
m©
[0]) ;

53 
dp
[0][0][
i
]=
sum
[i];

55 
i
=1; i<
n
; i++)

56 
now
=0;Çow<
t›
;Çow++)

58 if(
li°
[
now
]&
m©
[
i
]) ;

59 
fú
=0; fú<
t›
; fir++)

61 if(
li°
[
now
]&li°[
fú
]) ;

62 
£c
=0; sec<
t›
; sec++)

64 if(
li°
[
now
]&li°[
£c
]) ;

65 if(
li°
[
fú
]&li°[
£c
]) ;

66 if(
dp
[
i
-1][
fú
][
£c
]==-1) ;

67 
dp
[
i
][
£c
][
now
]=
	`max
(dp[i][£c][now],dp[i-1][
fú
][£c]+
sum
[now]);

69 if(
i
<=1) ;

72 
ªt
=0,
fú
=0; fú<
t›
; fir++)

73 
£c
=0; sec<
t›
; sec++)

74 
ªt
=
	`max
‘ë,
dp
[
n
-1][
fú
][
£c
]);

75  
ªt
;

76 
	}
}

78 
	$maö
()

80 
i
,
ªt
;

81 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

83 
	`mem£t
(
dp
,-1,(dp));

84 
i
=0; i<
n
; i++)

86 
	`sˇnf
("%s",
m≠
[
i
]);

87 
m©
[
i
]=
	`ˇlc2
(
m≠
[i]);

89 
	`öô
();

95 
ªt
=
	`sﬁve
();

96 
	`¥ötf
("%d\n",
ªt
);

99 
	}
}

	@problems/poj/poj_1189.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 101

	)

4 
	tLL
;

6 
	gs
[
N
],
	gss
[N];

7 
LL
 
	gdp
[
N
][N];

9 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

11 
	$maö
()

13 
n
,
m
;

14 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

16 
	`gëch¨
();

17 
	`mem£t
(
dp
,0,(dp));

18 
dp
[0][1]=1;

19 
i
=1; i<=
n
; i++)

24 
	`gës
(
ss
);

25 
t›
=0;

26 
j
=0; 
ss
[j]; j++)

28 if(
ss
[
j
]==' ') ;

29 
s
[
t›
++]=
ss
[
j
];

31 
j
=1; j<=
i
; j++)

33 if(
s
[
j
-1]=='*')

35 
dp
[
i
][
j
]+=dp[i-1][j];

36 
dp
[
i
][
j
+1]+=dp[i-1][j];

40 
dp
[
i
+1][
j
+1]+=4*dp[i-1][j];

44 
LL
 
sum
=0,
a
,
b
;

45 
i
=1; i<=
n
+1; i++)

46 
sum
+=
dp
[
n
][
i
];

47 
a
=
sum
,
b
=
dp
[
n
][
m
+1];

48 if(
b
==0)

50 
	`puts
("0/1");

53 
LL
 
g
=
	`gcd
(
a
,
b
);

54 
	`¥ötf
("%Œd/%Œd\n",
b
/
g
,
a
/g);

57 
	}
}

	@problems/poj/poj_1190.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 25

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	gªt
,
	gn
,
	gm
,
	gss
[
N
],
	gvv
[N];

35 
	$dfs
(
œy
,
¥eh
,
¥î
,
nowsum
,
w
)

37 
x
,
ƒ
,
nh
,
add
;

38 if(
nowsum
+2*
w
/
¥î
>=
ªt
||nowsum+
ss
[
m
-
œy
]>=ret)

40 if(
w
<
vv
[
m
-
œy
])

42 if(
œy
==
m
)

44 if(
w
==0&&
ªt
>
nowsum
)

45 
ªt
=
nowsum
;

48 if(
œy
>
m
)

50 if(
w
<=0)

52 if(
œy
==
m
-1)

54 if((
¥î
-1)*’ªr-1)*(
¥eh
-1)<
w
)

56 
ƒ
=
¥î
-1;Çr>0;Çr--)

58 
x
=
ƒ
*nr;

59 if(
w
%
x
)

61 
nh
=
w
/
x
;

62 if(
nh
>=
¥eh
)

64 if(
nowsum
+2*
ƒ
*
nh
<
ªt
)

66 
ªt
=
nowsum
+2*
ƒ
*
nh
;

72 
ƒ
=
¥î
-1;Çr>=
m
-
œy
;Çr--)

73 
nh
=
¥eh
-1;Çh>=
m
-
œy
;Çh--)

74 
	`dfs
(
œy
+1,
nh
,
ƒ
,
nowsum
+2*ƒ*nh,
w
-nr*nr*nh);

75 
	}
}

77 
	$öô
()

79 
ss
[1]=2;

80 
vv
[1]=1;

81 
i
=2; i<=25; i++)

83 
ss
[
i
]=ss[i-1]+2*i*i;

84 
vv
[
i
]=vv[i-1]+i*i*i;

86 
	}
}

88 
	$maö
()

90 
	`öô
();

91 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

93 
ªt
=
öf
;

94 
i
=1; i<26; i++)

95 
j
=1; j<26; j++)

96 
	`dfs
(1,
j
,
i
,i*i+2*i*j,
n
-i*i*j);

97 if(
ªt
>=
öf
)

98 
	`puts
("0");

100 
	`¥ötf
("%d\n",
ªt
);

103 
	}
}

	@problems/poj/poj_1191_Cutting_board_dp.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	#öf
 1000000000

	)

5 
	#MAXN
 10

	)

6 
	#N
 8

	)

8 
	gm©
[
MAXN
][MAXN],
	gsum
[MAXN][MAXN];

9 
	gdp
[16][
MAXN
][MAXN][MAXN][MAXN];

11 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

13 
	$maö
()

15 
n
,
i
,
j
,
u
,
v
,
k
,
tmp
,
c
; 
ave
,
ªt
;

16 
	`sˇnf
("%d",&
n
)!=
EOF
)

18 
ave
=0.0;

19 
	`mem£t
(
sum
,0,(sum));

20 
k
=0; k<
n
; k++)

21 
i
=0; i<=
N
; i++)

22 
j
=0; j<=
N
; j++)

23 
u
=0; u<=
N
; u++)

24 
v
=0; v<=
N
; v++)

25 
dp
[
k
][
i
][
j
][
u
][
v
]=
öf
;

26 
i
=1; i<=
N
; i++)

27 
j
=1; j<=
N
; j++)

29 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

30 
ave
+=
m©
[
i
][
j
];

32 
ave
/=
n
,ave*=ave;

34 
i
=1; i<=
N
; i++)

35 
j
=1; j<=
N
; j++)

36 
sum
[
i
][
j
]=
m©
[i][j]+sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1];

37 
i
=1; i<=
N
; i++)

38 
j
=1; j<=
N
; j++)

39 
u
=
i
; u<=
N
; u++)

40 
v
=
j
; v<=
N
; v++)

42 
tmp
=
sum
[
u
][
v
]-sum[u][
j
-1]-sum[
i
-1][v]+sum[i-1][j-1];

43 
dp
[0][
i
][
j
][
u
][
v
]=
tmp
*tmp;

45 
k
=1; k<
n
; k++)

46 
i
=1; i<=
N
; i++)

47 
j
=1; j<=
N
; j++)

48 
u
=
i
; u<=
N
; u++)

49 
v
=
j
; v<=
N
; v++)

51 
c
=
i
; c<
u
; c++)

53 
tmp
=
sum
[
c
][
v
]-sum[c][
j
-1]-sum[
i
-1][v]+sum[i-1][j-1];

54 
dp
[
k
][
i
][
j
][
u
][
v
]=
	`mö
(dp[k][i][j][u][v],dp[k-1][
c
+1][j][u][v]+
tmp
*tmp);

55 
tmp
=
sum
[
u
][
v
]-sum[u][
j
-1]-sum[
c
][v]+sum[c][j-1];

56 
dp
[
k
][
i
][
j
][
u
][
v
]=
	`mö
(dp[k][i][j][u][v],dp[k-1][i][j][
c
][v]+
tmp
*tmp);

58 
c
=
j
; c<
v
; c++)

60 
tmp
=
sum
[
u
][
c
]-sum[u][
j
-1]-sum[
i
-1][c]+sum[i-1][j-1];

61 
dp
[
k
][
i
][
j
][
u
][
v
]=
	`mö
(dp[k][i][j][u][v],dp[k-1][i][
c
+1][u][v]+
tmp
*tmp);

62 
tmp
=
sum
[
u
][
v
]-sum[u][
c
]-sum[
i
-1][v]+sum[i-1][c];

63 
dp
[
k
][
i
][
j
][
u
][
v
]=
	`mö
(dp[k][i][j][u][v],dp[k-1][i][j][u][
c
]+
tmp
*tmp);

66 
ªt
=
dp
[
n
-1][1][1][8][8];

67 
ªt
/=
n
;

68 
	`¥ötf
("%.3f\n",
	`sqπ
(
ªt
-
ave
));

71 
	}
}

	@problems/poj/poj_1192.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 1001

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
<<1];

7 
	snode
{ 
	mx
,
	my
,
	mc
; }
	gno
[
N
];

9 
	gt›
,
	gli°
[
N
],
	gdp
[N][2];

11 
	$ö£π
(
f
,
t
)

13 
e
[
t›
].
f
=f,e[t›].
t
=t;

14 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

15 
	}
}

17 
	$Àn
(
i
,
j
)

19  
	`abs
(
no
[
i
].
x
-no[
j
].x)+abs“o[i].
y
-no[j].y);

20 
	}
}

22 
	$dfs
(
now
,
p
)

24 
dp
[
now
][1]=
no
[now].
c
;

25 
dp
[
now
][0]=0;

26 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

28 
to
=
e
[
i
].
t
;

29 if(
to
==
p
)

31 
	`dfs
(
to
,
now
);

32 if(
dp
[
to
][1]>0)

33 
dp
[
now
][1]+=dp[
to
][1];

34 
dp
[
now
][0]=
	`max
(dp[now][0],max(dp[
to
][0],dp[to][1]));

36 
	}
}

38 
	$maö
()

40 
n
;

41 
	`sˇnf
("%d",&
n
)!=
EOF
)

43 
t›
=0;

44 
i
=0; i<
n
; i++)

46 
	`sˇnf
("%d%d%d",&
no
[
i
].
x
,&no[i].
y
,&no[i].
c
);

47 
li°
[
i
]=-1;

49 
i
=0; i<
n
; i++)

50 
j
=
i
+1; j<
n
; j++)

51 if(
	`Àn
(
i
,
j
)==1)

53 
	`ö£π
(
i
,
j
);

54 
	`ö£π
(
j
,
i
);

56 
	`dfs
(0,-1);

57 
	`¥ötf
("%d\n",
	`max
(
dp
[0][1],dp[0][0]));

60 
	}
}

	@problems/poj/poj_1208.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<c°rög
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gve˘‹
<> 
	gli°
[30];

7 
	gs
[30],
	gss
[30];

8 
	gn
;

10 
	$föd
(&
a
,&
b
,
x
)

12 
i
=0; i<
n
; i++)

13 
j
=0; j<
li°
[
i
].
	`size
(); j++)

14 if(
li°
[
i
][
j
]==
x
)

16 
a
=
i
,
b
=
j
;

19 
	}
}

21 
	$maö
()

23 
	`sˇnf
("%d",&
n
)!=
EOF
)

25 
i
=0; i<30; i++)

27 
li°
[
i
].
	`˛ór
();

28 
li°
[
i
].
	`push_back
(i);

30 
x
,
y
,
a
,
b
,
u
,
v
;

31 
	`sˇnf
("%s",
s
))

33 if(
	`°rcmp
(
s
,"quit")==0)

35 
	`sˇnf
("%d%s%d",&
x
,
ss
,&
y
);

36 
	`föd
(
a
,
b
,
x
);

37 
	`föd
(
u
,
v
,
y
);

38 if(
a
==
u
)

40 if(
	`°rcmp
(
s
,"move")==0)

42 if(
	`°rcmp
(
ss
,"onto")==0)

44 
li°
[
a
].
	`îa£
÷i°[a].
	`begö
()+
b
,list[a].begin()+b+1);

45 
li°
[
u
].
	`ö£π
÷i°[u].
	`begö
()+
v
+1,
x
);

49 
li°
[
a
].
	`îa£
÷i°[a].
	`begö
()+
b
,list[a].begin()+b+1);

50 
li°
[
u
].
	`push_back
(
x
);

55 if(
	`°rcmp
(
ss
,"onto")==0)

57 
li°
[
u
].
	`ö£π
÷i°[u].
	`begö
()+
v
+1,li°[
a
].begö()+
b
,li°[a].
	`íd
());

58 
li°
[
a
].
	`îa£
÷i°[a].
	`begö
()+
b
,li°[a].
	`íd
());

62 
li°
[
u
].
	`ö£π
÷i°[u].
	`íd
(),li°[
a
].
	`begö
()+
b
,list[a].end());

63 
li°
[
a
].
	`îa£
÷i°[a].
	`begö
()+
b
,li°[a].
	`íd
());

67 
i
=0; i<
n
; i++)

69 
	`¥ötf
("%d:",
i
);

70 
j
=0; j<
li°
[
i
].
	`size
(); j++)

71 
	`¥ötf
(" %d",
li°
[
i
][
j
]);

72 
	`puts
("");

76 
	}
}

	@problems/poj/poj_1239.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3ffffffffffffLL

	)

5 
	#N
 111

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gs
[
N
];

9 
	gdp
[
N
];

11 
	$cmp
(
i
,
j
,
u
,
v
)

13 ; 
i
<
j
&&
s
[i]==0; i++);

14 ; 
u
<
v
&&
s
[u]==0; u++);

15 if(
j
-
i
<
v
-
u
)

17 if(
j
-
i
>
v
-
u
)

19 
k
=0; k<=
j
-
i
; k++)

21 if(
s
[
i
+
k
]<s[
u
+k])

23 if(
s
[
i
+
k
]>s[
u
+k])

27 
	}
}

29 
	$maö
()

31 
l
;

32 
	`sˇnf
("%s",
s
)+1)

34 
l
=
	`°æí
(
s
);

35 if(
l
==1&&
s
[0]=='0')

37 
i
=0; i<
l
; i++)

38 
s
[
i
]-='0';

39 
dp
[0]=0;

40 
i
=1; i<
l
; i++)

42 
dp
[
i
]=0;

43 
k
=
i
-1; k>=0; k--)

45 if(
	`cmp
(
dp
[
k
],k,k+1,
i
))

47 
dp
[
i
]=
k
+1;

52 
x
=
dp
[
l
-1];

53 
dp
[
x
]=
l
-1;

54 
i
=
x
-1; i>=0; i--)

56 if(
s
[
i
]==0)

58 
dp
[
i
]=dp[i+1];

61 
j
=
x
; j>=0; j--)

63 if(
	`cmp
(
i
,
j
-1,j,
dp
[j]))

65 
dp
[
i
]=
j
-1;

70 
nx
=
dp
[0]+1;

71 
	`¥ötf
("%d",
s
[0]);

72 
i
=1; i<
l
; i++)

74 if(
nx
==
i
)

76 
	`¥ötf
(",%d",
s
[
i
]);

77 
nx
=
dp
[
i
]+1;

80 
	`¥ötf
("%d",
s
[
i
]);

82 
	`puts
("");

85 
	}
}

	@problems/poj/poj_1322.cpp

1 
	~<c°dio
>

2 
	#N
 1001

	)

4 
	gdp
[
N
][101];

6 
	$maö
()

8 
n
,
c
,
m
;

9 
	`sˇnf
("%d%d%d",&
c
,&
n
,&
m
)!=
EOF
)

11 
dp
[0][0]=1;

12 
i
=1; i<=
n
&&i<
N
; i++)

14 
j
=0; j<=
i
&&j<=
c
; j++)

16 
dp
[
i
][
j
]=0;

17 if(
j
-1>=0)

18 
dp
[
i
][
j
]+=dp[i-1][j-1]*(
c
-j+1)/c;

19 if(
i
-1>=
j
+1&&j+1<=
c
)

20 
dp
[
i
][
j
]+=dp[i-1][j+1]*(j+1)/
c
;

23 
ªt
=0;

24 if(
m
>
c
)

25 
ªt
=0;

28 if(
n
>=
N
)

30 
x
=
n
-1000;

31 if(
x
&1)

32 
ªt
=
dp
[999][
m
];

34 
ªt
=
dp
[1000][
m
];

37 
ªt
=
dp
[
n
][
m
];

39 
	`¥ötf
("%.3f\n",
ªt
);

42 
	}
}

	@problems/poj/poj_1324.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 21

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	gvis
[
N
][N][(1<<14)+11];

34 
	snode
{ 
	mx
,
	my
,
	mp
,
	m˙t
; }
	gq
[
S
],
	g°
,
	gtmp
[10];

35 
	gn
,
	gm
,
	gÀn
;

36 
	gdú
[4][2]={ {1,0},{0,-1},{-1,0},{0,1} };

37 
	gm©
[
N
][N];

39 
	$gëdú
(
x
,
y
,
xx
,
yy
)

41 
i
=0; i<4; i++)

42 if(
x
+
dú
[
i
][0]==
xx
&&
y
+dú[i][1]==
yy
)

43  
i
;

44 
	}
}

46 
ölöe
 
	$öbﬂrd
(
x
,
y
){  0<=x&&x<
m
&&0<=y&&y<
n
; 
	}
}

47 
	$hô
(
x
,
y
)

49 
i
=0; i<
Àn
; i++)

50 if(
x
==
tmp
[
i
].x&&
y
==tmp[i].y)

53 
	}
}

55 
	$sﬁve
()

57 
l
,
r
,
dd
[10];

58 if(
°
.
x
==0&&°.
y
==0)

60 
	`mem£t
(
vis
,0,(vis));

61 
°
.
˙t
=0;

62 
q
[
l
=
r
=0]=
°
;

63 
vis
[
°
.
x
][°.
y
][°.
p
]=1;

64 ; 
l
<=
r
; )

66 
node
 
now
=
q
[
l
++],
√xt
;

68 
tmp
[0].
x
=
now
.x,tmp[0].
y
=now.y;

69 
p
=
now
.p,
≈
;

70 
i
=
Àn
-2; i>=0; i--)

72 
dd
[
i
]=
p
%4,p/=4;

76 
i
=1; i<
Àn
; i++)

78 
tmp
[
i
].
x
Òmp[i-1].x+
dú
[
dd
[i-1]][0];

79 
tmp
[
i
].
y
Òmp[i-1].y+
dú
[
dd
[i-1]][1];

81 
i
=0; i<4; i++)

83 
x
=
now
.x+
dú
[
i
][0],
y
=now.y+dir[i][1];

84 if(!
	`öbﬂrd
(
x
,
y
))

86 if(
m©
[
x
][
y
]||
	`hô
(x,y))

88 if(
x
==0&&
y
==0)

89  
now
.
˙t
+1;

90 
√xt
.
x
=x,√xt.
y
=y;

91 
≈
=(
i
+2)%4;

92 
j
=0; j<
Àn
-2; j++)

95 
≈
*=4,≈+=
dd
[
j
];

98 if(
vis
[
x
][
y
][
≈
])

100 
√xt
.
p
=
≈
;

101 
√xt
.
˙t
=
now
.cnt+1;

102 
q
[++
r
]=
√xt
;

103 
vis
[
x
][
y
][
≈
]=1;

107 
	}
}

109 
	$maö
()

111 
ˇ
=1;

112 
	`sˇnf
("%d%d%d",&
m
,&
n
,&
Àn
)!=
EOF
)

114 if(
m
==0&&
n
==0&&
Àn
==0)

116 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

117 
s
=0,
x
,
y
,
xx
,
yy
,
dú
;

118 
	`sˇnf
("%d%d",&
x
,&
y
);

119 
°
.
x
=x-1,°.
y
=y-1;

120 
i
=0; i<
Àn
-1; i++)

122 
	`sˇnf
("%d%d",&
xx
,&
yy
);

123 
dú
=
	`gëdú
(
x
,
y
,
xx
,
yy
);

125 
s
*=4;

126 
s
+=
dú
;

127 
x
=
xx
,
y
=
yy
;

129 
°
.
p
=
s
;

130 
k
;

131 
	`sˇnf
("%d",&
k
);

132 
	`mem£t
(
m©
,0,(mat));

133 
i
=0; i<
k
; i++)

135 
	`sˇnf
("%d%d",&
x
,&
y
);

136 
m©
[
x
-1][
y
-1]=1;

138 
	`¥ötf
("%d\n",
	`sﬁve
());

141 
	}
}

	@problems/poj/poj_1330_LCA.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 20010

	)

20 
	#M
 1000010

	)

21 
	#S
 100010

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

35 
	snode
{ 
	mh
,
	mi
; }
	gno
[
N
];

36 
	gv
[
N
],
	gt›
,
	gli°
[N],
	gç
,
	gdp
[N][17],
	gö
[N],
	gpos
[N];

38 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

39 
	$big
(
i
,
j
){  
no
[i].
h
>no[j].h?i:j; 
	}
}

40 
	$smÆl
(
i
,
j
){  
no
[i].
h
<no[j].h?i:j; 
	}
}

42 
	$ö£π
(
f
,
t
)

44 
e
[
t›
].
f
=f,e[t›].
t
=t;

45 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

46 
	}
}

48 
	$dfs
(
now
,
l
)

50 
v
[
now
]=1;

51 
pos
[
now
]=
ç
;

52 
no
[
ç
].
i
=
now
;

53 
no
[
ç
++].
h
=
l
;

54 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

56 
to
=
e
[
i
].
t
;

57 if(!
v
[
to
])

59 
	`dfs
(
to
,
l
+1);

60 
no
[
ç
].
i
=
now
;

61 
no
[
ç
++].
h
=
l
;

64 
	}
}

66 
	$RMQ
(
n
)

68 
k
=(
	`log
(1.0*
n
)/log(2.0));

69 
i
=1; i<=
n
; i++)

70 
dp
[
i
][0]=i;

71 
j
=1; j<=
k
; j++)

72 
i
=1; i<=
n
; i++)

74 if(
i
+
	`B
(
j
)-1>
n
)

76 
dp
[
i
][
j
]=
	`smÆl
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

78 
	}
}

80 
	$quîy
(
l
,
r
)

82 
d
,
k
;

83 if(
l
>
r
Ë
d
=l,l=r,r=d;

84 
d
=
r
-
l
+1;

85 
k
=(
	`log
(1.0*
d
)/log(2.0));

86  
	`smÆl
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

87 
	}
}

89 
	$maö
()

91 
t
,
n
,
r
;

92 
	`sˇnf
("%d",&
t
);

93 ; 
t
--;)

95 
	`sˇnf
("%d",&
n
);

96 
t›
=0;

97 
i
=0; i<
n
; i++)

98 
li°
[
i
]=-1;

99 
	`mem£t
(
ö
,0,(in));

100 
i
=0; i<
n
-1; i++)

102 
x
,
y
;

103 
	`sˇnf
("%d%d",&
x
,&
y
);

104 
x
--,
y
--;

105 
	`ö£π
(
x
,
y
);

106 
	`ö£π
(
y
,
x
);

107 
ö
[
y
]++;

109 
i
=0; i<
n
; i++)

110 if(
ö
[
i
]==0)

111 
r
=
i
;

112 
	`mem£t
(
v
,0,(v));

113 
ç
=1;

114 
	`dfs
(
r
,0);

119 
	`RMQ
(2*
n
-1);

120 
x
,
y
,
ªt
;

121 
	`sˇnf
("%d%d",&
x
,&
y
);

122 
ªt
=
	`quîy
(
pos
[
x
-1],pos[
y
-1]);

123 
	`¥ötf
("%d\n",
no
[
ªt
].
i
+1);

126 
	}
}

	@problems/poj/poj_1376.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	gm©
[
N
][N],
	gm
,
	gn
;

34 
	gdú
[4][2]={{1,0},{0,-1},{-1,0},{0,1}},
	gdis
[
N
][N][4];

35 
	gdd
[4][2]={{-1,-1},{-1,0},{0,-1},{0,0}};

36 
	snode
{ 
	mx
,
	my
,
	md
,
	m˙t
; }
	g°
,
	ged
,
	gq
[
S
];

37 
	gm≠
<
	g°rög
,> 
	gmp
;

38 
°rög
 
	gs
;

40 
ölöe
 
	$öbﬂrd
(
x
,
y
)

42  1<=
x
&&x<
m
&&1<=
y
&&y<
n
;

43 
	}
}

45 
ölöe
 
	$™ti
(
x
,
y
,
d
,
˙t
)

47 
xx
,
yy
,
x1
,
y1
;

48 
k
=1; k<=
˙t
; k++)

50 
x1
=
x
+
k
*
dú
[
d
][0],
y1
=
y
+k*dir[d][1];

51 
i
=0; i<4; i++)

53 
xx
=
x1
+
dd
[
i
][0],
yy
=
y1
+dd[i][1];

54 if(
m©
[
xx
][
yy
])

59 
	}
}

61 
	$sﬁve
()

63 
l
=0,
r
=0,
x
,
y
,
d
;

64 
°
.
˙t
=0;

65 
q
[0]=
°
;

66 
i
=0; i<=
m
; i++)

67 
j
=0; j<
n
; j++)

68 
k
=0; k<4; k++)

69 
dis
[
i
][
j
][
k
]=
öf
;

70 
dis
[
°
.
x
][°.
y
][°.
d
]=0;

71 ; 
l
<=
r
;)

73 
node
 
now
=
q
[
l
++],
√xt
;

75 
i
=1; i<=3; i++)

77 
x
=
now
.x+
i
*
dú
[now.
d
][0],
y
=now.y+i*dir[now.d][1];

79 if(!
	`öbﬂrd
(
x
,
y
))

81 if(
	`™ti
(
now
.
x
,now.
y
,now.
d
,
i
))

83 if(
dis
[
x
][
y
][
now
.
d
]>now.
˙t
+1)

85 
dis
[
x
][
y
][
now
.
d
]Úow.
˙t
+1;

86 if(
x
==
ed
.x&&
y
==ed.y)

88 
√xt
.
x
=x,√xt.
y
=y,√xt.
˙t
=
now
.˙t+1,√xt.
d
=now.d;

89 
q
[++
r
]=
√xt
;

92 
i
=-1; i<=1; i+=2)

94 
ii
=((
now
.
d
+
i
)%4+4)%4;

95 if(
dis
[
now
.
x
][now.
y
][
ii
]>now.
˙t
+1)

97 
dis
[
now
.
x
][now.
y
][
ii
]Úow.
˙t
+1;

98 
√xt
.
x
=
now
.x,√xt.
y
Úow.y,√xt.
˙t
Úow.˙t+1,√xt.
d
=
ii
;

99 
q
[++
r
]=
√xt
;

103 
	}
}

105 
	$maö
()

107 
ªt
;

108 
mp
[
	`°rög
("south")]=0;

109 
mp
[
	`°rög
("west")]=1;

110 
mp
[
	`°rög
("north")]=2;

111 
mp
[
	`°rög
("east")]=3;

112 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

114 if(
m
==0&&
n
==0)

116 
i
=0; i<
m
; i++)

117 
j
=0; j<
n
 ;j++)

118 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

120 
	`sˇnf
("%d%d%d%d",&
°
.
x
,&°.
y
,&
ed
.x,&ed.y);

121 
cö
>>
s
;

122 
°
.
d
=
mp
[
s
];

123 
	`sﬁve
();

124 
ªt
=
öf
;

125 
i
=0; i<4; i++)

126 
ªt
=
	`mö
‘ë,
dis
[
ed
.
x
][ed.
y
][
i
]);

127 if(
ªt
<
öf
)

128 
	`¥ötf
("%d\n",
ªt
);

130 
	`puts
("-1");

133 
	}
}

	@problems/poj/poj_1414.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 1000000

	)

5 
	#N
 101

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gd©
[
N
][N],
	gvis
[N][N];

9 
	gn
;

10 
	gdú
[6][2]={{0,-1},{0,1},{1,0},{-1,0},{-1,-1},{1,1}};

12 
	$öbﬂrd
(
i
,
j
){  j<=i&&i<=
n
&&j>=1&&i>=1; 
	}
}

14 
	$dfs
(
u
,
v
,&
˙t
,&
èg
,
c
)

16 if(
d©
[
u
][
v
]==0)

18 
èg
=1;

21 
˙t
++;

22 
vis
[
u
][
v
]=1;

23 
i
=0; i<6; i++)

25 
x
=
u
+
dú
[
i
][0],
y
=
v
+dir[i][1];

26 if(!
	`öbﬂrd
(
x
,
y
))

28 if(
d©
[
x
][
y
]!=
c
&&dat[x][y]!=0)

30 if(
vis
[
x
][
y
])

32 
	`dfs
(
x
,
y
,
˙t
,
èg
,
c
);

34 
	}
}

36 
	$sﬁve
(
u
,
v
,
c
)

38 
ªt
=0,
tmp
,
èg
;

39 
d©
[
u
][
v
]=
c
;

40 
	`mem£t
(
vis
,0,(vis));

41 
i
=1; i<=
n
; i++)

42 
j
=1; j<=
i
; j++)

44 if(
d©
[
i
][
j
]!=0&&!
vis
[i][j])

46 
tmp
=
èg
=0;

47 
	`dfs
(
i
,
j
,
tmp
,
èg
,
d©
[i][j]);

48 if(
èg
==1)

49 
tmp
=0;

50 if(
d©
[
i
][
j
]==
c
)

51 
ªt
-=
tmp
;

53 
ªt
+=
tmp
;

56 
d©
[
u
][
v
]=0;

57  
ªt
;

58 
	}
}

60 
	$maö
()

62 
c
;

63 
	`sˇnf
("%d%d",&
n
,&
c
)!=
EOF
)

65 if(
n
==0&&
c
==0)

67 
i
=1; i<=
n
; i++)

69 
j
=1; j<=
i
; j++)

70 
	`sˇnf
("%d",&
d©
[
i
][
j
]);

72 
ªt
=-
öf
;

73 
i
=1; i<=
n
; i++)

74 
j
=1; j<=
i
; j++)

76 if(
d©
[
i
][
j
]==0)

77 
ªt
=
	`max
‘ë,
	`sﬁve
(
i
,
j
,
c
));

79 
	`¥ötf
("%d\n",
ªt
);

82 
	}
}

	@problems/poj/poj_1421_Peters_calculator_string.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#öf
 0x7fffffff

	)

18 
	#N
 1010

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	gs
[
N
];

32 
°rög
 
	gequ
[
N
];

33 
	gvis
[
N
],
	g˙t
;

34 
	gm≠
<
	g°rög
,> 
	gv¨
;

36 
	$˛s_•a˚
(&
i
,
l
,
s
[])

38 ; 
i
<
l
&&
s
[i]==' '; i++);

39 
	}
}

41 
ölöe
 
	$gë_èg
(
x
)

43 if(
x
=='+')

45 if(
x
=='-')

47 if(
x
=='*')

49 if('('==
x
)

51 if(')'==
x
)

53 if('0'<=
x
&&x<='9')

56 
	}
}

58 
	$tmp_p›
(
èg
,
a
,
b
)

60 if(
èg
==2)

61 
a
˜*
b
;

62 if(
èg
==1)

63 
a
=
b
-a;

65 
a
˜+
b
;

66  
a
;

67 
	}
}

69 
	$dfs
(
°rög
 
x
)

71 if(
v¨
.
	`föd
(
x
)==v¨.
	`íd
())

72  
öf
;

73 
id
=
v¨
[
x
],
Êag
,
èg
,
l
=
equ
[id].
	`size
(),
z_k
=0;

74 if(
vis
[
id
])

75  
öf
;

76 
vis
[
id
]=1;

77 
ve˘‹
<> 
u
;

78 
ve˘‹
<> 
v
;

79 
°rög
 
tmp
;

80 
i
=0; i<
l
; )

82 ; 
i
<
l
&&
equ
[
id
][i]==' '; i++);

83 if(
i
>=
l
) ;

84 
èg
=
	`gë_èg
(
equ
[
id
][
i
]);

85 
tmp
=
	`°rög
("");

86 
Êag
=1;

87 if((
èg
==1&&
u
.
	`size
()!=
v
.size()-
z_k
+1)||tag>=5)

89 if(
èg
==1Ë
i
++,èg=5,
Êag
=-1;

90 ; 
i
<
l
&&
equ
[
id
][i]!=' '&&
	`gë_èg
(equ[id][i])>=5; i++)

91 
tmp
+=
equ
[
id
][
i
];

94 
tmp
+=
equ
[
id
][
i
++];

97 if(
èg
<=3)

99 
j
=
v
.
	`size
()-1; j>=0; j--)

101 if((
èg
<=
v
[
j
]&&v[j]<3)||(tag==1&&v[j]==0))

103 
a
=
u
.
	`back
();

104 
u
.
	`p›_back
();

105 
b
=
u
.
	`back
();

106 
u
.
	`p›_back
();

108 
a
=
	`tmp_p›
(
v
[
j
],a,
b
);

109 
u
.
	`push_back
(
a
);

110 
v
.
	`p›_back
();

115 if(
èg
==3)

116 
z_k
++;

117 
v
.
	`push_back
(
èg
);

119 if(
èg
==4)

121 
j
=
v
.
	`size
()-1; j>=0; j--)

123 if(
v
[
j
]==3)

125 
a
=
u
.
	`back
();

126 
u
.
	`p›_back
();

127 
b
=
u
.
	`back
();

128 
u
.
	`p›_back
();

130 
a
=
	`tmp_p›
(
v
[
j
],a,
b
);

131 
u
.
	`push_back
(
a
);

132 
v
.
	`p›_back
();

134 
z_k
--;

135 
v
.
	`p›_back
();

137 if(
èg
==5)

139 
ªt
=0;

140 
j
=0; j<
tmp
.
	`Àngth
(); j++)

141 
ªt
*=10,ªt+=
tmp
[
j
]-'0';

142 
u
.
	`push_back
(
ªt
*
Êag
);

146 
ªt
=
	`dfs
(
tmp
);

147 if(
ªt
==
öf
)

149 
vis
[
id
]=0;

150  
öf
;

152 
u
.
	`push_back
(
ªt
);

155 
j
=
v
.
	`size
()-1; j>=0; j--)

157 
a
=
u
.
	`back
();

158 
u
.
	`p›_back
();

159 
b
=
u
.
	`back
();

160 
u
.
	`p›_back
();

161 
a
=
	`tmp_p›
(
v
[
j
],a,
b
);

162 
u
.
	`push_back
(
a
);

163 
v
.
	`p›_back
();

165 
vis
[
id
]=0;

166  
u
.
	`back
();

167 
	}
}

169 
	$show
(
°rög
 
x
)

171 
	`mem£t
(
vis
,0,(vis));

172 
ªt
=
	`dfs
(
x
);

173 if(
ªt
<
öf
)

174 
	`¥ötf
("%d\n",
ªt
);

176 
	`puts
("UNDEF");

177 
	}
}

179 
	$maö
()

181 
i
,
l
;

182 
°rög
 
ª£t
=
	`°rög
("RESET");

183 
°rög
 
¥öt
=
	`°rög
("PRINT");

184 
°rög
 
fú°
;

185 
°rög
 
tmp
;

186 
˙t
=0;

187 
	`gës
(
s
)!=
NULL
)

189 if(
s
[0]=='\0')

191 
i
=0;

192 
l
=
	`°æí
(
s
);

193 
	`˛s_•a˚
(
i
,
l
,
s
);

194 
fú°
=
	`°rög
("");

195 ; 
i
<
l
&&
s
[i]!=' '&&s[i]!=':'; i++)

196 
fú°
+=
s
[
i
];

197 if(
fú°
==
ª£t
)

199 
˙t
=0;

200 
v¨
.
	`˛ór
();

202 if(
fú°
==
¥öt
)

204 
	`˛s_•a˚
(
i
,
l
,
s
);

205 
tmp
=
	`°rög
("");

206 ; 
i
<
l
&&
s
[i]!=' '; i++)

207 
tmp
+=
s
[
i
];

208 
	`show
(
tmp
);

212 if(
v¨
.
	`föd
(
fú°
)==v¨.
	`íd
())

213 
v¨
[
fú°
]=
˙t
++;

214 
tmp
=
	`°rög
("");

215 ; 
i
<
l
&&
s
[i]!=':'; i++);

216 
i
+=2;

217 
	`˛s_•a˚
(
i
,
l
,
s
);

218 ; 
i
<
l
; i++)

219 
tmp
+=
s
[
i
];

220 
id
=
v¨
[
fú°
];

221 
equ
[
id
]=
tmp
;

225 
	}
}

	@problems/poj/poj_1436.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 8011

	)

5 
	#S
 200001

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

9 
	snode
{ 
	ml
,
	mr
,
	mc
; }
	gno
[
N
<<3];

10 
	s£gs
{ 
	mx
,
	ml
,
	mr
; }
	g£g
[
N
];

12 
	$cmp
(
£gs
 
a
,£g†
b
){ á.
x
>b.x; 
	}
}

13 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

14 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

15 
	gt›
,
	gli°
[
N
],
	gc⁄
[N];

17 
	$ö£π
(
f
,
t
)

19 
e
[
t›
].
f
=f,e[t›].
t
=t;

20 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

21 
	}
}

23 
	$buûd
(
id
,
l
,
r
)

25 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=-1;

26 if(
l
==
r
)

28 
mid
=(
l
+
r
)>>1;

29 
	`buûd
(
	`L
(
id
),
l
,
mid
);

30 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

31 
	}
}

33 
	$down
(
id
,
l
,
r
)

35 if(
no
[
id
].
c
>=0)

37 
no
[
	`L
(
id
)].
c
=no[id].c;

38 
no
[
	`R
(
id
)].
c
=no[id].c;

39 
no
[
id
].
c
=-1;

41 
	}
}

43 
	$upd©e
(
id
,
Œ
,
º
,
x
)

45 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

46 if(
l
>=
Œ
&&
r
<=
º
)

48 
no
[
id
].
c
=
x
;

51 
	`down
(
id
,
l
,
r
);

52 if(
mid
>=
Œ
&&
l
<=
º
)

53 
	`upd©e
(
	`L
(
id
),
Œ
,
º
,
x
);

54 if(
mid
<
º
&&
r
>=
Œ
)

55 
	`upd©e
(
	`R
(
id
),
Œ
,
º
,
x
);

56 
	}
}

58 
	$quîy
(
id
,
Œ
,
º
,
x
)

60 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

61 if(
no
[
id
].
c
>=0)

63 if(
c⁄
[
no
[
id
].
c
]!=
x
)

65 
	`ö£π
(
x
,
no
[
id
].
c
);

66 
c⁄
[
no
[
id
].
c
]=
x
;

70 if(
l
==
r
)

72 if(
mid
>=
Œ
&&
l
<=
º
)

73 
	`quîy
(
	`L
(
id
),
Œ
,
º
,
x
);

74 if(
mid
<
º
&&
r
>=
Œ
)

75 
	`quîy
(
	`R
(
id
),
Œ
,
º
,
x
);

76 
	}
}

78 
	$maö
()

80 
t
,
n
,
mx
;

81 
	`sˇnf
("%d",&
t
);

82 ; 
t
--;)

84 
mx
=0;

85 
t›
=0;

86 
	`mem£t
(
li°
,-1,(list));

87 
	`mem£t
(
c⁄
,-1,(con));

88 
	`sˇnf
("%d",&
n
);

89 
i
=0; i<
n
; i++)

91 
	`sˇnf
("%d%d%d",&
£g
[
i
].
l
,&£g[i].
r
,&£g[i].
x
);

92 
£g
[
i
].
l
++,£g[i].
r
++;

93 
£g
[
i
].
l
<<=1,£g[i].
r
<<=1;

94 
mx
=
	`max
(mx,
£g
[
i
].
r
);

96 
	`s‹t
(
£g
,£g+
n
,
cmp
);

97 
	`buûd
(1,1,
mx
);

98 
i
=0; i<
n
; i++)

100 
	`quîy
(1,
£g
[
i
].
l
,£g[i].
r
,i);

101 
	`upd©e
(1,
£g
[
i
].
l
,£g[i].
r
,i);

103 
ªt
=0;

104 
u
=0; u<
n
; u++)

106 
j
=
li°
[
u
]; j!=-1; j=
e
[j].
n
)

108 
v
=
e
[
j
].
t
;

109 
k
=
li°
[
v
]; k!=-1; k=
e
[k].
n
)

110 
i
=
li°
[
u
]; i!=-1; i=
e
[i].
n
)

111 if(
e
[
k
].
t
=Û[
i
].t)

112 
ªt
++;

115 
	`¥ötf
("%d\n",
ªt
);

118 
	}
}

	@problems/poj/poj_1456.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 10001

	)

4 
usög
 
	g°d
::
s‹t
;

6 
	suföd


8 
	mp
[
N
];

9 
öô
(){ 
	mi
=0; i<
	mN
; i++Ë
	mp
[
i
]=i; }

10 
run
(&
x
)

12 
	my
=
x
;

13 ; 
	mp
[
x
]!=x; 
	mx
=
p
[x]);

14 ; 
	mp
[
y
]!=
x
;Ö[y]=x,
	my
=
p
[y]);

16 
£t‰õnd
(
i
,
j
)

18 
run
(
i
);

19 
run
(
j
);

20 
	mp
[
i
]=
j
;

22 
is‰õnd
(
i
,
j
)

24 
run
(
i
);

25 
run
(
j
);

26  
	mi
==
j
;

28 }
	guf
;

29 
	snode
{ 
	mv
,
	md
; }
	gno
[
N
];

30 
	$cmp
(
node
 
a
,nodê
b
){ á.
v
>b.v; 
	}
}

32 
	$maö
()

34 
n
,
ªt
=0;

35 
	`sˇnf
("%d",&
n
)!=
EOF
)

37 
i
=0; i<
n
; i++)

38 
	`sˇnf
("%d%d",&
no
[
i
].
v
,&no[i].
d
);

39 
	`s‹t
(
no
,no+
n
,
cmp
);

40 
uf
.
	`öô
();

41 
ªt
=0;

42 
i
=0; i<
n
; i++)

44 
x
=
no
[
i
].
d
;

45 
uf
.
	`run
(
x
);

46 if(
x
<=0)

48 
ªt
+=
no
[
i
].
v
;

49 
uf
.
	`£t‰õnd
(
x
,x-1);

51 
	`¥ötf
("%d\n",
ªt
);

54 
	}
}

	@problems/poj/poj_1458.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gs1
[
N
],
	gs2
[N];

8 
	gdp
[
N
][N];

10 
	$maö
()

12 
ªt
;

13 
	`sˇnf
("%s%s",
s1
,
s2
)!=
EOF
)

15 
ªt
=0;

16 
	`mem£t
(
dp
,0,(dp));

17 
i
=0; 
s1
[i]; i++)

18 
j
=0; 
s2
[j]; j++)

20 
dp
[
i
+1][
j
+1]=
	`max
(dp[i][j]+(
s1
[i]==
s2
[j]),max(dp[i+1][j],dp[i][j+1]));

21 
ªt
=
	`max
(
dp
[
i
+1][
j
+1],ret);

23 
	`¥ötf
("%d\n",
ªt
);

26 
	}
}

	@problems/poj/poj_1475.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 22

	)

20 
	#M
 1000010

	)

21 
	#S
 2000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	snode
{ 
	mx
,
	my
,
	mbx
,
	mby
,
	mp˙t
,
	ms˙t
,
	mp
,
	md
,
	m¥e
; }
	g°
,
	ged
,
	gq
[
S
];

34 
	gs
[
N
];

35 
	gsmÆl_dú
[4]={'n','s','w','e'};

36 
	gbig_dú
[4]={'N','S','W','E'};

37 
	gmp
[
N
][N][N][N],
	gms
[N][N][N][N],
	gm©
[N][N],
	gid
;

38 
	gdú
[4][2]={{-1,0},{1,0},{0,-1},{0,1}};

39 
	gm
,
	gn
,
	gˇn_sﬁve
,
	gbe°_p
,
	gbe°_s
;

41 
	$öbﬂrd
(
x
,
y
){  0<=x&&x<
m
&&0<=y&&y<
n
; 
	}
}

42 
	$bëãr
(
x
,
y
,
bx
,
by
,
p˙t
,
s˙t
)

44 if(
p˙t
<
mp
[
x
][
y
][
bx
][
by
])

46 if(
p˙t
==
mp
[
x
][
y
][
bx
][
by
])

47  
s˙t
<
ms
[
x
][
y
][
bx
][
by
];

49 
	}
}

51 
	$sﬁve
()

53 
l
,
r
;

54 
be°_p
=
be°_s
=
öf
;

55 
i
=0; i<
N
; i++)

56 
j
=0; j<
N
; j++)

57 
k
=0; k<
N
; k++)

58 
u
=0; u<
N
; u++)

59 
mp
[
i
][
j
][
k
][
u
]=
öf
,
ms
[i][j][k][u]=inf;

60 
q
[
l
=
r
=0]=
°
;

61 
mp
[
°
.
x
][°.
y
][°.
bx
][°.
by
]=
ms
[st.x][st.y][st.bx][st.by]=0;

62 ; 
l
<=
r
;)

64 
node
 
now
=
q
[
l
++],
√xt
;

65 if(
now
.
bx
==
ed
.
x
&&now.
by
=Ûd.
y
)

67 
i
=0; i<4; i++)

69 
x
=
now
.x+
dú
[
i
][0],
y
=now.y+dir[i][1];

70 if(!
	`öbﬂrd
(
x
,
y
))

72 if(
m©
[
x
][
y
]==1)

74 if(
x
==
now
.
bx
&&
y
=Úow.
by
)

76 
xx
=
x
+
dú
[
i
][0],
yy
=
y
+dir[i][1];

77 if(!
	`öbﬂrd
(
xx
,
yy
))

79 if(
m©
[
xx
][
yy
]==1)

81 if(
xx
==
ed
.
x
&&
yy
=Ûd.
y
)

83 if(
	`bëãr
(
x
,
y
,
xx
,
yy
,
now
.
p˙t
+1,now.
s˙t
+1))

85 
ˇn_sﬁve
=1;

86 
mp
[
x
][
y
][
xx
][
yy
]=
now
.
p˙t
+1;

87 
ms
[
x
][
y
][
xx
][
yy
]=
now
.
s˙t
+1;

88 
√xt
.
x
=x,√xt.
y
=y,√xt.
bx
=
xx
,√xt.
by
=
yy
;

89 
√xt
.
p˙t
=
now
.p˙t+1,√xt.
s˙t
=now.scnt+1;

90 
√xt
.
p
=1,√xt.
d
=
i
,√xt.
¥e
=
l
-1;

91 
q
[++
r
]=
√xt
;

92 if(
√xt
.
p˙t
<
be°_p
||“ext.p˙t==be°_p&&√xt.
s˙t
<
be°_s
))

93 
id
=
r
,
be°_p
=
√xt
.
p˙t
,
be°_s
Úext.
s˙t
;

97 if(
	`bëãr
(
x
,
y
,
xx
,
yy
,
now
.
p˙t
+1,now.
s˙t
+1))

99 
mp
[
x
][
y
][
xx
][
yy
]=
now
.
p˙t
+1;

100 
ms
[
x
][
y
][
xx
][
yy
]=
now
.
s˙t
+1;

101 
√xt
.
x
=x,√xt.
y
=y,√xt.
bx
=
xx
,√xt.
by
=
yy
;

102 
√xt
.
p˙t
=
now
.p˙t+1,√xt.
s˙t
=now.scnt+1;

103 
√xt
.
p
=1,√xt.
d
=
i
,√xt.
¥e
=
l
-1;

104 
q
[++
r
]=
√xt
;

109 if(
	`bëãr
(
x
,
y
,
now
.
bx
,now.
by
,now.
p˙t
,now.
s˙t
+1))

111 
mp
[
x
][
y
][
now
.
bx
][now.
by
]Úow.
p˙t
;

112 
ms
[
x
][
y
][
now
.
bx
][now.
by
]Úow.
s˙t
+1;

113 
√xt
.
x
=x,√xt.
y
=y,√xt.
bx
=
now
.bx,√xt.
by
=now.by;

114 
√xt
.
p˙t
=
now
.p˙t,√xt.
s˙t
=now.scnt+1;

115 
√xt
.
p
=0,√xt.
d
=
i
,√xt.
¥e
=
l
-1;

116 
q
[++
r
]=
√xt
;

122 
	}
}

124 
	$show
(
id
)

126 if(
q
[
id
].
¥e
>=0)

127 
	`show
(
q
[
id
].
¥e
);

130 if(
q
[
id
].
p
==1)

131 
	`¥ötf
("%c",
big_dú
[
q
[
id
].
d
]);

133 
	`¥ötf
("%c",
smÆl_dú
[
q
[
id
].
d
]);

134 
	}
}

136 
	$maö
()

138 
ˇ
=1;

139 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

141 
ˇn_sﬁve
=0;

142 if(
m
==0&&
n
==0)

144 
	`¥ötf
("Mazê#%d\n",
ˇ
++);

145 
	`mem£t
(
m©
,0,(mat));

146 
i
=0; i<
m
; i++)

148 
	`sˇnf
("%s",
s
);

149 
j
=0; j<
n
; j++)

151 if(
s
[
j
]=='S')

153 
°
.
x
=
i
,°.
y
=
j
;

154 
°
.
p˙t
=°.
s˙t
=0;

155 
°
.
¥e
=-1;

157 if(
s
[
j
]=='B')

158 
°
.
bx
=
i
,°.
by
=
j
;

159 if(
s
[
j
]=='#')

160 
m©
[
i
][
j
]=1;

161 if(
s
[
j
]=='T')

163 
ed
.
x
=
i
,ed.
y
=
j
;

164 
m©
[
i
][
j
]=-1;

168 
	`sﬁve
();

169 if(
ˇn_sﬁve
)

171 
	`show
(
id
);

172 
	`puts
("");

176 
	`puts
("Impossible.");

177 
	`puts
("");

180 
	}
}

	@problems/poj/poj_1505.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	gn
,
	gk
;

34 
LL
 
	gd©
[
N
],
	gªt
;

35 
	gèg
[
N
];

37 
	$ok
(
sig
)

39 
LL
 
sum
=0;

40 
˙t
=0;

41 
i
=
n
-1; i>=0; i--)

43 if(
sum
+
d©
[
i
]>
ªt
)

45 
èg
[
i
]=1;

46 
˙t
++;

47 if(
˙t
>=
k
)

49 
sum
=
d©
[
i
];

52 
sum
+=
d©
[
i
];

53 if(
sig
)

55 if(
k
-
˙t
-1==
i
+1)

56 
j
=0; j<=
i
; j++)

57 
èg
[
j
]=1;

61 
	}
}

63 
	$show
()

65 
i
=0; i<
n
-1; i++)

67 
	`¥ötf
("%Œd ",
d©
[
i
]);

68 if(
èg
[
i
])

69 
	`¥ötf
("/ ");

71 
	`¥ötf
("%Œd\n",
d©
[
n
-1]);

72 
	}
}

74 
	$maö
()

76 
t
;

77 
LL
 
l
,
r
;

78 
	`sˇnf
("%d",&
t
);

79 
t
--)

81 
l
=0,
r
=0;

82 
	`sˇnf
("%d%d",&
n
,&
k
);

83 
i
=0; i<
n
; i++)

85 
	`sˇnf
("%Œd",&
d©
[
i
]);

86 
r
+=
d©
[
i
];

87 
l
=
	`max
÷,
d©
[
i
]);

89 ; 
l
<=
r
;)

91 
ªt
=(
l
+
r
)>>1;

92 if(
	`ok
(0))

93 
r
=
ªt
-1;

95 
l
=
ªt
+1;

97 
	`mem£t
(
èg
,0,(tag));

98 
ªt
=
l
;

99 
	`ok
(1);

100 
	`show
();

103 
	}
}

	@problems/poj/poj_1609.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 10001

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

7 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
==b.x?a.
y
<b.y:a.x<b.x; 
	}
}

8 
	gid
[
N
],
	gt›
;

10 
	$sﬁve
(
n
)

12 
t›
=0;

13 
l
,
r
,
mid
;

14 
i
=0; i<
n
; i++)

16 
l
=0,
r
=
t›
-1;

17 ; 
l
<=
r
;)

19 
mid
=(
l
+
r
)>>1;

20 if(
no
[
id
[
mid
]].
y
<Úo[
i
].y)

21 
l
=
mid
+1;

23 
r
=
mid
-1;

25 
id
[
l
]=
i
;

26 
t›
=(
l
>=top)?l+1:top;

28  
t›
;

29 
	}
}

31 
	$maö
()

33 
n
;

34 
	`sˇnf
("%d",&
n
)&&n)

36 
i
=0; i<
n
; i++)

37 
	`sˇnf
("%d%d",&
no
[
i
].
x
,&no[i].
y
);

38 
	`s‹t
(
no
,no+
n
,
cmp
);

39 
	`¥ötf
("%d\n",
	`sﬁve
(
n
));

41 
	`puts
("*");

43 
	}
}

	@problems/poj/poj_1625_ac_machine_dp.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 52

	)

20 
	#M
 1000010

	)

21 
	#S
 1000

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

30 
	#DIGIT
 4

	)

31 
	#DEPTH
 10000

	)

32 
	#MAXN
 300

	)

34 
	tLL
;

35 
usög
 
«me•a˚
 
	g°d
;

36 
	tbig_num
[
MAXN
+1];

37 
big_num
 
	gdp
[2][
S
];

39 
	snode
{ 
	m√xt
[
N
],
	mÁû
,
	mis
; }
	gno
[
S
];

40 
	gs
[
S
+10];

41 
	gèb
[
S
],
	gt›
,
	gq
[S];

43 
	$add
(
big_num
 
a
,big_num 
b
)

45 
i
;

46 
i
=1; i<=
b
[0]; i++)

47 if((
a
[
i
]+=
b
[i])>=
DEPTH
)

48 
a
[
i
]-=
DEPTH
,a[i+1]++;

49 if(
b
[0]>=
a
[0])á[0]=b[0];

50 ; 
a
[
i
]>=
DEPTH
 && i<=a[0];á[i]-=DEPTH,i++,a[i]++ );

51 
a
[0]+=(a[a[0]+1]>0);

52 
	}
}

54 
	$wrôe
(c⁄° 
big_num
 
a
)

56 
i
,
j
;

57 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

58 
j
=
DEPTH
/10; j; j/=10)

59 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

60 
	}
}

62 
	$öô
()

64 
t›
=1;

65 
i
=0; i<
S
; i++)

67 
no
[
i
].
is
=0,no[i].
Áû
=-1;

68 
j
=0; j<
N
; j++)

69 
no
[
i
].
√xt
[
j
]=-1;

71 
	}
}

73 
	$ö£π
(
s
[])

75 
l
=
	`°æí
(
s
),
p
=0;

76 
i
=0; i<
l
; i++)

78 
ii
=
èb
[
s
[
i
]];

79 if(
no
[
p
].
is
)

81 if(
no
[
p
].
√xt
[
ii
]==-1)

82 
no
[
p
].
√xt
[
ii
]=
t›
++;

83 
p
=
no
[p].
√xt
[
ii
];

85 
no
[
p
].
is
=1;

86 
	}
}

88 
	$buûd_ac
(
n
)

90 
l
,
r
;

91 
q
[
l
=
r
=0]=0;

92 ; 
l
<=
r
;)

94 
now
=
q
[
l
++];

95 
i
=0; i<
n
; i++)

97 
ii
=
no
[
now
].
√xt
[
i
];

98 if(
ii
==-1)

100 if(
now
==0)

101 
no
[
now
].
√xt
[
i
]=0;

103 
no
[
now
].
√xt
[
i
]Úo[no[now].
Áû
].next[i];

107 if(
now
==0)

108 
no
[
ii
].
Áû
=0;

111 
no
[
ii
].
Áû
Úo[no[
now
].Áû].
√xt
[
i
];

112 if(
no
[no[
ii
].
Áû
].
is
)

113 
no
[
ii
].
is
=1;

115 
q
[++
r
]=
ii
;

119 
	}
}

121 
	$sﬁve
(
m
,
n
)

123 
	`mem£t
(
dp
,0,(dp));

124 
dp
[0][0][1]=1;

125 
i
=0; i<
t›
; i++)

127 
dp
[0][
i
][0]=1;

128 
dp
[1][
i
][0]=1;

130 
i
=0; i<
m
; i++)

132 
j
=0; j<
t›
; j++)

133 
k
=0; k<
n
; k++)

135 
to
=
no
[
j
].
√xt
[
k
];

136 if(
no
[
to
].
is
)

138 
	`add
(
dp
[1][
to
],dp[0][
j
]);

140 
j
=0; j<
t›
; j++)

142 
k
=0; k<
MAXN
; k++)

143 
dp
[0][
j
][
k
]=dp[1][j][k],dp[1][j][k]=0;

144 
dp
[1][
j
][0]=1;

147 
i
=0; i<
t›
; i++)

148 
	`add
(
dp
[1][0],dp[0][
i
]);

149 
	`wrôe
(
dp
[1][0]);

150 
	`puts
("");

151 
	}
}

153 
	$maö
()

155 
n
,
m
,
p
;

156 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
p
)!=
EOF
)

158 
	`gëch¨
();

159 
	`öô
();

160 
	`gës
(
s
);

161 
i
=0; i<
n
; i++)

162 
èb
[
s
[
i
]]=i;

163 
i
=0; i<
p
; i++)

165 
	`sˇnf
("%s",
s
);

166 
	`ö£π
(
s
);

168 
	`buûd_ac
(
n
);

169 
	`sﬁve
(
m
,
n
);

172 
	}
}

	@problems/poj/poj_1639.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	g£t
<
	g°rög
> 
	g°
;

40 
	gm≠
<
	g°rög
,> 
	gmp
;

41 
°rög
 
	gß
,
	gsb
;

42 
	sedge
{ 
	mf
,
	mt
,
	ml
,
	mn
; }
	ge
[
S
],
	gE
[S],
	gP
[S];

43 
	gn
,
	gt›
,
	gli°
[
N
],
	gpk
,
	gë
,
	glim
,
	gv
[
S
],
	gç
;

45 
	$ö£π
(
f
,
t
,
l
)

47 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

48 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

49 
	}
}

51 
	$dñ
(
f
,
t
)

53 
i
=
li°
[
f
],
nx
;

54 if(
e
[
i
].
n
==-1)

56 
li°
[
f
]=-1;

59 if(
e
[
i
].
t
==t)

61 
li°
[
f
]=
e
[
i
].
n
;

64 ; 
e
[
i
].
n
!=-1; i=e[i].n)

66 
nx
=
e
[
i
].
n
;

67 if(
e
[
nx
].
t
==t)

69 
e
[
i
].
n
Û[
nx
].n;

73 
	}
}

75 
	suföd


77 
	mp
[
N
],
	mt
;

78 
öô
()

80 
	mi
=0; i<
	mN
; i++)

81 
	mp
[
i
]=i;

83 
run
(&
x
){ ; 
	mp
[
t
=x]!=x; 
	mx
=
p
[x],p[t]=p[x]); }

84 
is‰õnd
(
i
,
j
)

86 
run
(
i
);Ñun(
j
);

87  
	mi
==
j
;

89 
£t‰õnd
(
i
,
j
)

91 
run
(
i
);Ñun(
j
);

92 
	mp
[
i
]=
p
[
j
];

94 }
	guf
;

96 
	$dfs
(
now
,
¥e
,
t
,&
a
,&
b
,&
l
,&
èg
)

98 if(
now
==
t
)

100 
èg
=1;

103 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

105 
to
=
e
[
i
].
t
;

106 if(
to
==
¥e
)

108 
	`dfs
(
to
,
now
,
t
,
a
,
b
,
l
,
èg
);

109 if(
èg
)

111 if(
e
[
i
].
l
>l)

113 
l
=
e
[
i
].l;

114 
a
=
e
[
i
].
f
,
b
Û[i].
t
;

119 
	}
}

121 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
<b.l; 
	}
}

123 
	$maö
()

125 
l
,
a
,
b
,
ªt
;

126 
	`sˇnf
("%d",&
n
)!=
EOF
)

128 
	`mem£t
(
v
,0,(v));

129 
uf
.
	`öô
();

130 
°
.
	`˛ór
();

131 
mp
.
	`˛ór
();

132 
ç
=
ªt
=
ë
=
t›
=0;

133 
i
=0; i<
N
; i++)

134 
li°
[
i
]=-1;

135 
i
=0; i<
n
; i++)

137 
cö
>>
ß
>>
sb
>>
l
;

138 if(
°
.
	`cou¡
(
ß
)==0)

140 
°
.
	`ö£π
(
ß
);

141 
a
=
ç
;

142 
mp
[
ß
]=
ç
++;

145 
a
=
mp
[
ß
];

146 if(
°
.
	`cou¡
(
sb
)==0)

148 
°
.
	`ö£π
(
sb
);

149 
b
=
ç
;

150 
mp
[
sb
]=
ç
++;

153 
b
=
mp
[
sb
];

154 
E
[
i
].
f
=
a
,E[i].
t
=
b
,E[i].
l
=l;

156 
pk
=
mp
[
	`°rög
("Park")];

157 
	`s‹t
(
E
,E+
n
,
cmp
);

158 
i
=0; i<
n
; i++)

160 
a
=
E
[
i
].
f
,
b
=E[i].
t
;

161 if(
a
==
pk
||
b
==pk)

163 
P
[
ë
].
f
=
pk
;

164 if(
a
==
pk
)

165 
P
[
ë
].
t
=
b
;

167 
P
[
ë
].
t
=
a
;

168 
P
[
ë
++].
l
=
E
[
i
].l;

171 if(
uf
.
	`is‰õnd
(
a
,
b
)) ;

172 
uf
.
	`£t‰õnd
(
a
,
b
);

173 
	`ö£π
(
a
,
b
,
E
[
i
].
l
);

174 
	`ö£π
(
b
,
a
,
E
[
i
].
l
);

175 
ªt
+=
E
[
i
].
l
;

177 
cö
>>
lim
;

178 
	`s‹t
(
P
,P+
ë
,
cmp
);

179 
˙t
=0;

180 
i
=0; i<
ë
; i++)

182 
a
=
P
[
i
].
f
,
b
=P[i].
t
;

183 if(
uf
.
	`is‰õnd
(
a
,
b
)) ;

184 
uf
.
	`£t‰õnd
(
a
,
b
);

185 
	`ö£π
(
a
,
b
,
P
[
i
].
l
);

186 
	`ö£π
(
b
,
a
,
P
[
i
].
l
);

187 
ªt
+=
P
[
i
].
l
;

188 
v
[
i
]=1;

189 
˙t
++;

191 
mi
=
öf
,
Œ
,
Ø
,
bb
,
id
,
èg
;

192 
˙t
<
lim
)

194 
mi
=
öf
;

195 
i
=0; i<
ë
; i++)

197 if(
v
[
i
]) ;

198 
èg
=0;

199 
Œ
=
P
[
i
].
l
;

200 
	`dfs
(
P
[
i
].
t
,P[i].
f
,P[i].f,
a
,
b
,
Œ
,
èg
);

201 if(
mi
>
P
[
i
].
l
-
Œ
)

203 
mi
=
P
[
i
].
l
-
Œ
;

204 
Ø
=
a
,
bb
=
b
;

205 
id
=
i
;

208 if(
mi
>=0)

210 
ªt
+=
mi
;

211 
	`dñ
(
Ø
,
bb
);

212 
	`dñ
(
bb
,
Ø
);

213 
	`ö£π
(
P
[
id
].
f
,P[id].
t
,P[id].
l
);

214 
	`ö£π
(
P
[
id
].
t
,P[id].
f
,P[id].
l
);

215 
v
[
id
]=1;

216 
˙t
++;

218 
	`¥ötf
("TŸÆ mûe†driví: %d\n",
ªt
);

221 
	}
}

	@problems/poj/poj_1644.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 1001

	)

5 
	#X
 500

	)

6 
	tLL
;

8 
	gªt
[55][
N
];

9 
	gös
[
N
];

10 
	gs
[
N
];

12 
	$gë
()

14 
l
=
	`°æí
(
s
),
ªt
=0,
èg
;

15 if(
s
[0]=='0')

17 if(
s
[0]=='+')

18 
èg
=1;

20 
èg
=-1;

21 
i
=1; i<
l
; i++)

22 
ªt
*=10,ªt+=
s
[
i
]-'0';

23  
ªt
*
èg
;

24 
	}
}

26 
	$maö
()

28 
t
,
m
,
n
;

29 
	`sˇnf
("%d",&
t
);

30 ; 
t
--;)

32 
	`sˇnf
("%d%d",&
m
,&
n
);

33 
	`mem£t
(
ös
,0,(ins));

34 
	`mem£t
(
ªt
,0,(ret));

35 
i
=
X
+1; i<=X+
m
; i++)

37 
	`sˇnf
("%s",
s
);

38 if(
s
[0]=='L')

39 
ös
[
i
]=
öf
;

42 
ös
[
i
]=
	`gë
();

45 
ªt
[0][
X
]=1;

46 
i
=1; i<=
n
; i++)

48 
j
=0; j<
X
+
m
; j++)

50 if(
ªt
[
i
-1][
j
]>0)

52 if(
ös
[
j
+1]==
öf
)

53 
ªt
[
i
+1][
j
+1]+=2*ret[i-1][j];

55 
ªt
[
i
][
j
+1+
ös
[j+1]]+=ret[i-1][j];

56 if(
ös
[
j
+2]==
öf
)

57 
ªt
[
i
+1][
j
+2]+=2*ret[i-1][j];

59 
ªt
[
i
][
j
+2+
ös
[j+2]]+=ret[i-1][j];

62 
j
=
X
+
m
; j<
N
; j++)

63 if(
ªt
[
i
-1][
j
]>0)

64 
ªt
[
i
][
X
+
m
+1]+=2*ªt[i-1][
j
];

66 
r
=0;

67 
r
=
ªt
[
n
][
X
+
m
+1]/(1LL<<n);

68 if(
r
==0.5)

69 
	`¥ötf
("Push. %.4f\n",
r
);

70 if(
r
<0.5)

71 
	`¥ötf
("Bëágaö°. %.4f\n",
r
);

73 
	`¥ötf
("Bë f‹. %.4f\n",
r
);

76 
	}
}

	@problems/poj/poj_1655.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 20010

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
<<1];

7 
	gli°
[
N
],
	gt›
;

8 
	snode
{ 
	ms
,
	mmx
; }
	gno
[
N
];

10 
	$ö£π
(
f
,
t
)

12 
e
[
t›
].
f
=f,e[t›].
t
=t;

13 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

14 
	}
}

16 
	$dfs
(
now
,
p
,
n
)

18 
no
[
now
].
s
=1;

19 
no
[
now
].
mx
=0;

20 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

22 
to
=
e
[
i
].
t
;

23 if(
to
==
p
)

25 
	`dfs
(
to
,
now
,
n
);

26 
no
[
now
].
mx
=
	`max
“o[now].mx,no[
to
].
s
);

27 
no
[
now
].
s
+Úo[
to
].s;

29 
no
[
now
].
mx
=
	`max
“o[now].mx,
n
-no[now].
s
);

30 
	}
}

32 
	$maö
()

34 
ts
,
n
;

35 
	`sˇnf
("%d",&
ts
);

36 
ˇ
=1; ca<=
ts
; ca++)

38 
	`sˇnf
("%d",&
n
);

39 
t›
=0;

40 
i
=0; i<
n
; i++)

41 
li°
[
i
]=-1;

42 
i
=0; i<
n
-1; i++)

44 
x
,
y
;

45 
	`sˇnf
("%d%d",&
x
,&
y
);

46 
x
--,
y
--;

47 
	`ö£π
(
x
,
y
);

48 
	`ö£π
(
y
,
x
);

50 
	`dfs
(0,-1,
n
);

51 
ªt
=
N
,
id
;

52 
i
=0; i<
n
; i++)

53 if(
ªt
>
no
[
i
].
mx
)

54 
ªt
=
no
[
i
].
mx
,
id
=i+1;

55 
	`¥ötf
("%d %d\n",
id
,
ªt
);

58 
	}
}

	@problems/poj/poj_1664.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 13

	)

4 
	tLL
;

6 
LL
 
	gdp
[
N
][N][N];

8 
	$öô
()

10 
	`mem£t
(
dp
,0,(dp));

11 
i
=0; i<
N
; i++)

12 
dp
[1][
i
][i]=1;

13 
i
=0; i<
N
; i++)

14 
dp
[
i
][0][0]=1;

15 
i
=2; i<
N
; i++)

16 
j
=1; j<
N
; j++)

18 
k
=0; k<=
j
; k++)

19 
u
=0; u<=
k
; u++)

21 
dp
[
i
][
j
][
k
]+=dp[i-1][j-k][
u
];

24 
	}
}

26 
	$maö
()

28 
m
,
n
,
t
;

29 
	`öô
();

30 
	`sˇnf
("%d",&
t
);

31 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
,
t
--)

33 
LL
 
ªt
=0;

34 
i
=0; i<=
m
; i++)

35 
ªt
+=
dp
[
n
][
m
][
i
];

36 
	`¥ötf
("%Œd\n",
ªt
);

39 
	}
}

	@problems/poj/poj_1684_DDL_string.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	svÆue
{ 
	mv
,
	mt
; }
	gvÆ
[200];

31 
	gp
[22][
N
],
	gtmp
[10];

32 
	gs
[5][10]={"DCL","GOTO","INC","DEC","END"};

34 
ölöe
 
	$uµî
(
x
)

36 if(
x
>='a'&&x<='z')

37  
x
+'A'-'a';

38  
x
;

39 
	}
}

41 
ölöe
 
	$is_Àâî
(
x
)

43  ('A'<=
x
&&x<='Z')||('a'<=x&&x<='z');

44 
	}
}

46 
ölöe
 
	$is_numbî
(
x
)

48  '0'<=
x
&&x<='9';

49 
	}
}

51 
	$equa_c
(
x
,
y
)

53  
	`uµî
(
x
)==uµî(
y
);

54 
	}
}

56 
	$equa
(
x
[],
y
[])

58 
lx
=
	`°æí
(
x
),
ly
=°æí(
y
);

59 if(
lx
!=
ly
)  0;

60 
i
=0; i<
lx
; i++)

61 if(!
	`equa_c
(
x
[
i
],
y
[i]))

64 
	}
}

66 
	$gë_köd
(
tmp
[])

68 
i
;

69 
i
=0; i<5; i++)

71 if(
	`equa
(
tmp
,
s
[
i
]))

72  
i
;

75 
	}
}

77 
	$sﬁve0
(
id
,
i
)

79 
x
=
p
[
id
][
i
];

80 if(
vÆ
[
x
].
t
!=0)

82 
vÆ
[
x
].
t
=0;

83 
vÆ
[
x
].
v
=0;

86 
	`¥ötf
("%d 1\n",
id
+1);

87 
	}
}

89 
	$sﬁve1
(
id
,
i
,
l
)

91 
œb
=0;

92 
x
;

93 if(
	`is_Àâî
(
p
[
id
][
i
]))

95 
x
=
p
[
id
][
i
];

96 
i
++; i<
l
&&
p
[
id
][i]==' '; i++);

97 ; 
i
<
l
&&
	`is_numbî
(
p
[
id
][i]); i++)

98 
œb
*=10,œb+=
p
[
id
][
i
]-'0';

99 if(
vÆ
[
x
].
v
>0&&vÆ[x].
t
>=0)

101 
vÆ
[
x
].
t
++;

102  
œb
-1;

104 if(
vÆ
[
x
].
t
<0)

106 
	`¥ötf
("%d 2\n",
id
+1);

108  
id
+1;

112 ; 
i
<
l
&&
	`is_numbî
(
p
[
id
][i]); i++)

113 
œb
*=10,œb+=
p
[
id
][
i
]-'0';

114  
œb
-1;

116 
	}
}

118 
	$sﬁve2
(
id
,
i
)

120 
x
=
p
[
id
][
i
];

121 if(
vÆ
[
x
].
t
<0)

122 
	`¥ötf
("%d 2\n",
id
+1);

124 
vÆ
[
x
].
v
++,vÆ[x].
t
++;

125 
	}
}

127 
	$sﬁve3
(
id
,
i
)

129 
x
=
p
[
id
][
i
];

130 if(
vÆ
[
x
].
t
<0)

131 
	`¥ötf
("%d 2\n",
id
+1);

133 
vÆ
[
x
].
v
--,vÆ[x].
t
++;

134 
	}
}

136 
	$sﬁve5
(
id
,
i
,
l
,
x
)

138 
vv
=0;

139 ; 
i
<
l
&&(!
	`is_numbî
(
p
[
id
][i])); i++);

140 ; 
i
<
l
&&
	`is_numbî
(
p
[
id
][i]); i++)

141 
vv
*=10,vv+=
p
[
id
][
i
]-'0';

142 if(
vÆ
[
x
].
t
<0)

143 
	`¥ötf
("%d 2\n",
id
+1);

145 
vÆ
[
x
].
v
=
vv
,vÆ[x].
t
++;

146 
	}
}

148 
	$exe
(
id
)

150 
l
=
	`°æí
(
p
[
id
]),
köd
,
i
,
nx
,
j
;

151 
	`mem£t
(
tmp
,0,(tmp));

152 
i
=0; i<
l
&&
p
[
id
][i]==' '; i++);

153 
j
=0; 
i
<
l
&&
p
[
id
][i]!=' '; i++)

154 
tmp
[
j
++]=
p
[
id
][
i
];

155 
tmp
[
j
]='\0';

157 
i
++; i<
l
&&
p
[
id
][i]==' '; i++);

158 
köd
=
	`gë_köd
(
tmp
);

160 
köd
)

163 
	`sﬁve0
(
id
,
i
);

164 
	`exe
(
id
+1);

167 
nx
=
	`sﬁve1
(
id
,
i
,
l
);

168 
	`exe
(
nx
);

171 
	`sﬁve2
(
id
,
i
);

172 
	`exe
(
id
+1);

175 
	`sﬁve3
(
id
,
i
);

176 
	`exe
(
id
+1);

182 
	`sﬁve5
(
id
,
i
,
l
,
tmp
[0]);

183 
	`exe
(
id
+1);

186 
	}
}

188 
	$maö
()

190 
ˇ
,
T
,
n
;

191 
	`sˇnf
("%d",&
T
);

192 
ˇ
=1; ca<=
T
; ca++)

194 
i
=0; i<200; i++)

195 
vÆ
[
i
].
v
=0,vÆ[i].
t
=-1;

196 
	`¥ötf
("%d\n",
ˇ
);

197 
	`sˇnf
("%d",&
n
);

198 
	`gëch¨
();

199 
i
=0; i<
n
; i++)

201 
	`gës
(
p
[
i
]);

203 
	`exe
(0);

206 
	}
}

	@problems/poj/poj_1690.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<°rög
>

4 
	~<io°ªam
>

5 
	#N
 1001

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gs
[
N
];

10 
°rög
 
	$dfs
(
l
,
r
)

12 if(
l
>
r
)

14 
°rög
 
ªt
;

15 if(
l
==
r
)

17 
ªt
+=
s
[
l
];

18  
ªt
;

20 
i
,
t
=0,
Œ
,
º
,
fh
=0;

21 
i
=
l
; i<=
r
; i++)

23 if(
s
[
i
]!='(')

24 
ªt
+=
s
[
i
];

28 if(
i
>
r
Ë 
ªt
;

29 
Œ
=
i
;

30 ; 
i
<=
r
; i++)

32 if(
s
[
i
]=='(')

33 
t
--;

34 if(
s
[
i
]==')')

35 
t
++;

36 if(
s
[
i
]=='+'||s[i]=='-')

37 
fh
++;

38 if(
t
==0)

41 
º
=
i
;

42 if(
Œ
==
l
||
s
[Œ-1]=='+'||
fh
==0)

43  
ªt
+
	`dfs
(
Œ
+1,
º
-1)+dfs‘r+1,
r
);

45  
ªt
+"("+
	`dfs
(
Œ
+1,
º
-1)+")"+dfs‘r+1,
r
);

46 
	}
}

48 
	$maö
()

50 
t
;

51 
	`sˇnf
("%d",&
t
);

52 
	`gëch¨
();

53 ; 
t
--;)

55 
	`gës
(
s
);

56 
l
=
	`°æí
(
s
),
∆
=0;

57 
i
=0; i<
l
; i++)

59 if(
s
[
i
]==' ')

62 
s
[
∆
++]=s[
i
];

64 
l
=
∆
;

65 
s
[
l
]='\0';

66 
cout
<<
	`dfs
(0,
l
-1)<<
ídl
;

69 
	}
}

	@problems/poj/poj_1691_Painting_A_Board_dfs.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 22

	)

4 
	#MAXS
 4444

	)

5 
	#X
 32768

	)

7 
	sª˘™gÀ


9 
	mx1
,
	my1
,
	mx2
,
	my2
,
	mc
;

10 }
	gªc
[
MAXN
];

12 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
MAXS
];

14 
	gt›
,
	gli°
[
MAXN
],
	gcﬁ
[MAXN][MAXN],
	gdp
[MAXN][
X
],
	gªt
,
	gn
;

16 
	$ö£π
(
f
,
t
)

18 
e
[
t›
].
f
=f,e[t›].
t
=t;

19 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

20 
	}
}

22 
	$up_bﬂrd
(
i
,
j
)

24 if(
ªc
[
j
].
x2
!Ùec[
i
].
x1
)

26 if(
ªc
[
j
].
y1
>Ùec[
i
].y1&&ªc[j].y1<ªc[i].
y2
)

28 if(
ªc
[
j
].
y2
<Ùec[
i
].y2&&ªc[j].y2>ªc[i].
y1
)

31 
	}
}

33 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

35 
	$dfs
(
˙t
,
s
)

37 
i
,
j
,
t
,
c
,
k
,
jj
,
no
[15],
ç
,
nc
;

39 if(
dp
[
˙t
][
s
]>0)  ;

40 
dp
[
˙t
][
s
]=1;

41 if(
˙t
>=
ªt
)  ;

42 if(
s
==(
	`B
(
n
)-1))

44 
ªt
=
˙t
;

48 
i
=0; i<
n
; i++)

50 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

52 
t
=
e
[
j
].t;

53 if((
s
&
	`B
(
t
))==0)

56 if(
j
==-1&&(
s
&
	`B
(
i
))==0)

58 
s
^=
	`B
(
i
);

59 
c
=
ªc
[
i
].c;

60 
ç
=0,
k
=1; k<=
cﬁ
[
c
][0]; k++)

62 
nc
=
cﬁ
[
c
][
k
];

63 if(
nc
==
i
) ;

64 
jj
=
li°
[
nc
]; jj!=-1; jj=
e
[jj].
n
)

67 if((
s
&
	`B
(
e
[
jj
].
t
))==0)

70 if((
jj
==-1)&&(
s
&
	`B
(
nc
))==0)

72 
s
^=
	`B
(
nc
),
no
[
ç
++]=nc;

75 
	`dfs
(
˙t
+1,
s
);

76 
jj
=0; jj<
ç
; jj++)

77 
s
^=
	`B
(
no
[
jj
]);

78 
s
^=
	`B
(
i
);

82 
	}
}

84 
	$maö
()

86 
t
,
˘›
,
i
,
j
;

87 
	`sˇnf
("%d",&
t
);

88 ; 
t
--;)

90 
	`sˇnf
("%d",&
n
);

91 
	`mem£t
(
cﬁ
,0,(col));

92 
	`mem£t
(
dp
,-1,(dp));

93 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

94 
i
=0; i<
n
; i++)

96 
	`sˇnf
("%d%d%d%d%d",&
ªc
[
i
].
x1
,&ªc[i].
y1
,&ªc[i].
x2
,&ªc[i].
y2
,&ªc[i].
c
);

97 
˘›
=++
cﬁ
[
ªc
[
i
].
c
][0];

98 
cﬁ
[
ªc
[
i
].
c
][
˘›
]=i;

100 
i
=0; i<
n
; i++)

102 if(
i
==
j
) ;

103 
j
=0; j<
n
; j++)

104 if(
	`up_bﬂrd
(
i
,
j
))

106 
	`ö£π
(
i
,
j
);

114 
ªt
=
MAXN
;

115 
	`dfs
(0,0);

116 
	`¥ötf
("%d\n",
ªt
);

119 
	}
}

	@problems/poj/poj_1695.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 35

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gdp
[
N
][N][N],
	gm©
[N][N];

10 
	$dfs
(
now
,
p1
,
p2
,
n
)

12 if(
dp
[
now
][
p1
][
p2
]>=0)

13  
dp
[
now
][
p1
][
p2
];

14 if(
now
==
n
-1)

15  
dp
[
now
][
p1
][
p2
]=0;

16 
ªt
=
öf
;

17 
ªt
=
	`mö
‘ë,
	`dfs
(
now
+1,
p1
,
p2
,
n
)+
m©
[now][now+1]);

18 
ªt
=
	`mö
‘ë,
	`dfs
(
now
+1,now,
p2
,
n
)+
m©
[
p1
][now+1]);

19 
ªt
=
	`mö
‘ë,
	`dfs
(
now
+1,now,
p1
,
n
)+
m©
[
p2
][now+1]);

20  
dp
[
now
][
p1
][
p2
]=
ªt
;

21 
	}
}

23 
	$maö
()

25 
ts
,
n
;

26 
	`sˇnf
("%d",&
ts
);

27 
ˇ
=1; ca<=
ts
; ca++)

29 
	`sˇnf
("%d",&
n
);

30 
	`mem£t
(
dp
,-1,(dp));

31 
i
=0; i<
n
; i++)

33 
j
=
i
+1; j<
n
; j++)

35 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

36 
m©
[
j
][
i
]=mat[i][j];

39 
	`¥ötf
("%d\n",
	`dfs
(0,0,0,
n
));

42 
	}
}

	@problems/poj/poj_1699.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 11

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	ml
; }
	ge
[1001];

9 
	gdp
[
N
][1<<N],
	gt›
,
	gli°
[N],
	gÀn
[N],
	gn
;

10 
	gs
[
N
][44];

12 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

14 
	$ö£π
(
f
,
t
,
l
)

16 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

17 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

18 
	}
}

20 
	$ok
(
i
,
x
,
y
)

22 
j
=
i
; j<
Àn
[
x
]&&j-i<Àn[
y
]; j++)

23 if(
s
[
x
][
j
]!=s[
y
][j-
i
])

26 
	}
}

28 
	$ˇl
(
x
,
y
)

30 
i
=
	`max
(
Àn
[
x
]-Àn[
y
],0); i<len[x]; i++)

31 if(
	`ok
(
i
,
x
,
y
))

32  
	`max
(
Àn
[
y
]-÷í[
x
]-
i
),0);

33  
Àn
[
y
];

34 
	}
}

36 
	$dfs
(
now
,
°
)

38 
ªt
=
öf
;

39 if(
dp
[
now
][
°
]>=0)

40  
dp
[
now
][
°
];

41 if(
°
==
	`B
(
n
+1)-1)

42  
dp
[
now
][
°
]=0;

43 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

45 
to
=
e
[
i
].
t
;

46 if(
°
&
	`B
(
to
))

48 
ªt
=
	`mö
‘ë,
	`dfs
(
to
,
°
+
	`B
—o))+
e
[
i
].
l
);

50  
dp
[
now
][
°
]=
ªt
;

51 
	}
}

53 
	$maö
()

55 
t
;

56 
	`sˇnf
("%d",&
t
);

57 ; 
t
--;)

59 
	`sˇnf
("%d",&
n
);

60 
t›
=0;

61 
i
=0; i<=
n
; i++)

62 
li°
[
i
]=-1;

63 
i
=1; i<=
n
; i++)

65 
	`sˇnf
("%s",
s
[
i
]);

66 
Àn
[
i
]=
	`°æí
(
s
[i]);

68 
i
=1; i<=
n
; i++)

70 
	`ö£π
(0,
i
,
Àn
[i]);

71 
	`ö£π
(
i
,0,
Àn
[i]);

73 
i
=1; i<=
n
; i++)

75 
j
=1; j<=
n
; j++)

77 if(
i
==
j
)

79 
	`ö£π
(
i
,
j
,
	`ˇl
(i,j));

82 
	`mem£t
(
dp
,-1,(dp));

83 
	`¥ötf
("%d\n",
	`dfs
(0,1));

86 
	}
}

	@problems/poj/poj_1724_ROADS_dfs.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#öf
 100000000

	)

4 
	#MAXN
 110

	)

5 
	#MAXS
 11000

	)

7 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	ml
,
	mc
; }
	ge
[
MAXS
];

8 
	snode
{ 
	mv
,
	ml
,
	mc
; }
	gh_t
;

10 
	gli°
[
MAXN
],
	gt›
,
	gv
[MAXN],
	gK
,
	gªt
;

12 
	$ö£π
(
f
,
t
,
l
,
c
)

14 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
ˆ,e[t›].
c
=c;

15 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

16 
	}
}

18 
	$dfs
(
now
,
n
,
„e
,
Àn
)

20 
i
;

21 if(
„e
>
K
) ;

22 if(
Àn
>=
ªt
) ;

23 if(
now
==
n
-1)

25 
ªt
=
Àn
;

28 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

29 if(!
v
[
e
[
i
].
t
])

31 
v
[
e
[
i
].
t
]=1;

32 
	`dfs
(
e
[
i
].
t
,
n
,
„e
+e[i].
c
,
Àn
+e[i].
l
);

33 
v
[
e
[
i
].
t
]=0;

35 
	}
}

37 
	$maö
()

39 
n
,
m
,
i
,
j
,
x
,
y
,
l
,
c
;

40 
	`sˇnf
("%d",&
K
)!=
EOF
)

42 
	`mem£t
(
v
,0,(v));

43 
	`sˇnf
("%d%d",&
n
,&
m
);

44 
i
=0; i<
n
; i++Ë
li°
[i]=-1;

45 
t›
=
i
=0; i<
m
; i++)

47 
	`sˇnf
("%d%d%d%d",&
x
,&
y
,&
l
,&
c
);

48 
	`ö£π
(
x
-1,
y
-1,
l
,
c
);

50 
ªt
=
öf
;

51 
	`dfs
(0,
n
,0,0);

52 if(
ªt
<
öf
)

53 
	`¥ötf
("%d\n",
ªt
);

55 
	`puts
("-1");

58 
	}
}

	@problems/poj/poj_1733.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	#N
 20001

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	suföd


8 
	mp
[
N
],
	msum
[N];

9 
öô
()

11 
	mi
=0; i<
	mN
; i++)

12 
	mp
[
i
]=i,
	msum
[i]=0;

14 
∑
(
x
)

16 if(
	mx
==
p
[
x
])

17  
x
;

18 
	mªt
=
∑
(
p
[
x
]);

19 
	msum
[
x
]=(
sum
[x]+sum[
p
[x]])&1;

20 
	mp
[
x
]=
ªt
;

21  
	mªt
;

23 }
	guf
;

25 
	gm≠
<,> 
	gmp
;

26 
	gt›
;

28 
	$maö
()

30 
l
,
n
;

31 
	`sˇnf
("%d%d",&
l
,&
n
);

32 
t›
=0;

33 
mp
.
	`˛ór
();

34 
uf
.
	`öô
();

35 
ªt
=-1;

36 
s
[10];

37 
i
=0; i<
n
; i++)

39 
x
,
y
,
xx
,
yy
,
px
,
py
,
z
;

40 
	`sˇnf
("%d%d%s",&
x
,&
y
,
s
);

41 if(
ªt
>=0) ;

42 
x
--;

43 if(
s
[0]=='o')

44 
z
=1;

46 
z
=0;

47 if(
mp
.
	`föd
(
x
)==mp.
	`íd
())

48 
mp
[
x
]=
t›
++;

49 if(
mp
.
	`föd
(
y
)==mp.
	`íd
())

50 
mp
[
y
]=
t›
++;

51 
xx
=
mp
[
x
],
yy
=mp[
y
];

52 
px
=
uf
.
	`∑
(
xx
);

53 
py
=
uf
.
	`∑
(
yy
);

54 if(
px
==
py
)

56 if(
z
!=((
uf
.
sum
[
xx
]+uf.sum[
yy
])&1))

57 
ªt
=
i
;

61 
uf
.
p
[
px
]=
py
;

62 
uf
.
sum
[
px
]=(uf.sum[
xx
]+uf.sum[
yy
]+
z
)&1;

65 if(
ªt
<0Ëªt=
n
;

66 
	`¥ötf
("%d\n",
ªt
);

68 
	}
}

	@problems/poj/poj_1737_RTC1.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	#DIGIT
 4

	)

35 
	#DEPTH
 10000

	)

36 
	#MAXN
 501

	)

37 
	tbig_num
[
MAXN
+1];

38 
big_num
 
	gcomb
[51][51],
	gf
[51],
	gdp
[51],
	gbö
[1250];

40 
	$wrôe
(c⁄° 
big_num
 
a
)

42 
i
,
j
;

43 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

44 
j
=
DEPTH
/10; j; j/=10)

45 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

46 
	}
}

48 
	$add
(
big_num
 
c
,big_num 
a
,big_num 
b
)

50 
i
;

51 
i
=0; i<=
a
[0]; i++)

52 
c
[
i
]=
a
[i];

53 
i
=1; i<=
b
[0]; i++)

54 if((
c
[
i
]+=
b
[i])>=
DEPTH
)

55 
c
[
i
]-=
DEPTH
,c[i+1]++;

56 if(
b
[0]>=
c
[0]) c[0]=b[0];

57 ; 
c
[
i
]>=
DEPTH
 && i<=c[0]; c[i]-=DEPTH,i++,c[i]++ );

58 
c
[0]+=(c[c[0]+1]>0);

59 
	}
}

61 
	$mul
(
big_num
 
c
,big_num 
a
,big_num 
b
)

63 
i
,
j
;

64 
	`mem£t
(
c
,0,()*(
MAXN
+1));

65 
c
[0]=
a
[0]+
b
[0]-1,
i
=1; i<=a[0]; i++)

66 
j
=1;j<=
b
[0];j++)

67 if((
c
[
i
+
j
-1]+=
a
[i]*
b
[j])>=
DEPTH
)

68 
c
[
i
+
j
]+=c[i+j-1]/
DEPTH
,c[i+j-1]%=DEPTH;

69 
c
[0]+=(c[c[0]+1]>0); !c[c[0]]&&c[0]>1; c[0]--);

70 
	}
}

72 
	$sub
(
big_num
 
a
,big_num 
b
)

74 
i
;

75 
i
=1; i<=
b
[0]; i++)

76 if((
a
[
i
]-=
b
[i])<0)

77 
a
[
i
+1]--,a[i]+=
DEPTH
;

78 ; 
a
[
i
]<0;á[i]+=
DEPTH
,i++,a[i]--);

79 ; !
a
[a[0]]&&a[0]>1;á[0]--);

80 
	}
}

82 
	$give
(
big_num
 
a
,
x
)

84 
	`mem£t
(
a
,0,(a));

85 
a
[0]=1,a[1]=
x
;

86 
	}
}

88 
	$give
(
big_num
 
a
,big_num 
b
)

90 
i
=0; i<=
b
[0]; i++)

91 
a
[
i
]=
b
[i];

92 
	}
}

94 
	$öô
()

96 
big_num
 
tmp
,
tmp2
;

97 
	`give
(
comb
[0][0],1);

98 
	`give
(
comb
[1][0],1);

99 
	`give
(
comb
[1][1],1);

100 
i
=2; i<51; i++)

102 
	`give
(
comb
[
i
][0],1);

103 
j
=1; j<
i
; j++)

105 
	`add
(
comb
[
i
][
j
],comb[i-1][j-1],comb[i-1][j]);

107 
	`give
(
comb
[
i
][i],1);

109 
	`give
(
bö
[0],1);

110 
	`give
(
tmp
,2);

111 
i
=1; i<1250; i++)

112 
	`mul
(
bö
[
i
],bö[i-1],
tmp
);

113 
	`give
(
dp
[1],1);

114 
i
=2; i<51; i++)

116 
	`give
(
dp
[
i
],
bö
[i*(i-1)/2]);

117 
j
=0; j<
i
-1; j++)

119 
	`mul
(
tmp
,
comb
[
i
-1][
j
],
dp
[j+1]);

120 
	`mul
(
tmp2
,
tmp
,
bö
[(
i
-
j
-1)*(i-j-2)/2]);

121 
	`sub
(
dp
[
i
],
tmp2
);

124 
	}
}

126 
	$maö
()

128 
n
;

129 
	`öô
();

130 
	`sˇnf
("%d",&
n
)!=
EOF
)

132 if(
n
==0) ;

133 
	`wrôe
(
dp
[
n
]);

134 
	`puts
("");

137 
	}
}

	@problems/poj/poj_1740.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 111

	)

5 
	gvis
[
N
];

7 
	$maö
()

9 
n
,
ªt
,
x
;

10 
	`sˇnf
("%d",&
n
)!=
EOF
)

12 if(
n
==0)

14 
	`mem£t
(
vis
,0,(vis));

15 
i
=0; i<
n
; i++)

17 
	`sˇnf
("%d",&
x
);

18 
vis
[
x
]++;

20 
ªt
=0;

21 
i
=0; i<
N
; i++)

22 if(
vis
[
i
]&1)

23 
ªt
=1;

24 
	`¥ötf
("%d\n",
ªt
);

27 
	}
}

	@problems/poj/poj_1742.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 100011

	)

4 
	#M
 1011

	)

6 
	gq
[
N
],
	gc
[
M
],
	gw
[M];

7 
boﬁ
 
	gdp
[
N
];

9 
	$maö
()

11 
n
,
m
;

12 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

14 if(
n
==0&&
m
==0)

16 
i
=1; i<=
n
; i++)

17 
	`sˇnf
("%d",&
w
[
i
]);

18 
i
=1; i<=
n
; i++)

19 
	`sˇnf
("%d",&
c
[
i
]);

20 
l
,
r
,
now
,
mx
;

21 
i
=0; i<=
m
; i++)

22 
dp
[
i
]=0;

23 
dp
[0]=1;

24 
i
=1; i<=
n
; i++)

26 
mx
=
w
[
i
]*
c
[i];

27 if(
c
[
i
]==1)

29 
j
=
m
-
w
[
i
]; j>=0; j--)

30 if(
dp
[
j
])

31 
dp
[
j
+
w
[
i
]]=1;

33 if(
mx
<
m
)

35 
j
=0; j<
w
[
i
]; j++)

37 
l
=0,
r
=-1;

38 
k
=
j
; k<=
m
; k+=
w
[
i
])

40 if(
r
>=
l
&&
k
-
q
[l]>
mx
)

41 
l
++;

42 if(
dp
[
k
])

43 
q
[++
r
]=
k
;

44 if(
r
>=
l
)

45 
dp
[
k
]=1;

51 
j
=0; j+
w
[
i
]<=
m
; j++)

52 if(
dp
[
j
])

53 
dp
[
j
+
w
[
i
]]=1;

56 
ªt
=0;

57 
i
=1; i<=
m
; i++)

58 if(
dp
[
i
])

59 
ªt
++;

60 
	`¥ötf
("%d\n",
ªt
);

63 
	}
}

	@problems/poj/poj_1743_suffix_array_2fen.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 20010

	)

5 
	#X
 200

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gs
[
N
],
	gß
[N],
	gsb
[N],
	grk
[N],
	g˙t
[N],
	ght
[N];

11 
	$ødix_s‹t
(
m
,
n
,*
x
,*
y
,
l
)

13 
t›
=0;

14 
i
=
n
-
l
; i<n; i++)

15 
y
[
t›
++]=
i
;

16 
i
=0; i<
n
; i++)

17 if(
ß
[
i
]>=
l
)

18 
y
[
t›
++]=
ß
[
i
]-
l
;

19 
	`mem£t
(
˙t
,0,(cnt));

20 
i
=0; i<
n
; i++)

21 
˙t
[
x
[
i
]]++;

22 
i
=1; i<
m
; i++)

23 
˙t
[
i
]+=cnt[i-1];

24 
i
=
n
-1; i>=0; i--)

25 
ß
[--
˙t
[
x
[
y
[
i
]]]]=y[i];

26 
	}
}

28 
	$equÆ
(
i
,
j
,*
y
,
l
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

30 
	$da
(
m
,
n
)

32 *
x
=
rk
,*
y
=
sb
,*
t
;

33 
i
=0; i<
n
; i++)

34 
ß
[
i
]=i,
rk
[i]=
s
[i];

35 
	`ødix_s‹t
(
m
,
n
,
x
,
y
,0);

36 
k
,
l
;

37 
k
=
l
=1; k<
n
;Ü<<=1)

39 
	`ødix_s‹t
(
m
,
n
,
x
,
y
,
l
);

40 
t
=
x
,x=
y
,y=t;

41 
x
[
ß
[0]]=0,
k
=1;

42 
i
=1; i<
n
; i++)

43 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
y
,
l
)?
k
-1:k++;

44 
m
=
k
;

46 
i
=0; i<
n
; i++)

47 
rk
[
i
]=
x
[i];

48 
k
=0;

49 
i
=0; i<
n
-1; i++)

51 
k
>0?k--:k=0;

52 
j
=
ß
[
rk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

53 
ht
[
rk
[
i
]]=
k
;

55 
ht
[0]=0;

56 
	}
}

58 
	$ok
(
l
,
n
)

60 
j
;

61 
i
=1; i<
n
; i++)

63 if(
ht
[
i
]<
l
)

65 
j
=
i
+1; j<
n
; j++)

66 if(
ht
[
j
]<
l
)

68 
mx
=0,
mi
=
N
;

69 
k
=
i
-1; k<
j
; k++)

71 
mx
=
	`max
(mx,
ß
[
k
]);

72 
mi
=
	`mö
(mi,
ß
[
k
]);

74 if(
mx
-
mi
>=
l
)

76 
i
=
j
-1;

79 
	}
}

81 
	$sﬁve
(
n
)

83 
l
=4,
r
=
n
,
mid
;

84 ; 
l
<=
r
;)

86 
mid
=(
l
+
r
)>>1;

87 if(
	`ok
(
mid
,
n
))

88 
l
=
mid
+1;

90 
r
=
mid
-1;

92 if(
r
<4)

93 
	`puts
("0");

95 
	`¥ötf
("%d\n",
r
+1);

96 
	}
}

98 
	$maö
()

100 
n
;

101 
	`sˇnf
("%d",&
n
)+1,n)

103 
i
=0; i<
n
; i++)

104 
	`sˇnf
("%d",&
s
[
i
]);

105 
i
=0; i<
n
-1; i++)

106 
s
[
i
]=s[i+1]-s[i];

107 
mi
=
N
;

108 
i
=0; i<
n
-1; i++)

109 
mi
=
	`mö
(
s
[
i
],mi);

110 
i
=0; i<
n
-1; i++)

112 
s
[
i
]-=
mi
;

113 
s
[
i
]++;

115 
s
[
n
-1]=0;

116 
	`da
(
X
,
n
);

117 
	`sﬁve
(
n
);

120 
	}
}

	@problems/poj/poj_1743_suffix_array_stack.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#X
 200

	)

5 
	#N
 20010

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	mmi
,
	mmx
,
	mh
;

10 
node
(){;}

11 
node
(
i
,
x
,
hh
){ 
	mmi
=i,
	mmx
=x,
	mh
=hh; }

12 }
	g°
[
N
];

13 
	gs
[
N
],
	gß
[N],
	gsb
[N],
	grk
[N],
	ght
[N],
	g˙t
[N];

15 
	$equÆ
(
i
,
j
,*
y
,
l
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

17 
	$ødix_s‹t
(
m
,
n
,*
x
,*
y
,
l
)

19 
t›
=0;

20 
i
=
n
-
l
; i<n; i++)

21 
y
[
t›
++]=
i
;

22 
i
=0; i<
n
; i++)

23 if(
ß
[
i
]>=
l
)

24 
y
[
t›
++]=
ß
[
i
]-
l
;

25 
	`mem£t
(
˙t
,0,(cnt));

26 
i
=0; i<
n
; i++)

27 
˙t
[
x
[
i
]]++;

28 
i
=1; i<
m
; i++)

29 
˙t
[
i
]+=cnt[i-1];

30 
i
=
n
-1; i>=0; i--)

31 
ß
[--
˙t
[
x
[
y
[
i
]]]]=y[i];

32 
	}
}

34 
	$da
(
m
,
n
)

36 *
x
=
rk
,*
y
=
sb
,*
t
;

37 
i
=0; i<
n
; i++)

38 
rk
[
i
]=
s
[i],
ß
[i]=i;

39 
	`ødix_s‹t
(
m
,
n
,
x
,
y
,0);

40 
l
,
k
;

41 
l
=
k
=1; k<
n
;Ü<<=1)

43 
	`ødix_s‹t
(
m
,
n
,
x
,
y
,
l
);

44 
t
=
x
,x=
y
,y=t;

45 
x
[
ß
[0]]=0,
k
=1;

46 
i
=1; i<
n
; i++)

47 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
y
,
l
)?
k
-1:k++;

48 
m
=
k
;

50 
i
=0; i<
n
; i++)

51 
rk
[
i
]=
x
[i];

52 
k
=0;

53 
i
=0; i<
n
-1; i++)

55 
k
>0?k--:k=0;

56 
j
=
ß
[
rk
[
i
]-1]; 
s
[j+
k
]==s[i+k]; k++);

57 
ht
[
rk
[
i
]]=
k
;

59 
ht
[0]=0;

60 
	}
}

62 
	$sﬁve
(
n
)

64 
t›
=-1,
ªt
=0;

65 
i
=1; i<
n
; i++)

67 if(
t›
>=0)

69 
mx
=
	`max
(
ß
[
i
],ß[i-1]),
mi
=
	`mö
(sa[i],sa[i-1]);

70 ; 
t›
>=0&&
ht
[
i
]<=
°
[t›].
h
; )

72 
a
=
°
[
t›
].
mx
,
b
=°[t›].
mi
;

73 
ªt
=
	`max
‘ë,
	`mö
(
°
[
t›
].
h
,
a
-
b
));

74 
mx
=
	`max
(
a
,mx),
mi
=
	`mö
(
b
,mi);

75 
t›
--;

76 if(
t›
>=0)

77 
°
[
t›
].
mx
=
	`max
(°[t›].mx,
a
),°[t›].
mi
=
	`mö
(
b
,st[top].mi);

79 
°
[++
t›
]=
	`node
(
mi
,
mx
,
ht
[
i
]);

81 
°
[++
t›
]=
	`node
(
	`mö
(
ß
[
i
],ß[i-1]),
	`max
(ß[i],ß[i-1]),
ht
[i]);

83 ; 
t›
>=0;)

85 
a
=
°
[
t›
].
mx
,
b
=°[t›].
mi
;

86 
ªt
=
	`max
‘ë,
	`mö
(
a
-
b
,
°
[
t›
].
h
));

87 
t›
--;

88 if(
t›
>=0)

89 
°
[
t›
].
mx
=
	`max
(°[t›].mx,
a
),°[t›].
mi
=
	`mö
(
b
,st[top].mi);

91 if(
ªt
<4)

92 
	`puts
("0");

94 
	`¥ötf
("%d\n",
ªt
+1);

95 
	}
}

97 
	$maö
()

99 
n
;

100 
	`sˇnf
("%d",&
n
)+1,n)

102 
i
=0; i<
n
; i++)

103 
	`sˇnf
("%d",&
s
[
i
]);

104 
i
=0; i<
n
-1; i++)

105 
s
[
i
]=s[i+1]-s[i];

106 
mi
=
N
;

107 
i
=0; i<
n
-1; i++)

108 
mi
=
	`mö
(mi,
s
[
i
]);

109 
i
=0; i<
n
-1; i++)

110 
s
[
i
]-=
mi
-1;

111 
s
[
n
-1]=0;

112 
	`da
(
X
,
n
);

113 
	`sﬁve
(
n
);

116 
	}
}

	@problems/poj/poj_1765_November_Rain_scanning_line.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

19 
	#N
 81000

	)

20 
	#M
 1000010

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

28 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

29 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

31 
	slöe
{ 
	mx1
,
	my1
,
	mx2
,
	my2
,
	mt
,
	mi
,
	mw
; 
	mk
; }
	g 
[
N
];

33 
	gco‹
[
N
<<1],
	g√xt
[N],
	gt›
,
	gq
[
M
],
	g˘›
,
	gö
[N],
	gªt
[N];

35 
	$cmp
(
löe
 
a
,löê
b
){ á.
x1
==b.x1?◊.
y1
==b.y1?a.
y2
<b.y2:a.y1<b.y1):a.x1<b.x1; 
	}
}

37 
	$lowî_equ
(
x
,
id
,
y
)

39 
h
=
 
[
id
].
k
*(
x
- [id].
x1
)+ [id].
y1
;

40  
h
<=
y
;

41 
	}
}

43 
	$add
(
x
,
id
)

45 
i
,
k
=-1;

46 
i
=
t›
-1; i>=0; i--)

47 if(
	`lowî_equ
(
x
,
q
[
i
],
 
[
id
].
y1
))

49 
k
=
i
;

52 
i
=
t›
; i>
k
+1; i--)

53 
q
[
i
]=q[i-1];

54 
q
[
k
+1]=
id
;

55 
t›
++;

56 
	}
}

58 
	$upd©e
(
x
)

60 
i
,
x1
,
x2
,
dñ
,
j
;

61 
i
=1; i<
t›
; i++)

63 
x1
=
 
[
q
[
i
]].x1,
x2
=ln[q[i]].x2;

64 
dñ
=
 
[
q
[
i
]].
y1
- [q[i]].
y2
;

65 if((
x1
==
x
&&
dñ
<0)||(
x2
==x&&del>0))

68 
√xt
[
q
[
i
]]=q[i-1];

69 
ö
[
q
[
i
-1]]++;

72 
j
=
i
=0; i<
t›
; i++)

74 if(
 
[
q
[
i
]].
x2
==
x
)

77 
q
[
j
++]=q[
i
];

79 
t›
=
j
;

80 
	}
}

82 
	$t›o_s‹t
(
n
)

84 
i
,
l
,
r
,
t
;

85 
l
=0,
r
=-1;

86 
i
=0; i<
n
; i++)

87 if(
ö
[
i
]==0)

88 
q
[++
r
]=
i
;

89 ; 
l
<=
r
; )

91 
t
=
q
[
l
++];

92 if(
√xt
[
t
]<0)

94 
 
[
√xt
[
t
]].
w
+=ln[t].w;

95 
ö
[
√xt
[
t
]]--;

96 if(
ö
[
√xt
[
t
]]==0)

97 
q
[++
r
]=
√xt
[
t
];

99 
i
=0; i<
n
; i++)

100 
ªt
[
 
[
i
].i]ˆn[i].
w
;

101 
	}
}

103 
	$maö
()

105 
n
,
i
,
j
,
¥e
;

106 
	`sˇnf
("%d\n",&
n
)!=
EOF
)

108 
	`mem£t
(
ö
,0,(in));

109 
	`mem£t
(
√xt
,-1,(next));

110 
	`mem£t
(
ªt
,0,(ret));

111 
˘›
=
i
=0; i<
n
; i++)

113 
	`sˇnf
("%d%d%d%d",&
 
[
i
].
x1
,& [i].
y1
,& [i].
x2
,& [i].
y2
);

114 
 
[
i
].
k
=(÷n[i].
y2
- [i].
y1
))/÷n[i].
x2
- [i].
x1
);

115 
 
[
i
].i=i, [i].
w
=0;

116 
co‹
[
˘›
++]=
 
[
i
].
x1
;

117 
co‹
[
˘›
++]=
 
[
i
].
x2
;

119 
	`s‹t
(
co‹
,co‹+
˘›
);

120 
	`s‹t
(
 
, +
n
,
cmp
);

121 
j
=0,
i
=1; i<
˘›
; i++)

123 if(
co‹
[
i
]==co‹[
j
]) ;

124 
co‹
[++
j
]=co‹[
i
];

126 
˘›
=
j
+1;

127 
t›
=
j
=
i
=0; i<
˘›
; i++)

129 if(
t›
>0)

130 
 
[
q
[
t›
-1]].
w
+=
co‹
[
i
]-
¥e
;

131 
¥e
=
co‹
[
i
];

132 ; 
 
[
j
].
x1
==
co‹
[
i
]&&j<
n
; j++)

133 
	`add
(
co‹
[
i
],
j
);

134 
	`upd©e
(
co‹
[
i
]);

147 
	`t›o_s‹t
(
n
);

153 
i
=0; i<
n
; i++)

154 
	`¥ötf
("%d\n",
ªt
[
i
]);

157 
	}
}

	@problems/poj/poj_1819_Disks_Geometry.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#ïs
 1e-8

	)

18 
	#N
 1010

	)

19 
	#M
 1000010

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

29 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

30 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

31 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

33 
	scú˛e
{ 
	mx
,
	my
; }
	gc
[
N
];

34 
	gt›
,
	gèg
[
N
];

36 
	$y0_cut
(
i
)

38  2*
c
[
i
].
y
;

39 
	}
}

41 
	$ègít
(
u
,
v
)

43 
b
=
c
[
u
].
y
+c[
v
].y,
a
=
	`Ábs
(c[u].y-c[v].y);

44  
c
[
u
].
x
+
	`sqπ
(
b
*b-
a
*a)+c[
v
].
y
;

45 
	}
}

47 
	$maö
()

49 
n
,
i
,
id
,
num
,
j
;

50 
maxx
,
tmpx
,
ªtx
;

51 
	`sˇnf
("%d",&
n
)!=
EOF
)

53 
	`mem£t
(
èg
,0,(tag));

54 
i
=1; i<=
n
; i++)

55 
	`sˇnf
("%lf",&
c
[
i
].
y
);

56 
ªtx
=0.0;

57 
t›
=0,
i
=1; i<=
n
; i++)

59 
maxx
=
	`y0_cut
(
i
);

60 
id
=0;

61 
j
=1; j<
i
; j++)

63 
tmpx
=
	`ègít
(
j
,
i
);

64 if(
maxx
<
tmpx
)

65 
maxx
=
tmpx
,
id
=
j
;

67 
c
[
i
].
x
=
maxx
-c[i].
y
;

68 
j
=
id
+1; j<
i
; j++)

69 
èg
[
j
]=1;

70 
ât
=
ªtx
;

71 if(
maxx
>
ªtx
)

72 
ªtx
=
maxx
;

74 
i
=1; i<=
n
; i++)

75 if(
	`Ábs
(
c
[
i
].
x
+c[i].
y
-
ªtx
)<
ïs
)

77 
j
=
i
+1; j<=
n
; j++)

78 
èg
[
j
]=1;

79 
num
=0,
i
=1; i<=
n
; i++)

80 if(
èg
[
i
])

81 
num
++;

82 
	`¥ötf
("%d\n",
num
);

83 
i
=1; i<=
n
; i++)

84 if(
èg
[
i
])

85 
	`¥ötf
("%d\n",
i
);

88 
	}
}

	@problems/poj/poj_1840_hash.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 201000

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 100003

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

35 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

39 
	shash
{ 
	mx
,
	mc
; 
hash
 *
	m√xt
; }*
	gh
[
N
],*
	gtmp
,*
	gt
,*
	g¥e
,*
	gp
[N];

40 
	gt›
;

41 
	ga
[6];

43 
	$öô
()

45 
i
=0; i<
N
; i++)

47 
h
[
i
]=
NULL
;

48 
p
[
i
]=
√w
 
hash
;

50 
t›
=0;

51 
	}
}

53 
	$add
(
x
)

55 
y
=(
x
%
MOD
+MOD)%MOD;

56 
tmp
=
¥e
=
h
[
y
];

57 ; 
tmp
!=
NULL
; )

59 if(
tmp
->
x
==x)

61 
tmp
->
c
++;

64 if(
tmp
->
√xt
!=
NULL
)

65 
¥e
ıª->
√xt
;

66 
tmp
Òmp->
√xt
;

68 
t
=
p
[
t›
++];

69 
t
->
x
=x;

70 
t
->
√xt
=
NULL
;

71 
t
->
c
=1;

72 if(
¥e
==
NULL
)

73 
h
[
y
]=
t
;

75 
¥e
->
√xt
=
t
;

76 
	}
}

78 
	$ˇlc
(
x
)

80 
y
=(
x
%
MOD
+MOD)%MOD;

81 if(
h
[
y
]==
NULL
)

83 
tmp
=
h
[
y
];

84 ; 
tmp
!=
NULL
;)

86 if(
tmp
->
x
==x)

87  
tmp
->
c
;

88 
tmp
Òmp->
√xt
;

91 
	}
}

93 
	$maö
()

95 
	`öô
();

96 
i
=0; i<5; i++)

97 
	`sˇnf
("%d",&
a
[
i
]);

98 
i
=-50; i<=50; i++)

99 
j
=-50; j<=50; j++)

101 if(
i
==0||
j
==0)

103 
x
=
a
[0]*
i
*i*i+a[1]*
j
*j*j;

104 
	`add
(
x
);

106 
ªt
=0;

107 
i
=-50; i<=50; i++)

108 
j
=-50; j<=50; j++)

109 
k
=-50; k<=50; k++)

111 if(
i
==0||
j
==0||
k
==0)

113 
x
=
a
[2]*
i
*i*i+a[3]*
j
*j*j+a[4]*
k
*k*k;

114 
x
=-x;

115 
ªt
+=
	`ˇlc
(
x
);

117 
	`¥ötf
("%d\n",
ªt
);

119 
	}
}

	@problems/poj/poj_1870_Bee_Breding_math.cpp

7 
	~<c°rög
>

8 
	~<cm©h
>

9 
	~<c°dio
>

10 
	~<ve˘‹
>

11 
	~<£t
>

12 
	~<m≠
>

13 
	~<queue
>

14 
	~<°rög
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
	g™s
[10][2]={{-1,1},{-1,0},{0,-1},{1,-1},{1,0},{0,1}};

32 
	$œy
(
n
,&
id
)

34 
ªt
,
y
;

35 
x
;

36 
x
=(-3+
	`sqπ
(9+12.0*(
n
-1)))/6.0;

37 
ªt
=(
x
);

38 
y
=3*
ªt
*ret+3*ret+1;

39 if(
y
==
n
)

41 if(
ªt
==0Ë
id
=1;

42 
id
=6*
ªt
;

43  
ªt
;

45 
id
=
n
-
y
;

46  
ªt
+1;

47 
	}
}

49 
	$gë
(&
x
,&
y
,
k
,
id
)

51 if(
id
==0)

52 
x
=
k
-1,
y
=1;

53 if(
id
==1)

54 
x
=-1,
y
=
k
;

55 if(
id
==2)

56 
x
=-
k
,
y
=k-1;

57 if(
id
==3)

58 
x
=1-
k
,
y
=-1;

59 if(
id
==4)

60 
x
=1,
y
=-
k
;

62 
x
=
k
,
y
=1-k;

63 
	}
}

65 
	$gë_pos
(&
ªtx
,&
ªty
,
n
)

67 
x
,
y
,
a
,
b
;

68 if(
n
==1)

69 
ªtx
=
ªty
=0;

72 
x
=
	`œy
(
n
,
y
);

73 
a
=
y
/
x
,
b
=y%x;

74 if(
b
==0)

75 
a
--,
b
=
x
;

76 
	`gë
(
ªtx
,
ªty
,
x
,
a
);

77 
ªtx
Ùëx+
™s
[
a
][0]*(
b
-1),
ªty
=rety+ans[a][1]*(b-1); }

78 
	}
}

80 
	$maö
()

82 
n
,
ªtx
,
ªty
,
m
,
nx
,
ny
,
mx
,
my
,
ªt
;

83 
	`sˇnf
("%d%d",&
n
,&
m
)&&(n||m))

85 
	`gë_pos
(
nx
,
ny
,
n
);

86 
	`gë_pos
(
mx
,
my
,
m
);

87 
ªtx
=
nx
-
mx
,
ªty
=
ny
-
my
;

88 if(
ªtx
*
ªty
<0)

89 
ªt
=
	`max
(
	`abs
(
ªtx
),abs(
ªty
));

91 
ªt
=
	`abs
(
ªtx
+
ªty
);

92 
	`¥ötf
("Thêdi°™˚ bëwì¿˚Œ†%dánd %d i†%d.\n",
n
,
m
,
ªt
);

95 
	}
}

	@problems/poj/poj_1887.cpp

1 
	~<c°dio
>

2 
	#N
 100011

	)

4 
	gd©
[
N
],
	gn
,
	gq
[N];

6 
	$sﬁve
()

8 
l
,
r
,
ªt
=0,
mid
;

9 
i
=1; i<=
n
; i++)

11 
l
=1,
r
=
ªt
;

12 ; 
l
<=
r
; )

14 
mid
=(
l
+
r
)>>1;

15 if(
q
[
mid
]>
d©
[
i
])

16 
l
=
mid
+1;

18 
r
=
mid
-1;

20 if(
l
>
ªt
)

21 
ªt
++;

22 
q
[
l
]=
d©
[
i
];

24  
ªt
;

25 
	}
}

27 
	$maö
()

29 
x
,
ˇ
=1;

30 
	`sˇnf
("%d",&
x
)!=
EOF
)

32 if(
x
==-1)

34 if(
ˇ
>1)

35 
	`puts
("");

36 
	`¥ötf
("Te° #%d:\n",
ˇ
++);

37 
d©
[
n
=1]=
x
;

38 ; 
	`sˇnf
("%d",&
x
); )

40 if(
x
==-1)

42 
d©
[++
n
]=
x
;

44 
	`¥ötf
(" maximumÖossibÀ i¡î˚±i⁄s: %d\n",
	`sﬁve
());

48 
	}
}

	@problems/poj/poj_1920.cpp

1 
	~<c°dio
>

2 
	#MOD
 1000000

	)

3 
	#N
 100011

	)

4 
	tLL
;

6 
	gid
[
N
],
	g˙t
[4];

7 
LL
 
	gtwo
[
N
],
	gf
[N];

9 
	$öô
()

11 
two
[0]=1;

12 
i
=1; i<
N
; i++)

13 
two
[
i
]Òwo[i-1]*2%
MOD
;

14 
f
[0]=0;

15 
i
=1; i<
N
; i++)

17 
f
[
i
]=
two
[i]-1;

18 if(
f
[
i
]<0Ëf[i]+=
MOD
;

20 
	}
}

22 
	$ˇl
(
a
,
b
)

24 if(
a
!=1&&
b
!=1)

26 if(
a
!=2&&
b
!=2)

29 
	}
}

31 
	$maö
()

33 
n
;

34 
	`öô
();

35 
	`sˇnf
("%d",&
n
)+1)

37 
i
=1; i<=3; i++)

38 
	`sˇnf
("%d",&
˙t
[
i
]);

39 
i
=1; i<=3; i++)

40 
j
=1; j<=
˙t
[
i
]; j++)

42 
x
;

43 
	`sˇnf
("%d",&
x
);

44 
id
[
x
]=
i
;

46 
¥e
=
id
[
n
],
now
;

47 
	`¥ötf
("%d\n",
¥e
);

48 
LL
 
ªt
=0;

49 
i
=
n
-1; i>=1; i--)

51 
now
=
id
[
i
];

52 if(
¥e
==
now
)

54 
ªt
=‘ë+
f
[
i
-1]+1)%
MOD
;

55 
¥e
=
	`ˇl
’ª,
now
);

57 
	`¥ötf
("%Œd\n",
ªt
);

60 
	}
}

	@problems/poj/poj_1925_Spiderman_dp.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	#X
 1000010

	)

5 
	#MAXN
 5010

	)

6 
	tLL
;

8 
	snode
{ 
LL
 
	mx
,
	my
,
	m°
; }
	gp
[
MAXN
];

10 
	gn
,
	gdp
[
X
],
	gidd
[X];

12 
ölöe
 
	$Êy
(
LL
 
x
,
id
)

14  (
p
[
id
].
y
-p[1].y)*’[id].y-p[1].y)+’[id].
x
-x)*(p[id].x-x)<=p[id].y*p[id].y;

15 
	}
}

17 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

19 
ölöe
 
LL
 
	$ˇl
(
id
)

21 
LL
 
ªt
=
p
[
id
].
x
-(LL)
	`sqπ
(’[id].
y
)*(p[id].y)-(p[id].y-p[1].y)*(p[id].y-p[1].y));

22 if(
ªt
<
p
[1].
x
) Ö[1].x;

23  
ªt
;

24 
	}
}

26 
	$sﬁve
()

28 
ªt
=
MAXN
,
i
,
j
;

29 
i
=0; i<
X
; i++Ë
dp
[i]=
MAXN
;

30 
dp
[
p
[1].
x
]=0;

31 
i
=2; i<=
n
; i++)

32 
j
=
p
[
i
].
°
; j<p[i].
x
; j++)

34 if(2*
p
[
i
].
x
-
j
>ı[
n
].x)

35 
ªt
=
	`mö
‘ë,
dp
[
j
]+1);

37 
dp
[2*
p
[
i
].
x
-
j
]=
	`mö
(dp[2*p[i].x-j],dp[j]+1);

39  
ªt
;

40 
	}
}

42 
	$maö
()

44 
t
,
i
,
ªt
,
j
;

45 
	`sˇnf
("%d",&
t
);

46 ; 
t
--; )

48 
	`sˇnf
("%d",&
n
);

49 
i
=1,
j
=0; i<=
n
; i++)

51 
	`sˇnf
("%Œd%Œd",&
p
[
i
].
x
,&p[i].
y
);

52 
p
[
i
].
°
=
	`ˇl
(i);

54 
ªt
=
	`sﬁve
();

55 if(
ªt
>=
MAXN
)

56 
	`puts
("-1");

58 
	`¥ötf
("%d\n",
ªt
);

61 
	}
}

	@problems/poj/poj_1926.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 111

	)

4 
	#CNT
 1000000000

	)

6 
	gd©
[
N
],
	gm©
[N][N],
	gªt
[N][N],
	gtmp
[N][N];

8 
	$_mul
(
ªt
[][
N
],
a
[][N],
b
[][N],
n
)

10 
	`mem£t
(
tmp
,0,(tmp));

11 
i
=0; i<
n
; i++)

12 
j
=0; j<
n
; j++)

13 
k
=0; k<
n
; k++)

14 
tmp
[
i
][
j
]+=
a
[i][
k
]*
b
[k][j];

15 
i
=0; i<
n
; i++)

16 
j
=0; j<
n
; j++)

17 
ªt
[
i
][
j
]=
tmp
[i][j];

18 
	}
}

20 
	$show
(
a
[][
N
],
n
)

22 
i
=0; i<
n
; i++,
	`puts
(""))

23 
j
=0; j<
n
; j++)

24 
	`¥ötf
("%.3l‡",
a
[
i
][
j
]);

26 
	}
}

28 
	$sﬁve
(
n
)

30 
b
=
CNT
;

31 
	`mem£t
(
ªt
,0,(ret));

32 
i
=0; i<
n
; i++)

33 
ªt
[
i
][i]=1;

34 ; 
b
; b>>=1)

36 if(
b
&1)

37 
	`_mul
(
ªt
,ªt,
m©
,
n
);

38 
	`_mul
(
m©
,m©,m©,
n
);

40 
r
;

41 
i
=0; i<
n
; i++)

43 
r
=0;

44 
j
=0; j<
n
; j++)

45 
r
+=
d©
[
j
]*
ªt
[j][
i
];

46 
	`¥ötf
("%.3f\n",
r
);

48 
	}
}

50 
	$maö
()

52 
t
,
ˇ
=1,
n
,
m
;

53 
	`sˇnf
("%d",&
t
);

54 ; 
ˇ
<=
t
; ca++)

56 if(
ˇ
>1)

57 
	`puts
("");

58 
	`mem£t
(
m©
,0,(mat));

59 
	`sˇnf
("%d%d",&
n
,&
m
);

60 
i
=0; i<
n
; i++)

61 
	`sˇnf
("%lf",&
d©
[
i
]);

62 
i
=0; i<
m
; i++)

64 
x
,
y
;

65 
	`sˇnf
("%d%d",&
x
,&
y
);

66 
x
--,
y
--;

67 
m©
[
x
][
y
]=mat[y][x]=1;

69 
˙t
;

70 
i
=0; i<
n
; i++)

72 
˙t
=0;

73 
j
=0; j<
n
; j++)

74 if(
m©
[
i
][
j
]>0)

75 
˙t
++;

76 if(
˙t
==0)

77 
m©
[
i
][i]=1;

80 
j
=0; j<
n
; j++)

81 
m©
[
i
][
j
]/=
˙t
;

84 
	`sﬁve
(
n
);

87 
	}
}

	@problems/poj/poj_1934.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<°rög
>

4 
	~<£t
>

5 
	~<c°rög
>

6 
	#N
 101

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gß
[
N
],
	gsb
[N],
	gtmp
[N];

10 
	gdp
[
N
][N];

11 
	g£t
<
	g°rög
> 
	g°
;

13 
	$sﬁve
(
œ
,
lb
,
Àn
)

15 if(
Àn
==0)

17 
°
.
	`ö£π
(
tmp
);

20 
i
=1; i<=
œ
; i++)

21 
j
=1; j<=
lb
; j++)

22 if(
dp
[
i
][
j
]==
Àn
&&
ß
[i-1]==
sb
[j-1])

24 
tmp
[
Àn
-1]=
ß
[
i
-1];

25 
	`sﬁve
(
i
-1,
j
-1,
Àn
-1);

27 
	}
}

29 
	$maö
()

31 
	`sˇnf
("%s%s",
ß
,
sb
);

32 
œ
=
	`°æí
(
ß
),
lb
=°æí(
sb
);

33 
	`mem£t
(
dp
,0,(dp));

34 
°
.
	`˛ór
();

35 
i
=1; i<=
œ
; i++)

36 
j
=1; j<=
lb
; j++)

38 if(
ß
[
i
-1]==
sb
[
j
-1])

39 
dp
[
i
][
j
]=dp[i-1][j-1]+1;

41 
dp
[
i
][
j
]=
	`max
(dp[i][j-1],dp[i-1][j]);

43 
	`sﬁve
(
œ
,
lb
,
dp
[la][lb]);

44 
£t
<
°rög
>::
ôî©‹
 
ô
;

45 
ô
=
°
.
	`begö
(); it!=°.
	`íd
(); it++)

46 
cout
<<*
ô
<<
ídl
;

48 
	}
}

	@problems/poj/poj_1936.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 100010

	)

5 
	gs
[
N
],
	gt
[N];

7 
	$ok
()

9 
l1
=
	`°æí
(
s
),
l2
=°æí(
t
),
j
=0;

10 
i
=0; i<
l1
&&
j
<
l2
; i++,j++)

12 ; 
j
<
l2
&&
t
[j]!=
s
[
i
]; j++);

13 if(
j
>=
l2
)

17 
	}
}

19 
	$maö
()

21 
	`sˇnf
("%s%s",
s
,
t
)!=
EOF
)

23 if(
	`ok
())

24 
	`puts
("Yes");

26 
	`puts
("No");

29 
	}
}

	@problems/poj/poj_1947_Rebuilding_Roads_TreeDp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#öf
 300

	)

4 
	#MAXN
 160

	)

5 
	#MAXS
 200

	)

7 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
MAXS
];

9 
	gli°
[
MAXN
],
	gt›
,
	gdp
[MAXN][MAXN],
	gn
,
	gp
,
	gö
[MAXN];

11 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

13 
	$ö£π
(
f
,
t
)

15 
e
[
t›
].
f
=f,e[t›].
t
=t;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$dfs
(
now
)

21 
i
,
u
,
v
,
˙t
;

22 
˙t
=0,
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
,cnt++)

23 
	`dfs
(
e
[
i
].
t
);

25 
dp
[
now
][1]=
˙t
;

27 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

29 
u
=
p
; u>=1; u--)

31 if(
dp
[
now
][
u
]==
öf
) ;

32 
v
=1; v+
u
<=
p
; v++)

34 
dp
[
now
][
u
+
v
]=
	`mö
(dp[now][u+v],dp[now][u]+dp[
e
[
i
].
t
][v]-1);

38 
	}
}

40 
	$maö
()

42 
i
,
x
,
y
,
j
,
roŸ
,
ªt
;

43 
	`sˇnf
("%d%d",&
n
,&
p
)!=
EOF
)

45 
	`mem£t
(
ö
,0,(in));

46 
t›
=
i
=0; i<=
n
; i++)

48 
li°
[
i
]=-1;

49 
j
=0; j<=
n
; j++)

50 
dp
[
i
][
j
]=
öf
;

52 
i
=0; i<
n
-1; i++)

54 
	`sˇnf
("%d%d",&
x
,&
y
);

55 
	`ö£π
(
x
-1,
y
-1);

56 
ö
[
y
-1]++;

58 
i
=0; i<
n
; i++)

59 if(
ö
[
i
]==0)

61 
roŸ
=
i
;

64 
	`dfs
(
roŸ
);

65 
ªt
=
öf
,
i
=1; i<
n
; i++)

66 
ªt
=
	`mö
‘ë,
dp
[
i
][
p
]+1);

67 
ªt
=
	`mö
‘ë,
dp
[0][
p
]);

68 
	`¥ötf
("%d\n",
ªt
);

71 
	}
}

	@problems/poj/poj_1952_dp.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 100001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gd©
[
N
],
	gn
,
	gdp
[N],
	g˙t
[N];

9 
	$sﬁve
()

11 
	`mem£t
(
˙t
,0,(cnt));

12 
	`mem£t
(
dp
,0,(dp));

13 
mx
=0;

14 
i
=1; i<=
n
; i++)

16 
dp
[
i
]=1,
˙t
[i]=1;

17 
j
=
i
-1; j>=0; j--)

19 if(
d©
[
j
]>d©[
i
])

21 if(
dp
[
j
]+1>dp[
i
])

22 
dp
[
i
]=dp[
j
]+1,
˙t
[i]=cnt[j];

23 if(
dp
[
j
]+1==dp[
i
])

24 
˙t
[
i
]+=˙t[
j
];

26 if(
d©
[
j
]==d©[
i
])

28 if(
dp
[
i
]==1)

29 
˙t
[
i
]=0;

34 
ªt
=0,
cc
=0;

35 
i
=1; i<=
n
; i++)

36 if(
ªt
<
dp
[
i
])

37 
ªt
=
dp
[
i
];

38 
i
=1; i<=
n
; i++)

39 if(
dp
[
i
]==
ªt
)

40 
cc
+=
˙t
[
i
];

41 
	`¥ötf
("%d %d\n",
ªt
,
cc
);

43 
	}
}

45 
	$maö
()

47 ; 
	`sˇnf
("%d",&
n
)!=
EOF
 ;)

49 
i
=1; i<=
n
; i++)

50 
	`sˇnf
("%d",&
d©
[
i
]);

51 
	`sﬁve
();

54 
	}
}

	@problems/poj/poj_1953.cpp

1 
	~<c°dio
>

2 
	#N
 50

	)

3 
	tLL
;

5 
LL
 
	gdp
[
N
],
	gze
[N];

7 
	$öô
()

9 
dp
[1]=2,
ze
[1]=1;

10 
i
=2; i<
N
; i++)

12 
dp
[
i
]=dp[i-1]+
ze
[i-1];

13 
ze
[
i
]=
dp
[i-1];

15 
	}
}

17 
	$maö
()

19 
	`öô
();

20 
n
,
ˇ
=1,
t
;

21 
	`sˇnf
("%d",&
t
);

22 ; 
ˇ
<=
t
; ca++)

24 
	`sˇnf
("%d",&
n
);

25 
	`¥ötf
("S˚«riÿ#%d:\n",
ˇ
);

26 
	`¥ötf
("%Œd\n",
dp
[
n
]);

27 
	`puts
("");

30 
	}
}

	@problems/poj/poj_1958.cpp

1 
	~<c°dio
>

2 
	~<˛imôs
>

3 
	~<Æg‹ôhm
>

4 
	#N
 13

	)

5 
	#öf
 
LLONG_MAX


	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
LL
 
	gdp
[
N
],
	gthªe
[N];

11 
	$öô
()

13 
dp
[1]=1;

14 
dp
[0]=0;

15 
thªe
[1]=1,three[0]=0;

16 
i
=2; i<
N
; i++)

17 
thªe
[
i
]=three[i-1]*2+1;

18 
i
=2; i<
N
; i++)

20 
LL
 
mi
=
öf
;

21 
j
=0; j<
i
; j++)

22 
mi
=
	`mö
(2*
dp
[
j
]+
thªe
[
i
-j],mi);

23 
dp
[
i
]=
mi
;

25 
	}
}

27 
	$maö
()

29 
	`öô
();

30 
n
;

31 
i
=1; i<=12; i++)

32 
	`¥ötf
("%Œd\n",
dp
[
i
]);

34 
	}
}

	@problems/poj/poj_1959.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 111

	)

5 
	gmul
[3]={1,2,3};

6 
	gvis
[4001],
	gt›
;

7 
	snode
{ 
	mv
,
	mc
; }
	gno
[
N
];

9 
	$öô
()

11 
	`mem£t
(
vis
,0,(vis));

12 
now
;

13 
i
=0; i<3; i++)

14 
j
=1; j<=20; j++)

16 
now
=
mul
[
i
]*
j
;

17 
vis
[
now
]++;

19 
vis
[25]++;

20 
vis
[50]++;

21 
no
[0].
v
=0,no[0].
c
=1;

22 
t›
=1;

23 
i
=1; i<=1001; i++)

24 if(
vis
[
i
]>0)

25 
no
[
t›
].
v
=
i
,no[t›++].
c
=
vis
[i];

26 
	`mem£t
(
vis
,0,(vis));

27 
i
=0; i<
t›
; i++)

28 
j
=
i
; j<
t›
; j++)

29 
k
=
j
; k<
t›
; k++)

31 
now
=
no
[
i
].
v
+no[
j
].v+no[
k
].v;

32 if(
no
[
i
].
v
=Úo[
j
].v&&no[j].v=Úo[
k
].v)

33 
vis
[
now
]+=
no
[
i
].
c
*(no[i].c+1)*(no[i].c+2)/6;

34 if(
no
[
i
].
v
=Úo[
j
].v)

35 
vis
[
now
]+=
no
[
i
].
c
*“o[i].c+1)/2*no[
k
].c;

36 if(
no
[
j
].
v
=Úo[
k
].v)

37 
vis
[
now
]+=
no
[
i
].
c
*“o[
j
].c*(no[j].c+1)/2);

39 
vis
[
now
]+=
no
[
i
].
c
*no[
j
].c*no[
k
].c;

41 
	}
}

43 
	$maö
()

45 
n
,
t
,
ˇ
=1;

46 
	`öô
();

47 
	`sˇnf
("%d",&
t
);

48 ; 
ˇ
<=
t
; ca++)

50 
	`sˇnf
("%d",&
n
);

51 
	`¥ötf
("S˚«riÿ#%d:\n",
ˇ
);

52 
	`¥ötf
("%d\n",
vis
[
n
]);

53 
	`puts
("");

56 
	}
}

	@problems/poj/poj_1961_Period_kmp.cpp

1 
	~<c°dio
>

2 
	#MAXN
 1000100

	)

3 
	gs
[
MAXN
];

4 
	gÁû
[
MAXN
],
	gªt
[MAXN];

6 
	$gë_Áû
(
n
)

8 
i
,
¥e
;

9 
Áû
[0]=-1; 
ªt
[0]=0;

10 
i
=1; i<
n
; i++)

12 
¥e
=
Áû
[
i
-1];

13 ; 
¥e
>-1&&
s
[¥e+1]!=s[
i
];Öª=
Áû
[pre]);

14 if(
s
[
¥e
+1]==s[
i
])

16 
Áû
[
i
]=
¥e
+1;

17 if((
i
+1)%(i-
Áû
[i])==0)

18 
ªt
[
i
]Ùë[
Áû
[i]]+1;

20 
ªt
[
i
]=0;

23 
Áû
[
i
]=-1,
ªt
[i]=0;

25 
	}
}

27 
	$maö
()

29 
n
,
i
,
ˇ
=1;

30 
	`sˇnf
("%d",&
n
)&&n)

32 
	`¥ötf
("Te° ca£ #%d\n",
ˇ
++);

33 
	`sˇnf
("%s",
s
);

34 
	`gë_Áû
(
n
);

45 
i
=1; i<
n
; i++)

46 if(
ªt
[
i
]>=1)

47 
	`¥ötf
("%d %d\n",
i
+1,
ªt
[i]+1);

48 
	`puts
("");

51 
	}
}

	@problems/poj/poj_1962.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#MOD
 1000

	)

4 
	#N
 20011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	suföd


9 
	mp
[
N
],
	mc
[N],
	m°
[N],
	mt›
;

10 
öô
(
n
)

12 
	mi
=0; i<
	mn
; i++)

13 
	mp
[
i
]=i,
	mc
[i]=0;

15 
run
(&
x
)

17 
	my
,
	ml
,
	m¥e
;

18 
	mt›
=-1;

19 ; 
	mp
[
x
]!=x; 
	m°
[++
t›
]=x,
	mx
=
p
[x]);

20 
	ml
=0;

21 ; 
	mt›
>=0;Åop--)

23 
	my
=
°
[
t›
];

24 
	ml
+=
c
[
y
];

25 
	mp
[
y
]=
x
;

26 
	mc
[
y
]=
l
;

29 
quîy
(
x
)

31 
	my
=
x
;

32 
run
(
x
);

33  
	mc
[
y
];

35 
£t‰õnd
(
i
,
j
)

37 
	mp
[
i
]=
j
;

38 
	mc
[
i
]=
abs
(i-
j
)%
MOD
;

40 }
	guf
;

42 
	$maö
()

44 
t
,
n
;

45 
	`sˇnf
("%d",&
t
);

46 ; 
t
--;)

48 
	`sˇnf
("%d",&
n
);

49 
uf
.
	`öô
(
n
);

50 
s
[10];

51 ; 
	`sˇnf
("%s",
s
);)

53 if(
s
[0]=='O')

55 if(
s
[0]=='E')

57 
x
;

58 
	`sˇnf
("%d",&
x
);

59 
	`¥ötf
("%d\n",
uf
.
	`quîy
(
x
-1));

63 
x
,
y
;

64 
	`sˇnf
("%d%d",&
x
,&
y
);

65 
uf
.
	`£t‰õnd
(
x
-1,
y
-1);

70 
	}
}

	@problems/poj/poj_1964.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 1011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	ml
,
	mr
; }
	gdp
[
N
][N];

8 
	gs
[3];

9 
	gm©
[
N
][N],
	gu
[N][N],
	g°
[N],
	gt›
;

11 
	$maö
()

13 
ts
;

14 
	`sˇnf
("%d",&
ts
);

15 ; 
ts
--;)

17 
m
,
n
;

18 
	`sˇnf
("%d%d",&
m
,&
n
);

19 
	`mem£t
(
u
,0,(u));

20 
i
=1; i<=
m
; i++)

21 
j
=1; j<=
n
; j++)

23 
	`sˇnf
("%s",
s
);

24 if(
s
[0]=='R')

26 
m©
[
i
][
j
]=1;

27 
u
[
i
][
j
]=0;

31 
m©
[
i
][
j
]=0;

32 
u
[
i
][
j
]=u[i-1][j]+1;

35 
i
=1; i<=
m
; i++)

37 
°
[
t›
=0]=1;

38 
dp
[
i
][1].
l
=1;

39 
j
=2; j<=
n
; j++)

41 ; 
t›
>=0;Åop--)

43 if(
u
[
i
][
j
]<u[i][
°
[
t›
]])

44 
dp
[
i
][
°
[
t›
]].
r
=
j
-1;

48 
dp
[
i
][
j
].
l
=(
t›
>=0)?
°
[top]+1:1;

49 
°
[++
t›
]=
j
;

51 ; 
t›
>=0;Åop--)

52 
dp
[
i
][
°
[
t›
]].
r
=
n
;

54 
ªt
=0;

55 
i
=1; i<=
m
; i++)

56 
j
=1; j<=
n
; j++)

58 
ªt
=
	`max
‘ë,(
dp
[
i
][
j
].
r
-dp[i][j].
l
+1)*(
u
[i][j]));

60 
	`¥ötf
("%d\n",
ªt
*3);

63 
	}
}

	@problems/poj/poj_1966.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 210

	)

20 
	#M
 100010

	)

21 
	#S
 100100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mw
; }
	ge
[
S
],
	ges
[S];

35 
	gt›
,
	gli°
[
N
],
	gœy
[N],
	gq
[
S
];

37 
	$ö£π
(
f
,
t
,
w
)

39 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

40 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

41 
	}
}

43 
	$_ö£π
(
f
,
t
,
w
)

45 
	`ö£π
(
f
,
t
,
w
);

46 
	`ö£π
(
t
,
f
,0);

47 
	}
}

49 
	$bfs
(
s
,
t
,
n
)

51 
l
,
r
;

52 
i
=0; i<
n
; i++)

53 
œy
[
i
]=-1;

54 
q
[
l
=
r
=0]=
s
;

55 
œy
[
s
]=0;

56 ; 
l
<=
r
;)

58 
now
=
q
[
l
++];

59 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

61 
to
=
e
[
i
].
t
;

62 if(
œy
[
to
]<0&&
e
[
i
].
w
>0)

64 
œy
[
to
]ˆay[
now
]+1;

65 
q
[++
r
]=
to
;

69  
œy
[
t
]>=0;

70 
	}
}

72 
	$dfs
(
now
,
t
,
now_Êow
)

74 
âl
=0,
i
,
j
,
sögÀ
;

75 if(
now
==
t
)

76  
now_Êow
;

77 
i
=
li°
[
now
]; i!=-1&&
âl
<
now_Êow
; i=
e
[i].
n
)

79 
to
=
e
[
i
].
t
;

80 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
w
>0&&(
sögÀ
=
	`dfs
—o,
t
,
	`mö
(
now_Êow
-
âl
,e[i].w))))

82 
e
[
i
].
w
-=
sögÀ
;

83 
e
[
i
^1].
w
+=
sögÀ
;

84 
âl
+=
sögÀ
;

87 if(
âl
==0)

88 
œy
[
now
]=-1;

89  
âl
;

90 
	}
}

92 
	$di˙ic
(
s
,
t
,
n
)

94 
ªt
=0;

95 
	`bfs
(
s
,
t
,
n
))

97 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

99  
ªt
;

100 
	}
}

102 
	$maö
()

104 
s
,
t
,
n
,
m
,
x
,
y
,
ªt
;

105 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

107 
i
=0; i<
m
; i++)

109 
	`sˇnf
(" (%d,%d)",&
x
,&
y
);

110 
es
[
i
].
f
=
x
,es[i].
t
=
y
;

113 
ªt
=
öf
;

114 
s
=0; s<
n
; s++)

115 
t
=1;Å<
n
;Å++)

117 if(
t
==
s
) ;

118 
t›
=0;

119 
i
=0; i<
n
+n; i++)

120 
li°
[
i
]=-1;

121 
i
=0; i<
n
; i++)

122 
	`_ö£π
(
i
,
n
+i,1);

123 
i
=0; i<
m
; i++)

125 
x
=
es
[
i
].
f
,
y
Ûs[i].
t
;

126 
	`_ö£π
(
n
+
x
,
y
,
öf
);

127 
	`_ö£π
(
n
+
y
,
x
,
öf
);

129 
ªt
=
	`mö
‘ë,
	`di˙ic
(
s
+
n
,
t
,n+n));

131 if(
ªt
>
n
)Ñet=n;

132 
	`¥ötf
("%d\n",
ªt
);

135 
	}
}

	@problems/poj/poj_1975.cpp

1 
	~<c°dio
>

2 
	#öf
 0x3ffffff

	)

3 
	#N
 101

	)

5 
	gm©
[
N
][N];

7 
	$Êoyd
(
n
)

9 
k
=0; k<
n
; k++)

10 
i
=0; i<
n
; i++)

11 
j
=0; j<
n
; j++)

12 if(
m©
[
i
][
k
]+m©[k][
j
]<mat[i][j])

13 
m©
[
i
][
j
]=m©[i][
k
]+mat[k][j];

14 
	}
}

16 
	$maö
()

18 
t
,
m
,
n
;

19 
	`sˇnf
("%d",&
t
);

20 ; 
t
--;)

22 
	`sˇnf
("%d%d",&
n
,&
m
);

23 
i
=0; i<
n
; i++)

24 
j
=0; j<
n
; j++)

25 
m©
[
i
][
j
]=
öf
;

26 
i
=0; i<
m
; i++)

28 
x
,
y
;

29 
	`sˇnf
("%d%d",&
x
,&
y
);

30 
x
--,
y
--;

31 
m©
[
x
][
y
]=1;

33 
	`Êoyd
(
n
);

34 
ªt
=0,
l
,
r
,
mid
=(
n
-1)/2;

35 
i
=0; i<
n
; i++)

37 
l
=0,
r
=0;

38 
j
=0; j<
n
; j++)

40 if(
m©
[
i
][
j
]<
öf
)

41 
l
++;

42 if(
m©
[
j
][
i
]<
öf
)

43 
r
++;

46 if(
l
<=
mid
&&
r
<=mid)

47 
ªt
++;

49 
	`¥ötf
("%d\n",
n
-
ªt
);

52 
	}
}

	@problems/poj/poj_1986_LCA_tarjan.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 50010

	)

20 
	#M
 1000010

	)

21 
	#S
 200010

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

33 
	gs
[100];

34 
	sedge
{ 
	mf
,
	mt
,
	ml
,
	mn
; }
	ge
[
S
];

35 
	snode
{ 
	mt
,
	mr
,
	mi
;

36 
node
(
a
,
b
,
c
){ 
	mt
˜,
	mr
=b,
	mi
=c; }

38 
	gve˘‹
<
	gnode
> 
	gq
[
N
];

39 
	gv
[
N
],
	gvis
[N],
	gÀn
[N],
	gªt
[N],
	gli°
[N],
	gt›
;

41 
	$ö£π
(
f
,
t
,
l
)

43 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

44 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

45 
	}
}

47 
	suföd


49 
	mp
[
N
],
	mt
;

50 
öô
(){ 
	mi
=0; i<
	mN
; 
	mp
[
i
]=i++); }

51 
run
(&
x
)

53 
	my
=
x
;

54 ; (
	mt
=
p
[
x
])!=x; 
	mx
ı[x],
	mp
[
t
]=p[x]);

55 ; 
	mp
[
t
=
y
]!=
x
;Ö[y]=x,
	my
=
p
[t]);

57 
is‰õnd
(
i
,
j
)

59 
run
(
i
);Ñun(
j
);

60  
	mi
==
j
;

62 
£t‰õnd
(
i
,
j
)

64 
run
(
i
);Ñun(
j
);

65 
	mp
[
i
]=
j
;

67 }
	guf
;

69 
	$èrj™
(
now
,
l
)

71 
Àn
[
now
]=
l
;

72 
v
[
now
]=1;

73 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

75 
to
=
e
[
i
].
t
;

76 if(
v
[
to
])

78 
	`èrj™
(
to
,
l
+
e
[
i
].l);

79 
uf
.
	`£t‰õnd
(
to
,
now
);

81 
vis
[
now
]=1;

82 
i
=0; i<
q
[
now
].
	`size
(); i++)

84 
to
=
q
[
now
][
i
].
t
;

85 if(!
vis
[
to
])

87 
p
=
to
,
ii
=
q
[
now
][
i
].i;

88 
uf
.
	`run
(
p
);

89 
ªt
[
ii
]=
l
+
Àn
[
to
]-2*Àn[
p
];

90 
q
[
now
][
i
].
r
=
l
+
Àn
[
to
]-2*Àn[
p
];

92 
	}
}

94 
	$maö
()

96 
n
,
m
,
k
;

97 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

99 
x
,
y
,
l
;

100 
t›
=0;

101 
i
=0; i<
n
; i++)

102 
li°
[
i
]=-1,
q
[i].
	`˛ór
();

103 
i
=0; i<
m
; i++)

105 
	`sˇnf
("%d%d%d%s",&
x
,&
y
,&
l
,
s
);

106 
	`ö£π
(
x
-1,
y
-1,
l
);

107 
	`ö£π
(
y
-1,
x
-1,
l
);

109 
	`sˇnf
("%d",&
k
);

110 
i
=0; i<
k
; i++)

112 
	`sˇnf
("%d%d",&
x
,&
y
);

113 
x
--,
y
--;

114 
q
[
x
].
	`push_back
(
	`node
(
y
,0,
i
));

115 
q
[
y
].
	`push_back
(
	`node
(
x
,0,
i
));

117 
uf
.
	`öô
();

118 
	`mem£t
(
v
,0,(v));

119 
	`mem£t
(
vis
,0,(vis));

120 
	`mem£t
(
ªt
,0,(ret));

121 
	`èrj™
(0,0);

122 
i
=0; i<
k
; i++)

123 
	`¥ötf
("%d\n",
ªt
[
i
]);

126 
	}
}

	@problems/poj/poj_1989.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 10011

	)

5 
boﬁ
 
	gvis
[
N
];

7 
	$maö
()

9 
n
,
k
,
ªt
=0,
c
=0,
x
;

10 
	`sˇnf
("%d%d",&
n
,&
k
);

11 
	`mem£t
(
vis
,0,(vis));

12 
i
=0; i<
n
; i++)

14 
	`sˇnf
("%d",&
x
);

15 if(
vis
[
x
])

19 
vis
[
x
]=1;

20 
c
++;

21 if(
c
==
k
)

23 
ªt
++,
c
=0;

24 
j
=1; j<=
k
; j++)

25 
vis
[
j
]=0;

29 
	`¥ötf
("%d\n",
ªt
+1);

31 
	}
}

	@problems/poj/poj_2018_converx_dp.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#N
 100101

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gsum
[
N
];

9 
	gq
[
N
];

11 
	$maö
()

13 
n
,
f
;

14 
	`sˇnf
("%d%d",&
n
,&
f
)!=
EOF
)

16 
x
;

17 
sum
[0]=0;

18 
i
=1; i<=
n
; i++)

20 
	`sˇnf
("%d",&
x
);

21 
x
*=1000;

22 
sum
[
i
]=sum[i-1]+
x
;

24 
LL
 
ªt
=0;

25 
l
,
r
,
√xt
;

26 
q
[
l
=
r
=0]=0;

27 
i
=
f
; i<=
n
; i++)

29 ; 
l
<
r
; )

31 if((
sum
[
i
]-sum[
q
[
l
+1]])*(i-q[l])>(sum[i]-sum[q[l]])*(i-q[l+1]))

32 
l
++;

36 
ªt
=
	`max
‘ë,(
sum
[
i
]-sum[
q
[
l
]])/(i-q[l]));

37 
√xt
=
i
-
f
+1;

38 ; 
l
<
r
; )

40 if((
sum
[
√xt
]-sum[
q
[
r
]])*(q[r]-q[r-1])<=(next-q[r])*(sum[q[r]]-sum[q[r-1]]))

41 
r
--;

45 
q
[++
r
]=
√xt
;

47 
	`¥ötf
("%Œd\n",
ªt
);

50 
	}
}

	@problems/poj/poj_2029_Get_Many_Persimmon_Trees_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>;

3 
	#MAXN
 110

	)

5 
	gsum
[
MAXN
][MAXN],
	gm©
[MAXN][MAXN];

7 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

9 
	$maö
()

11 
n
,
m
,
w
,
h
,
ww
,
hh
,
ªt
,
i
,
j
,
x
,
y
;

12 
	`sˇnf
("%d",&
n
)&&n)

14 
	`mem£t
(
m©
,0,(mat));

15 
	`mem£t
(
sum
,0,(sum));

16 
	`sˇnf
("%d%d",&
w
,&
h
);

17 
i
=0; i<
n
; i++)

19 
	`sˇnf
("%d%d",&
y
,&
x
);

20 
m©
[
x
][
y
]=1;

22 
	`sˇnf
("%d%d",&
ww
,&
hh
);

23 
i
=1; i<=
h
; i++)

24 
j
=1; j<=
w
; j++)

25 
sum
[
i
][
j
]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+
m©
[i][j];

26 
ªt
=0;

27 
i
=1; i+
hh
-1<=
h
; i++)

28 
j
=1; j+
ww
-1<=
w
; j++)

29 
ªt
=
	`max
‘ë,
sum
[
i
+
hh
-1][
j
+
ww
-1]-sum[i+hh-1][j-1]-sum[i-1][j+ww-1]+sum[i-1][j-1]);

30 
	`¥ötf
("%d\n",
ªt
);

33 
	}
}

	@problems/poj/poj_2039.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 201

	)

5 
	gm©
[
N
][N];

6 
	gs
[
N
];

7 
	g˙t
[
N
];

9 
	$maö
()

11 
n
,
l
;

12 
	`sˇnf
("%d",&
n
))

14 if(
n
==0)

16 
	`sˇnf
("%s",
s
);

17 
l
=
	`°æí
(
s
);

18 
	`mem£t
(
m©
,0,(mat));

19 
	`mem£t
(
˙t
,0,(cnt));

20 
i
,
j
,
add
,
id
;

21 
i
=0,
j
=1; i<
l
; i+=
n
)

23 if(
j
&1)

24 
add
=1,
id
=1;

26 
add
=-1,
id
=
n
;

27 
k
=0; k<
n
; k++)

29 
m©
[
j
][
id
]=
s
[
i
+
k
];

30 
˙t
[
id
]++;

31 
id
+=
add
;

33 
j
++;

35 
i
=1; i<=
n
; i++)

37 
j
=1; j<=
˙t
[
i
]; j++)

38 
	`¥ötf
("%c",
m©
[
j
][
i
]);

40 
	`puts
("");

43 
	}
}

	@problems/poj/poj_2043_Area_of_Polygons_geometry.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#öf
 0x7fffffff

	)

20 
	#S
 1000100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

28 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	spoöt
{ 
	mx
,
	my
; }
	gp
[
N
];

32 
	slöe
{ 
poöt
 
	ma
,
	mb
; }
	g 
[
N
];

33 
	s£gmít
{ 
	my1
,
	my2
; }
	gï
[
N
<<1];

35 
ölöe
 
	$ˇl
(
poöt
 
a
,poöà
b
,
x
)

37 
dñè
=(
x
-
a
.x)*(
b
.
y
-a.y)/(b.x-a.x);

38  
a
.
y
+
dñè
;

39 
	}
}

41 
	$cmp
(
£gmít
 
a
,£gmíà
b
)

43  
a
.
y1
==
b
.y1?a.
y2
<b.y2:a.y1<b.y1;

44 
	}
}

46 
	$maö
()

48 
n
,
ªt
,
t›
,
¥e
,
R°
,
L°
;

49 
	`sˇnf
("%d",&
n
)&&n)

51 
L°
=
öf
,
R°
=-inf;

52 
i
=0; i<
n
; i++)

54 
	`sˇnf
("%d%d",&
p
[
i
].
x
,&p[i].
y
);

55 
L°
=
	`mö
(L°,
p
[
i
].
x
);

56 
R°
=
	`max
(R°,
p
[
i
].
x
);

58 
i
=0; i<
n
; i++)

60 
s
=
i
,
t
=(i+1)%
n
;

61 if(
p
[
s
].
x
<p[
t
].x)

62 
 
[
i
].
a
=
p
[
s
], [i].
b
ı[
t
];

64 
 
[
i
].
a
=
p
[
t
], [i].
b
ı[
s
];

66 
ªt
=0;

67 
u
=
L°
; u<
R°
; u++)

69 
t›
=0;

70 
xl
=
u
,
xr
=u+1;

71 
j
=0; j<
n
; j++)

72 if(
 
[
j
].
a
.
x
<=
xl
&& [j].
b
.x>=
xr
)

74 
ï
[
t›
].
y1
=
	`ˇl
(
 
[
j
].
a
, [j].
b
,
xl
);

75 
ï
[
t›
++].
y2
=
	`ˇl
(
 
[
j
].
a
, [j].
b
,
xr
);

77 
	`s‹t
(
ï
,ï+
t›
,
cmp
);

78 
j
=0; j+1<
t›
; j+=2)

80 
d
=
	`Êo‹
(
	`mö
(
ï
[
j
].
y1
,ï[j].
y2
)),
u
=
	`˚û
(
	`max
(ep[j+1].y1,ep[j+1].y2));

81 
ªt
+=
u
-
d
;

82 if(
j
>0&&
d
<
¥e
)

83 
ªt
-=
¥e
-
d
;

84 
¥e
=
u
;

87 
	`¥ötf
("%d\n",
ªt
);

90 
	}
}

	@problems/poj/poj_2044.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#X
 5

	)

21 
	#M
 1000010

	)

22 
	#S
 1000100

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3fffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
	gm©
[370][
X
][X],
	gdp
[370][3][3][2401];

36 
	gdd
[4][2]={{-1,-1},{-1,0},{0,-1},{0,0}};

37 
	gdú
[4][2]={{-1,0},{1,0},{0,1},{0,-1}};

38 
	gn
,
	gtmp
[4];

40 
	$gëid
(
x
,
y
)

42 if(
x
==0&&
y
==0)

44 if(
x
==0&&
y
==3)

46 if(
x
==3&&
y
==0)

48 if(
x
==3&&
y
==3)

51 
	}
}

53 
ölöe
 
	$öbﬂrd
(
x
,
y
)

55  1<=
x
&&x<=3&&1<=
y
&&y<=3;

56 
	}
}

58 
	$dfs
(
œy
,
x
,
y
,
°
)

60 
ss
=
°
;

62 if(
œy
==
n
)

63  
dp
[
œy
][
x
][
y
][
°
]=1;

64 if(
dp
[
œy
][
x
][
y
][
°
]>0)

66 if(
dp
[
œy
][
x
][
y
][
°
]==0)

68 
i
=0; i<4; i++)

70 
xx
=
x
+
dd
[
i
][0],
yy
=
y
+dd[i][1];

71 if(
m©
[
œy
][
xx
][
yy
]==1)

72  
dp
[
œy
][
x
][
y
][
°
]=0;

74 
i
=3; i>=0; i--)

76 
tmp
[
i
]=
ss
%7,ss/=7;

80 
i
=0; i<4; i++)

82 
tmp
[
i
]++;

84 
i
=0; i<4; i++)

86 
xx
=
x
+
dd
[
i
][0],
yy
=
y
+dd[i][1];

87 
id
=
	`gëid
(
xx
,
yy
);

88 if(
id
<0)

90 
tmp
[
id
]=0;

92 
i
=0; i<4; i++)

93 if(
tmp
[
i
]>6)

94  
dp
[
œy
][
x
][
y
][
°
]=0;

95 
ns
=0;

96 
i
=0; i<4; i++)

97 
ns
*=7,ns+=
tmp
[
i
];

98 
k
=0; k<=2; k++)

100 
i
=0; i<4; i++)

102 
xx
=
x
+
k
*
dú
[
i
][0],
yy
=
y
+k*dir[i][1];

103 if(!
	`öbﬂrd
(
xx
,
yy
))

105 if(
	`dfs
(
œy
+1,
xx
,
yy
,
ns
))

106  
dp
[
œy
][
x
][
y
][
°
]=1;

109  
dp
[
œy
][
x
][
y
][
°
]=0;

110 
	}
}

112 
	$maö
()

114 
	`sˇnf
("%d",&
n
)!=
EOF
)

116 if(
n
==0)

118 
i
=0; i<
n
; i++)

119 
u
=0; u<4; u++)

120 
v
=0; v<4; v++)

121 
	`sˇnf
("%d",&
m©
[
i
][
u
][
v
]);

122 
	`mem£t
(
dp
,-1,(dp));

123 if(
	`dfs
(0,2,2,0))

124 
	`puts
("1");

126 
	`puts
("0");

129 
	}
}

	@problems/poj/poj_2057_The_Lost_House_TreeDp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#MAXN
 1010

	)

5 
usög
 
	g°d
::
s‹t
;

7 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
MAXN
];

8 
	snode
{ 
	msv
,
	mfv
,
	mn
; }
	gdp
[
MAXN
];

10 
	gli°
[
MAXN
],
	gt›
,
	gv
[MAXN],
	gout
[MAXN];

12 
	$cmp
(
a
,
b
)

14  (
dp
[
a
].
fv
+2)*dp[
b
].
n
<(dp[b].fv+2)*dp[a].n;

15 
	}
}

17 
	$ö£π
(
f
,
t
)

19 
e
[
t›
].
f
=f,e[t›].
t
=t;

20 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

21 
	}
}

23 
	$dfs
(
now
)

25 
i
,
ç
=0,
q
[
MAXN
];

26 if(
out
[
now
]==0)

28 
dp
[
now
].
sv
=dp[now].
fv
=0;

29 
dp
[
now
].
n
=1;

32 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

34 
q
[
ç
++]=
e
[
i
].
t
;

35 
	`dfs
(
e
[
i
].
t
);

36 
dp
[
now
].
n
+=dp[
e
[
i
].
t
].n;

38 
	`s‹t
(
q
,q+
ç
,
cmp
);

39 
i
=0; i<
ç
; i++)

41 
dp
[
now
].
sv
+=(dp[now].
fv
+1)*dp[
q
[
i
]].
n
+dp[q[i]].sv;

42 
dp
[
now
].
fv
+=dp[
q
[
i
]].fv+2;

44 if(
v
[
now
]Ë
dp
[now].
fv
=0;

45 
	}
}

47 
	$maö
()

49 
n
,
x
,
ªt
,
i
; 
s
[6];

50 
	`sˇnf
("%d",&
n
)&&n)

52 
	`mem£t
(
out
,0,(out));

53 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1,
dp
[i].n=dp[i].
sv
=dp[i].
fv
=0;

54 
i
=0; i<
n
; i++)

56 
	`sˇnf
("%d%s",&
x
,
s
);

57 
out
[
x
-1]++;

58 if(
x
>=0)

59 
	`ö£π
(
x
-1,
i
);

60 if(
s
[0]=='N'Ë
v
[
i
]=0;

61 
v
[
i
]=1;

63 
	`dfs
(0);

64 
	`¥ötf
("%.4f\n",1.0*
dp
[0].
sv
/dp[0].
n
);

67 
	}
}

	@problems/poj/poj_2063.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 1000001

	)

4 
	#öf
 0x3fffffff

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
];

8 
	snode
{ 
	mv
,
	mx
; }
	gno
[300];

10 
	$maö
()

12 
t
,
vÆ
,
y
,
n
;

13 
ªt
=0;

14 
	`sˇnf
("%d",&
t
);

15 ; 
t
--;)

17 
i
=0; i<
N
; i++)

18 
dp
[
i
]=0;

19 
	`sˇnf
("%d%d",&
vÆ
,&
y
);

20 
ªt
=
vÆ
;

21 
vÆ
/=1000;

22 
	`sˇnf
("%d",&
n
);

23 
i
=0; i<
n
; i++)

25 
	`sˇnf
("%d%d",&
no
[
i
].
v
,&no[i].
x
);

26 
no
[
i
].
v
/=1000;

28 
now
=
vÆ
,
¥e
=-1,
id
=0,
nid
,
¬ow
;

29 
i
=0; i<
y
; i++)

31 
j
=0; j<
n
; j++)

33 
k
=
¥e
+1; k<=
now
; k++)

35 if(
k
-
no
[
j
].
v
<0)

37 
dp
[
k
]=
	`max
(dp[k],dp[k-
no
[
j
].
v
]+no[j].
x
);

40 
¬ow
=
ªt
+
dp
[
id
];

41 
nid
=
id
;

42 
j
=
¥e
+1; j<=
now
; j++)

44 if(
¬ow
<
ªt
+
dp
[
j
])

45 
¬ow
=
ªt
+
dp
[
j
],
nid
=j;

47 
id
=
nid
;

48 
ªt
=
¬ow
;

49 
¥e
=
now
,now=
¬ow
/1000;

51 
	`¥ötf
("%d\n",
ªt
);

53 
	}
}

	@problems/poj/poj_2081.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 3012501

	)

5 
	#M
 500001

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gvis
[
N
],
	gªt
[N];

10 
	$öô
()

12 
vÆ
=0;

13 
ªt
[0]=0;

14 
vis
[0]=1;

15 
	`mem£t
(
vis
,0,(vis));

16 
x
;

17 
i
=1; i<
M
; i++)

19 
x
=
ªt
[
i
-1]-i;

20 if(
x
>0&&!
vis
[x])

21 
vis
[
x
]=1,
ªt
[
i
]=x;

23 
x
=
ªt
[
i
-1]+i,ªt[i]=x,
vis
[x]=1;

24 
vÆ
=
	`max
(vÆ,
x
);

26 
	}
}

28 
	$maö
()

30 
n
;

31 
	`öô
();

32 
	`sˇnf
("%d",&
n
))

34 if(
n
<0)

36 
	`¥ötf
("%d\n",
ªt
[
n
]);

39 
	}
}

	@problems/poj/poj_2082.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 50001

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	snode
{ 
	mh
,
	mw
,
	mi
,
	ml
,
	mr
; }
	gno
[
N
];

7 
	gÀn
[
N
],
	gt›
,
	g°
[N];

9 
	$maö
()

11 
n
;

12 
	`sˇnf
("%d",&
n
)!=
EOF
)

14 if(
n
<0)

16 
i
=1; i<=
n
; i++)

17 
	`sˇnf
("%d%d",&
no
[
i
].
w
,&no[i].
h
);

18 
Àn
[0]=0;

19 
i
=1; i<=
n
; i++)

20 
Àn
[
i
]ˆí[i-1]+
no
[i].
w
;

21 
t›
=-1;

22 
i
=1; i<=
n
; i++)

24 ; 
t›
>=0&&
no
[
°
[t›]].
h
>no[
i
].h; )

26 
no
[
°
[
t›
]].
r
=
i
-1;

27 
t›
--;

29 if(
t›
>=0)

30 
no
[
i
].
l
=
°
[
t›
];

32 
no
[
i
].
l
=0;

33 
°
[++
t›
]=
i
;

35 ; 
t›
>=0;)

36 
no
[
°
[
t›
]].
r
=
n
,top--;

37 
ªt
=0;

38 
i
=1; i<=
n
; i++)

40 
ªt
=
	`max
‘ë,(
Àn
[
no
[
i
].
r
]-Àn[no[i].
l
])*no[i].
h
);

42 
	`¥ötf
("%d\n",
ªt
);

45 
	}
}

	@problems/poj/poj_2104.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 100011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	g≥rm
[
N
],
	gd©
[N],
	g˙t
[20][N],
	gåì
[20][N];

8 
	$cmp
(
a
,
b
){ á<b; 
	}
}

10 
	$buûd
(
c
,
l
,
r
)

12 
mid
=(
l
+
r
)>>1,
lc
=mid-l+1,
Õ
ˆ,
Ω
=mid+1;

13 if(
l
==
r
) ;

14 
i
=
l
; i<=
mid
; i++)

15 if(
≥rm
[
i
]<≥rm[
mid
])

16 
lc
--;

17 
i
=
l
; i<=
r
; i++)

19 if(
i
==
l
)

20 
˙t
[
c
][
i
]=0;

22 
˙t
[
c
][
i
]=cnt[c][i-1];

23 if(
åì
[
c
][
i
]==
≥rm
[
mid
])

25 if(
lc
>0)

27 
lc
--;

28 
˙t
[
c
][
i
]++;

29 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

32 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

34 if(
åì
[
c
][
i
]<
≥rm
[
mid
])

36 
˙t
[
c
][
i
]++;

37 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

40 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

42 
	`buûd
(
c
+1,
l
,
mid
);

43 
	`buûd
(
c
+1,
mid
+1,
r
);

44 
	}
}

46 
	$quîy
(
c
,
l
,
r
,
ql
,
qr
,
k
)

48 if(
l
==
r
Ë 
≥rm
[l];

49 
c1
,
c2
=
˙t
[
c
][
qr
],
mid
=(
l
+
r
)>>1,
d1
=
ql
-l,
d2
=qr-ql+1;

50 if(
ql
==
l
Ë
c1
=0;

51 
c1
=
˙t
[
c
][
ql
-1];

52 
c2
-=
c1
;

53 if(
k
<=
c2
)

54  
	`quîy
(
c
+1,
l
,
mid
,l+
c1
,l+c1+
c2
-1,
k
);

56  
	`quîy
(
c
+1,
mid
+1,
r
,mid+1+
d1
-
c1
,mid+d1+
d2
-c1-
c2
,
k
-c2);

57 
	}
}

59 
	$maö
()

61 
n
,
m
,
ˇ
=1;

62 
	`sˇnf
("%d",&
n
)!=
EOF
)

64 
	`sˇnf
("%d",&
m
);

65 
i
=1; i<=
n
; i++)

67 
	`sˇnf
("%d",&
d©
[
i
]);

68 
åì
[0][
i
]=
≥rm
[i]=
d©
[i];

70 
	`s‹t
(
≥rm
+1,≥rm+1+
n
,
cmp
);

71 
	`buûd
(0,1,
n
);

72 
x
,
y
,
k
;

73 
i
=0; i<
m
; i++)

75 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
k
);

76 
	`¥ötf
("%d\n",
	`quîy
(0,1,
n
,
x
,
y
,
k
));

80 
	}
}

	@problems/poj/poj_2112.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

35 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N][N],
	g˙t
[N],
	glim
[N];

36 
	gm©
[
N
][N];

38 
	$ö£π
(
f
,
t
)

40 
e
[
t›
].
f
=f,e[t›].
t
=t;

41 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

42 
	}
}

44 
	$Êoyd
(
n
)

46 
i
,
j
,
k
;

47 
k
=0; k<
n
; k++)

48 
i
=0; i<
n
; i++)

49 
j
=0; j<
n
; j++)

50 if(
m©
[
i
][
j
]>m©[i][
k
]+mat[k][j])

51 
m©
[
i
][
j
]=m©[i][
k
]+mat[k][j];

52 
	}
}

54 
	$föd
(
now
)

56 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

58 
to
=
e
[
i
].
t
;

59 if(!
y
[
to
])

61 
y
[
to
]=1;

62 if(
˙t
[
to
]<
lim
[to])

64 
m©ch
[
to
][
˙t
[to]++]=
now
;

67 
j
=0; j<
˙t
[
to
]; j++)

68 if(
	`föd
(
m©ch
[
to
][
j
]))

70 
m©ch
[
to
][
j
]=
now
;

76 
	}
}

78 
	$mu…i_hung¨y
(
c
,
k
)

80 
ªt
=0,
n
=
c
+
k
;

81 
	`mem£t
(
˙t
,0,(cnt));

82 
i
=
k
; i<
n
; i++)

84 
	`mem£t
(
y
,0,(y));

85 if(!
	`föd
(
i
))

89 
	}
}

91 
	$ok
(
x
,
k
,
c
)

93 
n
=
k
+
c
;

94 
t›
=0;

95 
i
=0; i<
n
; i++)

96 
li°
[
i
]=-1;

97 
i
=
k
; i<
n
; i++)

98 
j
=0; j<
k
; j++)

99 if(
m©
[
i
][
j
]<=
x
)

100 
	`ö£π
(
i
,
j
);

101  
	`mu…i_hung¨y
(
c
,
k
);

102 
	}
}

104 
	$sﬁve
(
k
,
c
)

106 
n
=
k
+
c
;

107 
l
=0.0,
r
=0.0,
mid
;

108 
i
=0; i<
n
; i++)

109 
j
=0; j<
n
; j++)

110 
r
=
	`max
‘,(
m©
[
i
][
j
]));

117 
r
=20000;

118 ; 
r
-
l
>
ïs
;)

120 
mid
=(
r
+
l
)/2;

121 if(
	`ok
(
mid
,
k
,
c
))

122 
r
=
mid
;

124 
l
=
mid
;

126  
r
;

127 
	}
}

130 
	$maö
()

132 
k
,
c
,
li
,
n
;

133 
	`sˇnf
("%d%d%d",&
k
,&
c
,&
li
)!=
EOF
)

135 
n
=
k
+
c
;

136 
i
=0; i<
n
; i++)

137 
j
=0; j<
n
; j++)

139 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

140 if(
m©
[
i
][
j
]==0)

141 
m©
[
i
][
j
]=
öf
;

143 
i
=0; i<
n
; i++)

144 
lim
[
i
]=
li
;

145 
	`Êoyd
(
n
);

146 
ªt
=
	`sﬁve
(
k
,
c
);

147 
	`¥ötf
("%.0f\n",
ªt
);

150 
	}
}

	@problems/poj/poj_2151_dp.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 33

	)

20 
	#X
 1111

	)

21 
	#M
 1000010

	)

22 
	#S
 1000100

	)

23 
	#ïs
 1e-8

	)

24 
	#öf
 0x3fffffff

	)

25 
	#MOD
 1000000007

	)

26 
	#PB
 
push_back


	)

27 
	#MP
 
make_∑ú


	)

28 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

29 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

30 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

32 
	tLL
;

33 
usög
 
«me•a˚
 
	g°d
;

35 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

36 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

37 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

38 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

40 
	gdp
[
N
][N],
	gp
[
X
][N],
	gm©
[X][N],
	gsum
[X][N];

41 
	gn
,
	gm
,
	gk
;

43 
	$maö
()

45 
ªt
,
tmp
;

46 
	`sˇnf
("%d%d%d",&
m
,&
n
,&
k
)!=
EOF
)

48 if(
n
==0&&
m
==0&&
k
==0)

50 
	`mem£t
(
p
,0,(p));

51 
	`mem£t
(
dp
,0,(dp));

52 
i
=1; i<=
n
; i++)

53 
j
=1; j<=
m
; j++)

54 
	`sˇnf
("%lf",&
m©
[
i
][
j
]);

55 
i
=1; i<=
n
; i++)

57 
dp
[0][0]=1;

58 
u
=1; u<=
m
; u++)

59 
dp
[
u
][0]=dp[u-1][0]*(1-
m©
[
i
][u]);

60 
u
=1; u<=
m
; u++)

61 
v
=1; v<=
u
; v++)

62 
dp
[
u
][
v
]=dp[u-1][v-1]*
m©
[
i
][u]+dp[u-1][v]*(1-mat[i][u]);

63 
u
=0; u<=
m
; u++)

64 
p
[
i
][
u
]=
dp
[
m
][u];

65 
sum
[
i
][0]=0;

66 
u
=1; u<=
m
; u++)

67 
sum
[
i
][
u
]=sum[i][u-1]+
p
[i][u];

69 
ªt
=0,
tmp
=1;

70 
i
=1; i<=
n
; i++)

71 
tmp
*=
sum
[
i
][
m
];

72 
ªt
=
tmp
;

73 
tmp
=1;

74 
i
=1; i<=
n
; i++)

75 
tmp
*=
sum
[
i
][
k
-1];

76 
ªt
-=
tmp
;

77 
	`¥ötf
("%.3f\n",
ªt
);

80 
	}
}

	@problems/poj/poj_2181.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 200001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
][2];

9 
	$maö
()

11 
n
,
x
;

12 
	`sˇnf
("%d",&
n
)!=
EOF
)

14 
dp
[0][0]=0,dp[0][1]=-
öf
;

15 
i
=1; i<=
n
; i++)

17 
	`sˇnf
("%d",&
x
);

18 
dp
[
i
][0]=dp[i-1][0];

19 
dp
[
i
][0]=
	`max
(dp[i-1][1]-
x
,dp[i][0]);

20 
dp
[
i
][1]=dp[i-1][1];

21 
dp
[
i
][1]=
	`max
(dp[i-1][0]+
x
,dp[i][1]);

24 
	`¥ötf
("%d\n",
	`max
(
dp
[
n
][0],dp[n][1]));

27 
	}
}

	@problems/poj/poj_2183.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1011

	)

5 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
<<1];

6 
	gs
[
N
][100],
	g°
[100];

7 
	gli°
[
N
],
	gt›
,
	g˙t
[26],
	gvis
[N],
	g™s
,
	grid
;

9 
	$ö£π
(
f
,
t
)

11 
e
[
t›
].
f
=f,e[t›].
t
=t;

12 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

13 
	}
}

15 
	$ok
(
i
,
j
)

17 
li
=
	`°æí
(
s
[
i
]),
lj
=°æí(s[
j
]);

18 if(
li
!=
lj
-1)

20 
u
,
v
;

21 
u
=
v
=0; 
s
[
i
][u]==s[
j
][v]&&u<
li
; u++,v++);

22 
v
++;

23 ; 
s
[
i
][
u
]==s[
j
][
v
]&&u<
li
; u++,v++);

24  
u
==
li
&&
v
==
lj
;

25 
	}
}

27 
	$dfs
(
now
,
l
)

29 
vis
[
now
]=1;

30 if(
l
>
™s
)

31 
™s
=
l
,
rid
=
now
;

32 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

34 
to
=
e
[
i
].
t
;

35 if(
vis
[
to
])

37 
	`dfs
(
to
,
l
+1);

39 
	}
}

41 
	$maö
()

43 
n
,
id
;

44 
	`sˇnf
("%d%s",&
n
,&
°
)!=
EOF
)

46 
id
=-1;

47 
i
=0; i<
n
; i++)

49 
	`sˇnf
("%s",
s
[
i
]);

50 if(
	`°rcmp
(
s
[
i
],
°
)==0)

51 
id
=
i
;

53 if(
id
==-1)

55 
	`¥ötf
("%s\n",
s
[0]);

58 
t›
=0;

59 
i
=0; i<
n
; i++)

60 
li°
[
i
]=-1;

61 
i
=0; i<
n
; i++)

62 
j
=0; j<
n
; j++)

63 if(
	`ok
(
i
,
j
))

64 
	`ö£π
(
i
,
j
);

65 
	`mem£t
(
vis
,0,(vis));

66 
™s
=0;

67 
rid
=
id
;

68 
	`dfs
(
id
,0);

69 
	`¥ötf
("%s\n",
s
[
rid
]);

72 
	}
}

	@problems/poj/poj_2184.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 210000

	)

5 
	#X
 100000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gnow
[
N
];

10 
	$sig
(
i
,
add
,
ed
)

12 if(
add
>0)

13  
i
<=
ed
;

15  
i
>=
ed
;

16 
	}
}

18 
	$maö
()

20 
n
;

21 
	`sˇnf
("%d",&
n
)!=
EOF
)

23 
x
,
y
;

24 
i
=0; i<
N
; i++)

25 
now
[
i
]=-
öf
;

26 
now
[
X
]=0;

27 
°
,
add
,
ed
,
up
=
X
,
dn
=X;

28 
i
=0; i<
n
; i++)

30 
	`sˇnf
("%d%d",&
x
,&
y
);

31 if(
x
>=0)

32 
add
=-1,
°
=
up
+
x
,
ed
=
dn
+x;

34 
add
=1,
°
=
dn
+
x
,
ed
=
up
+x;

35 
j
=
°
; 
	`sig
(j,
add
,
ed
); j+=add)

37 if(
now
[
j
-
x
]>-
öf
)

39 
now
[
j
]=
	`max
“ow[j],now[j-
x
]+
y
);

40 
up
=
	`max
(up,
j
);

41 
dn
=
	`mö
(dn,
j
);

45 
ªt
=0;

46 
i
=
X
; i<
N
; i++)

47 if(
now
[
i
]>=0)

48 
ªt
=
	`max
‘ë,
i
-
X
+
now
[i]);

49 
	`¥ötf
("%d\n",
ªt
);

52 
	}
}

	@problems/poj/poj_2192.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 211

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[401][201],
	gl
;

8 
	gs1
[
N
],
	gs2
[N],
	gs
[N<<1];

10 
	$dfs
(
i
,
j
)

12 if(
dp
[
i
][
j
]>=0)

13  
dp
[
i
][
j
];

14 if(
j
==
l
)

15  
dp
[
i
][
j
]=1;

16 
ªt
=0;

17 if(
s
[
i
]==
s1
[
j
])

18 
ªt
=
	`max
‘ë,
	`dfs
(
i
+1,
j
+1));

19 if(
s
[
i
]==
s2
[i-
j
])

20 
ªt
=
	`max
‘ë,
	`dfs
(
i
+1,
j
));

21  
dp
[
i
][
j
]=
ªt
;

22 
	}
}

24 
	$maö
()

26 
n
;

27 
	`sˇnf
("%d",&
n
);

28 
ˇ
=1; ca<=
n
; ca++)

30 
	`sˇnf
("%s%s%s",
s1
,
s2
,
s
);

31 
l
=
	`°æí
(
s
);

32 
	`mem£t
(
dp
,-1,(dp));

33 
	`¥ötf
("D©®£à%d: ",
ˇ
);

34 if(
	`dfs
(0,0))

35 
	`puts
("yes");

37 
	`puts
("no");

40 
	}
}

	@problems/poj/poj_2225.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 12

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gs
[20];

35 
	gm©
[
N
][N][N],
	gv
[N][N][N],
	gn
;

36 
	snode
{ 
	mx
,
	my
,
	mz
,
	m˙t
; }
	g°
,
	ged
,
	gq
[
N
*N*N];

37 
	gdú
[6][3]={ {1,0,0},{-1,0,0},{0,1,0},{0,-1,0},{0,0,1},{0,0,-1} };

39 
	$öbﬂrd
(
x
,
y
,
z
)

41  0<=
x
&&x<
n
&&0<=
y
&&y<n&&0<=
z
&&z<n;

42 
	}
}

44 
	$sﬁve
()

46 
l
,
r
;

47 
	`mem£t
(
v
,0,(v));

48 
°
.
˙t
=0;

49 
q
[
l
=
r
=0]=
°
;

50 
v
[
°
.
x
][°.
y
][°.
z
]=1;

51 
l
<=
r
)

53 
node
 
now
=
q
[
l
++];

54 if(
now
.
x
==
ed
.x&&now.
y
=Ûd.y&&now.
z
==ed.z)

55  
now
.
˙t
;

56 
i
=0; i<6; i++)

58 
x
=
now
.x+
dú
[
i
][0],
y
Úow.y+dú[i][1],
z
=now.z+dir[i][2];

59 if(
	`öbﬂrd
(
x
,
y
,
z
)&&!
v
[x][y][z]&&
m©
[x][y][z]==0)

61 
v
[
x
][
y
][
z
]=1;

62 ++
r
;

63 
q
[
r
].
x
=x,q[r].
y
=y,q[r].
z
=z;

64 
q
[
r
].
˙t
=
now
.cnt+1;

69 
	}
}

71 
	$maö
()

73 
x
,
y
,
z
;

74 
	`sˇnf
("%s",
s
)!=
EOF
)

76 
	`sˇnf
("%d",&
n
);

77 
i
=0; i<
n
; i++)

79 
j
=0; j<
n
; j++)

81 
	`sˇnf
("%s",
s
);

82 
k
=0; k<
n
; k++)

83 if(
s
[
k
]=='X')

84 
m©
[
j
][
k
][
i
]=1;

86 
m©
[
j
][
k
][
i
]=0;

89 
	`sˇnf
("%d%d%d",&
°
.
y
,&°.
x
,&°.
z
);

90 
	`sˇnf
("%d%d%d",&
ed
.
y
,&ed.
x
,&ed.
z
);

91 
	`sˇnf
("%s",
s
);

92 
ªt
;

93 
ªt
=
	`sﬁve
();

94 if(
ªt
<0)

95 
	`puts
("NO ROUTE");

97 
	`¥ötf
("%d %d\n",
n
,
ªt
);

100 
	}
}

	@problems/poj/poj_2231.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 10001

	)

4 
usög
 
«me•a˚
 
	g°d
;

5 
	tLL
;

7 
LL
 
	gd©
[
N
];

8 
	$cmp
(
LL
 
a
,LL 
b
){ á<b; 
	}
}

10 
	$maö
()

12 
n
;

13 
LL
 
ªt
;

14 
	`sˇnf
("%d",&
n
)!=
EOF
)

16 
x
;

17 
i
=1; i<=
n
; i++)

19 
	`sˇnf
("%d",&
x
);

20 
d©
[
i
]=
x
;

22 
	`s‹t
(
d©
+1,d©+
n
+1,
cmp
);

23 
d©
[0]=dat[1];

24 
LL
 
tmp
=0;

25 
ªt
=0;

26 
˙t
=0;

27 
i
=1; i<=
n
; i++)

29 
tmp
+=
˙t
*(
d©
[
i
]-dat[i-1]);

30 
ªt
+=
tmp
;

31 
˙t
++;

33 
	`¥ötf
("%Œd\n",
ªt
<<1);

36 
	}
}

	@problems/poj/poj_2265_Bee_Maja_math.cpp

7 
	~<c°rög
>

8 
	~<cm©h
>

9 
	~<c°dio
>

10 
	~<ve˘‹
>

11 
	~<£t
>

12 
	~<m≠
>

13 
	~<queue
>

14 
	~<°rög
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
	g™s
[10][2]={{-1,1},{-1,0},{0,-1},{1,-1},{1,0},{0,1}};

32 
	$œy
(
n
,&
id
)

34 
ªt
,
y
;

35 
x
;

36 
x
=(-3+
	`sqπ
(9+12.0*(
n
-1)))/6.0;

37 
ªt
=(
x
);

39 
y
=3*
ªt
*ret+3*ret+1;

40 if(
y
==
n
)

42 if(
ªt
==0Ë
id
=1;

43 
id
=6*
ªt
;

44  
ªt
;

46 
id
=
n
-
y
;

47  
ªt
+1;

48 
	}
}

50 
	$gë
(&
x
,&
y
,
k
,
id
)

52 if(
id
==0)

53 
x
=
k
-1,
y
=1;

54 if(
id
==1)

55 
x
=-1,
y
=
k
;

56 if(
id
==2)

57 
x
=-
k
,
y
=k-1;

58 if(
id
==3)

59 
x
=1-
k
,
y
=-1;

60 if(
id
==4)

61 
x
=1,
y
=-
k
;

63 
x
=
k
,
y
=1-k;

64 
	}
}

66 
	$maö
()

68 
n
,
x
,
y
,
a
,
b
,
ªtx
,
ªty
;

69 
	`sˇnf
("%d",&
n
)!=
EOF
)

71 if(
n
==1)

73 
	`puts
("0 0");

76 
x
=
	`œy
(
n
,
y
);

77 
a
=
y
/
x
,
b
=y%x;

78 if(
b
==0)

79 
a
--,
b
=
x
;

81 
	`gë
(
ªtx
,
ªty
,
x
,
a
);

82 
	`¥ötf
("%d %d\n",
ªtx
+
™s
[
a
][0]*(
b
-1),
ªty
+ans[a][1]*(b-1));

85 
	}
}

	@problems/poj/poj_2279.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 32

	)

4 
	tLL
;

6 
	gd©
[
N
],
	g˙t
[N];

8 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

10 
	$maö
()

12 
n
,
sum
;

13 
	`sˇnf
("%d",&
n
)!=
EOF
)

15 
	`mem£t
(
˙t
,0,(cnt));

16 if(
n
==0)

18 
sum
=0;

19 
i
=1; i<=
n
; i++)

21 
	`sˇnf
("%d",&
d©
[
i
]);

22 
sum
+=
d©
[
i
];

24 
tmp
;

25 
i
=1; i<=
n
; i++)

27 
j
=1; j<=
d©
[
i
]; j++)

29 
tmp
=
d©
[
i
]-
j
;

30 
k
=
i
+1; k<=
n
; k++)

31 if(
d©
[
k
]>=
j
)

32 
tmp
++;

33 
tmp
++;

34 
˙t
[
tmp
]++;

37 
LL
 
zi
=1,
mu
=1,
g
;

38 
i
=2; i<=
sum
; i++)

40 
zi
*=
i
;

41 
j
=0; j<
˙t
[
i
]; j++)

42 
mu
*=
i
;

43 
g
=
	`gcd
(
zi
,
mu
);

44 
zi
/=
g
,
mu
/=g;

46 
	`¥ötf
("%Œd\n",
zi
);

49 
	}
}

	@problems/poj/poj_2280_Amphiphilic_Carbon_Molecules_scanning.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

20 
	#N
 10100

	)

21 
	#M
 100000

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
	spoöt
{ 
	mx
,
	my
,
	mt
; 
	m°
; }
	gp
[
N
],
	gp0
,
	gµ
[N];

28 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

29 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

30 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

31 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

32 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

33 
ölöe
 
	$lowî_bound
(
x
){  x&(-x); 
	}
}

35 
	gªt
,
	gt›
;

36 
	gpi
;

38 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
){  (a.
x
-c.x)*(b.
y
-c.y)-◊.y-c.y)*(b.x-c.x); 
	}
}

39 
	$Àn
(
poöt
 
a
,poöà
b
){  (a.
x
-b.x)*◊.x-b.x)+◊.
y
-b.y)*◊.y-b.y); 
	}
}

41 
	$cmp
(
poöt
 
a
,poöà
b
)

43  
a
.
°
<
b
.st;

44 
	}
}

46 
	$sﬁve
(
n
)

48 
i
,
r
,
o
,
t
;

49 
	`s‹t
(
µ
,µ+
n
,
cmp
);

50 
i
=0,
r
=1; i<
n
; i++)

52 
o
=2;

53 if(
µ
[
i
].
°
>0) ;

54 ; 
r
<
n
;Ñ++)

56 
t
=
	`xmu…
(
µ
[
i
],µ[
r
],
p0
);

57 if(
t
==0)

58 
o
++;

59 if(
t
<0)

62 
ªt
=
	`max
‘ë,max(
r
-
i
+1,
n
-r+i+
o
));

64 
	}
}

66 
	$maö
()

68 
n
,
i
,
j
;

69 
pi
=
	`acos
(-1);

70 
	`sˇnf
("%d",&
n
)&&n)

72 if(
n
==1)

74 
	`puts
("1");

77 
i
=0; i<
n
; i++)

78 
	`sˇnf
("%d%d%d",&
p
[
i
].
x
,&p[i].
y
,&p[i].
t
);

79 
ªt
=
i
=0; i<
n
; i++)

81 
p0
=
p
[
i
];

82 
t›
=
j
=0; j<
n
; j++)

84 if(
j
==
i
) ;

85 if(
p
[
j
].
t
==1)

86 
µ
[
t›
]=
p
[
j
];

89 
µ
[
t›
].
x
=2*
p0
.x-
p
[
j
].x;

90 
µ
[
t›
].
y
=2*
p0
.y-
p
[
j
].y;

91 
µ
[
t›
].
t
=
p
[
j
].t;

93 
µ
[
t›
].
°
=
	`©™2
’p[t›].
y
-
p
[
i
].y,µ[t›].
x
-p[i].x);

94 
t›
++;

96 
	`sﬁve
(
t›
);

98 
	`¥ötf
("%d\n",
ªt
);

101 
	}
}

	@problems/poj/poj_2289.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1610

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

35 
	gs
[
N
];

36 
	gm©
[
N
][N],
	g˙t
[N],
	gli°
[N],
	gt›
,
	gy
[N];

38 
	$ö£π
(
f
,
t
)

40 
e
[
t›
].
f
=f,e[t›].
t
=t;

41 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

42 
	}
}

44 
	$föd
(
now
,
lim
)

46 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

48 
to
=
e
[
i
].
t
;

49 if(!
y
[
to
])

51 
y
[
to
]=1;

52 if(
˙t
[
to
]<
lim
)

54 
m©
[
to
][
˙t
[to]++]=
now
;

57 
j
=0; j<
˙t
[
to
]; j++)

58 if(
	`föd
(
m©
[
to
][
j
],
lim
))

60 
m©
[
to
][
j
]=
now
;

66 
	}
}

68 
	$ok
(
lim
,
n
)

70 
	`mem£t
(
m©
,0,(mat));

71 
	`mem£t
(
˙t
,0,(cnt));

72 
i
=0; i<
n
; i++)

74 
	`mem£t
(
y
,0,(y));

75 if(!
	`föd
(
i
,
lim
))

79 
	}
}

81 
	$maö
()

83 
n
,
m
;

84 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

86 
t›
=0;

87 
i
=0; i<
n
; i++)

88 
li°
[
i
]=-1;

89 if(
n
==0&&
m
==0)

91 
i
=0; i<
n
; i++)

93 
	`sˇnf
("%s",
s
);

96 
x
;

97 
	`sˇnf
("%d",&
x
);

98 
	`ö£π
(
i
,
x
);

99 if(
	`gëch¨
()=='\n')

103 
l
=0,
r
=
n
,
mid
;

104 ; 
l
<=
r
;)

106 
mid
=(
l
+
r
)>>1;

107 if(
	`ok
(
mid
,
n
))

108 
r
=
mid
-1;

110 
l
=
mid
+1;

112 
	`¥ötf
("%d\n",
l
);

115 
	}
}

	@problems/poj/poj_2329.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3fffff

	)

5 
	#N
 201

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gm©
[
N
][N],
	gl
[N][N],
	gr
[N][N],
	gu
[N][N],
	gd
[N][N];

9 
	snode
{ 
	mx
,
	my
,
	mt
; }
	gul
[
N
][N],
	gur
[N][N],
	gdl
[N][N],
	gdr
[N][N];

11 
	$dis
(
node
 
a
,nodê
b
)

13  
	`abs
(
a
.
x
-
b
.x)+abs◊.
y
-b.y);

14 
	}
}

15 
	$öbﬂrd
(
x
,
y
,
n
)

17  1<=
x
&&x<=
n
&&1<=
y
&&y<=n;

18 
	}
}

20 
	$sﬁve
(
n
)

22 
	`mem£t
(
l
,0,(l));

23 
	`mem£t
(
r
,0,(r));

24 
	`mem£t
(
u
,0,(u));

25 
	`mem£t
(
d
,0,(d));

26 
i
=1; i<=
n
; i++)

27 
r
[
i
][
n
+1]=
öf
,
d
[n+1][i]=öf,
l
[i][0]=-öf,
u
[0][i]=-inf;

28 
i
=1; i<=
n
; i++)

29 
j
=1; j<=
n
; j++)

31 
l
[
i
][
j
]=
m©
[i][j]>0?j:l[i][j-1];

32 
u
[
i
][
j
]=
m©
[i][j]>0?i:u[i-1][j];

34 
i
=
n
; i>=1; i--)

35 
j
=
n
; j>=1; j--)

37 
r
[
i
][
j
]=
m©
[i][j]>0?j:r[i][j+1];

38 
d
[
i
][
j
]=
m©
[i][j]>0?i:d[i+1][j];

40 
d1
,
d2
;

41 
node
 
tmp
,
now
;

42 
i
=1; i<=
n
; i++)

44 
ul
[
i
][1].
x
=
u
[i][1];

45 
ul
[
i
][1].
y
=1,ul[i][1].
t
=0;

46 
j
=2; j<=
n
; j++)

48 
tmp
.
x
=
u
[
i
][
j
],tmp.
y
=j;

49 
now
.
x
=
i
,now.
y
=
j
;

50 
d1
=
	`dis
(
ul
[
i
][
j
-1],
now
);

51 
d2
=
	`dis
(
tmp
,
now
);

52 if(
d1
<
d2
)

53 
ul
[
i
][
j
]=ul[i][j-1];

54 if(
d1
>
d2
)

55 
ul
[
i
][
j
]=
tmp
,ul[i][j].
t
=0;

57 
ul
[
i
][
j
]=
tmp
,ul[i][j].
t
=1;

60 
i
=
n
; i>=1; i--)

62 
dl
[
i
][1].
x
=
d
[i][1];

63 
dl
[
i
][1].
y
=1,dl[i][1].
t
=0;

64 
j
=2; j<=
n
; j++)

66 
tmp
.
x
=
d
[
i
][
j
],tmp.
y
=j;

67 
now
.
x
=
i
,now.
y
=
j
;

68 
d1
=
	`dis
(
dl
[
i
][
j
-1],
now
);

69 
d2
=
	`dis
(
tmp
,
now
);

70 if(
d1
<
d2
)

71 
dl
[
i
][
j
]=dl[i][j-1];

72 if(
d1
>
d2
)

73 
dl
[
i
][
j
]=
tmp
,dl[i][j].
t
=0;

75 
dl
[
i
][
j
]=
tmp
,dl[i][j].
t
=1;

78 
i
=1; i<=
n
; i++)

80 
ur
[
i
][
n
].
x
=
u
[i][n];

81 
ur
[
i
][
n
].
y
Ú,ur[i][n].
t
=0;

82 
j
=
n
-1; j>=1; j--)

84 
tmp
.
x
=
u
[
i
][
j
],tmp.
y
=j;

85 
now
.
x
=
i
,now.
y
=
j
;

86 
d1
=
	`dis
(
ur
[
i
][
j
+1],
now
);

87 
d2
=
	`dis
(
tmp
,
now
);

88 if(
d1
<
d2
)

89 
ur
[
i
][
j
]=ur[i][j+1];

90 if(
d1
>
d2
)

91 
ur
[
i
][
j
]=
tmp
,ur[i][j].
t
=0;

93 
ur
[
i
][
j
]=
tmp
,ur[i][j].
t
=1;

96 
i
=
n
; i>=1; i--)

98 
dr
[
i
][
n
].
x
=
d
[i][n];

99 
dr
[
i
][
n
].
y
Ú,dr[i][n].
t
=0;

100 
j
=
n
-1; j>=1; j--)

102 
tmp
.
x
=
d
[
i
][
j
],tmp.
y
=j;

103 
now
.
x
=
i
,now.
y
=
j
;

104 
d1
=
	`dis
(
dr
[
i
][
j
+1],
now
);

105 
d2
=
	`dis
(
tmp
,
now
);

106 if(
d1
<
d2
)

107 
dr
[
i
][
j
]=dr[i][j+1];

108 if(
d1
>
d2
)

109 
dr
[
i
][
j
]=
tmp
,dr[i][j].
t
=0;

111 
dr
[
i
][
j
]=
tmp
,dr[i][j].
t
=1;

114 
	}
}

116 
	$equÆ
(
i
,
j
,&
x
,&
y
,
n
)

118 
node
 
now
;

119 
now
.
x
=
i
,now.
y
=
j
;

120 
Àn
=
öf
,
dul
,
dur
,
ddl
,
ddr
,
èg
=0;

121 
dul
=
	`dis
(
now
,
ul
[
i
][
j
]);

122 
dur
=
	`dis
(
now
,
ur
[
i
][
j
]);

123 
ddl
=
	`dis
(
now
,
dl
[
i
][
j
]);

124 
ddr
=
	`dis
(
now
,
dr
[
i
][
j
]);

125 
Àn
=
	`mö
÷í,
dul
);

126 
Àn
=
	`mö
÷í,
dur
);

127 
Àn
=
	`mö
÷í,
ddl
);

128 
Àn
=
	`mö
÷í,
ddr
);

129 if(
Àn
==
dul
)

131 if(
ul
[
i
][
j
].
t
)  0;

132 
x
=
ul
[
i
][
j
].x,
y
=ul[i][j].y;

133 
èg
=1;

135 if(
Àn
==
dur
)

137 if(
ur
[
i
][
j
].
t
)  0;

138 if(
èg
)

140 if(
x
!=
ur
[
i
][
j
].x||
y
!=ur[i][j].y)

144 
x
=
ur
[
i
][
j
].x,
y
=ur[i][j].y,
èg
=1;

146 if(
Àn
==
ddr
)

148 if(
dr
[
i
][
j
].
t
)  0;

149 if(
èg
)

151 if(
x
!=
dr
[
i
][
j
].x||
y
!=dr[i][j].y)

155 
x
=
dr
[
i
][
j
].x,
y
=dr[i][j].y,
èg
=1;

157 if(
Àn
==
ddl
)

159 if(
dl
[
i
][
j
].
t
)  0;

160 if(
èg
)

162 if(
x
!=
dl
[
i
][
j
].x||
y
!=dl[i][j].y)

166 
x
=
dl
[
i
][
j
].x,
y
=dl[i][j].y,
èg
=1;

168  
	`öbﬂrd
(
x
,
y
,
n
);

169 
	}
}

171 
	$show
(
n
)

173 
x
,
y
;

174 
i
=1; i<=
n
; i++)

176 
j
=1; j<=
n
; j++)

178 if(
m©
[
i
][
j
]==0)

180 if(
	`equÆ
(
i
,
j
,
x
,
y
,
n
))

181 
	`¥ötf
("%d",
m©
[
x
][
y
]);

183 
	`¥ötf
("0");

186 
	`¥ötf
("%d",
m©
[
i
][
j
]);

187 if(
j
<
n
)

188 
	`¥ötf
(" ");

190 
	`puts
("");

192 
	}
}

194 
	$maö
()

196 
n
;

197 
	`sˇnf
("%d",&
n
)!=
EOF
)

199 
i
=1; i<=
n
; i++)

200 
j
=1; j<=
n
; j++)

202 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

205 
	`sﬁve
(
n
);

206 
	`show
(
n
);

209 
	}
}

	@problems/poj/poj_2336.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#öf
 0x3ffffff

	)

5 
	#N
 1440

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gdp
[
N
<<1][N],
	g˙t
[N],
	gsum
[N],
	gmxt
,
	gmô
,
	gmic
,
	gn
,
	gti
,
	gm
;

10 
	$dfs
(
t
,
c
,
num
)

12 
lf
,
nowt
,
nowc
;

13 if(
t
>=
mxt
)

15 
lf
=
sum
[
mxt
]-
c
;

16 if(
lf
%
n
==0)

18 
nowt
=
t
+
lf
/
n
*2*
ti
-ti;

19 
nowc
=
num
+
lf
/
n
;

23 
nowt
=
t
+
lf
/
n
*2*
ti
+ti;

24 
nowc
=
num
+
lf
/
n
+1;

26 if(
nowt
<
mô
)

27 
mô
=
nowt
,
mic
=
nowc
;

28 if(
nowt
==
mô
&&
nowc
<
mic
)

29 
mic
=
nowc
;

32 if(
dp
[
t
][
c
]>=0)

34 
dp
[
t
][
c
]=1;

35 if(
sum
[
t
]>
c
)

37 if(
sum
[
t
]-
c
>=
n
)

38 
	`dfs
(
t
+2*
ti
,
c
+
n
,
num
+1);

41 
	`dfs
(
t
+1,
c
,
num
);

42 
	`dfs
(
t
+2*
ti
,
sum
[t],
num
+1);

46 
	`dfs
(
t
+1,
c
,
num
);

47 
	}
}

49 
	$maö
()

51 
T
,
x
;

52 
	`sˇnf
("%d",&
T
);

53 
ˇ
=1; ca<=
T
; ca++)

55 
	`sˇnf
("%d%d%d",&
n
,&
ti
,&
m
);

56 
	`mem£t
(
˙t
,0,(cnt));

57 
	`mem£t
(
sum
,0,(sum));

58 
	`mem£t
(
dp
,-1,(dp));

59 
mxt
=0;

60 
i
=0; i<
m
; i++)

62 
	`sˇnf
("%d",&
x
);

63 
˙t
[
x
]++;

64 
mxt
=
	`max
(mxt,
x
);

66 
sum
[0]=
˙t
[0];

67 
i
=1; i<
N
; i++)

68 
sum
[
i
]=
˙t
[i]+sum[i-1];

69 
mô
=
öf
;

70 
mic
=
öf
;

71 
	`dfs
(0,0,0);

72 
	`¥ötf
("%d %d\n",
mô
,
mic
);

75 
	}
}

	@problems/poj/poj_2346.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 50

	)

5 
	g˙t
[6][
N
],
	gªt
[11];

7 
	$dfs
(
n
,
i
,
s
)

9 if(
i
==
n
)

11 
˙t
[
n
][
s
]++;

14 
u
=0; u<10; u++)

15 
	`dfs
(
n
,
i
+1,
s
+
u
);

16 
	}
}

18 
	$maö
()

20 
n
,
tmp
,
Ác
;

21 
	`mem£t
(
˙t
,0,(cnt));

22 
i
=1; i<=5; i++)

23 
	`dfs
(
i
,0,0);

24 
ªt
[1]=10;

25 
i
=2; i<=10; i++)

27 
tmp
=
i
/2;

28 if(
i
&1)

29 
Ác
=10;

31 
Ác
=1;

32 
j
=0; j<
N
; j++)

33 
ªt
[
i
]+=
˙t
[
tmp
][
j
]*˙t[tmp][j]*
Ác
;

35 
	`sˇnf
("%d",&
n
)!=
EOF
)

37 
	`¥ötf
("%d\n",
ªt
[
n
]);

40 
	}
}

	@problems/poj/poj_2353.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 555

	)

5 
	#öf
 0x3ffffffffffffLL

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
LL
 
	gm©
[
N
][N],
	gdp
[N][N][3];

10 
	gm
,
	gn
,
	gdú
[
N
][N][3],
	gÀn
[N][N][3];

12 
LL
 
	$dfs
(
r
,
c
,
d
,&
¥ñ
)

14 
LL
 
ªt
=
öf
,
tmp
;

15 
now
,
bd
,
nowl
=0;

16 if(
dp
[
r
][
c
][
d
]>=0)

17  
dp
[
r
][
c
][
d
];

18 if(
r
==
m
)

19  
dp
[
r
][
c
][
d
]=0,
¥ñ
=1;

20 if(
c
>1&&
d
!=0)

22 
tmp
=
	`dfs
(
r
,
c
-1,2,
nowl
)+
m©
[r][c-1];

23 if(
ªt
>
tmp
)

24 
ªt
=
tmp
,
bd
=0,
¥ñ
=
nowl
+1;

26 if(
c
<
n
&&
d
!=2)

28 
tmp
=
	`dfs
(
r
,
c
+1,0,
nowl
)+
m©
[r][c+1];

29 if(
ªt
>
tmp
)

30 
ªt
=
tmp
,
bd
=2,
¥ñ
=
nowl
+1;

31 if(
ªt
==
tmp
)

33 if(
¥ñ
>
nowl
+1)

34 
ªt
=
tmp
,
bd
=2,
¥ñ
=
nowl
+1;

37 
tmp
=
	`dfs
(
r
+1,
c
,1,
nowl
)+
m©
[r+1][c];

38 if(
ªt
>
tmp
)

39 
ªt
=
tmp
,
bd
=1,
¥ñ
=
nowl
+1;

40 if(
ªt
==
tmp
)

42 if(
¥ñ
>
nowl
+1)

43 
ªt
=
tmp
,
bd
=1,
¥ñ
=
nowl
+1;

45 
dú
[
r
][
c
][
d
]=
bd
;

46  
dp
[
r
][
c
][
d
]=
ªt
;

47 
	}
}

49 
	$show
(
r
,
c
,
d
)

51 if(
r
==
m
)

53 
ƒ
,
nc
,
nd
,
bd
=
dú
[
r
][
c
][
d
];

54 if(
bd
==0)

55 
ƒ
=
r
,
nc
=
c
-1,
nd
=2;

56 if(
bd
==2)

57 
ƒ
=
r
,
nc
=
c
+1,
nd
=0;

59 
ƒ
=
r
+1,
nc
=
c
,
nd
=1;

60 if(
ƒ
>=1)

62 
	`¥ötf
("%d\n",
nc
);

64 
	`show
(
ƒ
,
nc
,
nd
);

65 
	}
}

67 
	$maö
()

69 
	`mem£t
(
m©
,0,(mat));

70 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

72 
i
=1; i<=
m
; i++)

73 
j
=1; j<=
n
; j++)

74 
	`sˇnf
("%Œd",&
m©
[
i
][
j
]);

75 
	`mem£t
(
dp
,-1,(dp));

76 
nowl
;

77 
	`dfs
(0,1,0,
nowl
);

78 
	`show
(0,1,0);

81 
	}
}

	@problems/poj/poj_2355.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 10011

	)

4 
	#öf
 0x3ffffffffffLL

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gdis
[
N
],
	gc
[4],
	gl
[4],
	gdp
[N];

10 
	$föd
(
LL
 
x
,
ql
,
i
)

12 
l
=
ql
,
r
=
i
,
mid
;

13 ; 
l
<=
r
;)

15 
mid
=(
l
+
r
)>>1;

16 if(
dis
[
mid
]>=
x
)

17 
r
=
mid
-1;

19 
l
=
mid
+1;

21  
l
;

22 
	}
}

24 
	$maö
()

26 
n
,
ql
,
qr
;

27 
i
=1; i<=3; i++)

28 
	`sˇnf
("%Œd",&
l
[
i
]);

29 
i
=1; i<=3; i++)

30 
	`sˇnf
("%Œd",&
c
[
i
]);

31 
	`sˇnf
("%d%d%d",&
n
,&
ql
,&
qr
);

32 
dis
[1]=0;

33 
i
=2; i<=
n
; i++)

34 
	`sˇnf
("%Œd",&
dis
[
i
]);

35 if(
ql
>=
qr
)

36 
	`sw≠
(
ql
,
qr
);

37 
i
=
ql
+1; i<=
qr
; i++)

38 
dp
[
i
]=
öf
;

39 
dp
[
ql
]=0;

40 
i
=
ql
+1; i<=
qr
; i++)

42 
j
=1; j<=3; j++)

44 
LL
 
x
=
dis
[
i
]-
l
[
j
];

45 
id
=
	`föd
(
x
,
ql
,
i
-1);

47 if(
id
==
i
)

49 
dp
[
i
]=
	`mö
(dp[
id
]+
c
[
j
],dp[i]);

52 
	`¥ötf
("%Œd\n",
dp
[
qr
]);

54 
	}
}

	@problems/poj/poj_2356.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 10011

	)

5 
	gd©
[
N
],
	gvis
[N];

7 
	$maö
()

9 
n
,
s
,
l
,
r
;

10 
	`sˇnf
("%d",&
n
)!=
EOF
)

12 
	`mem£t
(
vis
,0,(vis));

13 
s
=0;

14 
i
=1; i<=
n
; i++)

16 
	`sˇnf
("%d",&
d©
[
i
]);

17 
s
=(s+
d©
[
i
])%
n
;

18 if(
vis
[
s
]>0)

19 
l
=
vis
[
s
]+1,
r
=
i
;

20 
vis
[
s
]=
i
;

22 if(
vis
[0]>0)

24 
	`¥ötf
("%d\n",
vis
[0]);

25 
i
=1; i<=
vis
[0]; i++)

26 
	`¥ötf
("%d\n",
d©
[
i
]);

30 
	`¥ötf
("%d\n",
r
-
l
+1);

31 
i
=
l
; i<=
r
; i++)

32 
	`¥ötf
("%d\n",
d©
[
i
]);

36 
	}
}

	@problems/poj/poj_2385.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
	gdp
[1001][31][2];

7 
	gn
,
	gm
,
	gd©
[1001];

9 
	$dfs
(
t
,
c
,
p
)

11 
ªt
=0;

12 if(
dp
[
t
][
c
][
p
]>=0)

13  
dp
[
t
][
c
][
p
];

14 if(
t
==
n
)

15  
dp
[
t
][
c
][
p
]=0;

16 if(
d©
[
t
]==
p
)

17 
ªt
=
	`max
‘ë,
	`dfs
(
t
+1,
c
,
p
)+1);

20 if(
c
>0)

21 
ªt
=
	`max
‘ë,
	`dfs
(
t
+1,
c
-1,
d©
[t])+1);

22 
ªt
=
	`max
(
	`dfs
(
t
+1,
c
,
p
),ret);

24  
dp
[
t
][
c
][
p
]=
ªt
;

25 
	}
}

27 
	$maö
()

29 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

31 
i
=0; i<
n
; i++)

33 
	`sˇnf
("%d",&
d©
[
i
]);

34 
d©
[
i
]--;

36 
	`mem£t
(
dp
,-1,(dp));

37 
	`¥ötf
("%d\n",
	`dfs
(0,
m
,0));

40 
	}
}

	@problems/poj/poj_2392.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 440

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	mh
,
	mc
,
	ma
; }
	gno
[
N
];

8 
	gdp
[42000];

10 
	$cmp
(
node
 
a
,nodê
b
){ á.a<b.a; 
	}
}

12 
	$maö
()

14 
n
,
mx
;

15 
	`sˇnf
("%d",&
n
)!=
EOF
)

17 
i
=0; i<
n
; i++)

18 
	`sˇnf
("%d%d%d",&
no
[
i
].
h
,&no[i].
a
,&no[i].
c
);

19 
	`s‹t
(
no
,no+
n
,
cmp
);

20 
	`mem£t
(
dp
,0,(dp));

21 
mx
=0;

22 
dp
[0]=1;

23 
i
=0; i<
n
; i++)

25 
now
;

26 
k
=1; k-1<
no
[
i
].
c
; k<<=1)

28 if(2*
k
-1<
no
[
i
].
c
)

29 
now
=
k
*
no
[
i
].
h
;

31 
now
=(
no
[
i
].
c
-
k
+1)*no[i].
h
;

32 
j
=
mx
; j>=0; j--)

34 if(
j
+
now
>
no
[
i
].
a
)

36 if(
dp
[
j
])

38 
dp
[
j
+
now
]=1;

39 
mx
=
	`max
(mx,
j
+
now
);

44 
	`¥ötf
("%d\n",
mx
);

47 
	}
}

	@problems/poj/poj_2424.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1001

	)

5 
	gvis
[
N
],
	gq
[3][N],
	gl
[3],
	gr
[3],
	g˙t
[3];

7 
	$gë
(
s
[])

9 
ªt
=(
s
[0]-'0')*10+s[1]-'0';

10 
ªt
*=60;

11 
ªt
+=(
s
[3]-'0')*10+s[4]-'0';

12  
ªt
-480;

13 
	}
}

15 
ölöe
 
	$gëköd
(
x
)

17  (
x
-1)/2;

18 
	}
}

20 
	$maö
()

22 
	`sˇnf
("%d%d%d",&
˙t
[0],&˙t[1],&˙t[2])!=
EOF
)

24 if(
˙t
[0]==0&&cnt[1]==0&&cnt[2]==0)

26 
	`mem£t
(
vis
,0,(vis));

27 
s
[10];

28 
x
;

29 ; 
	`sˇnf
("%s",
s
);)

31 if(
s
[0]=='#')

33 
	`sˇnf
("%d",&
x
);

34 
vis
[
	`gë
(
s
)]=
x
;

36 
i
=0; i<3; i++)

37 
r
[
i
]=-1,
l
[i]=0;

38 
ªt
=0,
¥e
;

39 
i
=0; i<
N
; i++)

41 
j
=0; j<3; j++)

42 ; 
r
[
j
]>=
l
[j]&&
q
[j][l[j]]<=
i
;Ü[j]++);

43 if(
vis
[
i
]>0)

45 
id
=
	`gëköd
(
vis
[
i
]);

46 if(
r
[
id
]-
l
[id]+1>=
˙t
[id])

48 if(
q
[
id
][
r
[id]-
˙t
[id]+1]>
i
+30)

52 
¥e
=
q
[
id
][
r
[id]-
˙t
[id]+1];

53 
q
[
id
][++
r
[id]]=
¥e
+30;

54 
ªt
+=
vis
[
i
];

59 
q
[
id
][++
r
[id]]=
i
+30;

60 
ªt
+=
vis
[
i
];

64 
	`¥ötf
("%d\n",
ªt
);

67 
	}
}

	@problems/poj/poj_2446_hungary.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1031

	)

20 
	#M
 1100010

	)

21 
	#S
 1100100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

35 
	gm©
[
N
][N],
	gm
,
	gn
,
	gli°
[N],
	gt›
,
	gm©ch
[N],
	gy
[N],
	gdú
[4][2]={{1,0},{-1,0},{0,-1},{0,1}};

36 
	gpoi
[
N
],
	g±
;

38 
	$ö£π
(
f
,
t
)

40 
e
[
t›
].
f
=f,e[t›].
t
=t;

41 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

42 
	}
}

44 
	$öbﬂrd
(
x
,
y
)

46  0<=
x
&&x<
m
&&0<=
y
&&y<
n
;

47 
	}
}

49 
	$föd
(
now
)

51 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

53 
to
=
e
[
i
].
t
;

54 if(!
y
[
to
])

56 
y
[
to
]=1;

57 if(
m©ch
[
to
]<0||
	`föd
(match[to]))

59 
m©ch
[
to
]=
now
;

65 
	}
}

67 
	$hung¨y
(
n
)

69 
ªt
=0;

70 
	`mem£t
(
m©ch
,-1,(match));

71 
i
=0; i<
±
; i++)

73 
	`mem£t
(
y
,0,(y));

74 if(
	`föd
(
poi
[
i
]))

75 
ªt
++;

77  
ªt
;

78 
	}
}

80 
	$maö
()

82 
k
;

83 
	`sˇnf
("%d%d%d",&
m
,&
n
,&
k
)!=
EOF
)

85 
t›
=0;

86 
±
=0;

87 
i
=0; i<
m
*
n
; i++)

88 
li°
[
i
]=-1;

89 
	`mem£t
(
m©
,0,(mat));

90 
i
=0; i<
k
; i++)

92 
x
,
y
;

93 
	`sˇnf
("%d%d",&
y
,&
x
);

94 
x
--,
y
--;

95 
m©
[
x
][
y
]=1;

97 
i
=0; i<
m
; i++)

98 
j
=0; j<
n
; j++)

99 if(
m©
[
i
][
j
]==0)

100 
poi
[
±
++]=
i
*
m
+
j
;

101 
i
=0; i<
m
; i++)

102 
j
=0; j<
n
; j++)

104 
f
=
i
*
m
+
j
,
t
;

105 if(
m©
[
i
][
j
])

107 
d
=0; d<4; d++)

109 
x
=
i
+
dú
[
d
][0],
y
=
j
+dir[d][1];

110 if(
	`öbﬂrd
(
x
,
y
)&&!
m©
[x][y])

112 
t
=
x
*
m
+
y
;

113 
	`ö£π
(
f
,
t
);

117 
pi
=
	`hung¨y
(
m
*
n
-
k
);

118 if(
pi
==
m
*
n
-
k
)

119 
	`puts
("YES");

121 
	`puts
("NO");

124 
	}
}

	@problems/poj/poj_2452_RMQ_classic.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 50100

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gd©
[
N
],
	gdp
[N][18],
	gmi
[N][18];

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

37 
	$big
(
i
,
j
){  
d©
[i]>d©[j]?i:j; 
	}
}

38 
	$smÆl
(
i
,
j
){  
d©
[i]<d©[j]?i:j; 
	}
}

40 
	$RMQ
(
n
)

42 
k
=(
	`log
(1.0*
n
)/log(2.0));

43 
i
=1; i<=
n
; i++)

44 
dp
[
i
][0]=
mi
[i][0]=i;

45 
j
=1; j<=
k
; j++)

46 
i
=1; i<=
n
; i++)

48 if(
i
+
	`B
(
j
)-1>
n
)

50 
dp
[
i
][
j
]=
	`big
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

51 
mi
[
i
][
j
]=
	`smÆl
(mi[i][j-1],mi[i+
	`B
(j-1)][j-1]);

53 
	}
}

55 
	$quîy
(
l
,
r
,
èg
)

57 
k
=(
	`log
(1.0*(
r
-
l
+1))/log(2.0));

58 if(
èg
==1)

59  
	`big
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

61  
	`smÆl
(
mi
[
l
][
k
],mi[
r
-
	`B
(k)+1][k]);

62 
	}
}

64 
	$sﬁve
(
n
)

66 
ªt
=0,
l
,
r
,
mid
;

67 
i
=1; i<
n
; i++)

69 
l
=
i
+1,
r
=
n
;

70 ; 
l
<=
r
; )

72 
mid
=(
l
+
r
)>>1;

73 if(
d©
[
	`quîy
(
i
+1,
mid
,0)]>dat[i])

74 
l
=
mid
+1;

76 
r
=
mid
-1;

78 if(
r
<=
i
)

80 
ªt
=
	`max
‘ë,
	`quîy
(
i
+1,
r
,1)-i);

82 if(
ªt
<=0)

84  
ªt
;

85 
	}
}

87 
	$maö
()

89 
n
;

90 
	`sˇnf
("%d",&
n
)!=
EOF
)

92 
	`mem£t
(
d©
,0,(dat));

93 
i
=1; i<=
n
; i++)

94 
	`sˇnf
("%d",&
d©
[
i
]);

95 
	`RMQ
(
n
);

96 
	`¥ötf
("%d\n",
	`sﬁve
(
n
));

99 
	}
}

	@problems/poj/poj_2454_Jersey_Politics_randon.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<c°dlib
>

11 
	~<£t
>

12 
	~<m≠
>

13 
	~<queue
>

14 
	~<°rög
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
	sd©a
{ 
	mi
,
	mx
; }
	gd©
[200],
	gA
[100],
	gB
[100],
	gtmp
;

32 
	$cmp
(
d©a
 
a
,d©®
b
){ á.
x
>b.x; 
	}
}

34 
	$maö
()

36 
k
,
n
,
suma
,
sumb
,
now
,
sum
,
x
,
y
,
i
;

37 
	`sˇnf
("%d",&
k
)!=
EOF
)

39 
n
=
k
*3;

40 
sum
=500*
k
;

41 
i
=0; i<
n
; i++)

43 
	`sˇnf
("%d",&
d©
[
i
].
x
);

44 
d©
[
i
].i=i+1;

46 
	`s‹t
(
d©
,d©+
n
,
cmp
);

47 
i
=2*
k
; i<
n
; i++)

48 
	`¥ötf
("%d\n",
d©
[
i
].i);

49 
suma
=
sumb
=0;

50 
now
=
i
=0; i<2*
k
; i++)

52 if(
now
==0)

54 
A
[
i
>>1]=
d©
[i];

55 
suma
+=
d©
[
i
].
x
;

59 
B
[
i
>>1]=
d©
[i];

60 
sumb
+=
d©
[
i
].
x
;

62 
now
^=1;

65 ; (
suma
<=
sum
||
sumb
<=sum);)

67 
x
=
	`ønd
()%
k
;

68 
y
=
	`ønd
()%
k
;

69 
suma
=suma-
A
[
x
].x+
B
[
y
].x;

70 
sumb
=sumb-
B
[
y
].
x
+
A
[x].x;

71 
tmp
=
A
[
x
],A[x]=
B
[
y
],B[y]=tmp;

73 
i
=0; i<
k
; i++)

74 
	`¥ötf
("%d\n",
A
[
i
].i);

75 
i
=0; i<
k
; i++)

76 
	`¥ötf
("%d\n",
B
[
i
].i);

79 
	}
}

	@problems/poj/poj_2464_segmentTree.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 200011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	snode
{ 
	ml
,
	mr
,
	ms
;

7 
gm
(){  (
	ml
+
	mr
)>>1; }

9 
	spoöt
{ 
	mx
,
	my
; }
	gp
[
N
];

10 
	gy
[
N
],
	gt›
,
	gq
[N];

12 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

13 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

15 ˛as†
	c£g_åì


17 
	mpublic
:

18 
node
 
no
[
N
<<2];

19 
	$buûd
(
id
,
l
,
r
)

21 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
s
=0;

22 if(
l
==
r
)

24 
mid
=(
l
+
r
)>>1;

25 
	`buûd
(
	`L
(
id
),
l
,
mid
);

26 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

28 
	$upd©e
(
id
,
p
,
x
)

30 if(
no
[
id
].
l
=Úo[id].
r
)

32 
no
[
id
].
s
+=
x
;

35 if(
p
<=
no
[
id
].
	`gm
())

36 
	`upd©e
(
	`L
(
id
),
p
,
x
);

38 
	`upd©e
(
	`R
(
id
),
p
,
x
);

39 
no
[
id
].
s
Úo[
	`L
(id)].s+no[
	`R
(id)].s;

40 
	}
}

41 
	$quîy
(
id
,
Œ
,
º
)

43 if(
Œ
>
º
)  0;

44 
ªt
=0,
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

45 if(
l
>=
Œ
&&
r
<=
º
)

46  
no
[
id
].
s
;

47 if(
mid
>=
Œ
&&
l
<=
º
)

48 
ªt
+=
	`quîy
(
	`L
(
id
),
Œ
,
º
);

49 if(
mid
<
º
&&
r
>=
Œ
)

50 
ªt
+=
	`quîy
(
	`R
(
id
),
Œ
,
º
);

51  
ªt
;

52 
	}
}

53 }
	gÀ·
,
	gright
;

55 
	$cmp1
(
a
,
b
){ á<b; 
	}
}

56 
	$cmp2
(
poöt
 
a
,poöà
b
){ á.
x
<b.x; 
	}
}

58 
	$gë_id
(
x
)

60 
l
=0,
r
=
t›
-1,
mid
;

61 ; 
l
<=
r
;)

63 
mid
=(
l
+
r
)>>1;

64 if(
y
[
mid
]<
x
)

65 
l
=
mid
+1;

66 if(
y
[
mid
]>
x
)

67 
r
=
mid
-1;

69  
mid
;

72 
	}
}

74 
	$maö
()

76 
n
;

77 
	`sˇnf
("%d",&
n
)!=
EOF
)

79 if(
n
==0)

81 
t›
=0;

82 
i
=0; i<
n
; i++)

84 
	`sˇnf
("%d%d",&
p
[
i
].
x
,&p[i].
y
);

85 
y
[
t›
++]=
p
[
i
].y;

87 
	`s‹t
(
y
,y+
t›
,
cmp1
);

88 
	`s‹t
(
p
,p+
n
,
cmp2
);

89 
¡›
=1;

90 
i
=1; i<
t›
; i++)

92 if(
y
[
i
]==y[
¡›
-1])

95 
y
[
¡›
++]=y[
i
];

97 
t›
=
¡›
;

98 
À·
.
	`buûd
(1,1,
t›
);

99 
right
.
	`buûd
(1,1,
t›
);

100 
i
=0; i<
n
; i++)

101 
right
.
	`upd©e
(1,
	`gë_id
(
p
[
i
].
y
)+1,1);

107 
j
;

108 
°™
=-1,
Ÿ›
=0;

109 
i
=0; i<
n
; i=
j
)

111 
j
=
i
+1; j<
n
; j++)

112 if(
p
[
j
].
x
!ı[
i
].x)

114 
k
=
i
; k<
j
; k++)

115 
right
.
	`upd©e
(1,
	`gë_id
(
p
[
k
].
y
)+1,-1);

116 
°
,
ﬁ
=-1,
d
,
s
,
o
;

117 
k
=
i
; k<
j
; k++)

119 
d
=
	`gë_id
(
p
[
k
].
y
)+1;

120 
s
=
À·
.
	`quîy
(1,1,
d
-1)+
right
.quîy(1,d+1,
t›
);

121 
o
=
À·
.
	`quîy
(1,
d
+1,
t›
)+
right
.query(1,1,d-1);

122 if(
ﬁ
<
o
)

123 
ﬁ
=
o
,
°
=
s
;

124 if(
ﬁ
==
o
)

125 
°
=
	`mö
(°,
s
);

127 if(
°
>
°™
)

128 
°™
=
°
,
q
[
Ÿ›
=0]=
ﬁ
,otop++;

129 if(
°
==
°™
)

130 
q
[
Ÿ›
++]=
ﬁ
;

131 
k
=
i
; k<
j
; k++)

132 
À·
.
	`upd©e
(1,
	`gë_id
(
p
[
k
].
y
)+1,1);

134 
	`s‹t
(
q
,q+
Ÿ›
,
cmp1
);

135 
	`¥ötf
("Sèn: %d; OŒõ:",
°™
);

136 
¥e
=-1;

137 
i
=0; i<
Ÿ›
; i++)

139 if(
q
[
i
]==
¥e
)

143 
	`¥ötf
(" %d",
q
[
i
]);

144 
¥e
=
q
[
i
];

147 
	`puts
(";");

150 
	}
}

	@problems/poj/poj_2486_Apple_Tree_TreeDp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 110

	)

4 
	#K
 210

	)

6 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[2*
N
];

7 
	gn
,
	gk
,
	gvis
[
N
],
	gvÆ
[N],
	gli°
[N],
	gt›
,
	gdp
[N][
K
],
	gback
[N][K];

9 
	$ö£π
(
f
,
t
)

11 
e
[
t›
].
f
=f,e[t›].
t
=t;

12 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

13 
	}
}

15 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

17 
	$dfs
(
now
)

19 
i
,
u
,
v
;

20 
vis
[
now
]=1;

21 
i
=0; i<=
k
; i++)

22 
dp
[
now
][
i
]=
back
[now][i]=
vÆ
[now];

23 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

24 if(!
vis
[
e
[
i
].
t
])

26 
	`dfs
(
e
[
i
].
t
);

27 
u
=
k
-1; u>=0; u--)

28 
v
=0; v<=
u
; v++)

30 
back
[
now
][
u
+2]=
	`max
(back[now][u+2],back[
e
[
i
].
t
][
v
]+back[now][u-v]);

31 
dp
[
now
][
u
+2]=
	`max
(dp[now][u+2],
back
[
e
[
i
].
t
][
v
]+dp[now][u-v]);

32 
dp
[
now
][
u
+1]=
	`max
(dp[now][u+1],dp[
e
[
i
].
t
][
v
]+
back
[now][u-v]);

35 
	}
}

37 
	$maö
()

39 
i
,
x
,
y
;

40 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

42 
	`mem£t
(
vis
,0,(vis));

43 
	`mem£t
(
dp
,0,(dp));

44 
	`mem£t
(
back
,0,(back));

45 
t›
=
i
=0; i<
n
; i++)

46 
li°
[
i
]=-1;

47 
i
=0; i<
n
; i++)

48 
	`sˇnf
("%d",&
vÆ
[
i
]);

49 
i
=0; i<
n
-1; i++)

51 
	`sˇnf
("%d%d",&
x
,&
y
);

52 
	`ö£π
(
x
-1,
y
-1);

53 
	`ö£π
(
y
-1,
x
-1);

55 
	`dfs
(0);

56 
	`¥ötf
("%d\n",
dp
[0][
k
]);

59 
	}
}

	@problems/poj/poj_2492_A_BUGS_LIFE_ufind.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 100011

	)

5 
ölöe
 
	$sig
(
x
){  x>0?1:-1; 
	}
}

6 
ölöe
 
	$abs
(
x
){  x>0?x:-x; 
	}
}

8 
	suföd


10 
	mp
[
MAXN
],
	mt
;

12 
öô
(){ 
mem£t
(
p
,0,(p)); }

14 
_run
(&
x
)

16  ; 
	mp
[
t
=
abs
(
x
)]; 
	mx
=
sig
(x)*
p
[abs(x)],p[t]=sig(p[t])*(p[abs(x)]?p[abs(x)]:abs(p[t])));

19 
_run_bŸh
(&
i
,&
j
)

21 
_run
(
i
); _run(
j
);

24 
_£t_side
(
x
,
i
,
j
)

26 
	mp
[
abs
(
i
)]=
sig
(i)*◊bs(i)=˜bs(
j
)?0:(
x
*j));

30 
_judge_side
(
x
,
i
,
j
)

32  ((
	mi
==
x
*
j
)&&
i
);

35 
£t_‰õnd
(
i
,
j
)

37 
_run_bŸh
(
i
,
j
);

38 
_£t_side
(1,
i
,
j
);

39  !
_judge_side
(-1,
i
,
j
);

42 
£t_íemy
(
i
,
j
)

44 
_run_bŸh
(
i
,
j
);

45 
_£t_side
(-1,
i
,
j
);

46  !
_judge_side
(1,
i
,
j
);

49 
is_‰õnd
(
i
,
j
)

51 
_run_bŸh
(
i
,
j
);

52  
_judge_side
(1,
i
,
j
);

55 
is_íemy
(
i
,
j
)

57 
_run_bŸh
(
i
,
j
);

58  
_judge_side
(-1,
i
,
j
);

60 }
	guf
;

62 
	$maö
()

64 
t
,
ˇ
,
n
,
m
,
i
,
x
,
y
,
èg
;

65 
	`sˇnf
("%d",&
t
);

66 
ˇ
=1; ca<=
t
; ca++)

68 
	`¥ötf
("S˚«riÿ#%d:\n",
ˇ
);

69 
	`sˇnf
("%d%d",&
n
,&
m
);

70 
uf
.
	`öô
();

71 
èg
=
i
=0; i<
m
; i++)

73 
	`sˇnf
("%d%d",&
x
,&
y
);

74 if(
èg
) ;

75 if(
uf
.
	`is_‰õnd
(
x
,
y
))

76 
èg
=1;

78 
uf
.
	`£t_íemy
(
x
,
y
);

80 if(
èg
)

81 
	`puts
("Suspicious bugs found!");

83 
	`puts
("No suspicious bugs found!");

84 
	`puts
("");

87 
	}
}

	@problems/poj/poj_2525_text_formalization_string.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#X
 100

	)

21 
	#MOD
 1000000007

	)

23 
	tLL
;

24 
usög
 
«me•a˚
 
	g°d
;

26 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

27 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

29 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

31 
	gs
[
N
],
	gA
[2][
X
][N],
	gB
[2][X][N];

32 
	gvis
[
N
],
	gn
,
	gm
;

34 
ölöe
 
	$i¶ow
(
x
)

36  'a'<=
x
&&x<='z';

37 
	}
}

39 
ölöe
 
	$uµî
(
x
)

41 if(
	`i¶ow
(
x
))

42  
x
+'A'-'a';

43  
x
;

44 
	}
}

46 
	$öô
(
id
,
A
[][
X
][
N
])

48 
i
,
l
,
t›
;

49 
l
=
	`°æí
(
s
);

50 
t›
=0;

51 
i
=1; i<
l
&&
s
[i]!='"'; i++)

52 
A
[0][
id
][
t›
++]=
s
[
i
];

53 
A
[0][
id
][
t›
]='\0';

54 
i
++; i<
l
&&
s
[i]!='"'; i++);

55 
t›
=0;

56 
i
++; i<
l
&&
s
[i]!='"'; i++)

57 
A
[1][
id
][
t›
++]=
s
[
i
];

58 
A
[1][
id
][
t›
]='\0';

59 
	}
}

61 
	$sﬁve
()

63 
l
,
œ
,
köd
,
k
,
j
,
lb
;

64 
l
=
	`°æí
(
s
);

65 
i
=0; i<
l
; )

67 
köd
=0;

68 
j
=0; j<
n
; j++)

70 
œ
=
	`°æí
(
A
[0][
j
]);

71 
lb
=
	`°æí
(
A
[1][
j
]);

72 
k
=0; k<
œ
&&
A
[0][
j
][k]==
s
[
i
+k]; k++);

73 if(
k
>=
œ
)

75 
köd
=1;

78 
k
=0; k<
œ
&&
	`uµî
(
A
[0][
j
][k])==
s
[
i
+k]; k++);

79 if(
k
>=
œ
)

81 
köd
=2;

84 if(
	`uµî
(
A
[0][
j
][0])==
s
[
i
])

86 
k
=1; k<
œ
&&
A
[0][
j
][k]==
s
[
i
+k]; k++);

87 if(
k
>=
œ
)

89 
köd
=3;

94 if(
köd
==1)

96 
	`¥ötf
("%s",
A
[1][
j
]);

97 
i
+=
œ
;

99 if(
köd
==2)

101 
u
=0; u<
lb
; u++)

102 
	`¥ötf
("%c",
	`uµî
(
A
[1][
j
][
u
]));

103 
i
+=
œ
;

105 if(
köd
==3)

107 
	`¥ötf
("%c",
	`uµî
(
A
[1][
j
][0]));

108 
u
=1; u<
lb
; u++)

109 
	`¥ötf
("%c",
A
[1][
j
][
u
]);

110 
i
+=
œ
;

112 if(
köd
>0) ;

113 
j
=0; j<
m
; j++)

115 if(
vis
[
j
]) ;

116 
œ
=
	`°æí
(
B
[0][
j
]);

117 
lb
=
	`°æí
(
B
[1][
j
]);

118 
k
=0; k<
œ
&&
s
[
i
+k]==
B
[0][
j
][k]; k++);

119 if(
k
>=
œ
)

122 if(
j
<
m
)

124 
vis
[
j
]=1;

125 
	`¥ötf
("%†(%s)",
B
[1][
j
],B[0][j]);

126 
i
+=
œ
;

130 
	`¥ötf
("%c",
s
[
i
]);

131 
i
++;

134 
	`puts
("");

135 
	}
}

137 
	$maö
()

139 
	`sˇnf
("%d%d",&
n
,&
m
);

140 
	`gëch¨
();

141 
i
=0; i<
n
; i++)

143 
	`gës
(
s
);

144 
	`öô
(
i
,
A
);

146 
i
=0; i<
m
; i++)

148 
	`gës
(
s
);

149 
	`öô
(
i
,
B
);

151 
	`mem£t
(
vis
,0,(vis));

152 
	`gës
(
s
)!=
NULL
)

154 
	`sﬁve
();

155 if(
s
[0]=='#'&&s[1]=='\0')

156 
	`mem£t
(
vis
,0,(vis));

159 
	}
}

	@problems/poj/poj_2688.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 22

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	mx
,
	my
,
	ms
,
	m˙t
; }
	g°
,
	gq
[
S
];

35 
	gm©
[
N
][N],
	gid
[N][N],
	gt›
,
	gdis
[N][N][1025],
	gm
,
	gn
;

36 
	gdú
[4][2]={{1,0},{-1,0},{0,1},{0,-1}},
	gœ°s
,
	gªt
;

37 
	gs
[
N
];

39 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

40 
ölöe
 
	$öbﬂrd
(
x
,
y
)

42  0<=
x
&&x<
m
&&0<=
y
&&y<
n
;

43 
	}
}

45 
	$sﬁve
()

47 
l
,
r
;

48 
i
=0; i<
N
; i++)

49 
j
=0; j<
N
; j++)

50 
k
=0; k<1025; k++)

51 
dis
[
i
][
j
][
k
]=
öf
;

52 
°
.
˙t
=0;

53 
dis
[
°
.
x
][°.
y
][°.
s
]=0;

54 
q
[
l
=
r
=0]=
°
;

55 ; 
l
<=
r
;)

57 
node
 
now
=
q
[
l
++],
√xt
;

59 if(
now
.
˙t
>
dis
[now.
x
][now.
y
][now.
s
])

61 if(
now
.
s
>=
œ°s
)

63 
ªt
=
	`mö
‘ë,
now
.
˙t
);

66 if(
now
.
˙t
>=
ªt
)

68 
i
=0; i<4; i++)

70 
x
=
now
.x+
dú
[
i
][0],
y
Úow.y+dú[i][1],
ns
;

71 if(!
	`öbﬂrd
(
x
,
y
))

73 if(
m©
[
x
][
y
]<0)

75 if(
m©
[
x
][
y
]==1)

77 
ii
=
id
[
x
][
y
];

78 if(
now
.
s
&
	`B
(
ii
))

79 
ns
=
now
.
s
;

81 
ns
=
now
.
s
|
	`B
(
ii
);

84 
ns
=
now
.
s
;

85 if(
dis
[
x
][
y
][
ns
]>
now
.
˙t
+1)

87 
dis
[
x
][
y
][
ns
]=
now
.
˙t
+1;

88 
√xt
.
x
=x,√xt.
y
=y,√xt.
s
=
ns
,√xt.
˙t
=
now
.cnt+1;

89 
q
[++
r
]=
√xt
;

93 
	}
}

95 
	$maö
()

97 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

99 
	`mem£t
(
id
,0,(id));

100 
t›
=0;

101 if(
m
==0&&
n
==0)

103 
i
=0; i<
m
; i++)

105 
	`sˇnf
("%s",
s
);

106 
j
=0; j<
n
; j++)

108 if(
s
[
j
]=='.')

109 
m©
[
i
][
j
]=0;

110 if(
s
[
j
]=='o')

112 
m©
[
i
][
j
]=0;

113 
°
.
x
=
i
,°.
y
=
j
,°.
s
=0;

115 if(
s
[
j
]=='*')

117 
m©
[
i
][
j
]=1;

118 
id
[
i
][
j
]=
t›
++;

121 
m©
[
i
][
j
]=-1;

124 
œ°s
=
	`B
(
t›
)-1;

125 
ªt
=
öf
;

126 
	`sﬁve
();

127 if(
ªt
>=
öf
)

128 
	`puts
("-1");

130 
	`¥ötf
("%d\n",
ªt
);

133 
	}
}

	@problems/poj/poj_2728.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 1010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-6

	)

23 
	#öf
 1e8

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	spoöt
{ 
	mx
,
	my
,
	mz
; }
	gp
[
N
];

35 
	gdis
[
N
][N],
	gco°
[N][N],
	gm©
[N][N],
	gmö_l
[N],
	gvis
[N];

37 
ölöe
 
	$Àngth
(
x
,
y
,
a
,
b
)

39  
	`sqπ
((
x
-
a
)*(x-a)+(
y
-
b
)*(y-b));

40 
	}
}

42 
	$m°
(
n
,
k
)

44 
ªt
=0;

45 
i
=0; i<
n
; i++)

46 
mö_l
[
i
]=
öf
,
vis
[i]=0;

47 
i
=0; i<
n
; i++)

48 
j
=
i
+1; j<
n
; j++)

50 
m©
[
j
][
i
]=m©[i][j]=
co°
[i][j]-
k
*
dis
[i][j];

52 
nx
,
j
;

53 
mö_l
[0]=0;

54 
i
=0; i<
n
; i++)

56 
nx
=-1,
j
=0; j<
n
; j++)

57 if(!
vis
[
j
]&&(
nx
==-1||(
mö_l
[j]<min_l[nx])))

58 
nx
=
j
;

59 
vis
[
nx
]=1;

60 
ªt
+=
mö_l
[
nx
],
j
=0; j<
n
; j++)

61 if(!
vis
[
j
]&&
mö_l
[j]>
m©
[
nx
][j])

62 
mö_l
[
j
]=
m©
[
nx
][j];

64  
ªt
;

65 
	}
}

67 
	$sﬁve
(
n
)

69 
l
=0,
r
=
öf
,
mid
,
maxco°
=-öf,
mödis
=öf,
maxdis
=-öf,
möco°
=inf;

70 
i
=0; i<
n
; i++)

71 
j
=
i
+1; j<
n
; j++)

73 
maxco°
=
	`max
(
co°
[
i
][
j
],maxcost);

74 
mödis
=
	`mö
(mödis,
dis
[
i
][
j
]);

75 
maxdis
=
	`max
(
dis
[
i
][
j
],maxdis);

76 
möco°
=
	`mö
(möco°,
co°
[
i
][
j
]);

78 
l
=
möco°
/
maxdis
;

79 
r
=
maxco°
/
mödis
;

80 ; 
r
-
l
>
ïs
;)

82 
mid
=(
r
+
l
)/2;

83 if(
	`m°
(
n
,
mid
)>0.0)

84 
l
=
mid
;

86 
r
=
mid
;

88  
r
;

89 
	}
}

91 
	$maö
()

93 
n
;

94 
	`sˇnf
("%d",&
n
)!=
EOF
)

96 if(
n
==0) ;

97 
i
=0; i<
n
; i++)

98 
	`sˇnf
("%lf%lf%lf",&
p
[
i
].
x
,&p[i].
y
,&p[i].
z
);

99 
i
=0; i<
n
; i++)

100 
j
=
i
+1; j<
n
; j++)

102 if(
i
==
j
) ;

103 
co°
[
i
][
j
]=co°[j][i]=
	`Ábs
(
p
[i].
z
-p[j].z);

104 
dis
[
i
][
j
]=dis[j][i]=
	`Àngth
(
p
[i].
x
,p[i].
y
,p[j].x,p[j].y);

106 
	`¥ötf
("%.3f\n",
	`sﬁve
(
n
));

109 
	}
}

	@problems/poj/poj_2774.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 200100

	)

5 
	gs
[
N
];

6 
	g˙t
[
N
],
	gß
[N],
	gsb
[N],
	grk
[N],
	ght
[N];

8 
	$ødix_s‹t
(
m
,
n
,*
x
,*
y
,
l
)

10 
t›
=0;

11 
i
=
n
-
l
; i<n; i++)

12 
y
[
t›
++]=
i
;

13 
i
=0; i<
n
; i++)

14 if(
ß
[
i
]>=
l
)

15 
y
[
t›
++]=
ß
[
i
]-
l
;

16 
	`mem£t
(
˙t
,0,(cnt));

17 
i
=0; i<
n
; i++)

18 
˙t
[
x
[
i
]]++;

19 
i
=1; i<
m
; i++)

20 
˙t
[
i
]+=cnt[i-1];

21 
i
=
n
-1; i>=0; i--)

22 
ß
[--
˙t
[
x
[
y
[
i
]]]]=y[i];

23 
	}
}

25 
	$equÆ
(
i
,
j
,*
y
,
l
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

27 
	$da
(
m
,
n
)

29 *
x
=
rk
,*
y
=
sb
,*
t
;

30 
i
=0; i<
n
; i++)

31 
ß
[
i
]=i,
rk
[i]=
s
[i];

32 
	`ødix_s‹t
(
m
,
n
,
x
,
y
,0);

33 
k
,
l
;

34 
k
=
l
=1; k<
n
;Ü<<=1)

36 
	`ødix_s‹t
(
m
,
n
,
x
,
y
,
l
);

37 
t
=
x
,x=
y
,y=t;

38 
x
[
ß
[0]]=0;

39 
k
=1;

40 
i
=1; i<
n
; i++)

41 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
y
,
l
)?
k
-1:k++;

42 
m
=
k
;

44 
i
=0; i<
n
; i++)

45 
rk
[
i
]=
x
[i];

46 
k
=0;

47 
i
=0; i<
n
-1; i++)

49 
k
>0?k--:k=0;

50 
j
=
ß
[
rk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

51 
ht
[
rk
[
i
]]=
k
;

53 
ht
[0]=0;

54 
	}
}

56 
	$gao
(
n1
,
n
)

58 
ªt
=0;

59 
i
=1; i<
n
; i++)

61 
u
=
ß
[
i
],
v
=sa[i-1];

62 if(
ht
[
i
]>
ªt
&&(1LL*(
u
-
n1
)*(
v
-n1)<0))

63 
ªt
=
ht
[
i
];

65 
	`¥ötf
("%d\n",
ªt
);

66 
	}
}

68 
	$maö
()

70 
n
,
n1
,
n2
;

71 
	`sˇnf
("%s",
s
)+1)

73 
n1
=
	`°æí
(
s
);

74 
s
[
n1
]='#';

75 
	`sˇnf
("%s",
s
+
n1
+1);

76 
n
=
	`°æí
(
s
)+1;

77 
	`da
(128,
n
);

78 
	`gao
(
n1
,
n
);

81 
	}
}

	@problems/poj/poj_2778_dp_on_acmachine_classic.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 110

	)

20 
	#M
 1000010

	)

21 
	#S
 101000

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 100000

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	m√xt
[4],
	mÁû
,
	mis
; }
	gno
[
S
];

35 
LL
 
	gm©
[
N
][N],
	gªtm
[N][N],
	gtmp
[N][N];

36 
	gt›
;

37 
	gs
[110];

38 
	gq
[
S
];

40 
	$gë_id
(
x
)

42 if(
x
=='A')  0;

43 if(
x
=='G')  1;

44 if(
x
=='C')  2;

46 
	}
}

48 
	$ö£π
(
s
[])

50 
l
=
	`°æí
(
s
),
r
=0;

51 
i
=0; i<
l
; i++)

53 if(
no
[
r
].
is
)

55 
ii
=
	`gë_id
(
s
[
i
]);

56 if(
no
[
r
].
√xt
[
ii
]==-1)

57 
no
[
r
].
√xt
[
ii
]=
t›
++;

58 
r
=
no
[r].
√xt
[
ii
];

60 
no
[
r
].
is
=1;

61 
	}
}

63 
	$öô
()

65 
t›
=1;

66 
i
=0; i<
S
; i++)

68 
no
[
i
].
Áû
=-1,no[i].
is
=0;

69 
j
=0; j<4; j++)

70 
no
[
i
].
√xt
[
j
]=-1;

72 
	}
}

74 
	$buûd_ac
()

76 
l
,
r
;

77 
no
[0].
Áû
=0;

78 
q
[
l
=
r
=0]=0;

79 ; 
l
<=
r
;)

81 
now
=
q
[
l
++];

82 
i
=0; i<4; i++)

84 
to
=
no
[
now
].
√xt
[
i
];

85 if(
to
==-1)

87 if(
now
==0)

88 
no
[
now
].
√xt
[
i
]=0;

90 
no
[
now
].
√xt
[
i
]Úo[no[now].
Áû
].next[i];

94 if(
now
==0)

95 
no
[
to
].
Áû
=0;

98 
no
[
to
].
Áû
Úo[no[
now
].Áû].
√xt
[
i
];

99 if(
no
[no[
to
].
Áû
].
is
)

100 
no
[
to
].
is
=1;

102 
q
[++
r
]=
no
[
now
].
√xt
[
i
];

106 
	}
}

108 
	$buûd_m©rix
()

110 
	`mem£t
(
m©
,0,(mat));

111 
	`mem£t
(
ªtm
,0,(retm));

112 
i
=0; i<
t›
; i++)

114 if(
no
[
i
].
is
==0)

115 
j
=0; j<4; j++)

117 if(
no
[no[
i
].
√xt
[
j
]].
is
==0)

118 
m©
[
no
[
i
].
√xt
[
j
]][i]++;

121 
i
=0; i<
t›
; i++)

122 
ªtm
[
i
][i]=1;

123 
	}
}

125 
	$_m©_mu…
(
LL
 
ªtm
[][
N
],LL 
m©
[][N])

127 
	`mem£t
(
tmp
,0,(tmp));

128 
i
=0; i<
t›
; i++)

129 
j
=0; j<
t›
; j++)

130 
k
=0; k<
t›
; k++)

133 
tmp
[
i
][
j
]+=
ªtm
[
k
][j]*
m©
[i][k];

134 if(
tmp
[
i
][
j
]>
MOD
)

135 
tmp
[
i
][
j
]%=
MOD
;

137 
i
=0; i<
t›
; i++)

138 
j
=0; j<
t›
; j++)

139 
ªtm
[
i
][
j
]=
tmp
[i][j];

140 
	}
}

142 
	$m©_mu…
(
n
)

144 ; 
n
;Ç>>=1)

146 if(
n
&1)

147 
	`_m©_mu…
(
ªtm
,
m©
);

148 
	`_m©_mu…
(
m©
,mat);

150 
	}
}

152 
LL
 
	$gë_™s
()

154 
LL
 
ªt
=0;

155 
i
=0; i<
t›
; i++)

156 
ªt
=‘ë+
ªtm
[
i
][0])%
MOD
;

157  
ªt
;

158 
	}
}

160 
	$maö
()

162 
m
,
n
;

163 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

165 
	`öô
();

166 
i
=0; i<
m
; i++)

168 
	`sˇnf
("%s",
s
);

169 
	`ö£π
(
s
);

171 
	`buûd_ac
();

172 
	`buûd_m©rix
();

173 
	`m©_mu…
(
n
);

174 
LL
 
™s
=
	`gë_™s
();

175 
	`¥ötf
("%Œd\n",
™s
);

178 
	}
}

	@problems/poj/poj_2892.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 50010

	)

5 
	snode
{ 
	ml
,
	mr
,
	mlv
,
	mrv
,
	mc
;

6 
Àn
(){  
	mr
-
	ml
+1; }

7 
Õos
(){  
	ml
+
	mlv
-1; }

8 
Ωos
(){  
	mr
-
	mrv
+1; }

9 }
	gno
[
N
<<3];

11 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

12 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

14 
	$buûd
(
id
,
l
,
r
)

16 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=-1,no[id].
lv
Úo[id].
rv
Úo[id].
	`Àn
();

17 if(
l
==
r
)

19 
mid
=(
l
+
r
)>>1;

20 
	`buûd
(
	`L
(
id
),
l
,
mid
);

21 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

22 
	}
}

24 
	$up
(
id
,
l
,
r
)

26 
no
[
id
].
lv
Úo[
	`L
(id)].lv+“o[L(id)].lv=Úo[L(id)].
	`Àn
())*no[
	`R
(id)].lv;

27 
no
[
id
].
rv
Úo[
	`R
(id)].rv+“o[R(id)].rv=Úo[R(id)].
	`Àn
())*no[
	`L
(id)].rv;

28 
	}
}

30 
	$down
(
id
,
l
,
r
)

32 if(
no
[
id
].
c
>=0)

34 
no
[
	`L
(
id
)].
c
=no[id].c;

35 
no
[
	`R
(
id
)].
c
=no[id].c;

36 
no
[
	`L
(
id
)].
lv
Úo[L(id)].
rv
=(1-no[id].
c
)*no[L(id)].
	`Àn
();

37 
no
[
	`R
(
id
)].
lv
Úo[R(id)].
rv
=(1-no[id].
c
)*no[R(id)].
	`Àn
();

38 
no
[
id
].
c
=-1;

40 
	}
}

42 
	$upd©e
(
id
,
p
,
x
)

44 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

45 if(
l
==
r
)

47 
no
[
id
].
c
=
x
;

48 
no
[
id
].
lv
Úo[id].
rv
=1-
x
;

51 
	`down
(
id
,
l
,
r
);

52 if(
p
<=
mid
)

53 
	`upd©e
(
	`L
(
id
),
p
,
x
);

55 
	`upd©e
(
	`R
(
id
),
p
,
x
);

57 
	`up
(
id
,
l
,
r
);

59 
	}
}

61 
	$quîy
(
id
,
p
)

63 if(
p
>=
no
[
	`L
(
id
)].
	`Ωos
()&&p<Úo[
	`R
(id)].
	`Õos
())

64  
no
[
	`L
(
id
)].
rv
+no[
	`R
(id)].
lv
;

65 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

66 if(
l
==
r
)

68 if(
no
[
id
].
c
==1)

73 if(
p
<=
mid
)

74  
	`quîy
(
	`L
(
id
),
p
);

76  
	`quîy
(
	`R
(
id
),
p
);

77 
	}
}

79 
	gs
[10];

80 
	g°
[
N
],
	gt›
;

82 
	$maö
()

84 
n
,
m
;

85 
	`sˇnf
("%d%d",&
n
,&
m
);

86 
	`buûd
(1,1,
n
);

87 
t›
=-1;

88 
x
;

89 
i
=0; i<
m
; i++)

91 
	`sˇnf
("%s",
s
);

92 if(
s
[0]=='D')

94 
	`sˇnf
("%d",&
x
);

95 
	`upd©e
(1,
x
,1);

96 
°
[++
t›
]=
x
;

98 if(
s
[0]=='Q')

100 
	`sˇnf
("%d",&
x
);

101 
	`¥ötf
("%d\n",
	`quîy
(1,
x
));

105 if(
t›
<0)

107 
x
=
°
[
t›
--];

108 
	`upd©e
(1,
x
,0);

112 
	}
}

	@problems/poj/poj_2948_Martian_Mining_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 510

	)

5 
	grm©
[
MAXN
][MAXN],
	grs
[MAXN][MAXN],
	gcs
[MAXN][MAXN],
	gdp
[MAXN][MAXN],
	gcm©
[MAXN][MAXN],
	gn
,
	gm
,
	gsum
[MAXN][MAXN];

7 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

9 
	$dfs
(
now
,
œ°
)

11 
ªt
=0,
t
,
i
,
j
;

12 if(
dp
[
now
][
œ°
]>=0)  dp[now][last];

13 if(
now
==
m
+1)

19 
ªt
=
sum
[
m
][
n
]-sum[m][
œ°
]-sum[0][n]+sum[0][last];

20  
dp
[
now
][
œ°
]=
ªt
;

22 
i
=
œ°
; i<=
n
; i++)

24 
t
=
rs
[
now
][
i
];

25 
t
+=
sum
[
now
-1][
i
]-sum[now-1][
œ°
]-sum[0][i]+sum[0][last];

30 
ªt
=
	`max
‘ë,
t
+
	`dfs
(
now
+1,
i
));

32  
dp
[
now
][
œ°
]=
ªt
;

33 
	}
}

35 
	$maö
()

37 
i
,
j
,
ªt
;

38 
	`sˇnf
("%d%d",&
m
,&
n
)&&(m||n))

40 
	`mem£t
(
cm©
,0,(cmat));

41 
	`mem£t
(
sum
,0,(sum));

42 
	`mem£t
(
rm©
,0,(rmat));

43 
	`mem£t
(
rs
,0,(rs));

44 
	`mem£t
(
cs
,0,(cs));

45 
	`mem£t
(
dp
,-1,(dp));

46 
i
=1; i<=
m
; i++)

47 
j
=1; j<=
n
; j++)

48 
	`sˇnf
("%d",&
rm©
[
i
][
j
]);

49 
i
=1; i<=
m
; i++)

50 
j
=1; j<=
n
; j++)

51 
	`sˇnf
("%d",&
cm©
[
i
][
j
]);

52 
i
=1; i<=
m
; i++)

53 
j
=1; j<=
n
; j++)

55 
rs
[
i
][
j
]Ùs[i][j-1]+
rm©
[i][j];

58 
i
=1; i<=
m
; i++)

59 
j
=1; j<=
n
; j++)

61 
cs
[
i
][
j
]=cs[i-1][j]+
cm©
[i][j];

62 
sum
[
i
][
j
]=sum[i-1][j]+sum[i][j-1]+
cm©
[i][j]-sum[i-1][j-1];

65 
	`dfs
(1,0);

66 
	`¥ötf
("%d\n",
dp
[1][0]);

69 
	}
}

	@problems/poj/poj_2976_Dropping_tests_0_1_fraction_programming.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#ïs
 1e-6

	)

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
ölöe
 
	$cmp
(
a
,
b
){ á>b; 
	}
}

31 
	gtmp
[
MAXN
],
	ga
[MAXN],
	gb
[MAXN];

33 
	$too_smÆl
(
x
,
k
,
n
)

35 
i
; 
ªt
=0;

36 
i
=0; i<
n
; i++)

37 
tmp
[
i
]=
a
[i]-
x
*
b
[i];

38 
	`s‹t
(
tmp
,tmp+
n
,
cmp
);

39 
i
=0; i<
k
; i++)

40 
ªt
+=
tmp
[
i
];

41  
ªt
>0?1:0;

42 
	}
}

44 
	$maö
()

46 
n
,
k
,
i
;

47 
l
,
r
,
m
;

48 
	`sˇnf
("%d%d",&
n
,&
k
)&&(n||k))

50 
i
=0; i<
n
; i++)

51 
	`sˇnf
("%lf",&
a
[
i
]);

52 
i
=0; i<
n
; i++)

53 
	`sˇnf
("%lf",&
b
[
i
]);

54 
l
=0,
r
=1;Ñ-l>=
ïs
; )

56 
m
=(
l
+
r
)/2;

57 if(
	`too_smÆl
(
m
,
n
-
k
,n))

58 
l
=
m
;

60 
r
=
m
;

62 
m
=(
l
+
r
)/2;

63 
	`¥ötf
("%.0f\n",
m
*100);

66 
	}
}

	@problems/poj/poj_2991_classic_segmentTree.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#MOD
 360

	)

4 
	#N
 10011

	)

6 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

7 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

9 
	gpi
;

10 
	gsum
[
N
],
	gÀn
[N];

11 
	gcoss
[400],
	gsön
[400];

13 
	spoöt
{ 
	mx
,
	my
;

14 
poöt
 
	m›î©‹
+’oöà
	mb
){

15 
poöt
 
	mªt
;

16 
	mªt
.
	mx
=
x
+
b
.x,ªt.
	my
=
y
+b.y;

17  
	mªt
;

19 
poöt
 
	m›î©‹
-’oöà
	mb
){

20 
poöt
 
	mªt
;

21 
	mªt
.
	mx
=
x
-
b
.x,ªt.
	my
=
y
-b.y;

22  
	mªt
;

25 
	snode
{ 
	ml
,
	mr
,
	mc
,
	mcﬁ
; 
poöt
 
	ms
,
	me
;

26 
tu∫
(
x
)

28 
poöt
 
	mxu
,
	mvec
;

29 
	mvec
=
e
-
s
;

30 
	mxu
.
	mx
=
coss
[
x
];

31 
	mxu
.
	my
=
sön
[
x
];

32 
	me
.
	mx
=
s
.
x
+
vec
.x*
xu
.x-vec.
y
*xu.y;

33 
	me
.
	my
=
s
.
y
+
vec
.
x
*
xu
.y+vec.y*xu.x;

35 
gm
(){  (
	ml
+
	mr
)>>1; }

36 }
	gno
[
N
<<2];

38 
	$buûd
(
id
,
l
,
r
)

40 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=0;

41 
no
[
id
].
s
.
x
Úo[id].
e
.x=0;

42 
no
[
id
].
s
.
y
=
sum
[
l
]-
Àn
[l];

43 
no
[
id
].
cﬁ
=0;

44 
no
[
id
].
e
.
y
=
sum
[
r
];

45 if(
l
==
r
)

47 
	`buûd
(
	`L
(
id
),
l
,
no
[id].
	`gm
());

48 
	`buûd
(
	`R
(
id
),
no
[id].
	`gm
()+1,
r
);

49 
	}
}

51 
	$down
(
id
)

53 if(
no
[
id
].
cﬁ
)

55 
l
=
	`L
(
id
),
r
=
	`R
(id);

56 
no
[
l
].
e
Úo[l].e-no[l].
s
+no[
id
].s;

57 
no
[
l
].
s
Úo[
id
].s;

58 
no
[
l
].
	`tu∫
“o[
id
].
c
);

59 
no
[
l
].
c
=“o[l].c+no[
id
].c)%
MOD
;

60 
no
[
l
].
cﬁ
=1;

62 
no
[
r
].
e
Úo[r].e-no[r].
s
+no[
l
].e;

63 
no
[
r
].
s
Úo[
l
].
e
;

64 
no
[
r
].
	`tu∫
“o[
id
].
c
);

65 
no
[
r
].
c
=“o[r].c+no[
id
].c)%
MOD
;

66 
no
[
r
].
cﬁ
=1;

68 
no
[
id
].
c
=0;

69 
no
[
id
].
cﬁ
=0;

71 
	}
}

73 
	$quîy
(
id
,
p
)

75 if(
no
[
id
].
l
=Úo[id].
r
)

76  
no
[
id
].
c
;

77 
	`down
(
id
);

78 if(
p
<=
no
[
id
].
	`gm
())

79  
	`quîy
(
	`L
(
id
),
p
);

81  
	`quîy
(
	`R
(
id
),
p
);

82 
	}
}

84 
	$upd©e
(
id
,
p
,
x
)

86 if(
no
[
id
].
l
==
p
)

88 
no
[
id
].
c
=“o[id].c+
x
)%
MOD
;

89 
no
[
id
].
	`tu∫
(
x
);

90 
no
[
id
].
cﬁ
=1;

93 
	`down
(
id
);

94 
mid
=
no
[
id
].
	`gm
();

95 if(
p
<=
mid
)

97 
	`upd©e
(
	`L
(
id
),
p
,
x
);

98 
no
[
	`R
(
id
)].
e
Úo[R(id)].e-no[R(id)].
s
+no[
	`L
(id)].e;

99 
no
[
	`R
(
id
)].
s
Úo[
	`L
(id)].
e
;

100 
	`upd©e
(
	`R
(
id
),
mid
+1,
x
);

103 
	`upd©e
(
	`R
(
id
),
p
,
x
);

104 
no
[
id
].
e
Úo[
	`R
(id)].e;

105 
	}
}

107 
	$maö
()

109 
n
,
m
,
ˇ
=0;

110 
pi
=
	`acos
(-1);

111 
i
=0; i<
MOD
; i++)

113 
coss
[
i
]=
	`cos
(1.0*i*
pi
/180);

114 
sön
[
i
]=
	`sö
(1.0*i*
pi
/180);

116 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

118 if(
ˇ
Ë
	`puts
("");

119 
ˇ
=1;

120 
sum
[0]=0;

121 
i
=1; i<=
n
; i++)

123 
	`sˇnf
("%d",&
Àn
[
i
]);

124 
sum
[
i
]=sum[i-1]+
Àn
[i];

126 
	`buûd
(1,1,
n
);

127 
x
,
a
,
b
;

128 
i
=0; i<
m
; i++)

130 
	`sˇnf
("%d%d",&
x
,&
a
);

131 
b
=
	`quîy
(1,
x
+1)-query(1,x);

132 
	`upd©e
(1,
x
+1,((180+
a
-
b
)%
MOD
+MOD)%MOD);

133 
	`¥ötf
("%.2‡%.2f\n",
no
[1].
e
.
x
,no[1].e.
y
);

137 
	}
}

	@problems/poj/poj_3004_subway_planning_scanning.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

20 
	#N
 1001

	)

21 
	#ïs
 1e-8

	)

22 
	#öf
 100000000

	)

24 
	tLL
;

25 
usög
 
«me•a˚
 
	g°d
;

27 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

28 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

29 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

30 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

31 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

32 
ölöe
 
	$lowî_bound
(
x
){  x&(-x); 
	}
}

34 
	spoöt
{ 
	ml
,
	mr
; }
	gp
[
N
],
	gµ
[N];

36 
ölöe
 
	$Àn
(
x
,
y
){  
	`sqπ
(x*x+y*y); 
	}
}

38 
	$cmp
(
poöt
 
a
,poöà
b
){ á.
r
<b.r; 
	}
}

39 
	gpi
;

41 
	$maö
()

43 
n
,
t
,
ªt
,
i
,
tmp
,
j
,
k
,
¥e
,
t›
; 
d
,
sôa
,
x
,
y
;

44 
pi
=
	`acos
(-1);

45 
	`sˇnf
("%d",&
t
);

46 ; 
t
--; )

48 
	`sˇnf
("%d%lf",&
n
,&
d
);

49 
t›
=0;

50 
i
=0; i<
n
; i++)

52 
	`sˇnf
("%lf%lf",&
x
,&
y
);

53 if(
d
>=
	`Àn
(
x
,
y
))

55 
sôa
=
	`asö
(
d
/
	`Àn
(
x
,
y
));

56 
p
[
t›
].
l
=
	`©™2
(
y
,
x
)-
sôa
;

57 
p
[
t›
++].
r
=
	`©™2
(
y
,
x
)+
sôa
;

59 if(
t›
==0)

61 
	`puts
("0");

64 
	`s‹t
(
p
,p+
t›
,
cmp
);

65 
ªt
=
öf
,
k
=0; k<
t›
; k++)

67 
i
=
k
,
j
=0; j<
t›
; j++,i++)

69 
µ
[
j
]=
p
[
i
%
t›
];

70 if(
i
>=
t›
)

71 
µ
[
j
].
l
+=2*
pi
,µ[j].
r
+=2*pi;

78 
tmp
=0,
i
=0; i<
t›
; )

80 
¥e
=
i
;

81 
sôa
=
µ
[
i
].
r
;

82 
tmp
++;

83 ; 
µ
[
i
].
l
<
sôa
+
ïs
&&i<
t›
; i++);

84 if(
¥e
==
i
) i++;

86 
ªt
=
	`mö
‘ë,
tmp
);

88 
	`¥ötf
("%d\n",
ªt
);

91 
	}
}

	@problems/poj/poj_3034_Whac_A_Mole_dp.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	#MAXN
 60

	)

6 
usög
 
	g°d
::
s‹t
;

8 
	svec
{ 
	mx
,
	my
,
	ml
; }
	gv
[150];

9 
	gdp
[11][
MAXN
][MAXN],
	gm©
[11][MAXN][MAXN],
	gt›
,
	gT
,
	gn
,
	gd
;

11 
ölöe
 
	$max
(
a
,
b
){ á>b?a:b; 
	}
}

12 
ölöe
 
	$abs
(
a
){ á>0?a:-a; 
	}
}

13 
	$gcd
(
a
,
b
){  b==0?a:
	`gcd
(b,a%b); 
	}
}

14 
	$cmp
(
vec
 
a
,ve¯
b
){ á.
l
<b.l; 
	}
}

16 
ölöe
 
	$öbﬂrd
(
x
,
y
)

18  
x
>=0&&(x<=
n
+2*
d
)&&
y
>=0&&(y<=n+2*d);

19 
	}
}

21 
	$öô
()

23 
i
,
j
; 
t›
=0;

24 
i
=-5; i<=5; i++)

25 
j
=-5; j<=5; j++)

26 if(
i
*i+
j
*j<=25)

28 
v
[
t›
].
x
=
i
,v[t›].
y
=
j
;

29 
v
[
t›
++].
l
=
	`˚û
(
	`sqπ
((
i
*i+
j
*j)));

31 
	`s‹t
(
v
,v+
t›
,
cmp
);

32 
	}
}

35 
	$ˇlc
(
sx
,
sy
,
ex
,
ey
,
t
)

37 
dx
=
ex
-
sx
,
dy
=
ey
-
sy
,
g
,
ªt
=0,
i
,
j
;

38 
g
=
	`gcd
(
	`abs
(
dx
),abs(
dy
));

39 if(
g
==0Ë 
m©
[
t
][
sx
][
sy
];

40 
dx
/=
g
,
dy
/=g;

41 
i
=
sx
,
j
=
sy
; ; i+=
dx
,j+=
dy
)

43 
ªt
+=
m©
[
t
][
i
][
j
];

44 if(
i
==
ex
&&
j
==
ey
) ;

46  
ªt
;

47 
	}
}

49 
	$sﬁve
()

51 
i
,
j
,
k
,
u
,
tmp
,
x
,
y
,
ªt
=0,
t
;

52 
k
=1; k<=
T
; k++)

53 
i
=0; i<
n
+2*
d
; i++)

54 
j
=0; j<
n
+2*
d
; j++)

56 
u
=0; u<
t›
&&
v
[u].
l
<=
d
; u++)

58 
x
=
i
+
v
[
u
].x,
y
=
j
+v[u].y;

59 if(!
	`öbﬂrd
(
x
,
y
)) ;

60 
tmp
=
	`ˇlc
(
i
,
j
,
x
,
y
,
k
);

62 
dp
[
k
][
x
][
y
]=
	`max
(dp[k][x][y],dp[k-1][
i
][
j
]+
tmp
);

65 
i
=0; i<
n
+2*
d
; i++)

66 
j
=0; j<
n
+2*
d
; j++)

67 
ªt
=
	`max
‘ë,
dp
[
T
][
i
][
j
]);

68  
ªt
;

69 
	}
}

71 
	$maö
()

73 
m
,
x
,
y
,
t
,
i
,
j
;

74 
	`öô
();

75 
	`sˇnf
("%d%d%d",&
n
,&
d
,&
m
)!=
EOF
)

77 if(
n
==0) ;

78 
	`mem£t
(
dp
,0,(dp));

79 
	`mem£t
(
m©
,0,(mat));

80 
T
=0;

81 
i
=0; i<
m
; i++)

83 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
t
);

84 
m©
[
t
][
x
+
d
][
y
+d]=1;

85 
T
=
	`max
(T,
t
);

87 
	`¥ötf
("%d\n",
	`sﬁve
());

90 
	}
}

	@problems/poj/poj_3070_Fibonacci_matrix.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 10000

	)

19 
	#N
 2

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
	gA
[
N
][N]={1,1,1,0},
	gB
[N][N],
	gT
[N][N];

32 
	$mul
(
B
[][
N
],
A
[][N])

34 
ªt
=0,
i
,
j
,
k
;

35 
i
=0; i<
N
; i++)

37 
j
=0; j<
N
; j++)

39 
ªt
=
k
=0; k<
N
; k++)

40 
ªt
=‘ë+
B
[
i
][
k
]*
A
[k][
j
])%
MOD
;

41 
T
[
i
][
j
]=
ªt
;

44 
i
=0; i<
N
; i++)

45 
j
=0; j<
N
; j++)

46 
B
[
i
][
j
]=
T
[i][j];

47 
	}
}

49 
	$m©rix_mul
(
n
)

51 
	`mem£t
(
B
,0,(B));

52 
	`mem£t
(
A
,0,(A));

53 
B
[0][0]=B[1][1]=1;

54 
A
[0][0]=A[0][1]=A[1][0]=1;

55 ; 
n
>0;)

57 if(
n
&1)

58 
	`mul
(
B
,
A
);

59 
n
>>=1;

60 
	`mul
(
A
,A);

62 
	}
}

64 
	$ˇl
(
n
)

66 
	`m©rix_mul
(
n
-1);

67  
B
[0][0];

68 
	}
}

70 
	$maö
()

72 
n
,
ªt
;

73 
	`sˇnf
("%d",&
n
)&&(n>=0))

75 if(
n
<2)

77 
	`¥ötf
("%d\n",
n
);

80 
ªt
=
	`ˇl
(
n
);

81 
	`¥ötf
("%d\n",
ªt
);

84 
	}
}

	@problems/poj/poj_3071_Football_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 200

	)

5 
	gwö
[
MAXN
][MAXN],
	gdp
[MAXN][MAXN];

7 
	$sﬁve
(
n
,
p
)

9 
i
,
x
=1,
m
,
k
,
j
,
l
,
r
,
ªt
=0;

10 
max
;

11 
	`mem£t
(
dp
,0,(dp));

12 
i
=1; i<=
p
; i++)

13 
dp
[0][
i
]=1;

14 
i
=1; i<=
n
; i++)

16 
x
<<=1;

17 
j
=1; j<=
p
; j++)

19 
l
=(
j
-1)/
x
*x+1;

20 
r
=
l
+
x
-1;

22 
m
=(
l
+
r
)>>1;

23 if(
j
>
m
)

25 
k
=
l
; k<=
m
; k++)

26 
dp
[
i
][
j
]+=dp[i-1][
k
]*
wö
[j][k];

30 
k
=
m
+1; k<=
r
; k++)

31 
dp
[
i
][
j
]+=dp[i-1][
k
]*
wö
[j][k];

33 
dp
[
i
][
j
]*=dp[i-1][j];

36 
i
=1; i<=
p
; i++)

39 if(
max
<
dp
[
n
][
i
])

40 
max
=
dp
[
n
][
i
],
ªt
=i;

43  
ªt
;

44 
	}
}

46 
	$maö
()

48 
n
,
p
,
ªt
,
i
,
j
;

49 
	`sˇnf
("%d",&
n
)!=
EOF
)

51 if(
n
<0) ;

52 
p
=1<<
n
;

53 
i
=1; i<=
p
; i++)

54 
j
=1; j<=
p
; j++)

55 
	`sˇnf
("%lf",&
wö
[
i
][
j
]);

56 
ªt
=
	`sﬁve
(
n
,
p
);

57 
	`¥ötf
("%d\n",
ªt
);

60 
	}
}

	@problems/poj/poj_3101_Astronomy_math.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#öf
 0x7fffffff

	)

17 
	#X
 10011

	)

18 
	#N
 1010

	)

19 
	#MAXM
 1000010

	)

20 
	#MOD
 1000000007

	)

21 
	#DIGIT
 4

	)

22 
	#DEPTH
 10000

	)

23 
	#MAXN
 8502

	)

24 
	tbig_num
[
MAXN
+1];

25 
big_num
 
	gªè
,
	gªtb
;

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

33 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

34 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

35 
ölöe
 
	$cmp
(
a
,
b
){ á<b; 
	}
}

37 
	gT
[
N
];

38 
	gÁc
[
X
],
	g∂i°
[X],
	gi•
[X],
	gt›
,
	g˙t
[X];

40 
	$wrôe
(c⁄° 
big_num
 
a
)

42 
i
,
j
;

43 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

44 
j
=
DEPTH
/10; j; j/=10)

45 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

46 
	}
}

48 
	$mul
(
big_num
 
a
,c⁄° 
b
)

50 
i
;

51 
a
[1]*=
b
,
i
=2; i<=a[0]; i++)

53 
a
[
i
]*=
b
;

54 if(
a
[
i
-1]>=
DEPTH
)

55 
a
[
i
]+˜[i-1]/
DEPTH
,a[i-1]%=DEPTH;

57 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

58 ; !
a
[a[0]] &&á[0]>1;á[0]--);

59 
	}
}

61 
	$öô
()

63 
i
,
t
,
j
;

64 
t›
=
i
=0; i<
X
; i++Ë
i•
[i]=i;

65 
i
=2; i<
X
; i++)

67 if(
i•
[
i
]==iË
∂i°
[
t›
++]=i;

68 
j
=0; j<
t›
&&
i
*
∂i°
[j]<
X
; j++)

70 
i•
[
i
*
∂i°
[
j
]]=plist[j];

71 if(
i
%
∂i°
[
j
]==0) ;

78 
	}
}

80 
	$›î©e
(
x
,
èg
)

82 
t˙t
,
a
;

83 ; 
x
>1;)

85 
a
=
i•
[
x
];

86 
t˙t
=0; 
x
%
a
==0; )

87 
t˙t
++,
x
/=
a
;

88 
˙t
[
a
]+=
èg
*
t˙t
;

90 
	}
}

92 
	$upd©e
()

94 
i
;

95 
i
=1; i<
X
; i++)

96 
Ác
[
i
]=
	`max
(Ác[i],
˙t
[i]);

97 
	}
}

99 
	$sﬁve
()

101 
i
,
j
;

102 
	`mem£t
(
ªè
,0,(reta));

103 
	`mem£t
(
ªtb
,0,(retb));

104 
ªè
[0]=reta[1]=1;

105 
ªtb
[0]=retb[1]=1;

106 
i
=2; i<
X
; i++)

107 if(
Ác
[
i
]>-
öf
)

109 if(
Ác
[
i
]<0)

110 
j
=0; j<-
Ác
[
i
]; j++)

111 
	`mul
(
ªtb
,
i
);

113 
j
=0; j<
Ác
[
i
]; j++)

114 
	`mul
(
ªè
,
i
);

116 
	}
}

118 
	$gcd
(
a
,
b
){  b==0?a:
	`gcd
(b,a%b); 
	}
}

120 
	$maö
()

122 
n
,
x
,
¥e
,
t˙t
,
y1
,
y2
,
g
,
i
;

123 
	`öô
();

124 
	`sˇnf
("%d",&
n
)!=
EOF
)

126 
i
=0; i<
X
; i++)

127 
Ác
[
i
]=-
öf
;

128 
i
=0; i<
n
; i++)

129 
	`sˇnf
("%d",&
T
[
i
]);

130 
	`s‹t
(
T
,T+
n
,
cmp
);

131 
i
=1; i<
n
; i++)

133 
y1
=
T
[
i
],
y2
=T[i-1];

134 
x
=2*(
T
[
i
]-T[i-1]);

136 if(
x
==0) ;

137 
g
=
	`gcd
(
y1
,
x
);

138 
y1
/=
g
,
x
/=g;

139 
g
=
	`gcd
(
y2
,
x
);

140 
y2
/=
g
,
x
/=g;

141 
	`mem£t
(
˙t
,0,(cnt));

142 
	`›î©e
(
x
,-1);

143 
	`›î©e
(
y1
,1);

144 
	`›î©e
(
y2
,1);

145 
	`upd©e
();

147 
	`sﬁve
();

155 
	`wrôe
(
ªè
);

156 
	`¥ötf
(" ");

157 
	`wrôe
(
ªtb
);

158 
	`puts
("");

161 
	}
}

	@problems/poj/poj_3140_Contestants_Division_TreeDp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
usög
 
	g°d
::
s‹t
;

5 
	#öf
 0x7ffffffffffffff

	)

6 
	#MAXN
 100011

	)

7 
	tLL
;

9 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[2*
MAXN
];

10 
	sd©a
{ 
	mx
,
	my
; }
	gd©
[10*
MAXN
];

11 
LL
 
	gvÆ
[
MAXN
],
	gdp
[MAXN],
	gsum
,
	gªt
;

12 
	gv
[
MAXN
],
	gli°
[MAXN],
	gt›
;

14 
ölöe
 
	$cmp
(
d©a
 
a
,d©®
b
){ á.
x
==b.x?a.
y
<b.y:a.x<b.x; 
	}
}

15 
ölöe
 
LL
 
	$abs
(
LL
 
a
){ á<0?-a:a; 
	}
}

17 
	$ö£π
(
f
,
t
)

19 
e
[
t›
].
f
=f,e[t›].
t
=t;

20 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

21 
	}
}

23 
	$dfs
(
now
)

25 
i
; 
LL
 
t
;

26 
dp
[
now
]=
vÆ
[now];

27 
v
[
now
]=1;

28 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

29 if(!
v
[
e
[
i
].
t
])

31 
	`dfs
(
e
[
i
].
t
);

32 
dp
[
now
]+=dp[
e
[
i
].
t
];

33 
t
=
	`abs
(
sum
-2*
dp
[
e
[
i
].t]);

34 if(
ªt
>
t
)Ñet=t;

36 
	}
}

38 
	$maö
()

40 
n
,
m
,
ˇ
=1,
x
,
y
,
i
;

41 
	`sˇnf
("%d%d",&
n
,&
m
)&&(n||m))

43 
	`mem£t
(
v
,0,(v));

44 
	`mem£t
(
dp
,0,(dp));

45 
	`¥ötf
("Ca£ %d: ",
ˇ
++);

46 
ªt
=
öf
;

47 
t›
=
i
=0; i<
n
; i++)

48 
li°
[
i
]=-1;

49 
sum
=
i
=0; i<
n
; i++)

51 
	`sˇnf
("%Œd",&
vÆ
[
i
]);

52 
sum
+=
vÆ
[
i
];

54 
i
=0; i<
m
; i++)

55 
	`sˇnf
("%d%d",&
d©
[
i
].
x
,&d©[i].
y
);

56 
	`s‹t
(
d©
,d©+
m
,
cmp
);

57 
x
=-1,
y
=-1;

58 
i
=0; i<
m
; i++)

60 if(
x
==
d©
[
i
].x&&
y
==dat[i].y)

62 
x
=
d©
[
i
].x,
y
=dat[i].y;

63 
	`ö£π
(
x
-1,
y
-1);

64 
	`ö£π
(
y
-1,
x
-1);

66 
	`dfs
(0);

72 
	`¥ötf
("%Œd\n",
ªt
);

75 
	}
}

	@problems/poj/poj_3145.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#X
 500000

	)

4 
	#N
 500011

	)

6 
	snode
{ 
	ml
,
	mr
,
	mc
,
	mi
;

7 
gm
(){  (
	ml
+
	mr
)>>1; }

8 }
	gno
[
N
<<2];

9 
	gvis
[
N
],
	gq
[N],
	gt›
;

11 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

12 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

14 
	$buûd
(
id
,
l
,
r
)

16 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=0;

17 if(
l
==
r
) ;

18 
	`buûd
(
	`L
(
id
),
l
,
no
[id].
	`gm
());

19 
	`buûd
(
	`R
(
id
),
no
[id].
	`gm
()+1,
r
);

20 
	}
}

22 
	$upd©e
(
id
,
p
)

24 if(
no
[
id
].
l
=Úo[id].
r
)

26 
no
[
id
].
c
=1;

27 
no
[
id
].
i
Úo[id].
l
;

30 
mid
=
no
[
id
].
	`gm
();

31 if(
p
<=
mid
)

32 
	`upd©e
(
	`L
(
id
),
p
);

34 
	`upd©e
(
	`R
(
id
),
p
);

35 
no
[
id
].
c
Úo[
	`L
(id)].c|no[
	`R
(id)].c;

36 if(
no
[
id
].
c
)

37 
no
[
id
].
i
Úo[
	`L
(id)].
c
?no[L(id)].i:no[
	`R
(id)].i;

38 
	}
}

40 
	$quîy
(
id
,
Œ
,
º
)

42 if(
no
[
id
].
c
==0)

44 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=÷+r)>>1,
ªt
=0;

45 if(
l
>=
Œ
&&
r
<=
º
)

46  
no
[
id
].
c
*no[id].
i
;

47 if(
mid
>=
Œ
&&
l
<=
º
)

49 
ªt
=
	`quîy
(
	`L
(
id
),
Œ
,
º
);

50 if(
ªt
)

51  
ªt
;

53 if(
mid
<
º
&&
r
>=
Œ
)

54  
	`quîy
(
	`R
(
id
),
Œ
,
º
);

56 
	}
}

58 
	$maö
()

60 
n
,
ˇ
=1;

61 
	`sˇnf
("%d",&
n
)!=
EOF
)

63 if(
n
==0)

65 
	`¥ötf
("Ca£ %d:\n",
ˇ
++);

66 
t›
=0;

67 
	`mem£t
(
vis
,0,(vis));

68 
s
[10];

69 
	`buûd
(1,1,
X
);

70 
x
;

71 
i
=0; i<
n
; i++)

73 
	`sˇnf
("%s%d",&
s
,&
x
);

74 if(
s
[0]=='B')

76 if(
vis
[
x
])

78 
q
[
t›
++]=
x
;

79 
vis
[
x
]=
t›
;

80 
	`upd©e
(1,
x
);

84 if(
x
<=2000)

86 
md
,
ªt
=
N
,
id
;

87 
i
=
t›
-1; i>=0; i--)

89 
md
=
q
[
i
]%
x
;

90 if(
md
<
ªt
)

91 
ªt
=
md
,
id
=
i
;

92 if(
ªt
==0)

95 if(
ªt
>=
N
)

96 
	`puts
("-1");

98 
	`¥ötf
("%d\n",
id
+1);

102 
j
,
ªt
=
N
,
now
,
id
;

103 
i
=0; i<=
X
; i+=
x
)

105 
j
=
i
+
x
-1;

106 if(
j
>
X
)

107 
j
=
X
;

108 
now
=
	`quîy
(1,
i
==0?1:i,
j
);

109 if(
now
==0)

111 if((
now
%
x
)<
ªt
)

112 
ªt
=
now
%
x
,
id
=
vis
[now];

113 if((
now
%
x
)==
ªt
)

114 if(
vis
[
now
]>
id
)

115 
ªt
=
now
%
x
,
id
=
vis
[now];

117 if(
ªt
>=
N
)

118 
	`puts
("-1");

120 
	`¥ötf
("%d\n",
id
);

124 
	`puts
("");

127 
	}
}

	@problems/poj/poj_3150_Cellular_Automaton_matrix.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 600

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
LL
 
	gA
[
MAXN
][MAXN],
	gB
[MAXN][MAXN],
	gd©
[MAXN],
	gT
[MAXN][MAXN];

30 
	gn
;

32 
	$buûd
(
d
)

34 
i
,
x
,
j
;

35 
i
=0; i<
n
; i++)

37 
j
=0; j<
n
; j++)

39 
x
=
	`mö
(
	`abs
(
i
-
j
),
n
-abs(i-j));

40 if(
x
<=
d
)

41 
A
[
i
][
j
]=1;

43 
A
[
i
][
j
]=0;

44 if(
i
==
j
)

45 
B
[
i
][
j
]=1;

47 
B
[
i
][
j
]=0;

50 
	}
}

52 
	$mul
(
LL
 
B
[][
MAXN
],LL 
A
[][MAXN],
m
)

54 
i
,
j
;

55 
LL
 
ªt
;

56 
j
=0; j<
n
; j++)

58 
ªt
=
i
=0; i<
n
; i++)

59 
ªt
=‘ë+
A
[
i
][
j
]*
B
[0][i])%
m
;

60 
T
[0][
j
]=
ªt
;

62 
i
=0; i<
n
; i++)

63 
B
[0][
i
]=
T
[0][i];

64 
i
=1; i<
n
; i++)

65 
j
=0; j<
n
; j++)

66 
B
[
i
][
j
]=B[i-1][(j-1+
n
)%n];

67 
	}
}

69 
	$m©rix_mul
(
k
,
m
)

71 ; 
k
>0; )

73 if(
k
&1)

74 
	`mul
(
B
,
A
,
m
);

75 
k
>>=1;

76 
	`mul
(
A
,A,
m
);

78 
	}
}

80 
	$sﬁve
(
m
)

82 
i
,
j
;

83 
LL
 
ªt
,
™s
[
MAXN
];

84 
i
=0; i<
n
; i++)

86 
ªt
=
j
=0; j<
n
; j++)

87 
ªt
=‘ë+
B
[
i
][
j
]*
d©
[j])%
m
;

88 
™s
[
i
]=
ªt
;

90 
i
=0; i<
n
; i++)

91 
d©
[
i
]=
™s
[i];

92 
	}
}

94 
	$maö
()

96 
m
,
d
,
k
,
i
;

97 
	`sˇnf
("%d%d%d%d",&
n
,&
m
,&
d
,&
k
)!=
EOF
)

99 
i
=0; i<
n
; i++)

100 
	`sˇnf
("%Œd",&
d©
[
i
]);

101 
	`buûd
(
d
);

102 
	`m©rix_mul
(
k
,
m
);

103 
	`sﬁve
(
m
);

104 
	`¥ötf
("%Œd",
d©
[0]);

105 
i
=1; i<
n
; i++)

106 
	`¥ötf
(" %Œd",
d©
[
i
]);

107 
	`puts
("");

110 
	}
}

	@problems/poj/poj_3155.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 2010

	)

20 
	#M
 2000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-7

	)

23 
	#öf
 1e8

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
	mw
; }
	ge
[
S
],
	ges
[S];

35 
	gli°
[
N
],
	gt›
,
	gq
[
S
],
	gœy
[S],
	gvis
[N],
	g™s
[N],
	g™°
;

37 
	$ö£π
(
f
,
t
,
w
)

39 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
n
=
li°
[f];

40 
e
[
t›
].
w
=w,
li°
[
f
]=top++;

41 
	}
}

43 
	$_ö£π
(
f
,
t
,
w
)

45 
	`ö£π
(
f
,
t
,
w
);

46 
	`ö£π
(
t
,
f
,0);

47 
	}
}

49 
	$bfs
(
s
,
t
,
n
)

51 
l
,
r
,
i
,
j
;

52 
i
=0; i<
n
; i++Ë
œy
[i]=-1;

53 
q
[
l
=
r
=0]=
s
; 
œy
[s]=0;

54 ; 
l
<=
r
;)

56 
i
=
q
[
l
++];

57 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

59 if(
œy
[
e
[
j
].
t
]<0&&e[j].
w
>
ïs
)

60 
œy
[
e
[
j
].
t
]ˆay[
i
]+1,
q
[++
r
]=e[j].t;

63  
œy
[
t
]>=0;

64 
	}
}

66 
	$dfs
(
now
,
t
,
now_Êow
)

68 
âl
=0,
sögÀ
;

69 
i
,
j
;

70 if(
now
==
t
)

71  
now_Êow
;

72 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

74 
to
=
e
[
i
].
t
;

75 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
w
>
ïs
&&(
sögÀ
=
	`dfs
—o,
t
,
	`mö
”[i].w,
now_Êow
-
âl
))))

77 
e
[
i
].
w
-=
sögÀ
;

78 
e
[
i
^1].
w
+=
sögÀ
;

79 
âl
+=
sögÀ
;

82 if(
	`Ábs
(
âl
)<
ïs
Ë
œy
[
now
]=-1;

83  
âl
;

84 
	}
}

86 
	$di˙ic
(
s
,
t
,
n
)

88 
ªt
=0;

89 
	`bfs
(
s
,
t
,
n
))

91 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

93  
ªt
;

94 
	}
}

96 
	$gë_vÆ
(
n
,
m
,
k
)

98 
f
,
t
;

99 
t›
=0;

100 
i
=0; i<
n
+
m
+2; i++)

101 
li°
[
i
]=-1;

102 
i
=0; i<
m
; i++)

104 
f
=
es
[
i
].f-1,
t
=es[i].t-1;

105 
	`_ö£π
(
n
+
m
,n+
i
,1);

106 
	`_ö£π
(
n
+
i
,
f
,
öf
);

107 
	`_ö£π
(
n
+
i
,
t
,
öf
);

109 
i
=0; i<
n
; i++)

110 
	`_ö£π
(
i
,
n
+
m
+1,
k
);

111 
x
=
	`di˙ic
(
m
+
n
,m+n+1,m+n+2);

112  
m
-
x
;

113 
	}
}

115 
	$dfs2
(
now
,
n
)

117 
vis
[
now
]=1;

118 if(
now
<
n
)

119 
™s
[
™°
++]=
now
;

120 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

122 if(
e
[
i
].
w
>
ïs
&&!
vis
[e[i].
t
])

123 
	`dfs2
(
e
[
i
].
t
,
n
);

125 
	}
}

127 
	$cmp
(
a
,
b
){ á<b; 
	}
}

129 
	$maö
()

131 
n
,
m
;

132 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

134 
i
=0; i<
m
; i++)

135 
	`sˇnf
("%d%d",&
es
[
i
].
f
,&es[i].
t
);

136 if(
m
==0)

138 
	`¥ötf
("1\n1\n");

141 
l
=0.0,
r
=
m
,
k
;

142 
¬
=1.0/
n
/n;

143 ; 
r
-
l
>=
¬
;)

145 
k
=(
l
+
r
)/2;

146 if(
	`gë_vÆ
(
n
,
m
,
k
)>
ïs
)

147 
l
=
k
;

149 
r
=
k
;

151 
	`gë_vÆ
(
n
,
m
,
l
);

152 
	`mem£t
(
vis
,0,(vis));

153 
™°
=0;

154 
	`dfs2
(
n
+
m
,n);

155 
	`s‹t
(
™s
,™s+
™°
,
cmp
);

156 
	`¥ötf
("%d\n",
™°
);

157 
i
=0; i<
™°
; i++)

158 
	`¥ötf
("%d\n",
™s
[
i
]+1);

159 
	`¥ötf
("%lf\n",
	`gë_vÆ
(
n
,
m
,1.5));

162 
	}
}

	@problems/poj/poj_3164_ZL_MST.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 111

	)

20 
	#M
 1000010

	)

21 
	#S
 20100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 1e9

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

35 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
	ml
; }
	ge
[
S
];

36 
	gm©
[
N
][N],
	gÀn
[N];

37 
	gt›
,
	gli°
[
N
],
	gid
[N],
	gv
[N],
	g¥e
[N];

39 
	$ö£π
(
f
,
t
,
l
)

41 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

42 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

43 
	}
}

45 
	$gë_Àn
(
i
,
j
)

47  
	`sqπ
((
no
[
i
].
x
-no[
j
].x)*“o[i].x-no[j].x)+“o[i].
y
-no[j].y)*(no[i].y-no[j].y));

48 
	}
}

50 
	$ZL_MST
(
r
,
n
)

52 
√xä
,
f
,
t
;

53 
ªt
=0;

56 
	`mem£t
(
¥e
,-1,(pre));

57 
	`mem£t
(
v
,-1,(v));

58 
	`mem£t
(
id
,-1,(id));

59 
i
=0; i<
n
; i++)

60 
Àn
[
i
]=
öf
;

61 
i
=0; i<
t›
; i++)

63 
f
=
e
[
i
].f,
t
=e[i].t;

64 if(
f
==
t
) ;

65 if(
Àn
[
t
]>
e
[
i
].
l
)

66 
Àn
[
t
]=
e
[
i
].
l
,
¥e
[t]=
f
;

68 
i
=0; i<
n
; i++)

69 if(
¥e
[
i
]==-1&&i!=
r
)

71 
√xä
=0;

72 
Àn
[
r
]=0;

73 
i
=0; i<
n
; i++)

75 
ªt
+=
Àn
[
i
];

76 
now
=
i
;

77 ; 
v
[
now
]!=
i
&&
id
[now]==-1&&now!=
r
; )

79 
v
[
now
]=
i
;

80 
now
=
¥e
[now];

82 if(
now
!=
r
&&
id
[now]==-1)

84 
f
=
¥e
[
now
]; f!=now; f=pre[f])

85 
id
[
f
]=
√xä
;

86 
id
[
now
]=
√xä
++;

89 if(
√xä
==0) ;

90 
i
=0; i<
n
; i++)

91 if(
id
[
i
]<0)

92 
id
[
i
]=
√xä
++;

93 
i
=0; i<
t›
; i++)

95 
f
=
e
[
i
].f,
t
=e[i].t;

96 
e
[
i
].
f
=
id
[f];

97 
e
[
i
].
t
=
id
[t];

98 if(
f
==
t
) ;

99 
e
[
i
].
l
-=
Àn
[
t
];

101 
n
=
√xä
;

102 
r
=
id
[r];

104  
ªt
;

105 
	}
}

107 
	$maö
()

109 
n
,
m
;

110 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

112 
t›
=0;

113 
i
=0; i<
n
; i++)

114 
li°
[
i
]=-1;

115 
i
=0; i<
n
; i++)

116 
	`sˇnf
("%lf%lf",&
no
[
i
].
x
,&no[i].
y
);

117 
i
=0; i<
n
; i++)

118 
j
=
i
; j<
n
; j++)

119 
m©
[
j
][
i
]=m©[i][j]=
	`gë_Àn
(i,j);

120 
i
=0; i<
m
; i++)

122 
x
,
y
;

123 
	`sˇnf
("%d%d",&
x
,&
y
);

124 
x
--,
y
--;

125 
	`ö£π
(
x
,
y
,
m©
[x][y]);

127 
ªt
=
	`ZL_MST
(0,
n
);

128 if(
ªt
<0)

129 
	`puts
("poor snoopy");

131 
	`¥ötf
("%.2f\n",
ªt
);

134 
	}
}

	@problems/poj/poj_3216_hungary.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 210

	)

20 
	#M
 1000010

	)

21 
	#S
 80100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gm©
[
N
][N];

35 
	sèsk
{ 
	mp
,
	mt
,
	md
; }
	gtsk
[
N
];

36 
	sedge
{
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

37 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N];

39 
	$ö£π
(
f
,
t
)

41 
e
[
t›
].
f
=f,e[t›].
t
=t;

42 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

43 
	}
}

45 
	$Êoyd
(
n
)

47 
k
=0; k<
n
; k++)

48 
i
=0; i<
n
; i++)

49 
j
=0; j<
n
; j++)

50 if(
m©
[
i
][
k
]+m©[k][
j
]<mat[i][j])

51 
m©
[
i
][
j
]=m©[i][
k
]+mat[k][j];

52 
	}
}

54 
	$föd
(
now
)

56 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

58 
to
=
e
[
i
].
t
;

59 if(!
y
[
to
])

61 
y
[
to
]=1;

62 if(
m©ch
[
to
]<0||
	`föd
(match[to]))

64 
m©ch
[
to
]=
now
;

70 
	}
}

72 
	$hung¨y
(
n
)

74 
ªt
=0;

75 
	`mem£t
(
m©ch
,-1,(match));

76 
i
=0; i<
n
; i++)

78 
	`mem£t
(
y
,0,(y));

79 if(
	`föd
(
i
))

80 
ªt
++;

82  
ªt
;

83 
	}
}

85 
	$maö
()

87 
q
,
m
;

88 
	`sˇnf
("%d%d",&
q
,&
m
)!=
EOF
)

90 if(
q
==0&&
m
==0)

92 
t›
=0;

93 
i
=0; i<
m
; i++)

94 
li°
[
i
]=-1;

95 
i
=0; i<
q
; i++)

96 
j
=0; j<
q
; j++)

98 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

99 if(
m©
[
i
][
j
]<0)

100 
m©
[
i
][
j
]=
öf
;

102 
	`Êoyd
(
q
);

103 
i
=0; i<
m
; i++)

104 
	`sˇnf
("%d%d%d",&
tsk
[
i
].
p
,&tsk[i].
t
,&tsk[i].
d
);

105 
i
=0; i<
m
; i++)

106 
j
=0; j<
m
; j++)

108 if(
i
==
j
)

110 
x
=
tsk
[
i
].
p
,
y
Òsk[
j
].p;

111 
x
--,
y
--;

112 if(
tsk
[
i
].
t
+tsk[i].
d
+
m©
[
x
][
y
]<Òsk[
j
].t)

114 
	`ö£π
(
i
,
j
);

117 
	`¥ötf
("%d\n",
m
-
	`hung¨y
(m));

120 
	}
}

	@problems/poj/poj_3254_Corn_Fields_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 13

	)

4 
	#MOD
 100000000

	)

6 
	gm©
[
N
][N],
	gdp
[N][N][4100],
	gn
,
	gm
;

8 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

10 
	$dfs
(
x
,
y
,
s
)

12 
√xtx
,
√xty
,
ªt
=0,
t
,
ss
;

13 if(
dp
[
x
][
y
][
s
]>=0)  dp[x][y][s];

14 if(
x
==
n
&&
y
==
m
)

16 if(
m©
[
x
-1][
y
]!=-1&&mat[x][y-1]!=-1&&mat[x][y]!=1)

17  
dp
[
x
][
y
][
s
]=2;

18  
dp
[
x
][
y
][
s
]=1;

21 if(
y
==
m
)

22 
√xtx
=
x
+1,
√xty
=1;

24 
√xtx
=
x
,
√xty
=
y
+1;

26 if((
m©
[
x
][
y
]==1)||(mat[x-1][y]==-1||mat[x][y-1]==-1))

28 
ss
=
s
;

29 
ss
|=
	`B
(
y
-1);

30 
ss
^=
	`B
(
y
-1);

31 
ªt
=
	`dfs
(
√xtx
,
√xty
,
ss
);

35 
ss
=
s
;

36 
ss
|=
	`B
(
y
-1);

37 
m©
[
x
][
y
]=-1;

38 
ªt
=
	`dfs
(
√xtx
,
√xty
,
ss
);

39 
m©
[
x
][
y
]=0;

40 
ss
^=
	`B
(
y
-1);

41 
ªt
=‘ë+
	`dfs
(
√xtx
,
√xty
,
ss
))%
MOD
;

43  
dp
[
x
][
y
][
s
]=
ªt
;

44 
	}
}

46 
	$maö
()

48 
i
,
j
,
ªt
;

49 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

51 
	`mem£t
(
dp
,-1,(dp));

52 
	`mem£t
(
m©
,0,(mat));

53 
i
=1; i<=
n
; i++)

54 
j
=1; j<=
m
; j++)

56 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

57 
m©
[
i
][
j
]=1-mat[i][j];

59 
ªt
=
	`dfs
(1,1,0);

60 
	`¥ötf
("%d\n",
ªt
);

63 
	}
}

	@problems/poj/poj_3266_CowSchool_xielvyouhua.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<ve˘‹
>

4 
	~<Æg‹ôhm
>

6 
usög
 
«me•a˚
 
	g°d
;

8 
	tLL
;

9 c⁄° 
	gN
 = 200010;

11 
	snode
 {

12 
LL
 
	mx
,
	my
;

13 
node
(){}

14 
node
(
LL
 
xx
,LL 
yy
):
x
(xx),
y
(yy){}

15 
node
 
	m›î©‹
+“odê
	ma
) {

16  
node
(
x
+
a
.x,
y
+a.y);

18 
node
 
	m›î©‹
-“odê
	ma
) {

19  
node
(
x
-
a
.x,
y
-a.y);

21 }
	gno
[
N
],
	gsum
[N];

23 
	gq
[
N
],
	gmx
[N],
	gmi
[N];

25 
LL
 
	$xmu…
(
node
 
a
,nodê
b
) {

26  
a
.
x
*
b
.
y
-b.x*a.y;

27 
	}
}

29 
	gve˘‹
<> 
	g™s
;

31 
	$cmp
(
node
 
a
,nodê
b
) {

32  
a
.
y
*
b
.
x
<b.y*a.x;

33 
	}
}

35 
	$maö
() {

36 
n
;

37 
	`sˇnf
("%d",&
n
)+1) {

38 if(
n
==0) ;

39 
i
=0; i<
n
; i++) {

40 
	`sˇnf
("%Œd%Œd",&
no
[
i
].
y
,&no[i].
x
);

43 
	`s‹t
(
no
,no+
n
,
cmp
);

44 
sum
[
n
-1]=
no
[n-1];

45 
i
=
n
-2; i>=0; i--) {

46 
sum
[
i
]=sum[i+1]+
no
[i];

48 
l
=0,
r
=-1;

49 
i
=0; i<
n
-1; i++) {

50 ; 
l
<=
r
 && 
no
[
q
[r]].
x
>Úo[
i
].x;Ñ--);

51 ; 
l
<=
r
-1 && 
	`xmu…
(
	`node
(
no
[
i
]-no[
q
[r]]),node(no[q[r]]-no[q[r-1]]))<=0;Ñ--);

52 
q
[++
r
]=
i
;

53 ; 
l
<=
r
-1 && 
	`xmu…
(
sum
[
i
+1],
	`node
(
no
[
q
[r]]-no[q[r-1]]))<=0;Ñ--);

54 
mx
[
i
]=
q
[
r
];

56 
l
=0,
r
=-1;

57 
™s
.
	`˛ór
();

58 
i
=
n
-2; i>=0; i--) {

59 ; 
l
<=
r
 && 
no
[
q
[r]].
x
<Úo[
i
+1].x;Ñ--);

60 ; 
l
<=
r
-1 && 
	`xmu…
(
	`node
(
no
[
i
+1]-no[
q
[r]]),node(no[q[r]]-no[q[r-1]]))<=0;Ñ--);

61 
q
[++
r
]=
i
+1;

62 ; 
l
<=
r
-1 && 
	`xmu…
(
sum
[
i
+1],
	`node
(
no
[
q
[l]]-no[q[l+1]]))>=0;Ü++);

63 
mi
[
i
]=
q
[
l
];

64 if(
	`xmu…
(
sum
[
i
+1],
no
[
mx
[i]]-no[
mi
[i]])>0) {

65 
™s
.
	`push_back
(
i
+1);

68 
	`¥ötf
("%d\n",
™s
.
	`size
());

69 
i
=
™s
.
	`size
()-1; i>=0; i--) {

70 
	`¥ötf
("%d\n",
™s
[
i
]);

74 
	}
}

	@problems/poj/poj_3270_Cow_Sorting_Polya.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#MAXN
 10001

	)

5 
usög
 
	g°d
::
s‹t
;

6 
	tLL
;

8 
	snode
{ 
LL
 
	mx
; 
	mi
; }
	g¨r
[
MAXN
];

10 
LL
 
	gd©
[
MAXN
];

11 
	gèg
[
MAXN
],
	gpos
[10*MAXN];

13 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
<b.x; 
	}
}

14 
ölöe
 
LL
 
	$möv
(
LL
 
a
,LL 
b
){ á<b?a:b; 
	}
}

16 
	$ˇlc
(
id
,
LL
 &
mö
,LL &
sum
)

18 
i
,
ªt
=1,
now
; 
LL
 
t
=
d©
[
id
];

19 
now
=
pos
[
t
];

20 
èg
[
id
]=1;

21 
mö
=
t
;

22 
sum
=
t
;

25 
t
=
d©
[
now
];

26 
id
=
¨r
[
pos
[
t
]].
i
;

27 if(
èg
[
id
]) ;

28 
now
=
pos
[
t
];

29 
èg
[
id
]=1;

30 if(
mö
>
t
) min=t;

31 
sum
+=
t
;

32 
ªt
++;

34  
ªt
;

35 
	}
}

37 
	$maö
()

39 
n
,
˙t
,
i
; 
LL
 
ªt
,
mö
,
tmp_mö
,
sum
;

40 
	`sˇnf
("%d",&
n
)!=
EOF
)

42 
	`mem£t
(
èg
,0,(tag));

43 
mö
=
MAXN
*100;

44 
i
=0; i<
n
; i++)

46 
	`sˇnf
("%Œd",&
d©
[
i
]);

47 
¨r
[
i
].
x
=
d©
[i];

48 
¨r
[
i
].i=i;

49 
mö
=
	`möv
(mö,
d©
[
i
]);

51 
	`s‹t
(
¨r
,¨r+
n
,
cmp
);

52 
i
=0; i<
n
; i++)

53 
pos
[
¨r
[
i
].
x
]=i;

54 
ªt
=
i
=0; i<
n
; i++)

55 if(!
èg
[
i
])

57 
˙t
=
	`ˇlc
(
i
,
tmp_mö
,
sum
);

58 
ªt
+=
	`möv
(
mö
*(
˙t
+1)+
sum
+
tmp_mö
,sum+(cnt-2)*tmp_min);

60 
	`¥ötf
("%Œd\n",
ªt
);

63 
	}
}

	@problems/poj/poj_3277_City_Horizon_segt_scanning.cpp

6 
	~<c°rög
>

7 
	~<c°dio
>

8 
	~<ve˘‹
>

9 
	~<£t
>

10 
	~<m≠
>

11 
	~<queue
>

12 
	~<°rög
>

13 
	~<cm©h
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

19 
	#N
 80001

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

25 
	slöe
{ 
LL
 
	mx
,
	my1
,
	my2
; 
	mt
; }
	g 
[
N
];

26 
LL
 
	gco‹
[
N
];

27 
	gt›
,
	g˘›
;

29 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

30 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

31 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

32 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

33 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

34 
ölöe
 
	$lowî_bound
(
x
){  x&(-x); 
	}
}

35 
ölöe
 
LL
 
	$Àngth
(
l
,
r
){  
co‹
[r-1]-co‹[l-1]; 
	}
}

36 
	$cmp
(
löe
 
a
,löê
b
){ á.
x
<b.x; 
	}
}

38 
	s£g_åì


40 
	ml
,
	mr
,
	mcﬁ
,
	m˙t
,
	mbl
,
	mbr
; 
LL
 
	mÀn
;

41 }
	g£gt
[
N
<<2];

43 
	$¸óã_åì
(
id
,
l
,
r
)

45 
m
=(
l
+
r
)>>1;

46 
£gt
[
id
].
l
ˆ,£gt[id].
r
=r;

47 
£gt
[
id
].
cﬁ
=£gt[id].
Àn
=0;

48 
£gt
[
id
].
bl
=£gt[id].
br
=£gt[id].
˙t
=0;

49 if(
r
-
l
<=1)

51 
	`¸óã_åì
(
	`L
(
id
),
l
,
m
);

52 
	`¸óã_åì
(
	`R
(
id
),
m
,
r
);

53 
	}
}

55 
	$upd©e
(
id
,
l
,
r
)

57 if(
£gt
[
id
].
cﬁ
||
r
==
l
)

59 
£gt
[
id
].
Àn
=
	`Àngth
(
l
,
r
);

60 
£gt
[
id
].
˙t
=£gt[id].
bl
=£gt[id].
br
=1;

64 
£gt
[
id
].
Àn
=£gt[
	`L
(id)].Àn+£gt[
	`R
(id)].len;

65 
£gt
[
id
].
˙t
=£gt[
	`L
(id)].˙t+£gt[
	`R
(id)].cnt;

66 if(
£gt
[
	`L
(
id
)].
br
&&£gt[
	`R
(id)].
bl
)

67 
£gt
[
id
].
˙t
--;

68 
£gt
[
id
].
bl
=£gt[
	`L
(id)].bl;

69 
£gt
[
id
].
br
=£gt[
	`R
(id)].br;

71 
	}
}

73 
	$ö£π_£g
(
id
,
Œ
,
º
)

75 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

76 if(
Œ
==
l
&&
º
==
r
)

77 
£gt
[
id
].
cﬁ
++;

80 if(
Œ
<
m
)

81 
	`ö£π_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

82 if(
º
>
m
)

83 
	`ö£π_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

84 if(
£gt
[
	`L
(
id
)].
cﬁ
&&£gt[
	`R
(id)].col)

86 
£gt
[
	`L
(
id
)].
cﬁ
--;

87 
	`upd©e
(
	`L
(
id
),
l
,
m
);

88 
£gt
[
	`R
(
id
)].
cﬁ
--;

89 
	`upd©e
(
	`R
(
id
),
m
,
r
);

90 
£gt
[
id
].
cﬁ
++;

93 
	`upd©e
(
id
,
l
,
r
);

94 
	}
}

96 
	$dñ_£g
(
id
,
Œ
,
º
)

98 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

99 if(
Œ
==
l
&&
º
==
r
)

100 
£gt
[
id
].
cﬁ
--;

101 if(
£gt
[
id
].
cﬁ
)

103 
£gt
[
id
].
cﬁ
--;

104 if(
Œ
>
l
)

105 
	`ö£π_£g
(
id
,
l
,
Œ
);

106 if(
º
<
r
)

107 
	`ö£π_£g
(
id
,
º
,
r
);

111 if(
Œ
<
m
)

112 
	`dñ_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

113 if(
º
>
m
)

114 
	`dñ_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

116 
	`upd©e
(
id
,
l
,
r
);

117 
	}
}

119 
LL
 
	$£g_Àn
(
id
,
Œ
,
º
)

121 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

122 
LL
 
ªt
=0;

123 if(
£gt
[
id
].
cﬁ
||(
Œ
==
l
&&
º
==
r
))

124  
£gt
[
id
].
Àn
;

125 if(
Œ
<
m
)

126 
ªt
+=
	`£g_Àn
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

127 if(
º
>
m
)

128 
ªt
+=
	`£g_Àn
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

129  
ªt
;

130 
	}
}

132 
	$gë_id
(
LL
 
x
)

134 
l
,
r
,
m
;

135 
l
=0,
r
=
˘›
-1;Ü<=r; )

137 
m
=(
l
+
r
)>>1;

138 if(
co‹
[
m
]>
x
)

139 
r
=
m
-1;

140 if(
co‹
[
m
]<
x
)

141 
l
=
m
+1;

143  
m
;

146 
	}
}

148 
	$maö
()

150 
n
,
i
,
j
,
l
,
r
,
èg
;

151 
LL
 
x1
,
x2
,
y1
,
y2
,
¥e
,
ªt
,
h
;

152 
	`sˇnf
("%d",&
n
)!=
EOF
)

154 
y1
=0;

155 
˘›
=
t›
=
i
=0; i<
n
; i++)

157 
	`sˇnf
("%Œd%Œd%Œd",&
x1
,&
x2
,&
y2
);

158 
 
[
t›
].
x
=
x1
, [t›].
y1
=y1, [t›].
y2
=y2;

159 
 
[
t›
++].
t
=0;

160 
 
[
t›
].
x
=
x2
, [t›].
y1
=y1, [t›].
y2
=y2;

161 
 
[
t›
++].
t
=1;

162 
co‹
[
˘›
++]=
y1
,co‹[˘›++]=
y2
;

164 
	`s‹t
(
co‹
,co‹+
˘›
);

165 
	`s‹t
(
 
, +
t›
,
cmp
);

166 
j
=0,
i
=1; i<
˘›
; i++)

168 if(
co‹
[
j
]==co‹[
i
])

171 
co‹
[++
j
]=co‹[
i
];

173 
˘›
=
j
+1;

174 
	`¸óã_åì
(1,1,
˘›
+1);

175 
¥e
=
 
[0].
x
;

176 
ªt
=
i
=0; i<
t›
; i++)

178 
l
=
	`gë_id
(
 
[
i
].
y1
)+1;

179 
r
=
	`gë_id
(
 
[
i
].
y2
)+1;

180 
èg
=
 
[
i
].
t
;

182 
ªt
+=(
 
[
i
].
x
-
¥e
)*
£gt
[1].
Àn
;

183 if(
èg
)

184 
	`dñ_£g
(1,
l
,
r
);

186 
	`ö£π_£g
(1,
l
,
r
);

187 
¥e
=
 
[
i
].
x
;

189 
	`¥ötf
("%Œd\n",
ªt
);

192 
	}
}

	@problems/poj/poj_3280_Cheapest_Palindrome_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#öf
 100000000

	)

4 
	#MAXL
 2002

	)

6 
	gs
[
MAXL
],
	gss
[5];

7 
	g„e
[30],
	gdp
[
MAXL
][MAXL];

9 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

11 
	$dfs
(
l
,
r
)

13 
ªt
=
öf
;

14 if(
dp
[
l
][
r
]>=0)  dp[l][r];

15 if(
l
>=
r
Ë 
dp
[l][r]=0;

16 if(
s
[
l
]==s[
r
])

17 
ªt
=
	`dfs
(
l
+1,
r
-1);

20 
ªt
=
	`mö
‘ë,
	`dfs
(
l
+1,
r
)+
„e
[
s
[l]]);

21 
ªt
=
	`mö
‘ë,
	`dfs
(
l
,
r
-1)+
„e
[
s
[r]]);

23  
dp
[
l
][
r
]=
ªt
;

24 
	}
}

26 
	$maö
()

28 
l
,
m
,
a
,
b
,
ªt
,
i
;

29 
	`sˇnf
("%d%d",&
m
,&
l
)!=
EOF
)

31 
	`sˇnf
("%s",
s
);

32 
i
=0; i<
l
; i++)

33 
s
[
i
]-='a';

34 
i
=0; i<
m
; i++)

36 
	`sˇnf
("%s%d%d",
ss
,&
a
,&
b
);

37 
„e
[
ss
[0]-'a']=
	`mö
(
a
,
b
);

39 
	`mem£t
(
dp
,-1,(dp));

40 
ªt
=
	`dfs
(0,
l
-1);

41 
	`¥ötf
("%d\n",
dp
[0][
l
-1]);

44 
	}
}

	@problems/poj/poj_3281.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 402

	)

20 
	#M
 10000

	)

21 
	#S
 161000

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	sedge
{ 
	mf
,
	mt
,
	mw
,
	mn
; }
	ge
[
S
];

35 
	gli°
[
N
],
	gt›
,
	gœy
[N],
	gq
[
S
];

37 
	$ö£π
(
f
,
t
,
w
)

39 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

40 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

41 
	}
}

43 
	$_ö£π
(
f
,
t
,
w
)

45 
	`ö£π
(
f
,
t
,
w
);

46 
	`ö£π
(
t
,
f
,0);

47 
	}
}

49 
	$bfs
(
s
,
t
,
n
)

51 
l
,
r
;

52 
	`mem£t
(
œy
,-1,(lay));

53 
q
[
l
=
r
=0]=
s
;

54 
œy
[
s
]=0;

55 ; 
l
<=
r
;)

57 
now
=
q
[
l
++];

58 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

60 
to
=
e
[
i
].
t
;

61 if(
œy
[
to
]<0&&
e
[
i
].
w
>0)

62 
œy
[
to
]ˆay[
now
]+1,
q
[++
r
]=to;

65  
œy
[
t
]>=0;

66 
	}
}

68 
	$dfs
(
now
,
t
,
now_Êow
)

70 
âl
=0,
sögÀ
;

71 if(
now
==
t
Ë 
now_Êow
;

72 
i
=
li°
[
now
]; i!=-1&&
now_Êow
>
âl
; i=
e
[i].
n
)

74 
to
=
e
[
i
].
t
;

75 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
w
>0&&(
sögÀ
=
	`dfs
—o,
t
,
	`mö
(
now_Êow
-
âl
,e[i].w))))

77 
e
[
i
].
w
-=
sögÀ
;

78 
e
[
i
^1].
w
+=
sögÀ
;

79 
âl
+=
sögÀ
;

82 if(
âl
==0Ë
œy
[
now
]=-1;

83  
âl
;

84 
	}
}

86 
	$di˙ic
(
s
,
t
,
n
)

88 
ªt
=0;

89 
	`bfs
(
s
,
t
,
n
))

91 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

93  
ªt
;

94 
	}
}

96 
	$maö
()

98 
n
,
f
,
d
,
¬
;

99 
	`sˇnf
("%d%d%d",&
n
,&
f
,&
d
)!=
EOF
)

101 
¬
=2*
n
+
f
+
d
;

102 
t›
=0;

103 
i
=0; i<
¬
+2; i++)

104 
li°
[
i
]=-1;

105 
i
=0; i<
n
; i++)

106 
	`_ö£π
(
i
,
n
+i,1);

107 
i
=0; i<
f
; i++)

108 
	`_ö£π
(
¬
,2*
n
+
i
,1);

109 
i
=0; i<
d
; i++)

110 
	`_ö£π
(2*
n
+
f
+
i
,
¬
+1,1);

111 
i
=0; i<
n
; i++)

113 
fi
,
di
,
x
;

114 
	`sˇnf
("%d%d",&
fi
,&
di
);

115 
j
=0; j<
fi
; j++)

117 
	`sˇnf
("%d",&
x
);

118 
x
--;

119 
	`_ö£π
(2*
n
+
x
,
i
,1);

121 
j
=0; j<
di
; j++)

123 
	`sˇnf
("%d",&
x
);

124 
x
--;

125 
	`_ö£π
(
n
+
i
,2*n+
f
+
x
,1);

128 
	`¥ötf
("%d\n",
	`di˙ic
(
¬
,nn+1,nn+2));

131 
	}
}

	@problems/poj/poj_3286_How_many_0s_math.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 1010

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
LL
 
	gD
[100];

31 
	$öô
()

33 
i
;

34 
D
[0]=1;

35 
i
=1; i<63; i++)

36 
D
[
i
]=10*D[i-1];

37 
	}
}

39 
LL
 
	$dfs2
(
LL
 
x
,
l
)

41 if(
l
==1)  1;

42 
LL
 
b
=
x
%
D
[
l
-1],
a
=x/D[l-1];

43 
LL
 
ªt
=0;

44 if(
a
>0)

46 
ªt
+=
D
[
l
-1];

47 
ªt
+=(
a
-1)*
D
[
l
-2]*(l-1);

48 
ªt
+=
	`dfs2
(
D
[
l
-1]-1,l-1);

51 
ªt
+=
b
+1;

52 
ªt
+=
	`dfs2
(
b
,
l
-1);

53  
ªt
;

54 
	}
}

56 
LL
 
	$dfs
(
LL
 
x
,
l
)

58 if(
l
==1)  1;

60 
LL
 
b
=
x
%
D
[
l
-1],
a
=x/D[l-1];

61 
LL
 
ªt
=(
a
-1)*
D
[
l
-2]*(l-1);

62 
ªt
+=
	`dfs
(
D
[
l
-1]-1,l-1);

63 
ªt
+=
	`dfs2
(
b
,
l
-1);

64  
ªt
;

65 
	}
}

67 
LL
 
	$ˇl
(
LL
 
x
)

69 
LL
 
y
; 
l
=0;

70 if(
x
<0)

72 
y
=
x
; y; )

73 
l
++,
y
/=10;

74 if(
x
==0Ë
l
=1;

75  
	`dfs
(
x
,
l
);

76 
	}
}

78 
	$maö
()

80 
LL
 
m
,
n
;

81 
	`öô
();

82 
	`sˇnf
("%Œd%Œd",&
m
,&
n
)&&m>=0)

83 
	`¥ötf
("%Œd\n",
	`ˇl
(
n
)-ˇl(
m
-1));

85 
	}
}

	@problems/poj/poj_3301_Texas_Trip_recursion.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<cm©h
>

10 
	~<ve˘‹
>

11 
	~<£t
>

12 
	~<m≠
>

13 
	~<queue
>

14 
	~<°rög
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#ïs
 1e-6

	)

19 
	#M
 21

	)

20 
	#MAXM
 1000010

	)

21 
	#öf
 1e8

	)

22 
	#MOD
 1000000007

	)

24 
	tLL
;

25 
usög
 
«me•a˚
 
	g°d
;

27 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

28 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

29 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

30 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

31 
	spoöt
{ 
	mx
,
	my
; }
	gp
[100];

33 c⁄° 
	gpi
=
acos
(-1);

35 
	$ˇl
(
n
,
u
)

37 
i
;

38 
lx
=
öf
,
rx
=-öf,
uy
=-öf,
dy
=öf,
x
,
y
;

39 
i
=0; i<
n
; i++)

41 
x
=
p
[
i
].x*
	`cos
(
u
)-p[i].
y
*
	`sö
(u);

42 
y
=
p
[
i
].y*
	`cos
(
u
)+p[i].
x
*
	`sö
(u);

43 
lx
=
	`mö
÷x,
x
);

44 
rx
=
	`max
‘x,
x
);

45 
dy
=
	`mö
(dy,
y
);

46 
uy
=
	`max
(uy,
y
);

48  
	`max
(
	`Ábs
(
uy
-
dy
),Ábs(
rx
-
lx
));

49 
	}
}

51 
	$sﬁve
(
n
)

53 
i
;

54 
ªt
=
öf
,
l
=0,
r
=
pi
/2,
u
,
v
,
be°
,
tmp
;

55 
i
=0; i<
M
&&(
r
-
l
>
ïs
); i++)

57 
v
=(
r
-
l
)/
N
;

58 
be°
=
l
;

59 
u
=
l
; u<=
r
; u+=
v
)

61 
tmp
=
	`ˇl
(
n
,
u
);

62 if(
tmp
<
ªt
)

63 
ªt
=
tmp
,
be°
=
u
;

65 if(
be°
>
l
)

66 
l
=
be°
-
v
;

67 if(
be°
<
r
)

68 
r
=
be°
+
v
;

71  
ªt
*ret;

72 
	}
}

74 
	$maö
()

76 
t
,
n
,
i
;

77 
ªt
;

78 
	`sˇnf
("%d",&
t
);

79 
t
--)

81 
	`sˇnf
("%d",&
n
);

82 
i
=0; i<
n
; i++)

83 
	`sˇnf
("%lf%lf",&
p
[
i
].
x
,&p[i].
y
);

84 
ªt
=
	`sﬁve
(
n
);

85 
	`¥ötf
("%.2f\n",
ªt
);

88 
	}
}

	@problems/poj/poj_3318_Matrix_Multiplication_randon.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MAXN
 600

	)

17 
	#MAXM
 1000010

	)

18 
	#MOD
 1000000007

	)

20 
	tLL
;

21 
usög
 
«me•a˚
 
	g°d
;

23 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

24 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

25 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

26 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

27 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
	gA
[
MAXN
][MAXN],
	gB
[MAXN][MAXN],
	gC
[MAXN][MAXN],
	gx
[MAXN],
	gl
[MAXN],
	gr
[MAXN],
	gn
,
	gtmp
[MAXN];

31 
	$ˇl
(
ªt
[],
x
[],
A
[][
MAXN
])

33 
i
,
ªs
,
j
;

34 
i
=0; i<
n
; i++)

36 
ªs
=
j
=0; j<
n
; j++)

37 
ªs
+=
x
[
j
]*
A
[j][
i
];

38 
tmp
[
i
]=
ªs
;

40 
i
=0; i<
n
; i++)

41 
ªt
[
i
]=
tmp
[i];

42 
	}
}

44 
	$the_ßme
()

46 
i
;

47 
i
=0; i<
n
; i++)

48 if(
l
[
i
]!=
r
[i])

51 
	}
}

53 
	$maö
()

55 
i
,
j
;

56 
i
=0; i<
MAXN
; i++)

57 
x
[
i
]=i+1;

58 
	`sˇnf
("%d",&
n
)!=
EOF
)

60 
i
=0; i<
n
; i++)

61 
j
=0; j<
n
; j++)

62 
	`sˇnf
("%d",&
A
[
i
][
j
]);

63 
i
=0; i<
n
; i++)

64 
j
=0; j<
n
; j++)

65 
	`sˇnf
("%d",&
B
[
i
][
j
]);

66 
i
=0; i<
n
; i++)

67 
j
=0; j<
n
; j++)

68 
	`sˇnf
("%d",&
C
[
i
][
j
]);

69 
	`ˇl
(
l
,
x
,
A
);

70 
	`ˇl
(
l
,l,
B
);

71 
	`ˇl
(
r
,
x
,
C
);

72 if(
	`the_ßme
())

73 
	`puts
("YES");

75 
	`puts
("NO");

78 
	}
}

	@problems/poj/poj_3335_Rotating_Scoreboard_Polygon_NeiHe.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#MAXN
 1010

	)

18 
	#MAXM
 1000010

	)

19 
	#MOD
 1000000007

	)

20 
	#N
 201

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

28 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

29 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

30 
ölöe
 
	$lowî_bound
(
x
){  x&(-x); 
	}
}

31 
	$cmp
(
a
,
b
){ á<b; 
	}
}

33 
	spoöt
{ 
	mx
,
	my
; }
	gp
[
N
],
	gtmµ
[N],
	gªç
[N];

35 
	gπ›
,
	gâ›
;

36 
	ga
,
	gb
,
	gc
;

37 
ölöe
 
	$f
(
x
,
y
){  
a
*x+
b
*y+
c
; 
	}
}

39 
	$gë_löe
(
i
)

41 
a
=
p
[
i
+1].
y
-p[i].y;

42 
b
=
p
[
i
].
x
-p[i+1].x;

43 
c
=
p
[
i
+1].
x
*p[i].
y
-p[i+1].y*p[i].x;

44 
	}
}

46 
ölöe
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

48  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

49 
	}
}

51 
poöt
 
	$öãr£˘i⁄
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

53 
poöt
 
ªt
=
a
;

54 
up
,
dw
,
t
;

55 
up
=
	`xmu…
(
c
,
d
,c,
a
);

56 
dw
=
	`xmu…
(
a
,
b
,
c
,
d
);

57 
t
=
up
/
dw
;

58 
ªt
.
x
+=(
b
.x-
a
.x)*
t
;

59 
ªt
.
y
+=(
b
.y-
a
.y)*
t
;

60  
ªt
;

61 
	}
}

63 
	$cut
(
id
)

65 
i
;

66 
	`gë_löe
(
id
);

67 
â›
=1;

68 
i
=1; i<=
π›
; i++)

70 if(
	`f
(
ªç
[
i
].
x
,ªç[i].
y
)>=0)

71 
tmµ
[
â›
++]=
ªç
[
i
];

74 if(
	`f
(
ªç
[
i
-1].
x
,ªç[i-1].
y
)>=0)

75 
tmµ
[
â›
++]=
	`öãr£˘i⁄
(
p
[
id
],p[id+1],
ªç
[
i
],retp[i-1]);

76 if(
	`f
(
ªç
[
i
+1].
x
,ªç[i+1].
y
)>=0)

77 
tmµ
[
â›
++]=
	`öãr£˘i⁄
(
p
[
id
],p[id+1],
ªç
[
i
],retp[i+1]);

80 
tmµ
[0]Òmµ[
â›
-1],tmpp[ttop]=tmpp[1];

81 
i
=0; i<=
â›
; i++)

82 
ªç
[
i
]=
tmµ
[i];

83 
π›
=
â›
-1;

84 
	}
}

86 
	$maö
()

88 
n
,
t
,
i
;

89 
	`sˇnf
("%d",&
t
);

90 ; 
t
--; )

92 
	`sˇnf
("%d",&
n
);

93 
i
=1; i<=
n
; i++)

95 
	`sˇnf
("%lf%lf",&
p
[
i
].
x
,&p[i].
y
);

97 
p
[
n
+1]=p[1];

98 
p
[0]ı[
n
];

99 
i
=0; i<=
n
+1; i++)

100 
ªç
[
i
]=
p
[i];

101 
π›
=
n
;

102 
i
=1; i<=
n
&&
π›
>0; i++)

103 
	`cut
(
i
);

104 if(
π›
<=0Ë
	`puts
("NO");

105 
	`puts
("YES");

108 
	}
}

	@problems/poj/poj_3373_Changing_Digits_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 110

	)

4 
	#X
 10011

	)

6 
	gdp
[
MAXN
][6][
X
],
	gnum
[MAXN],
	gM
,
	gÀn
,
	gªt
[MAXN],
	gmö
,
	gº
[MAXN];

7 
	gs
[
MAXN
];

9 
	$öô
(
l
)

11 
i
;

12 
num
[0]=
l
;

13 
i
=0; i<
l
; i++)

14 
num
[
i
+1]=
s
[i]-'0';

15 
	}
}

17 
	$dfs
(
now
,
˙t
,
_mod
)

19 
i
,
t
,
add
;

20 if(
˙t
>=
mö
)

22 if(
dp
[
now
][
˙t
][
_mod
]>=0)

24 
dp
[
now
][
˙t
][
_mod
]=1;

25 if(
now
==
Àn
)

27 if(
_mod
!=0)

31 if(
mö
>
˙t
)

33 
mö
=
˙t
;

34 
i
=1; i<=
Àn
; i++)

35 
º
[
i
]=
ªt
[i];

41 if(
now
==0Ë
i
=1;

42 
i
=0;

43 ; 
i
<=9; i++)

45 if(
i
==
num
[
now
+1]Ë
add
=0;

46 
add
=1;

47 
t
=
_mod
;

48 
t
*=10,t+=
i
,t%=
M
;

49 
ªt
[
now
+1]=
i
;

50 
	`dfs
(
now
+1,
˙t
+
add
,
t
);

52 
	}
}

54 
	$maö
()

56 
l
,
i
;

57 
	`sˇnf
("%s%d",&
s
,&
M
)!=
EOF
)

59 
	`mem£t
(
dp
,-1,(dp));

60 
Àn
=
	`°æí
(
s
);

61 
	`öô
(
Àn
);

62 
mö
=6;

63 
	`dfs
(0,0,0);

64 
i
=1; i<=
Àn
; i++)

65 
	`¥ötf
("%d",
º
[
i
]);

66 
	`puts
("");

69 
	}
}

	@problems/poj/poj_3411_Paid_Roads_dfs.cpp

1 
	~<c°dio
>

2 
	#öf
 100000000

	)

3 
	#MAXN
 20

	)

4 
	#MAXS
 200

	)

6 
	sedge
{ 
	mf
,
	mt
,
	mc
,
	mp
,
	mr
,
	mn
,
	mv
; }
	ge
[
MAXS
];

8 
	gli°
[
MAXN
],
	gt›
,
	gmö
[MAXN],
	gn
,
	gv
[MAXN],
	gªt
;

10 
ölöe
 
	$B
(
x
){  1<<x; 
	}
}

12 
	$ö£π
(
f
,
t
,
c
,
p
,
r
)

14 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c;

15 
e
[
t›
].
p
ı,e[t›].
r
Ù,e[t›].
v
=0;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$dfs
(
now
,
s
,
co°
)

21 if(
co°
>=
ªt
) ;

22 if(
now
==
n
-1)

24 
ªt
=
co°
;

28 
i
,
f
;

29 
s
^=
	`B
(
now
);

30 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

31 if(
e
[
i
].
v
<=2)

33 
e
[
i
].
v
++;

35 if((
	`B
(
e
[
i
].
c
)&
s
)>0&&e[i].c!=
now
)

36 
f
=
e
[
i
].
p
;

38 
f
=
e
[
i
].
r
;

39 
	`dfs
(
e
[
i
].
t
,
s
,
co°
+
f
);

40 
e
[
i
].
v
--;

42 
s
^=
	`B
(
now
);

43 
	}
}

45 
	$maö
()

47 
m
,
a
,
b
,
c
,
p
,
r
,
i
;

48 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

50 
t›
=
i
=0; i<
n
; i++)

51 
li°
[
i
]=-1,
v
[i]=0;

52 
i
=0; i<
m
; i++)

54 
	`sˇnf
("%d%d%d%d%d",&
a
,&
b
,&
c
,&
p
,&
r
);

55 
	`ö£π
(
a
-1,
b
-1,
c
-1,
p
,
r
);

57 
ªt
=
öf
;

58 
	`dfs
(0,0,0);

60 if(
ªt
!=
öf
)

61 
	`¥ötf
("%d\n",
ªt
);

63 
	`puts
("impossible");

66 
	}
}

	@problems/poj/poj_3415_suffix_array_classic.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 200010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	s°ack
{ 
	mx
,
	mc
; }
	g°
[
N
];

35 
	gs
[
N
];

36 
	gß
[
N
],
	gsb
[N],
	g˙t
[N],
	gønk
[N],
	gd©
[N],
	gdp
[N][20],
	gheight
[N],
	gn1
;

37 
	$equÆ
(
i
,
j
,
l
,*
y
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

39 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

41 
	$ødix_s‹t
(
n
,
m
,
l
,*
x
,*
y
)

43 
k
,
i
;

44 
k
=0,
i
=
n
-
l
; i<n; i++Ë
y
[k++]=i;

45 
i
=0; i<
n
; i++)

46 if(
ß
[
i
]>=
l
Ë
y
[
k
++]=sa[i]-l;

47 
	`mem£t
(
˙t
,0,(cnt));

48 
i
=0; i<
n
; i++Ë
˙t
[
x
[i]]++;

49 
i
=1; i<
m
; i++Ë
˙t
[i]+=cnt[i-1];

50 
i
=
n
-1; i>=0; i--Ë
ß
[--
˙t
[
x
[
y
[i]]]]=y[i];

51 
	}
}

53 
	$da
(
n
,
m
)

55 *
t
,*
x
=
ønk
,*
y
=
sb
,
l
,
k
,
i
;

56 
i
=0; i<
n
; i++Ë
x
[i]=
s
[i],
ß
[i]=i;

57 
	`ødix_s‹t
(
n
,
m
,0,
x
,
y
);

58 
k
=
l
=1; k<
n
;Ü<<=1)

60 
	`ødix_s‹t
(
n
,
m
,
l
,
x
,
y
);

61 
t
=
x
,x=
y
,y=t;

62 
x
[
ß
[0]]=0,
k
=1;

63 
i
=1; i<
n
; i++)

64 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
l
,
y
)?
k
-1:k++;

65 
m
=
k
;

67 
i
=0; i<
n
; i++Ë
ønk
[
ß
[i]]=i;

68 
	}
}

70 
	$ˇlc_height
(
n
)

72 
k
=0;

73 
i
=0; i<
n
-1; i++)

75 
k
=(k>0)?k-1:0;

76 
j
=
ß
[
ønk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

77 
height
[
ønk
[
i
]]=
k
;

79 
height
[0]=0;

80 
	}
}

82 
LL
 
	$sögÀ_°ack
(&
j
,
èg
,
k
,
n
)

84 
LL
 
t›
=-1,
tmp
=0,
ªt
=0,
c
;

85 ; 
height
[
j
]>=
k
&&j<
n
; j++)

87 
c
=0; 
t›
>=0&&
height
[
j
]<=
°
[t›].
x
; )

89 
tmp
+=(
height
[
j
]-
°
[
t›
].
x
)*°[t›].
c
;

90 
c
+=
°
[
t›
].c;

91 
t›
--;

93 ++
t›
;

94 
°
[
t›
].
x
=
height
[
j
];

95 
°
[
t›
].
c
=c;

96 if(
èg
==0)

98 if(
ß
[
j
-1]<
n1
)

100 
tmp
+=
height
[
j
]-
k
+1;

101 
°
[
t›
].
c
++;

103 if(
ß
[
j
]>
n1
)

104 
ªt
+=
tmp
;

108 if(
ß
[
j
-1]>
n1
)

110 
tmp
+=
height
[
j
]-
k
+1;

111 
°
[
t›
].
c
++;

113 if(
ß
[
j
]<
n1
)

115 
ªt
+=
tmp
;

119  
ªt
;

120 
	}
}

122 
LL
 
	$sﬁve
(
n
,
k
)

124 
i
,
j
,
t›
;

125 
LL
 
ªt
=0,
tmp
,
c
;

126 
i
=1; i<
n
; )

128 if(
height
[
i
]<
k
)

130 
i
++;

133 
j
=
i
;

134 
ªt
+=
	`sögÀ_°ack
(
j
,0,
k
,
n
);

135 
j
=
i
;

136 
ªt
+=
	`sögÀ_°ack
(
j
,1,
k
,
n
);

137 
i
=
j
+1;

139  
ªt
;

140 
	}
}

142 
	$maö
()

144 
k
,
n
;

145 
	`sˇnf
("%d",&
k
)!=
EOF
)

147 if(
k
==0) ;

148 
	`sˇnf
("%s",
s
);

149 
n1
=
	`°æí
(
s
);

150 
s
[
n1
]='$';

151 
	`sˇnf
("%s",
s
+
n1
+1);

152 
n
=
	`°æí
(
s
);

153 
	`da
(
n
+1,128);

154 
	`ˇlc_height
(
n
+1);

155 
	`¥ötf
("%Œd\n",
	`sﬁve
(
n
+1,
k
));

158 
	}
}

	@problems/poj/poj_3422_Kakas_Matrix_Travels_dp2mcmf.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#öf
 100000000

	)

17 
	#MAXN
 5501

	)

18 
	#MAXS
 1000101

	)

19 
	#MOD
 1000000007

	)

21 
	tLL
;

22 
usög
 
«me•a˚
 
	g°d
;

24 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

25 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

26 
ölöe
 
	$max
(
a
,
b
){ á<b?b:a; 
	}
}

28 
ölöe
 
	$abs
(
x
){  x<0?-x:x; 
	}
}

29 
ölöe
 
	$G
(
i
,
j
,
n
){ Ç*i+j; 
	}
}

31 
	sedge
{ 
	mf
,
	mt
,
	mc
,
	mÊow
,
	mn
; }
	ge
[
MAXS
];

32 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gv
[MAXN],
	g¥e
[MAXN],
	gmax_c
[MAXN],
	gmax_Êow
;

34 
	$s_ö£π
(
f
,
t
,
c
,
Êow
)

36 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c,e[t›].
Êow
=flow;

37 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

38 
	}
}

40 
	$ö£π
(
f
,
t
,
c
,
Êow
)

42 
	`s_ö£π
(
f
,
t
,
c
,
Êow
);

43 
	`s_ö£π
(
t
,
f
,-
c
,0);

44 
	}
}

46 
	$•Á
(
n
,
s
,
t
)

48 
i
,
l
,
r
,
j
;

50 
i
=0; i<
n
; i++Ë
¥e
[i]=-1,
max_c
[i]=-
öf
,
v
[i]=0;

51 
q
[
l
=
r
=0]=
s
;

52 
max_c
[
s
]=0,
v
[s]=1;

53 ; 
l
<=
r
; )

55 
i
=
q
[
l
++];

56 
v
[
i
]=0;

57 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

58 if(
e
[
j
].
Êow
>0&&
max_c
[
i
]+e[j].
c
>max_c[e[j].
t
])

60 
¥e
[
e
[
j
].
t
]=j;

61 
max_c
[
e
[
j
].
t
]=max_c[
i
]+e[j].
c
;

62 if(!
v
[
e
[
j
].
t
])

63 
v
[
e
[
j
].
t
]=1,
q
[++
r
]=e[j].t;

66  
max_c
[
t
]>-
öf
;

67 
	}
}

69 
	$mcmf
(
n
,
s
,
t
)

71 
ªt
=0,
i
,
now_Êow
;

72 
max_Êow
=0;

74 ; 
	`•Á
(
n
,
s
,
t
); )

76 
now_Êow
=
öf
;

77 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

78 if(
now_Êow
>
e
[
i
].
Êow
)

79 
now_Êow
=
e
[
i
].
Êow
;

80 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

81 
e
[
i
].
Êow
-=
now_Êow
,e[i^1].flow+=now_flow;

82 
max_Êow
+=
now_Êow
;

83 
ªt
+=
now_Êow
*
max_c
[
t
];

86  
ªt
;

87 
	}
}

89 
	$maö
()

91 
n
,
k
,
S
,
T
,
x
,
N
,
ªt
,
i
,
j
;

92 
	`sˇnf
("%d%d",&
n
,&
k
)!=
EOF
)

94 
N
=
n
*n;

95 
S
=2*
N
,
T
=2*N+1;

96 
t›
=
i
=0; i<
T
+1; i++)

97 
li°
[
i
]=-1;

98 
i
=0; i<
n
; i++)

99 
j
=0; j<
n
; j++)

101 
	`sˇnf
("%d",&
x
);

102 
	`ö£π
(
	`G
(
i
,
j
,
n
),G(i,j,n)+
N
,
x
,1);

103 if(
j
+1<
n
)

105 
	`ö£π
(
	`G
(
i
,
j
,
n
),G(i,j+1,n),0,
öf
);

106 
	`ö£π
(
	`G
(
i
,
j
,
n
)+
N
,G(i,j+1,n),0,
öf
);

108 if(
i
+1<
n
)

110 
	`ö£π
(
	`G
(
i
,
j
,
n
),G(i+1,j,n),0,
öf
);

111 
	`ö£π
(
	`G
(
i
,
j
,
n
)+
N
,G(i+1,j,n),0,
öf
);

114 
	`ö£π
(
S
,
	`G
(0,0,
n
),0,
k
);

115 
	`ö£π
(
	`G
(
n
-1,n-1,n)+
N
,
T
,0,1);

116 
	`ö£π
(
	`G
(
n
-1,n-1,n),
T
,0,
k
-1);

117 
ªt
=
	`mcmf
(2*
N
+2,
S
,
T
);

118 
	`¥ötf
("%d\n",
ªt
);

121 
	}
}

	@problems/poj/poj_3429_Geometry_with_a_ruler.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	s‰a˘i⁄
{ 
LL
 
	ma
,
	mb
; };

31 
	spoöt
{ 
‰a˘i⁄
 
	mx
,
	my
; }
	gp
[
N
];

33 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

34 
LL
 
	$lcm
(
LL
 
a
,LL 
b
){ á*b/
	`gcd
◊,b); 
	}
}

36 
	$show
(
poöt
 
x
)

38 
	`¥ötf
("%Œd/%Œd %Œd/%Œd\n",
x
.x.
a
,x.x.
b
,x.
y
.a,x.y.b);

40 
	}
}

41 
	$show
(
‰a˘i⁄
 
x
)

43 
	`¥ötf
("%Œd/%Œd\n",
x
.
a
,x.
b
);

45 
	}
}

47 
‰a˘i⁄
 
	g›î©‹
+(‰a˘i⁄ 
	ga
,‰a˘i⁄ 
	gb
)

49 
‰a˘i⁄
 
	gªt
;

50 
LL
 
	gx
=
lcm
(
a
.
b
,b.b);

51 
	gªt
.
	ga
=
a
.a*
x
/a.
b
+b.a*x/b.b;

52 
	gªt
.
	gb
=
x
;

53  
	gªt
;

56 
‰a˘i⁄
 
	g›î©‹
-(‰a˘i⁄ 
	ga
,‰a˘i⁄ 
	gb
)

58 
‰a˘i⁄
 
	gªt
;

59 
LL
 
	gx
=
lcm
(
a
.
b
,b.b);

60 
	gªt
.
	ga
=
a
.a*
x
/a.
b
-b.a*x/b.b;

61 
	gªt
.
	gb
=
x
;

62  
	gªt
;

65 
‰a˘i⁄
 
	g›î©‹
*(‰a˘i⁄ 
	ga
,‰a˘i⁄ 
	gb
)

67 
‰a˘i⁄
 
	gªt
;

68 
LL
 
	gx
=
gcd
(
a
.a,
b
.b),
	gy
=gcd(a.b,b.a);

69 
	gªt
.
	ga
=
a
.a/
x
*
b
.a/
y
;

70 
	gªt
.
	gb
=
a
.
b
/
y
*b.b/
x
;

71  
	gªt
;

74 
‰a˘i⁄
 
	g›î©‹
/(‰a˘i⁄ 
	ga
,‰a˘i⁄ 
	gb
)

76 
LL
 
	gt
=
b
.b;

77 
	gb
.b=
b
.
a
,b.
	ga
=
t
;

78  
a
*
	gb
;

81 
‰a˘i⁄
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

84  (
a
.
x
-
b
.x)*(
c
.
y
-
d
.y)-(a.y-b.y)*(c.x-d.x);

85 
	}
}

88 
poöt
 
	$öãr£˘i⁄
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

90 
poöt
 
ªt
=
a
;

91 
‰a˘i⁄
 
up
,
dw
,
t
;

92 
up
=
	`xmu…
(
c
,
d
,c,
a
);

93 
dw
=
	`xmu…
(
a
,
b
,
c
,
d
);

94 
t
=
up
/
dw
;

95 
ªt
.
x
Ùë.x+(
b
.x-
a
.x)*
t
;

96 
ªt
.
y
Ùë.y+(
b
.y-
a
.y)*
t
;

97  
ªt
;

98 
	}
}

100 
	$maö
()

102 
n
,
m
,
t›
,
èg
=0,
u
,
v
,
r
,
s
;

103 
LL
 
x
,
y
;

104 
	`sˇnf
("%d",&
n
)!=
EOF
)

106 
i
=1; i<=
n
; i++)

108 
	`sˇnf
("%Œd%Œd",&
x
,&
y
);

109 
p
[
i
].
x
.
a
=x,p[i].x.
b
=1;

110 
p
[
i
].
y
.
a
=y,p[i].y.
b
=1;

112 
t›
=
n
+1;

113 
èg
=0;

114 
	`sˇnf
("%d",&
m
);

115 
i
=0; i<
m
; i++)

117 
	`sˇnf
("%d%d%d%d",&
r
,&
s
,&
u
,&
v
);

118 if(
èg
==1) ;

119 
poöt
 
tmp
=
	`öãr£˘i⁄
(
p
[
r
],p[
s
],p[
u
],p[
v
]);

120 if(
tmp
.
x
.
a
=Òmp.
y
.a&&tmp.x.a==0)

122 
	`¥ötf
("%d\n",
i
+1);

123 
èg
=1;

126 
p
[
t›
++]=
tmp
;

128 if(
èg
==0)

129 
	`puts
("0");

132 
	}
}

	@problems/poj/poj_3440_Coin_Toss_math.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

4 
	$maö
()

6 
n
,
m
,
l
,
d
; 
t
,
ˇ
=1;

7 
s
,
a
,
b
,
c
,
dd
;

8 
pi
=
	`acos
(-1);

9 
	`sˇnf
("%d",&
t
);

10 
t
--)

12 
	`¥ötf
("Ca£ %d:\n",
ˇ
++);

13 
	`sˇnf
("%lf%lf%lf%lf",&
m
,&
n
,&
l
,&
d
);

14 
s
=
m
*
n
*
l
*l;

15 
a
=(
l
-
d
)*÷-d)*
m
*
n
+(m+n)*d*(l-d)+d*d;

16 
dd
=(
n
-1)*(
m
-1)*
pi
*
d
*d/4;

17 
c
=(
n
-1)*(
m
-1)*
d
*d-
dd
;

18 
a
/=
s
,
c
/=s,
dd
/=s;

19 
b
=1-
a
-
c
-
dd
;

20 
	`¥ötf
("Probabûôy o‡covîög 1Åûê = %.4f%\n",
a
*100);

21 
	`¥ötf
("Probabûôy o‡covîög 2Åûe†%.4f%\n",
b
*100);

22 
	`¥ötf
("Probabûôy o‡covîög 3Åûe†%.4f%\n",
c
*100);

23 
	`¥ötf
("Probabûôy o‡covîög 4Åûe†%.4f%\n",
dd
*100);

24 if(
t
>0)

25 
	`puts
("");

28 
	}
}

	@problems/poj/poj_3468.cpp

1 
	~<c°dio
>

2 
	#N
 101001

	)

3 
	tLL
;

5 
	gd©
[
N
];

6 
	snode
{ 
	ml
,
	mr
; 
LL
 
	ms
,
	ma
;

7 
gm
(){  (
	ml
+
	mr
)>>1; }

8 }
	gno
[
N
<<2];

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
LL
 
	$buûd
(
id
,
l
,
r
)

15 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
a
=0;

16 if(
l
==
r
)

17  
no
[
id
].
s
=
d©
[
l
];

18 
mid
=(
l
+
r
)>>1;

19  
no
[
id
].
s
=
	`buûd
(
	`L
(id),
l
,
mid
)+buûd(
	`R
(id),mid+1,
r
);

20 
	}
}

22 
	$pushdown
(
id
,
l
,
r
)

24 
mid
=
no
[
id
].
	`gm
();

25 if(
no
[
id
].
a
)

27 
no
[
	`L
(
id
)].
a
+=no[id].a;

28 
no
[
	`R
(
id
)].
a
+=no[id].a;

29 
no
[
	`L
(
id
)].
s
+Úo[id].
a
*(
mid
-
l
+1);

30 
no
[
	`R
(
id
)].
s
+Úo[id].
a
*(
r
-
mid
);

31 
no
[
id
].
a
=0;

33 
	}
}

35 
	$upd©e
(
id
,
Œ
,
º
,
LL
 
x
)

37 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
Úo[id].
	`gm
();

38 if(
l
>=
Œ
&&
r
<=
º
)

40 
no
[
id
].
a
+=
x
;

41 
no
[
id
].
s
+=(
r
-
l
+1)*
x
;

44 
	`pushdown
(
id
,
l
,
r
);

45 if(
Œ
<=
mid
&&
l
<=
º
Ë
	`upd©e
(
	`L
(
id
),Œ,º,
x
);

46 if(
º
>
mid
&&
r
>=
Œ
Ë
	`upd©e
(
	`R
(
id
),Œ,º,
x
);

47 
no
[
id
].
s
Úo[
	`L
(id)].s+no[
	`R
(id)].s;

48 
	}
}

50 
LL
 
	$quîy
(
id
,
Œ
,
º
)

52 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
Úo[id].
	`gm
();

53 if(
l
>=
Œ
&&
r
<=
º
)

54  
no
[
id
].
s
;

55 
	`pushdown
(
id
,
l
,
r
);

56 
LL
 
ªt
=0;

57 if(
mid
>=
Œ
&&
l
<=
º
Ë
ªt
+=
	`quîy
(
	`L
(
id
),ll,rr);

58 if(
mid
<
º
&&
r
>=
Œ
Ë
ªt
+=
	`quîy
(
	`R
(
id
),ll,rr);

59  
ªt
;

60 
	}
}

62 
	$maö
()

64 
n
,
m
;

65 
s
[10];

66 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

68 
i
=1; i<=
n
; i++)

69 
	`sˇnf
("%d",&
d©
[
i
]);

70 
	`buûd
(1,1,
n
);

71 
x
,
y
; 
LL
 
z
;

72 
i
=0; i<
m
; i++)

74 
	`sˇnf
("%s%d%d",
s
,&
x
,&
y
);

75 if(
s
[0]=='Q')

76 
	`¥ötf
("%Œd\n",
	`quîy
(1,
x
,
y
));

79 
	`sˇnf
("%Œd",&
z
);

80 
	`upd©e
(1,
x
,
y
,
z
);

85 
	}
}

	@problems/poj/poj_3667.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 50011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	snode
{ 
	ml
,
	mr
,
	mv
,
	mlv
,
	mrv
,
	mi
,
	mc
;

7 
Àn
(){  
	mr
-
	ml
+1; }

8 
pos
(){  
	mr
-
	mrv
+1; }

9 }
	gno
[
N
<<2];

10 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

11 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

13 
	$up
(
id
,
l
,
r
)

15 
no
[
id
].
lv
Úo[
	`L
(id)].lv+“o[L(id)].lv=Úo[L(id)].
	`Àn
())*no[
	`R
(id)].lv;

16 
no
[
id
].
rv
Úo[
	`R
(id)].rv+“o[R(id)].rv=Úo[R(id)].
	`Àn
())*no[
	`L
(id)].rv;

17 
no
[
id
].
v
=
	`max
(max“o[
	`L
(id)].v,no[
	`R
(id)].v),no[L(id)].
rv
+no[R(id)].
lv
);

18 if(
no
[
id
].
v
=Úo[
	`L
(id)].v)

19 
no
[
id
].
i
Úo[
	`L
(id)].i;

20 if(
no
[
id
].
v
=Úo[
	`L
(id)].
rv
+no[
	`R
(id)].
lv
)

21 
no
[
id
].
i
Úo[
	`L
(id)].
	`pos
();

23 
no
[
id
].
i
Úo[
	`R
(id)].i;

24 
	}
}

26 
	$buûd
(
id
,
l
,
r
)

28 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=-1;

29 if(
l
==
r
)

31 
no
[
id
].
v
Úo[id].
lv
Úo[id].
rv
=1;

32 
no
[
id
].
i
=
l
;

35 
mid
=(
l
+
r
)>>1;

36 
	`buûd
(
	`L
(
id
),
l
,
mid
);

37 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

38 
	`up
(
id
,
l
,
r
);

39 
	}
}

41 
	$down
(
id
,
l
,
r
)

43 if(
no
[
id
].
c
>=0)

45 
no
[
	`L
(
id
)].
c
=no[id].c;

46 
no
[
	`R
(
id
)].
c
=no[id].c;

47 
no
[
	`L
(
id
)].
v
Úo[L(id)].
lv
Úo[L(id)].
rv
=(1-no[id].
c
)*no[L(id)].
	`Àn
();

48 
no
[
	`R
(
id
)].
v
Úo[R(id)].
lv
Úo[R(id)].
rv
=(1-no[id].
c
)*no[R(id)].
	`Àn
();

49 
no
[
	`L
(
id
)].
i
Úo[L(id)].
l
;

50 
no
[
	`R
(
id
)].
i
Úo[R(id)].
l
;

51 
no
[
id
].
c
=-1;

53 
	}
}

55 
	$upd©e
(
id
,
Œ
,
º
,
x
)

57 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

58 if(
l
>=
Œ
&&
r
<=
º
)

60 
no
[
id
].
c
=
x
;

61 if(
x
==0)

63 
no
[
id
].
v
Úo[id].
lv
Úo[id].
rv
Úo[id].
	`Àn
();

64 
no
[
id
].
i
=
l
;

67 
no
[
id
].
v
Úo[id].
lv
Úo[id].
rv
=0;

70 
	`down
(
id
,
l
,
r
);

71 if(
mid
>=
Œ
&&
l
<=
º
)

72 
	`upd©e
(
	`L
(
id
),
Œ
,
º
,
x
);

73 if(
mid
<
º
&&
r
>=
Œ
)

74 
	`upd©e
(
	`R
(
id
),
Œ
,
º
,
x
);

75 
	`up
(
id
,
l
,
r
);

76 
	}
}

78 
	$quîy
(
id
,
x
)

80 
mid
=(
no
[
id
].
l
+no[id].
r
)>>1;

81 if(
no
[
id
].
v
<
x
)

83 if(
no
[
	`L
(
id
)].
v
>=
x
)

84  
	`quîy
(
	`L
(
id
),
x
);

85 if(
no
[
	`L
(
id
)].
rv
+no[
	`R
(id)].
lv
>=
x
)

86  
no
[
	`L
(
id
)].
	`pos
();

87 if(
no
[
	`R
(
id
)].
v
>=
x
)

88  
	`quîy
(
	`R
(
id
),
x
);

89  
no
[
id
].
i
;

90 
	}
}

92 
	$maö
()

94 
n
,
m
;

95 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

97 
x
,
y
,
id
;

98 
	`buûd
(1,1,
n
);

99 
i
=0; i<
m
; i++)

101 
	`sˇnf
("%d",&
x
);

102 if(
x
==1)

104 
	`sˇnf
("%d",&
x
);

105 
id
=
	`quîy
(1,
x
);

106 
	`¥ötf
("%d\n",
id
);

107 if(
id
)

108 
	`upd©e
(1,
id
,id+
x
-1,1);

112 
	`sˇnf
("%d%d",&
x
,&
y
);

113 
	`upd©e
(1,
x
,x+
y
-1,0);

119 
	}
}

	@problems/poj/poj_3924_suffix_array.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 101010

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
	gss
[110][1011];

35 
	gs
[
N
],
	gt›
,
	gß
[N],
	gønk
[N],
	gsb
[N],
	g˙t
[N],
	g£g
[N],
	gvis
[110],
	gªts
[N],
	gπ›
,
	gheight
[N];

37 
ölöe
 
	$equÆ
(
i
,
j
,
l
,*
y
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

39 
	$ødix_s‹t
(
n
,
m
,
l
,*
x
,*
y
)

41 
i
,
k
;

42 
k
=0,
i
=
n
-
l
; i<n; i++Ë
y
[k++]=i;

43 
i
=0; i<
n
; i++)

44 if(
ß
[
i
]>=
l
Ë
y
[
k
++]=sa[i]-l;

45 
	`mem£t
(
˙t
,0,(cnt));

46 
i
=0; i<
n
; i++Ë
˙t
[
x
[i]]++;

47 
i
=1; i<
m
; i++Ë
˙t
[i]+=cnt[i-1];

48 
i
=
n
-1; i>=0; i--Ë
ß
[--
˙t
[
x
[
y
[i]]]]=y[i];

49 
	}
}

51 
	$da
(
n
,
m
)

53 
i
,
l
,
k
,*
x
=
ønk
,*
t
,*
y
=
sb
;

54 
i
=0; i<
n
; i++Ë
x
[i]=
s
[i],
ß
[i]=i;

55 
	`ødix_s‹t
(
n
,
m
,0,
x
,
y
);

56 
k
=
l
=1; k<
n
;Ü<<=1)

58 
	`ødix_s‹t
(
n
,
m
,
l
,
x
,
y
);

59 
t
=
x
,x=
y
,y=t;

60 
x
[
ß
[0]]=0,
k
=1;

61 
i
=1; i<
n
; i++)

62 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
l
,
y
)?
k
-1:k++;

63 
m
=
k
;

65 
i
=0; i<
n
; i++Ë
ønk
[
ß
[i]]=i;

66 
	}
}

68 
	$gë_height
(
n
)

70 
k
=0;

71 
i
=0; i<
n
-1; i++)

73 
k
=(k>0)?k-1:0;

74 
j
=
ß
[
ønk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

75 
height
[
ønk
[
i
]]=
k
;

77 
height
[0]=0;

78 
	}
}

80 
	$ok
(
k
,
n
,
¬
)

82 
i
,
j
,
num
,
âl
=
¬
/2+1;

83 
π›
=0;

84 
i
=0; i<
n
; )

86 if(
height
[
i
]<
k
)

88 
i
++;

91 
	`mem£t
(
vis
,0,(vis));

92 
j
=
i
; j<
n
; j++)

94 if(
height
[
j
]<
k
)

96 
vis
[
£g
[
ß
[
j
]]]=1;

97 if(
j
>0)

98 
vis
[
£g
[
ß
[
j
-1]]]=1;

100 
num
=0;

101 
u
=0; u<
¬
; u++)

102 if(
vis
[
u
])

103 
num
++;

104 if(
num
>=
âl
)

105 
ªts
[
π›
++]=
i
;

106 
i
=
j
+1;

108  
π›
>0;

109 
	}
}

111 
	$sﬁve
(
l
,
r
,
n
,
¬
)

113 
mid
;

114 ; 
l
<=
r
;)

116 
mid
=(
l
+
r
)>>1;

117 if(
	`ok
(
mid
,
n
,
¬
))

118 
l
=
mid
+1;

120 
r
=
mid
-1;

122 if(
r
<=0)

124 
	`puts
("?");

127 
	`ok
(
r
,
n
,
¬
);

128 
i
=0; i<
π›
; i++)

130 
id
=
ß
[
ªts
[
i
]];

131 
j
=0; j<
r
; j++)

132 
	`¥ötf
("%c",
s
[
id
+
j
]);

133 
	`puts
("");

135 
	}
}

137 
	$maö
()

139 
n
,
Œ
,
º
,
èg
=0;

140 
	`sˇnf
("%d",&
n
)!=
EOF
)

142 
	`mem£t
(
s
,0,(s));

143 if(
n
==0) ;

144 if(
èg
)

145 
	`puts
("");

147 
èg
=1;

148 
i
=0; i<
n
; i++)

149 
	`sˇnf
("%s",
ss
[
i
]);

150 
ç
=128;

151 
t›
=0,
º
=
N
;

152 
i
=0; i<
n
; i++)

154 
l
=
	`°æí
(
ss
[
i
]);

155 
º
=
	`mö
(
l
,rr);

156 
j
=0; j<
l
; j++)

158 
£g
[
t›
]=
i
;

159 
s
[
t›
++]=
ss
[
i
][
j
];

161 if(
i
+1<
n
)

163 
£g
[
t›
]=
i
;

164 
s
[
t›
++]=
ç
++;

167 
£g
[
t›
]=
n
-1;

168 
s
[
t›
++]=0;

169 
	`da
(
t›
,
ç
);

170 
	`gë_height
(
t›
);

171 
Œ
=0;

172 
	`sﬁve
(
Œ
,
º
,
t›
,
n
);

175 
	}
}

	@problems/poj/poj_4047.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 200011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gd©
[
N
],
	gsum
[N];

9 
	snode
{ 
	ml
,
	mr
,
	mv
,
	mc
; }
	gno
[
N
<<2];

11 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

12 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

14 
	$buûd
(
id
,
l
,
r
)

16 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
c
=0;

17 if(
l
==
r
)

19 
no
[
id
].
v
=
sum
[
l
];

22 
mid
=(
l
+
r
)>>1;

23 
	`buûd
(
	`L
(
id
),
l
,
mid
);

24 
	`buûd
(
	`R
(
id
),
mid
+1,
r
);

25 
no
[
id
].
v
=
	`max
“o[
	`L
(id)].v,no[
	`R
(id)].v);

26 
	}
}

28 
	$down
(
id
,
l
,
r
)

30 if(
no
[
id
].
c
!=0)

32 
no
[
	`L
(
id
)].
c
+=no[id].c;

33 
no
[
	`R
(
id
)].
c
+=no[id].c;

34 
no
[
	`L
(
id
)].
v
+Úo[id].
c
;

35 
no
[
	`R
(
id
)].
v
+Úo[id].
c
;

36 
no
[
id
].
c
=0;

38 
	}
}

40 
	$upd©e
(
id
,
Œ
,
º
,
x
)

42 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=(l+r)>>1;

43 if(
l
>=
Œ
&&
r
<=
º
)

45 
no
[
id
].
c
+=
x
;

46 
no
[
id
].
v
+=
x
;

49 
	`down
(
id
,
l
,
r
);

50 if(
mid
>=
Œ
&&
l
<=
º
)

51 
	`upd©e
(
	`L
(
id
),
Œ
,
º
,
x
);

52 if(
mid
<
º
&&
r
>=
Œ
)

53 
	`upd©e
(
	`R
(
id
),
Œ
,
º
,
x
);

54 
no
[
id
].
v
=
	`max
“o[
	`L
(id)].v,no[
	`R
(id)].v);

55 
	}
}

57 
	$quîy
(
id
,
Œ
,
º
)

59 if(
Œ
>
º
)

61 
l
=
no
[
id
].l,
r
Úo[id].r,
mid
=÷+r)>>1,
ªt
=-
öf
;

62 if(
l
>=
Œ
&&
r
<=
º
)

63  
no
[
id
].
v
;

64 
	`down
(
id
,
l
,
r
);

65 if(
mid
>=
Œ
&&
l
<=
º
)

66 
ªt
=
	`max
‘ë,
	`quîy
(
	`L
(
id
),
Œ
,
º
));

67 if(
mid
<
º
&&
r
>=
Œ
)

68 
ªt
=
	`max
‘ë,
	`quîy
(
	`R
(
id
),
Œ
,
º
));

69  
ªt
;

70 
	}
}

72 
	$maö
()

74 
n
,
m
,
k
,
¬
,
t
;

75 
	`sˇnf
("%d",&
t
);

76 
t
--)

78 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
);

79 
i
=1; i<=
n
; i++)

80 
	`sˇnf
("%d",&
d©
[
i
]);

81 
sum
[1]=0;

82 
i
=1; i<=
k
; i++)

83 
sum
[1]+=
d©
[
i
];

84 
i
=2; i+
k
-1<=
n
; i++)

85 
sum
[
i
]=sum[i-1]+
d©
[i+
k
-1]-dat[i-1];

86 
¬
=
n
-
k
+1;

87 
	`buûd
(1,1,
¬
);

88 
p
,
x
,
y
,
d
;

89 
i
=0; i<
m
; i++)

91 
	`sˇnf
("%d%d%d",&
p
,&
x
,&
y
);

92 if(
p
==0)

94 
d
=
y
-
d©
[
x
];

95 
	`upd©e
(1,
	`max
(1,
x
-
k
+1),
	`mö
(x,
¬
),
d
);

96 
d©
[
x
]=
y
;

98 if(
p
==1)

100 
d
=
d©
[
y
]-d©[
x
];

101 
	`upd©e
(1,
	`max
(1,
x
-
k
+1),
	`mö
(x,
¬
),
d
);

102 
d
=
d©
[
x
]-d©[
y
];

103 
	`upd©e
(1,
	`max
(1,
y
-
k
+1),
	`mö
(y,
¬
),
d
);

104 
	`sw≠
(
d©
[
x
],d©[
y
]);

108 if(
x
>
y
)

109 
	`sw≠
(
x
,
y
);

110 
	`¥ötf
("%d\n",
	`quîy
(1,
x
,
y
-
k
+1));

115 
	}
}

	@problems/poj/poj_Gunman_geometry.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#öf
 1e8

	)

21 
	#ïs
 1e-8

	)

22 
	#MOD
 1000000007

	)

24 
	tLL
;

25 
usög
 
«me•a˚
 
	g°d
;

27 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

28 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

29 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

30 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

32 
	spoöt
{ 
	mx
,
	my
,
	mz
; }
	gp1
,
	gp2
,
	g™s
[
N
],
	gpy
;

33 
	sª˘™gÀ
{ 
poöt
 
	ml
,
	mr
; }
	gªc
[
N
];

35 
	$xmu…_x
(
poöt
 
a
,poöà
b
,poöà
c
)

37  (
a
.
x
-
c
.x)*(
b
.
z
-c.z)-(a.z-c.z)*(b.x-c.x);

38 
	}
}

39 
	$xmu…_y
(
poöt
 
a
,poöà
b
,poöà
c
)

41  (
a
.
y
-
c
.y)*(
b
.
z
-c.z)-(a.z-c.z)*(b.y-c.y);

42 
	}
}

44 
poöt
 
	$gë_poöt
(
i
,
v
)

46 if(
v
==0Ë 
ªc
[
i
].
l
;

47  
ªc
[
i
].
r
;

48 
	}
}

50 
	$check_x
(
i
,
j
,
n
)

52 
u
=0; u<2; u++)

54 
p1
=
	`gë_poöt
(
i
,
u
);

55 
v
=0; v<2; v++)

57 
p2
=
	`gë_poöt
(
j
,
v
);

58 
èg
=0;

59 
k
=0; k<
n
; k++)

60 if(
	`xmu…_x
(
ªc
[
k
].
l
,
p2
,
p1
)*xmu…_x‘ec[k].
r
,p2,p1)>
ïs
)

61 
èg
=1;

62 if(
èg
==0)  1;

66 
	}
}

68 
	$exi°_x
(
n
)

70 
i
=0; i<
n
; i++)

71 
j
=
i
+1; j<
n
; j++)

72 if(
	`check_x
(
i
,
j
,
n
))  1;

74 
	}
}

76 
	$check_y
(
i
,
n
)

78 
poöt
 
p0
;

79 
p0
.
y
=0,p0.
z
=0;

80 
u
=0; u<2; u++)

82 
py
=
	`gë_poöt
(
i
,
u
);

83 
èg
=0;

84 
k
=0; k<
n
; k++)

85 if(
	`xmu…_y
(
ªc
[
k
].
l
,
py
,
p0
)*xmu…_y‘ec[k].
r
,py,p0)>
ïs
)

86 
èg
=1;

87 if(
èg
==0)  1;

90 
	}
}

92 
	$exi°_y
(
n
)

94 
i
=0; i<
n
; i++)

96 if(
	`check_y
(
i
,
n
))

100 
	}
}

103 
	$maö
()

105 
n
;

106 
	`sˇnf
("%d",&
n
)!=
EOF
)

108 
i
=0; i<
n
; i++)

110 
	`sˇnf
("%lf%lf%lf%lf%lf",&
ªc
[
i
].
l
.
x
,&ªc[i].l.
y
,&ªc[i].
r
.x,&ªc[i].r.y,&ªc[i].l.
z
);

111 
ªc
[
i
].
r
.
z
Ùec[i].
l
.z;

113 if(
	`exi°_x
(
n
))

115 if(
	`exi°_y
(
n
))

119 
x0
=(
p1
.
x
*
p2
.
z
-p1.z*p2.x)/(p2.z-p1.z);

121 
i
=0; i<
n
; i++)

123 
™s
[
i
].
x
=
x0
+
ªc
[i].
l
.
z
*(
p1
.x-x0)/p1.z;

124 
™s
[
i
].
y
=
py
.y*
ªc
[i].
l
.
z
/py.z;

126 
	`puts
("SOLUTION");

127 
	`¥ötf
("%.6f\n",
x0
);

128 
i
=0; i<
n
; i++)

130 
	`¥ötf
("%.6‡%.6‡%.6f\n",
™s
[
i
].
x
,™s[i].
y
,
ªc
[i].
l
.
z
);

134 
	`puts
("UNSOLVABLE");

137 
	`puts
("UNSOLVABLE");

140 
	}
}

	@problems/sgu/sgu_128.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#N
 10010

	)

5 
	#X
 20020

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
];

10 
	suföd


12 
	mp
[
N
];

13 
öô
(
n
){ 
	mi
=0; i<Ú; i++Ë
	mp
[
i
]=i; }

14 
∑
(
x
)

16 
	my
=
x
,
	mt
;

17 ; 
	mp
[
x
]!=x; 
	mx
=
p
[x]);

18 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

19  
	mx
;

21 }
	guf
;

23 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
==b.x?a.
y
<b.y:a.x<b.x; 
	}
}

25 
	gsum
[
X
],
	gcx
[X],
	gcy
[X];

27 
ölöe
 
	$low
(
x
){  x&(-x); 
	}
}

29 
	$ˇl
(
x
)

31 
ªt
=0;

32 ; 
x
>0; x-=
	`low
(x))

33 
ªt
+=
sum
[
x
];

34  
ªt
;

35 
	}
}

37 
	$ös
(
p
,
x
)

39 ; 
p
<
X
;Ö+=
	`low
(p))

40 
sum
[
p
]+=
x
;

41 
	}
}

43 
	$gë
(
i
)

45 
c
=
	`ˇl
(
no
[
i
].
y
)-ˇl“o[i].y-1),
ªt
=0;

46 if(
c
>0)

48 
x
=
uf
.
	`∑
(
c
),
y
=uf.∑(
i
);

49 
uf
.
p
[
x
]=
y
;

50 
	`ös
(
no
[
i
].
y
,-
c
);

51 
ªt
+=
no
[
i
].
x
-no[
c
].x;

54 
	`ös
(
no
[
i
].
y
,i);

55  
ªt
;

56 
	}
}

58 
	$gao
(
n
)

60 
ªt
=0;

61 
	`mem£t
(
sum
,0,(sum));

62 
	`mem£t
(
cx
,0,(cx));

63 
	`mem£t
(
cy
,0,(cy));

64 
i
=1; i<=
n
; i++)

65 
cx
[
no
[
i
].
x
]++,
cy
[no[i].
y
]++;

66 
i
=0; i<
X
; i++)

67 if((
cx
[
i
]&1)||(
cy
[i]&1))

69 
uf
.
	`öô
(
n
);

70 
i
=1; i<=
n
; i+=2)

72 
c
=
	`ˇl
(
no
[
i
+1].
y
-1)-cal(no[i].y);

73 if(
c
>0)  0;

74 
x
=
uf
.
	`∑
(
i
),
y
=uf.pa(i+1);

75 
uf
.
p
[
x
]=
y
;

76 
ªt
+=
	`gë
(
i
);

77 
ªt
+=
	`gë
(
i
+1);

78 
ªt
+=
no
[
i
+1].
y
-no[i].y;

80 
r
=
uf
.
	`∑
(1);

81 
i
=2; i<=
n
; i++)

82 if(
uf
.
	`∑
(
i
)!=
r
)

84  
ªt
;

85 
	}
}

87 
	$maö
()

89 
n
;

90 
	`sˇnf
("%d",&
n
)+1)

92 
i
=1; i<=
n
; i++)

94 
	`sˇnf
("%d%d",&
no
[
i
].
x
,&no[i].
y
);

95 
no
[
i
].
x
+=
N
,no[i].
y
+=N;

97 
	`s‹t
(
no
+1,no+
n
+1,
cmp
);

98 
ç
=1;

99 
i
=2; i<=
n
; i++)

101 if(
no
[
i
].
x
=Úo[
ç
].x&&no[i].
y
==no[tp].y)

103 
no
[++
ç
]Úo[
i
];

105 
n
=
ç
;

106 
	`¥ötf
("%d\n",
	`gao
(
n
));

109 
	}
}

	@problems/sgu/sgu_129.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 40000

	)

5 
	#ïs
 1e-7

	)

6 
	#N
 411

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
],
	g°
,
	ged
,
	gjüo
[N];

12 
	$xmu…
(
node
 
a
,nodê
b
,nodê
c
)

14  (
a
.
x
-
c
.x)*(
b
.
y
-c.y)-(a.y-c.y)*(b.x-c.x);

15 
	}
}

17 
	$xmu…
(
node
 
a
,nodê
b
,nodê
c
,nodê
d
)

19  (
a
.
x
-
b
.x)*(
c
.
y
-
d
.y)-(a.y-b.y)*(c.x-d.x);

20 
	}
}

22 
	$cmp
(
node
 
a
,nodê
b
)

24  
	`xmu…
(
a
,
b
,
no
[0])>0;

25 
	}
}

27 
	$gë
(
x
){  
	`Ábs
(x)<
ïs
?1:x>0?2:0; 
	}
}

29 
	$öbﬂrd
(
node
 
a
,
n
)

31 
èg
[3]={0};

32 
i
=0; i<
n
; i++)

33 
èg
[
	`gë
(
	`xmu…
(
no
[
i
],no[i+1],
a
))]=1;

34 if(
èg
[1])  0;

35 if(
èg
[0]&&tag[2])  0;

37 
	}
}

39 
	$sq
(
x
){  x*x; 
	}
}

41 
	$Àn
(
node
 
a
,nodê
b
)

43  
	`sqπ
(1.0*(
	`sq
(
a
.
x
-
b
.x)+sq◊.
y
-b.y)));

44 
	}
}

46 
	$öãr
(
node
 &
ªt
,
i
)

48 
up
,
dn
,
t
,
x
,
y
;

49 
up
=1.0*
	`xmu…
(
no
[
i
],no[i+1],no[i],
°
);

50 
dn
=1.0*
	`xmu…
(
°
,
ed
,
no
[
i
],no[i+1]);

51 
t
=
up
/
dn
;

52 
x
=
°
.x+(
ed
.x-°.x)*
t
;

53 
y
=
°
.y+(
ed
.y-°.y)*
t
;

54 if(
	`Ábs
(
x
-
no
[
i
].x)<
ïs
&&Ábs(
y
-no[i].y)<eps)

56 if((
x
-
°
.x)*(x-
ed
.x)<
ïs
&&(
y
-°.y)*(y-ed.y)<ïs&&(x-
no
[
i
].x)*(x-no[i+1].x)<eps&&(y-no[i].y)*(y-no[i+1].y)<eps)

58 
ªt
.
x
=x,ªt.
y
=y;

59 if(
	`Ábs
(
	`xmu…
(
ªt
,
no
[
i
],no[i+1]))<
ïs
)

64 
	}
}

66 
	$gao
(
n
)

68 
t1
,
t2
;

69 
t1
=
	`öbﬂrd
(
°
,
n
);

70 
t2
=
	`öbﬂrd
(
ed
,
n
);

72 
t›
=0;

73 if(
t1
==0&&
t2
==0)

75 
i
=0; i<
n
; i++)

77 if(
	`Ábs
(
	`xmu…
(
°
,
ed
,
no
[
i
],no[i+1]))<
ïs
)

79 if(
	`öãr
(
jüo
[
t›
],
i
))

80 
t›
++;

82 if(
t›
==2)

83  
	`Àn
(
jüo
[0],jiao[1]);

86 if(
t1
&&
t2
)

87  
	`Àn
(
°
,
ed
);

89 if(
t1
==0)

91 
	`sw≠
(
t1
,
t2
);

92 
	`sw≠
(
°
,
ed
);

94 
jüo
[0]=
°
;

95 
i
=0; i<
n
; i++)

97 if(
	`Ábs
(
	`xmu…
(
°
,
ed
,
no
[
i
],no[i+1]))<
ïs
)

99 if(
	`öãr
(
jüo
[0],
i
))

102  
	`Àn
(
°
,
jüo
[0]);

103 
	}
}

105 
	$maö
()

107 
n
;

108 
	`sˇnf
("%d",&
n
)+1)

110 
x
=
öf
,
y
=öf,
id
=-1;

111 
i
=0; i<
n
; i++)

113 
	`sˇnf
("%lf%lf",&
no
[
i
].
x
,&no[i].
y
);

114 if(
no
[
i
].
x
<x||“o[i].x==x&&no[i].
y
<y))

115 
x
=
no
[
i
].x,
y
Úo[i].y,
id
=i;

117 
	`sw≠
(
no
[0],no[
id
]);

118 
	`s‹t
(
no
+1,no+
n
,
cmp
);

119 
no
[
n
]=no[0];

120 
m
;

121 
	`sˇnf
("%d",&
m
);

122 
i
=0; i<
m
; i++)

124 
	`sˇnf
("%lf%lf%lf%lf",&
°
.
x
,&°.
y
,&
ed
.x,&ed.y);

125 
	`¥ötf
("%.10f\n",
	`gao
(
n
));

129 
	}
}

	@problems/sgu/sgu_131.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<s°ªam
>

15 
	~<cm©h
>

16 
	~<fun˘i⁄Æ
>

17 
	~<io°ªam
>

18 
	~<Æg‹ôhm
>

19 
	#N
 11

	)

20 
	#M
 1000010

	)

21 
	#S
 1000100

	)

22 
	#ïs
 1e-8

	)

23 
	#öf
 0x3fffffff

	)

24 
	#MOD
 1000000007

	)

25 
	#PB
 
push_back


	)

26 
	#MP
 
make_∑ú


	)

27 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

28 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

29 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

31 
	tLL
;

32 
usög
 
«me•a˚
 
	g°d
;

34 
LL
 
	gdp
[
N
][1<<N];

35 
	gm
,
	gn
;

36 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

38 
	$dfs
(
œy
,
id
,
°
,
n°
)

40 if(
id
==
n
)

42 
dp
[
œy
+1][
n°
]+=dp[œy][
°
];

45 if(
°
&
	`B
(
id
))

46 
	`dfs
(
œy
,
id
+1,
°
,
n°
);

49 if((
n°
&
	`B
(
id
))==0)

51 
	`dfs
(
œy
,
id
+1,
°
,
n°
+
	`B
(id));

52 if(
id
>0&&(
n°
&
	`B
(id-1))==0)

53 
	`dfs
(
œy
,
id
+1,
°
,
n°
+
	`B
(id-1)+B(id));

54 if(
id
+1<
n
&&(
n°
&
	`B
(id+1))==0)

55 
	`dfs
(
œy
,
id
+1,
°
,
n°
+
	`B
(id)+B(id+1));

57 if(
id
+1<
n
&&(
°
&
	`B
(id+1))==0)

59 
	`dfs
(
œy
,
id
+2,
°
,
n°
);

60 if((
n°
&
	`B
(
id
))==0)

61 
	`dfs
(
œy
,
id
+2,
°
,
n°
+
	`B
(id));

62 if((
n°
&
	`B
(
id
+1))==0)

63 
	`dfs
(
œy
,
id
+2,
°
,
n°
+
	`B
(id+1));

66 
	}
}

68 
	$maö
()

70 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

72 
	`mem£t
(
dp
,0,(dp));

73 
dp
[0][0]=1;

74 
i
=0; i<
m
; i++)

75 
j
=0; j<
	`B
(
n
); j++)

77 if(
i
==0&&
j
>=1)

79 
	`dfs
(
i
,0,
j
,0);

81 
cout
<<
dp
[
m
][0]<<
ídl
;

85 
	}
}

	@problems/sgu/sgu_132_classic_dp.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	#N
 100

	)

6 
	#öf
 0x3fffffff

	)

8 c⁄° 
	gX
=1<<7;

9 
usög
 
«me•a˚
 
	g°d
;

11 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

13 
	gok
[
X
],
	gm
,
	gn
,
	gdp
[2][X][X],
	gnid
,
	gST
,
	g°
[
N
];

14 
	gs
[
N
];

16 
	$isok
(
x
)

18 
i
=0; i+1<
n
; i++)

19 if((
	`B
(
i
)&
x
)==0&&(B(i+1)&x)==0)

22 
	}
}

24 
	$gao
(
l
,
x
,
y
,
z
,
c
,
iy
)

26 if(
l
==
n
)

28 
dp
[
nid
][
y
][
z
]=
	`mö
(dp[nid][y][z],dp[nid^1][
x
][
iy
]+
c
);

31 
xx
=
x
&
	`B
(
l
),
yy
=
y
&B÷),
zz
=
z
&B(l);

32 if(
yy
)

33 
	`gao
(
l
+1,
x
,
y
,
z
,
c
,
iy
);

36 if(
xx
&&(
l
==0||(
	`B
÷-1)&
y
)))

38 
	`gao
(
l
+1,
x
,
y
,
z
,
c
,
iy
);

40 if(
zz
==0)

41 
	`gao
(
l
+1,
x
,
y
+
	`B
÷),
z
+B÷),
c
+1,
iy
);

42 if(
l
<
n
-1&&(
	`B
÷+1)&
y
)==0)

43 
	`gao
(
l
+2,
x
,
y
+
	`B
÷)+B÷+1),
z
,
c
+1,
iy
);

45 
	}
}

47 
	$maö
()

49 
	`sˇnf
("%d%d",&
m
,&
n
);

50 
i
=0; i<
m
; i++)

52 
	`sˇnf
("%s",
s
);

53 
°
[
i
]=0;

54 
j
=0; 
s
[j]; j++)

55 if(
s
[
j
]=='*')

56 
°
[
i
]|=
	`B
(
j
);

58 
ST
=
	`B
(
n
)-1;

59 
°
[
m
]=
ST
;

60 
i
=0; i<=
ST
; i++)

61 
ok
[
i
]=
	`isok
(i);

63 
i
=0; i<2; i++)

64 
u
=0; u<=
ST
; u++)

65 
v
=0; v<=
ST
; v++)

66 
dp
[
i
][
u
][
v
]=
öf
;

67 
dp
[0][
ST
][
°
[0]]=0;

68 
nid
=1;

70 
i
=0; i<
m
; i++,
nid
^=1)

72 
u
=0; u<=
ST
; u++)

73 
v
=0; v<=
ST
; v++)

74 
dp
[
nid
][
u
][
v
]=
öf
;

75 
u
=0; u<=
ST
; u++)

76 if(
ok
[
u
])

77 
v
=0; v<=
ST
; v++)

78 if((
v
&
°
[
i
])==st[i])

79 
	`gao
(0,
u
,
v
,
°
[
i
+1],0,v);

81 
ªt
=
öf
;

82 
i
=0; i<=
ST
; i++)

83 if(
ok
[
i
])

84 
ªt
=
	`mö
‘ë,
dp
[
nid
^1][
i
][
ST
]);

85 
	`¥ötf
("%d\n",
ªt
);

87 
	}
}

	@problems/sgu/sgu_136.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

4 
	#N
 10110

	)

5 
	#ïs
 1e-9

	)

7 
	snode
{ 
	mx
,
	my
; }
	gno
[
N
],
	gªt
[N];

9 
	$maö
()

11 
n
;

12 
	`sˇnf
("%d",&
n
)+1)

14 
i
=0; i<
n
; i++)

16 
	`sˇnf
("%lf%lf",&
no
[
i
].
x
,&no[i].
y
);

17 
no
[
i
].
x
*=2;

18 
no
[
i
].
y
*=2;

20 
x
=0,
y
=0;

21 
i
=0; i<
n
; i++)

23 if(
i
&1)

24 
x
-=
no
[
i
].x,
y
-=no[i].y;

26 
x
+=
no
[
i
].x,
y
+=no[i].y;

28 if(
n
&1)

30 
ªt
[0].
x
=x/2.0;

31 
ªt
[0].
y
=y/2.0;

35 if(
	`Ábs
(
x
)<
ïs
&&Ábs(
y
)<eps)

36 
ªt
[0].
x
=1,ªt[0].
y
=1;

39 
	`puts
("NO");

43 
i
=1; i<
n
; i++)

45 
ªt
[
i
].
x
=
no
[i-1].x-ret[i-1].x;

46 
ªt
[
i
].
y
=
no
[i-1].y-ret[i-1].y;

48 
	`puts
("YES");

49 
i
=0; i<
n
; i++)

50 
	`¥ötf
("%.6‡%.6f\n",
ªt
[
i
].
x
,ªt[i].
y
);

53 
	}
}

	@problems/sgu/sgu_137_classic_math.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	gªt
[1011];

6 
	$maö
()

8 
n
,
k
;

9 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

11 
x
=
k
/
n
;

12 
	`mem£t
(
ªt
,0,(ret));

13 
p
;

14 
p
=1; (
k
*p%
n
)!=n-1;Ö++);

15 
i
=
p
; i!=
n
-1; i=(i+p)%nË
ªt
[i]=1,
k
--;

16 
ªt
[
n
-1]=1,
k
--;

17 
	`¥ötf
("%d",
k
/
n
+
ªt
[0]);

18 
i
=1; i<
n
; i++)

19 
	`¥ötf
(" %d",
k
/
n
+
ªt
[
i
]);

20 
	`puts
("");

23 
	}
}

	@problems/sgu/sgu_138.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	~<£t
>

5 
	#N
 10101

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	mc
,
	mi
; }
	gno
[
N
];

10 
	g™s
[
N
][2];

11 
	gt›
,
	gç
;

13 
	$cmp
(
node
 
a
,nodê
b
){ á.
c
>b.c; 
	}
}

15 
	$maö
()

17 
n
,
s
=0;

18 
ç
=0;

19 
	`sˇnf
("%d",&
n
);

20 
i
=1; i<=
n
; i++)

22 
x
;

23 
	`sˇnf
("%d",&
x
);

24 if(
x
==0)

26 
no
[
ç
].
c
=
x
,no[ç++].
i
=i;

27 
s
+=
x
;

29 
s
>>=1;

31 
	`s‹t
(
no
,no+
ç
,
cmp
);

32 
	`mem£t
(
™s
,-1,(ans));

34 
i
=1; i<=
s
; i++)

36 if(
no
[
t›
].
c
==1)

38 
™s
[
i
][1]=
no
[
t›
++].i;

40 
™s
[
i
][0]=
no
[
t›
].i;

41 
no
[
t›
].
c
--;

43 
i
=1; i<=
s
; i++)

45 if(
™s
[
i
][1]>0)

47 if(
no
[
t›
].
c
==0)Åop++;

48 
™s
[
i
][1]=
no
[
t›
].i;

49 
no
[
t›
].
c
--;

51 
	`¥ötf
("%d\n",
s
);

52 
i
=1; i<=
s
; i++)

54 
	`¥ötf
("%d %d\n",
™s
[
i
][0],ans[i][1]);

57 
	}
}

	@problems/sgu/sgu_140.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	#N
 222

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gd©
[
N
];

9 
LL
 
	grx
[
N
];

11 
LL
 
	$gcd
(
LL
 
a
,LL 
b
,LL &
x
,LL &
y
)

13 if(
b
==0)

15 
x
=1,
y
=0;

16  
a
;

18 
LL
 
g
=
	`gcd
(
b
,
a
%b,
y
,
x
);

19 
y
-=
a
/
b
*
x
;

20  
g
;

21 
	}
}

23 
	$maö
()

25 
LL
 
n
,
p
,
b
;

26 
cö
>>
n
>>
p
>>
b
)

28 
i
=0; i<
n
; i++)

30 if(
i
>=
N
)

32 
LL
 
x
;

33 
cö
>>
x
;

34 
d©
[
i
]=
x
%
p
;

35 if(
d©
[
i
]==0Ëd©[i]=
p
;

37 
d©
[
n
]=
p
;

38 
LL
 
¥e
;

39 
¥e
=
	`gcd
(
d©
[0],d©[1],
rx
[0],rx[1]);

40 
i
=2; i<=
n
; i++)

42 
LL
 
x
;

43 
¥e
=
	`gcd
’ª,
d©
[
i
],
x
,
rx
[i]);

44 
j
=0; j<
i
; j++)

45 
rx
[
j
]=‘x[j]*
x
%
p
+p)%p;

47 if(
b
%
¥e
)

48 
	`puts
("NO");

51 
	`puts
("YES");

52 
LL
 
y
=
b
/
¥e
;

53 
i
=0; i<
n
; i++)

54 
rx
[
i
]=‘x[i]*
y
%
p
+p)%p;

55 
cout
<<
rx
[0];

56 
i
=1; i<
n
; i++)

57 
cout
<<" "<<
rx
[
i
];

58 
	`puts
("");

62 
	}
}

	@problems/sgu/sgu_141.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
	g™s
[2][2];

9 
	$sig
(
x
){  x<0?1:0; 
	}
}

11 
	$gcd
(
a
,
b
,
LL
 &
x
,LL &
y
)

13 if(!
b
Ë 
x
=1,
y
=0,
a
;

14 
g
=
	`gcd
(
b
,
a
%b,
y
,
x
);

15 
y
-=
a
/
b
*
x
;

16  
g
;

17 
	}
}

19 
	$maö
()

21 
a
,
b
,
p
,
k
;

22 
	`sˇnf
("%d%d%d%d",&
a
,&
b
,&
p
,&
k
);

23 
LL
 
x
,
y
,
z
,
r1
,
r2
;

24 
g
=
	`gcd
(
a
,
b
,
x
,
y
);

25 if(
p
%
g
)

27 
	`puts
("NO");

30 
p
/=
g
,
a
/=g,
b
/=g;

31 
r1
=
x
*
p
,
r2
=
y
*p;

32 
èg
=0;

33 if(
a
<
b
)

35 
èg
=1;

36 
	`sw≠
(
a
,
b
);

37 
	`sw≠
(
r1
,
r2
);

39 
LL
 
t
=
r2
/
a
;

40 
r1
Ù1+
t
*
b
;

41 
r2
Ù2-
t
*
a
;

42 
fd
=0;

43 
i
=-10; i<=10; i++)

45 
x
=
r1
+
i
*
b
;

46 
y
=
r2
-
i
*
a
;

47 
z
=
	`abs
(
x
)+abs(
y
);

48 if((
z
<=
k
)&&((k-z)&1)==0)

50 
fd
=1;

54 if(
fd
)

56 if(
èg
)

57 
	`sw≠
(
x
,
y
);

58 
	`puts
("YES");

59 
	`mem£t
(
™s
,0,(ans));

60 
™s
[0][
	`sig
(
x
)]=()
	`abs
(x);

61 
™s
[1][
	`sig
(
y
)]=()
	`abs
(y);

62 
™s
[0][0]+=(
k
-
z
)/2,ans[0][1]+=(k-z)/2;

63 
	`¥ötf
("%d %d %d %d\n",
™s
[0][0],ans[0][1],ans[1][0],ans[1][1]);

66 
	`puts
("NO");

68 
	}
}

	@problems/sgu/sgu_142.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#X
 19

	)

4 
	#N
 1<<19

	)

6 
	gs
[
N
];

7 
	gèg
;

8 
boﬁ
 
	gvis
[
N
];

10 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

12 
	$show
(
x
,
l
)

14 if(
l
==0) ;

15 
	`show
(
x
>>1,
l
-1);

16 
	`¥ötf
("%c",'a'+(
x
&1));

17 
	}
}

19 
	$maö
()

21 
n
;

22 
	`sˇnf
("%d%s",&
n
,
s
);

23 
	`mem£t
(
vis
,0,(vis));

24 
i
=0; i<
n
; i++)

25 
s
[
i
]-='a';

26 
èg
=0;

27 
l
=1;Ü<=
X
&&
èg
==0;Ü++)

29 
x
=0,
y
=
	`B
(
l
)-1;

30 
i
=0; i<
l
-1; i++)

31 
x
<<=1,x|=
s
[
i
];

32 
i
=0; i<
	`B
(
l
); i++)

33 
vis
[
i
]=0;

34 
i
=
l
-1; i<
n
; i++)

35 
vis
[
x
=(((x<<1)&
y
)|
s
[
i
])]=1;

36 
i
=0; i<
	`B
(
l
); i++)

38 if(
vis
[
i
]==0)

40 
èg
=1;

41 
	`¥ötf
("%d\n",
l
);

42 
	`show
(
i
,
l
);

43 
	`puts
("");

49 
	}
}

	@problems/sgu/sgu_143.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 16100

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gve˘‹
<> 
	gvec
[
N
];

9 
	gdp
[
N
];

11 
	$dfs
(
now
,
p
)

13 
i
=0; i<
vec
[
now
].
	`size
(); i++)

15 
to
=
vec
[
now
][
i
];

16 if(
to
==
p
) ;

17 
	`dfs
(
to
,
now
);

18 
dp
[
now
]=
	`max
(dp[now],dp[now]+dp[
to
]);

20 
	}
}

22 
	$maö
()

24 
n
;

25 
	`sˇnf
("%d",&
n
);

26 
i
=0; i<
n
; i++)

27 
	`sˇnf
("%d",&
dp
[
i
]);

28 
i
=0; i<
n
-1; i++)

30 
x
,
y
;

31 
	`sˇnf
("%d%d",&
x
,&
y
);

32 
x
--,
y
--;

33 
vec
[
x
].
	`push_back
(
y
);

34 
vec
[
y
].
	`push_back
(
x
);

36 
	`dfs
(0,-1);

37 
ªt
=-
öf
;

38 
i
=0; i<
n
; i++)

39 
ªt
=
	`max
‘ë,
dp
[
i
]);

40 
	`¥ötf
("%d\n",
ªt
);

42 
	}
}

	@problems/sgu/sgu_145.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 111

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	sedge
{ 
	mt
,
	ml
,
	mn
; }
	ge
[2*
N
*N];

10 
	g°
,
	ged
,
	gq
[
N
*N],
	gvis
[N],
	gdis
[N],
	gt›
,
	gli°
[N];

11 
	gve˘‹
<> 
	g∑th
;

13 
	$ö£π
(
f
,
t
,
l
)

15 
e
[
t›
].
t
Ò,e[t›].
l
=l;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$•Á
(
f
,
t
)

21 
l
,
r
;

22 
i
=0; i<
N
; i++)

23 
dis
[
i
]=
öf
,
vis
[i]=0;

24 
q
[
l
=
r
=0]=
f
;

25 
dis
[
f
]=0;

26 ; 
l
<=
r
;)

28 
now
=
q
[
l
++];

29 
vis
[
now
]=0;

30 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

32 
to
=
e
[
i
].
t
;

33 if(
dis
[
now
]+
e
[
i
].
l
<dis[
to
])

35 
dis
[
to
]=dis[
now
]+
e
[
i
].
l
;

36 if(!
vis
[
to
])

37 
vis
[
to
]=1,
q
[++
r
]=to;

41 
	}
}

43 
	gmöl
,
	gnowl
;

45 
	$ida
(
now
,
ed
,
l
,&
˙t
,
k
)

47 if(
now
==
ed
)

49 if(
l
!=
nowl
)  0;

50 
˙t
++;

51 if(
˙t
==
k
)

53 
∑th
.
	`˛ór
();

54 
∑th
.
	`push_back
(
now
);

59 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

61 
to
=
e
[
i
].
t
,
x
=
l
+e[i].l+
dis
[to];

62 if(
x
<=
nowl
)

64 if(!
vis
[
to
])

66 
vis
[
to
]=1;

67 
ªt
=
	`ida
(
to
,
ed
,
l
+
e
[
i
].l,
˙t
,
k
);

68 
vis
[
to
]=0;

69 if(
ªt
)

71 
∑th
.
	`push_back
(
now
);

76 if(
x
<
möl
)

77 
möl
=
x
;

80 
	}
}

82 
	$gao
(
k
)

84 
˙t
=0;

85 
	`mem£t
(
vis
,0,(vis));

86 
möl
=
öf
,
nowl
=
dis
[
°
];

87 
vis
[
°
]=1;

88 ; !
	`ida
(
°
,
ed
,0,
˙t
,
k
); 
nowl
=
möl
,möl=
öf
);

89 
	`¥ötf
("%d %d\n",
nowl
,
∑th
.
	`size
());

90 
i
=
∑th
.
	`size
()-1; i>=0; i--)

91 
	`¥ötf
("%d%c",
∑th
[
i
]+1,i>0?' ':'\n');

92 
	}
}

94 
	$maö
()

96 
n
,
m
,
k
;

97 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)+1)

99 
t›
=0;

100 
i
=0; i<
n
; i++)

101 
li°
[
i
]=-1;

102 
i
=0; i<
m
; i++)

104 
x
,
y
,
z
;

105 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

106 
x
--,
y
--;

107 
	`ö£π
(
x
,
y
,
z
);

108 
	`ö£π
(
y
,
x
,
z
);

110 
	`sˇnf
("%d%d",&
°
,&
ed
);

111 
°
--,
ed
--;

112 
	`•Á
(
ed
,
°
);

113 
	`gao
(
k
);

116 
	}
}

	@problems/sgu/sgu_176.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#öf
 0x3fffffff

	)

5 
	#S
 100001

	)

6 
	#N
 111

	)

7 
	#pii
 
∑ú
<,>

	)

9 
usög
 
«me•a˚
 
	g°d
;

11 
	glsum
,
	gvÆ
[
N
],
	gm©
[N][N],
	gq
[
S
],
	gœy
[N],
	glow
[N][N];

12 
	gn
,
	gm
;

13 
	gve˘‹
<
	gpii
> 
	gvec
;

15 
	$buûd
()

17 
vec
.
	`˛ór
();

18 
	`sˇnf
("%d%d",&
n
,&
m
);

19 
lsum
=0;

20 
	`mem£t
(
low
,0,(low));

21 
	`mem£t
(
vÆ
,0,(val));

22 
	`mem£t
(
m©
,0,(mat));

23 
i
=0; i<
m
; i++)

25 
x
,
y
,
z
,
tg
;

26 
	`sˇnf
("%d%d%d%d",&
x
,&
y
,&
z
,&
tg
);

27 
x
--,
y
--;

28 
vec
.
	`push_back
(
	`make_∑ú
(
x
,
y
));

29 if(
tg
==0)

30 
m©
[
x
][
y
]+=
z
;

33 
low
[
x
][
y
]+=
z
;

34 
vÆ
[
x
]+=-
z
;

35 
vÆ
[
y
]+=
z
;

38 
i
=0; i<
n
; i++)

40 if(
vÆ
[
i
]>0)

42 
lsum
+=
vÆ
[
i
];

43 
m©
[
n
][
i
]=
vÆ
[i];

45 if(
vÆ
[
i
]<0)

46 
m©
[
i
][
n
+1]=-
vÆ
[i];

48 
	}
}

50 
	$bfs
(
f
,
t
,
n
)

52 
l
,
r
;

53 
q
[
l
=
r
=0]=
f
;

54 
	`mem£t
(
œy
,-1,(lay));

55 
œy
[
f
]=0;

56 ; 
l
<=
r
;)

58 
now
=
q
[
l
++];

59 
i
=0; i<
n
; i++)

60 if(
m©
[
now
][
i
]>0&&
œy
[i]<0)

61 
q
[++
r
]=
i
,
œy
[i]ˆay[
now
]+1;

63  
œy
[
t
]!=-1;

64 
	}
}

66 
	$dfs
(
now
,
t
,
âl
,
n
)

68 
ªt
=0;

69 if(
now
==
t
Ë 
âl
;

70 
i
=0; i<
n
&&
ªt
<
âl
; i++)

72 if(
m©
[
now
][
i
]>0&&
œy
[i]==lay[now]+1)

74 
x
=
	`dfs
(
i
,
t
,
	`mö
(
âl
-
ªt
,
m©
[
now
][i]),
n
);

75 
m©
[
now
][
i
]-=
x
;

76 
m©
[
i
][
now
]+=
x
;

77 
ªt
+=
x
;

80 if(
ªt
==0Ë
œy
[
now
]=-1;

81  
ªt
;

82 
	}
}

84 
	$max_Êow
(
f
,
t
,
n
)

86 
ªt
=0;

87 
	`bfs
(
f
,
t
,
n
))

88 
ªt
+=
	`dfs
(
f
,
t
,
öf
,
n
);

89  
ªt
;

90 
	}
}

92 
	$show
()

94 
i
=0; i<
vec
.
	`size
(); i++)

96 if(
i
>0)

97 
	`¥ötf
(" ");

98 
	`¥ötf
("%d",
m©
[
vec
[
i
].
£c⁄d
][vec[i].
fú°
]+
low
[vec[i].first][vec[i].second]);

100 if(
vec
.
	`size
()>0)

101 
	`puts
("");

102 
	}
}

104 
	$sﬁve
()

106 
mx
=
	`max_Êow
(
n
,n+1,n+2);

107 if(
mx
!=
lsum
)

109 
m©
[
n
-1][0]=
öf
;

110 
mx
+=
	`max_Êow
(
n
,n+1,n+2);

111 if(
mx
!=
lsum
)

112 
	`puts
("Impossible");

115 
ªt
=
m©
[0][
n
-1];

116 
m©
[0][
n
-1]=mat[n-1][0]=0;

117 
mx
=
	`max_Êow
(
n
-1,0,n);

118 if(
ªt
-
mx
<0)

120 
	`¥ötf
("%d\n",
ªt
-
mx
);

121 
	`show
();

126 
	`puts
("0");

127 
	`show
();

129 
	}
}

131 
	$maö
()

133 
	`buûd
();

134 
	`sﬁve
();

136 
	}
}

	@problems/sgu/sgu_194.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<ve˘‹
>

5 
	#öf
 0x3fffffff

	)

6 
	#S
 100011

	)

7 
	#N
 211

	)

9 
usög
 
«me•a˚
 
	g°d
;

11 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mc
; }
	ge
[
S
];

13 
	gli°
[
N
],
	gt›
,
	gvÆ
[N],
	g™s
[
S
],
	gq
[S],
	gœy
[N];

15 
	$_ö£π
(
f
,
t
,
c
)

17 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
	$ö£π
(
f
,
t
,
c
)

23 
	`_ö£π
(
f
,
t
,
c
);

24 
	`_ö£π
(
t
,
f
,0);

25 
	}
}

27 
	$bfs
(
n
,
f
,
t
)

29 
	`mem£t
(
œy
,-1,(lay));

30 
l
,
r
;

31 
q
[
l
=
r
=0]=
f
;

32 
œy
[
f
]=0;

33 ; 
l
<=
r
;)

35 
nw
=
q
[
l
++];

36 
i
=
li°
[
nw
]; i!=-1; i=
e
[i].
n
)

38 
to
=
e
[
i
].
t
;

39 if(
œy
[
to
]==-1&&
e
[
i
].
c
>0)

40 
œy
[
to
]ˆay[
nw
]+1,
q
[++
r
]=to;

43  
œy
[
t
]!=-1;

44 
	}
}

46 
	$dfs
(
now
,
t
,
âl
)

48 
ªt
=0;

49 if(
now
==
t
Ë 
âl
;

50 
i
=
li°
[
now
]; i!=-1&&
âl
>
ªt
; i=
e
[i].
n
)

52 
to
=
e
[
i
].
t
;

53 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
c
>0)

55 
x
=
	`dfs
(
to
,
t
,
	`mö
(
âl
-
ªt
,
e
[
i
].
c
));

56 
ªt
+=
x
;

57 
e
[
i
].
c
-=
x
;

58 
e
[
i
^1].
c
+=
x
;

59 
™s
[
i
]+=
x
;

60 
™s
[
i
^1]-=
x
;

63 if(
ªt
==0Ë
œy
[
now
]=-1;

64  
ªt
;

65 
	}
}

67 
	$max_Êow
(
n
,
f
,
t
)

69 
ªt
=0;

70 
	`bfs
(
n
,
f
,
t
))

72 
ªt
+=
	`dfs
(
f
,
t
,
öf
);

74  
ªt
;

75 
	}
}

77 
	$maö
()

79 
n
,
m
;

80 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

82 
t›
=0;

83 
	`mem£t
(
vÆ
,0,(val));

84 
i
=0; i<
n
+2; i++)

85 
li°
[
i
]=-1;

86 
i
=0; i<
m
; i++)

88 
x
,
y
,
l
,
r
;

89 
	`sˇnf
("%d%d%d%d",&
x
,&
y
,&
l
,&
r
);

90 
x
--,
y
--;

91 
vÆ
[
y
]+=
l
;

92 
vÆ
[
x
]-=
l
;

93 
™s
[
i
<<1]=
l
;

94 
	`ö£π
(
x
,
y
,
r
-
l
);

96 
âl
=0;

97 
i
=0; i<
n
; i++)

99 if(
vÆ
[
i
]>0)

101 
	`ö£π
(
n
,
i
,
vÆ
[i]);

102 
âl
+=
vÆ
[
i
];

104 if(
vÆ
[
i
]<0)

105 
	`ö£π
(
i
,
n
+1,-
vÆ
[i]);

107 
mf
=
	`max_Êow
(
n
+2,n,n+1);

108 if(
âl
==
mf
)

110 
	`puts
("YES");

111 
i
=0; i<
m
; i++)

112 
	`¥ötf
("%d\n",
™s
[
i
<<1]);

115 
	`puts
("NO");

118 
	}
}

	@problems/sgu/sgu_199.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x7fffffff

	)

5 
	#N
 100011

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	mx
,
	my
,
	mi
; }
	gno
[
N
];

11 
	gd©
[
N
],
	gt›
,
	g¥e
[N],
	ghash
[N];

12 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
==b.x?a.
y
>b.y:a.x<b.x; 
	}
}

14 
	gve˘‹
<> 
	gli
;

15 
	gve˘‹
<> 
	gid
;

16 
	gve˘‹
<> 
	g™s
;

18 
	$dfs
(
now
)

20 if(
now
==-1) ;

21 
™s
.
	`push_back
(
hash
[
now
]+1);

22 
	`dfs
(
¥e
[
now
]);

23 
	}
}

25 
	$hugao
()

27 
li
.
	`˛ór
();

28 
id
.
	`˛ór
();

29 
i
=0; i<
t›
; i++)

31 
ii
=
	`lowî_bound
(
li
.
	`begö
(),li.
	`íd
(),
d©
[
i
])-li.begö(),
now
=-1;

32 if(
ii
==
li
.
	`size
())

34 
li
.
	`push_back
(
d©
[
i
]);

35 if(
id
.
	`size
()>0)

36 
now
=
id
[id.
	`size
()-1];

37 
id
.
	`push_back
(
i
);

41 
li
[
ii
]=
d©
[
i
];

42 
id
[
ii
]=
i
;

43 if(
ii
>0)

44 
now
=
id
[
ii
-1];

46 
¥e
[
i
]=
now
;

48 
™s
.
	`˛ór
();

49 
	`dfs
(
id
[id.
	`size
()-1]);

50  
li
.
	`size
();

51 
	}
}

53 
	$maö
()

55 
n
;

56 
	`sˇnf
("%d",&
n
)+1)

58 
i
=0; i<
n
; i++)

60 
	`sˇnf
("%d%d",&
no
[
i
].
x
,&no[i].
y
);

61 
no
[
i
].i=i;

63 
t›
=0;

64 
	`s‹t
(
no
,no+
n
,
cmp
);

65 
¥e
=
öf
;

66 
i
=0; i<
n
; i++)

68 if(
¥e
!=
no
[
i
].
y
)

70 
hash
[
t›
]=
no
[
i
].i;

71 
d©
[
t›
++]=
no
[
i
].
y
;

73 
¥e
=
no
[
i
].
y
;

75 
	`¥ötf
("%d\n",
	`hugao
());

76 
	`¥ötf
("%d",
™s
[0]);

77 
i
=1; i<
™s
.
	`size
(); i++)

78 
	`¥ötf
(" %d",
™s
[
i
]);

79 
	`puts
("");

82 
	}
}

	@problems/sgu/sgu_200.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	~<c°rög
>

5 
	~<°rög
>

6 
	#X
 1111

	)

7 
	#N
 111

	)

9 
usög
 
«me•a˚
 
	g°d
;

11 
	gm©
[
N
][N],
	gp
[
X
],
	g∂
[X],
	gt›
;

13 
	$öô
()

15 
t›
=0;

16 
i
=0; i<
X
; i++)

17 
p
[
i
]=i;

18 
i
=2; i<
X
; i++)

20 if(
p
[
i
]==i)

21 
∂
[
t›
++]=
i
;

22 
j
=0; j<
t›
&&
i
*
∂
[j]<
X
; j++)

24 
p
[
i
*
∂
[
j
]]=pl[j];

25 if(
i
%
∂
[
j
]==0)

29 
	}
}

31 
°rög
 
	gs
;

33 
°rög
 
	$add
(
°rög
 
a
,°rög 
b
)

35 
°rög
 
ªt
;

36 
add
=0;

37 
i
=0; 
add
>0||i<
a
.
	`Àngth
()||i<
b
.length(); i++)

39 
Ø
,
bb
;

40 if(
i
<
a
.
	`Àngth
()Ë
Ø
=a[i]-'0';

41 
Ø
=0;

42 if(
i
<
b
.
	`Àngth
()Ë
bb
=b[i]-'0';

43 
bb
=0;

44 
now
=
Ø
+
bb
+
add
;

45 
add
=
now
/10,now=now%10;

46 
ªt
.
	`push_back
(
now
+'0');

48  
ªt
;

49 
	}
}

51 
	$show
(
x
)

53 
s
=
	`°rög
("1");

54 
i
=0; i<
x
; i++)

55 
s
=
	`add
(s,s);

56 
s
[0]--;

57 
i
=
s
.
	`Àngth
()-1; i>=0; i--)

58 
	`¥ötf
("%c",
s
[
i
]);

59 
	`puts
("");

60 
	}
}

62 
	$maö
()

64 
n
,
m
;

65 
	`öô
();

66 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

68 
	`mem£t
(
m©
,0,(mat));

69 
i
=0; i<
m
; i++)

71 
x
;

72 
	`sˇnf
("%d",&
x
);

73 
j
=0; 
∂
[j]<=
x
; j++)

75 if(
x
%
∂
[
j
]==0)

77 
c
=0;

78 ; 
x
%
∂
[
j
]==0;)

79 
x
/=
∂
[
j
],
c
++;

80 
m©
[
i
][
j
]=
c
&1;

84 
z
;

85 
z
=0; z<
	`mö
(
m
,
n
); z++)

87 
u
=-1,
v
=-1;

88 
i
=
z
; i<
m
&&
u
<0; i++)

89 
j
=
z
; j<
n
&&
u
<0; j++)

90 if(
m©
[
i
][
j
])

91 
u
=
i
,
v
=
j
;

92 if(
u
<0) ;

93 
i
=0; i<
n
; i++)

94 
	`sw≠
(
m©
[
z
][
i
],m©[
u
][i]);

95 
j
=0; j<
m
; j++)

96 
	`sw≠
(
m©
[
j
][
z
],m©[j][
v
]);

97 
i
=0; i<
m
; i++)

99 if(
i
==
z
) ;

100 if(
m©
[
i
][
z
])

101 
j
=
z
; j<
n
; j++)

102 
m©
[
i
][
j
]^=m©[
z
][j];

105 
z
=
m
-z;

106 
	`show
(
z
);

109 
	}
}

	@problems/sgu/sgu_242.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 410

	)

6 
	#S
 160010

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mc
; }
	ge
[
S
];

12 
	gt›
,
	gli°
[
N
],
	gœy
[N],
	gq
[
S
];

13 
	g™s
[
N
],
	g©›
;

15 
	$_ö£π
(
f
,
t
,
c
)

17 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
	$ö£π
(
f
,
t
,
c
)

23 
	`_ö£π
(
f
,
t
,
c
);

24 
	`_ö£π
(
t
,
f
,0);

25 
	}
}

27 
	$bfs
(
f
,
t
,
n
)

29 
l
,
r
;

30 
i
=0; i<
n
; i++Ë
œy
[i]=-1;

31 
q
[
l
=
r
=0]=
f
;

32 
œy
[
f
]=0;

33 ; 
l
<=
r
;)

35 
now
=
q
[
l
++];

36 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

38 
to
=
e
[
i
].
t
;

39 if(
œy
[
to
]==-1&&
e
[
i
].
c
>0)

40 
œy
[
to
]ˆay[
now
]+1,
q
[++
r
]=to;

43  
œy
[
t
]>=0;

44 
	}
}

46 
	$dfs
(
now
,
t
,
âl
)

48 
ªt
=0;

49 if(
now
==
t
)

50  
âl
;

51 
i
=
li°
[
now
]; i!=-1&&
âl
>
ªt
; i=
e
[i].
n
)

53 
to
=
e
[
i
].
t
;

54 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
c
>0)

56 
x
=
	`dfs
(
to
,
t
,
	`mö
(
âl
-
ªt
,
e
[
i
].
c
));

57 if(
x
)

59 
ªt
+=
x
;

60 
e
[
i
].
c
-=
x
;

61 
e
[
i
^1].
c
+=
x
;

65 if(
ªt
==0Ë
œy
[
now
]=-1;

66  
ªt
;

67 
	}
}

69 
	$max_Êow
(
f
,
t
,
n
)

71 
ªt
=0;

72 
	`bfs
(
f
,
t
,
n
))

74 
ªt
+=
	`dfs
(
f
,
t
,
öf
);

76  
ªt
;

77 
	}
}

79 
	$maö
()

81 
n
,
m
;

82 
	`sˇnf
("%d%d",&
n
,&
m
);

83 
t›
=0;

84 
i
=0; i<
n
+
m
+2; i++)

85 
li°
[
i
]=-1;

86 
i
=0; i<
n
; i++)

87 
	`ö£π
(
n
+
m
,
i
,1);

88 
i
=
n
; i<n+
m
; i++)

89 
	`ö£π
(
i
,
n
+
m
+1,2);

90 
i
=0; i<
n
; i++)

92 
u
;

93 
	`sˇnf
("%d",&
u
);

94 
j
=0; j<
u
; j++)

96 
x
;

97 
	`sˇnf
("%d",&
x
);

98 
x
--;

99 
	`ö£π
(
i
,
n
+
x
,1);

102 
mf
=
	`max_Êow
(
n
+
m
,n+m+1,n+m+2);

103 if(
mf
==
m
*2)

105 
	`puts
("YES");

106 
i
=
n
; i<n+
m
; i++)

108 
©›
=0;

109 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

111 if(
e
[
j
].
t
!=
n
+
m
+1&&e[j].
c
==1)

112 
™s
[
©›
++]=
e
[
j
].
t
;

114 
	`¥ötf
("%d",
©›
);

115 
j
=0; j<
©›
; j++)

116 
	`¥ötf
(" %d",
™s
[
j
]+1);

117 
	`puts
("");

121 
	`puts
("NO");

123 
	}
}

	@problems/sgu/sgu_297.cpp

1 
	~<c°dio
>

3 
	$maö
()

5 
s
,
n
,
m
;

6 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

8 
s
=0;

9 
i
=0; i<
m
; i++)

11 
x
;

12 
	`sˇnf
("%d",&
x
);

13 
s
+=
x
;

15 
	`¥ötf
("%d\n",
s
%
n
);

18 
	}
}

	@problems/sgu/sgu_302.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<°rög
>

4 
	#N
 1001

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
°rög
 
	gs
;

9 
	g°1
[
N
],
	g°2
[N],
	gt1
,
	gt2
;

11 
	$show
(
x
,
èg
)

13 if(
x
>='a')

14 
x
-='a';

16 
x
-='A';

17 
	`¥ötf
("%c",(
x
+'A')+(1-
èg
)*('a'-'A'));

18 
	}
}

20 
	$maö
()

22 
cö
>>
s
)

24 
size_t
 
ô
;

25 (
ô
=
s
.
	`föd
("<UP>"))!=
°rög
::
≈os
)

26 
s
.
	`ª∂a˚
(
ô
,4,"1");

27 (
ô
=
s
.
	`föd
("</UP>"))!=
°rög
::
≈os
)

28 
s
.
	`ª∂a˚
(
ô
,5,"2");

29 (
ô
=
s
.
	`föd
("<DOWN>"))!=
°rög
::
≈os
)

30 
s
.
	`ª∂a˚
(
ô
,6,"3");

31 (
ô
=
s
.
	`föd
("</DOWN>"))!=
°rög
::
≈os
)

32 
s
.
	`ª∂a˚
(
ô
,7,"4");

33 
t1
=-1,
t2
=-1;

34 
i
=0; i<
s
.
	`Àngth
(); i++)

36 if(
s
[
i
]=='1')

37 
°1
[++
t1
]=
i
;

38 if(
s
[
i
]=='2')

39 --
t1
;

40 if(
s
[
i
]=='3')

41 
°2
[++
t2
]=
i
;

42 if(
s
[
i
]=='4')

43 --
t2
;

46 if(
t1
<0&&
t2
<0)

47 
	`¥ötf
("%c",
s
[
i
]);

48 if(
t1
>=0&&
t2
>=0)

49 
	`show
(
s
[
i
],
°1
[
t1
]>
°2
[
t2
]);

50 if(
t1
>=0)

51 
	`show
(
s
[
i
],1);

53 
	`show
(
s
[
i
],0);

56 
	`puts
("");

59 
	}
}

	@problems/sgu/sgu_304_classic_dp.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#öf
 0x3ffffff

	)

5 
	#N
 1222

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gvÆ
[
N
],
	g˙t
[N],
	gn
,
	gk
,
	gp
;

10 
	gvv
[
N
],
	gcc
[N],
	gt›
,
	g√xt
[N];

11 
	gve˘‹
<> 
	gli
[
N
];

12 
	gve˘‹
<> 
	g™s
;

13 
	gdp
[
N
][610],
	gcho
[N][610],
	gid
[N];

15 
	$dfs
(
now
,
lf
)

17 if(
dp
[
now
][
lf
]>=0)  dp[now][lf];

18 if(
lf
==0)

19  
dp
[
now
][
lf
]=0;

20 if(
now
==
n
+
k
)

21  
dp
[
now
][
lf
]=
öf
;

22 
ªt
;

23 
a
=
	`dfs
(
cc
[
now
]>0?now+1:
√xt
[now],
lf
);

24 
b
=
	`dfs
(
now
+1,
lf
-
cc
[now])+
vv
[now];

25 if(
a
>
b
)

26 
cho
[
now
][
lf
]=1,
ªt
=
b
;

28 
cho
[
now
][
lf
]=0,
ªt
=
a
;

29  
dp
[
now
][
lf
]=
ªt
;

30 
	}
}

32 
	$gëid
(
now
)

34 
id
[
t›
]=
now
,
vv
[t›]=
vÆ
[now],
cc
[t›++]=
˙t
[now];

35 
i
=0; i<
li
[
now
].
	`size
(); i++)

37 
to
=
li
[
now
][
i
];

38 
	`gëid
(
to
);

40 
	}
}

42 
	$gë™s
(
now
,
lf
)

44 if(
lf
==0||
now
==
k
+
n
) ;

45 if(
cho
[
now
][
lf
]==1)

47 
	`gë™s
(
now
+1,
lf
-
cc
[now]);

48 if(
cc
[
now
]>0)

49 
™s
.
	`push_back
(
now
);

52 
	`gë™s
(
cc
[
now
]>0?now+1:
√xt
[now],
lf
);

53 
	}
}

55 
	$maö
()

57 
	`sˇnf
("%d%d%d",&
n
,&
k
,&
p
);

58 
	`mem£t
(
˙t
,0,(cnt));

59 
i
=0; i<=
n
+
k
; i++)

60 
li
[
i
].
	`˛ór
();

61 
i
=0; i<
k
; i++)

62 
	`sˇnf
("%d",&
vÆ
[
i
]);

63 
i
=0; i<
n
; i++)

65 
x
;

66 
	`sˇnf
("%d%d",&
vÆ
[
k
+
i
],&
x
);

67 
˙t
[
k
+
i
]=1;

68 
li
[
x
-1].
	`push_back
(
k
+
i
);

70 
	`mem£t
(
dp
,-1,(dp));

71 
¥e
=0;

72 
t›
=0;

73 
i
=0; i<
k
; i++)

75 
	`gëid
(
i
);

76 
√xt
[
¥e
]=
t›
;

77 
¥e
=
t›
;

79 
ªt
=
n
+1;

80 
i
=1; i<=
n
; i++)

82 
now
=
	`dfs
(0,
i
);

83 if(
now
>
p
)

85 
ªt
=
i
;

89 
ªt
--;

90 
	`¥ötf
("%d\n",
ªt
);

91 if(
ªt
>0)

93 
™s
.
	`˛ór
();

94 
	`gë™s
(0,
ªt
);

95 
i
=0; i<
™s
.
	`size
()-1; i++)

96 
	`¥ötf
("%d ",
id
[
™s
[
i
]]-
k
+1);

97 
	`¥ötf
("%d\n",
id
[
™s
[™s.
	`size
()-1]]-
k
+1);

100 
	}
}

	@problems/sgu/sgu_318.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<£t
>

5 
usög
 
«me•a˚
 
	g°d
;

7 
	g£t
<> 
	g°
[111];

8 
	gvv
[111];

10 
	$maö
()

12 
n
,
m
;

13 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

15 
	`mem£t
(
vv
,0,(vv));

16 
i
=0; i<
m
; i++)

17 
°
[
i
].
	`˛ór
();

18 
i
=0; i<
m
; i++)

20 
x
,
y
;

21 
	`sˇnf
("%d",&
x
);

22 
j
=0; j<
x
; j++)

24 
	`sˇnf
("%d",&
y
);

25 
y
--;

26 
°
[
y
].
	`ö£π
(
i
);

29 
ªt
=0;

30 
i
=0; i<
n
; i++)

32 if(
°
[
i
].
	`size
()>0&&
vv
[i]==0)

34 
vv
[
i
]=1;

35 
j
=
i
+1; j<
n
; j++)

37 if(
°
[
j
]==°[
i
])

38 
vv
[
j
]=1;

40 
ªt
++;

43 
	`¥ötf
("%d\n",
ªt
);

46 
	}
}

	@problems/sgu/sgu_327.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<io°ªam
>

4 
	~<°rög
>

5 
	~<Æg‹ôhm
>

6 
	#N
 14

	)

7 
	#S
 1<<14

	)

8 
	#öf
 0x3fffffff

	)

10 
usög
 
«me•a˚
 
	g°d
;

12 
°rög
 
	gts
[
N
],
	gs
[N];

13 
°rög
 
	g™s
;

14 
	gn
,
	gÀn
[
N
][N][2][2],
	gST
,
	gdp
[N][
S
][2],
	gvis
[N];

15 
	g√xt
[
N
][
S
][2];

17 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

19 
°rög
 
	$ªvî£
(
°rög
 
a
)

21 
°rög
 
ªt
=
a
;

22 
	`ªvî£
(
ªt
.
	`begö
(),ªt.
	`íd
());

23  
ªt
;

24 
	}
}

26 
	$dñªp
(
ä
)

28 
°rög
 
tmp
;

29 
	`mem£t
(
vis
,0,(vis));

30 
i
=0; i<
ä
; i++)

32 
èg
=0;

33 
tmp
=
	`ªvî£
(
ts
[
i
]);

34 
j
=0; j<
ä
; j++)

36 if(
vis
[
j
]) ;

37 if(
i
==
j
) ;

38 if(
ts
[
j
].
	`föd
—s[
i
])!=
°rög
::
≈os
)

40 
èg
=1;

43 if(
ts
[
j
].
	`föd
(
tmp
)!=
°rög
::
≈os
)

45 
èg
=1;

49 if(
èg
)

50 
vis
[
i
]=1;

52 
n
=0;

53 
i
=0; i<
ä
; i++)

54 if(!
vis
[
i
])

55 
s
[
n
++]=
ts
[
i
];

56 
	}
}

58 
	$gë
(
°rög
 
a
,°rög 
b
)

60 
ªt
=0,
l
=
	`mö
(
b
.
	`Àngth
(),
a
.length());

61 
i
=1; i<=
l
; i++)

62 if(
a
.
	`sub°r
(0,
i
)==
b
.sub°r(b.
	`Àngth
()-i,i))

63 
ªt
=
i
;

64  
ªt
;

65 
	}
}

67 
	$gëÀn
()

69 
	`mem£t
(
Àn
,0,(len));

70 
i
=0; i<
n
; i++)

72 
j
=0; j<
n
; j++)

74 if(
i
==
j
)

76 
Àn
[
i
][i][0][0]=2*
s
[i].
	`Àngth
()-
	`gë
(
	`ªvî£
(s[i]),s[i]);

77 
Àn
[
i
][i][1][1]=2*
s
[i].
	`Àngth
()-
	`gë
(s[i],
	`ªvî£
(s[i]));

81 
Àn
[
i
][
j
][0][0]=2*
s
[j].
	`Àngth
()-2*
	`gë
(s[i],s[j]);

82 
Àn
[
i
][
j
][0][1]=2*
s
[j].
	`Àngth
()-2*
	`gë
(s[i],
	`ªvî£
(s[j]));

83 
Àn
[
i
][
j
][1][0]=2*
s
[j].
	`Àngth
()-2*
	`gë
(
	`ªvî£
(s[i]),s[j]);

84 
Àn
[
i
][
j
][1][1]=2*
s
[j].
	`Àngth
()-2*
	`gë
(
	`ªvî£
(s[i]),reverse(s[j]));

88 
	}
}

90 
	$dfs
(
now
,
°
)

92 if(
dp
[
now
][
°
][0]>=0)

94 
dp
[
now
][
°
][0]=dp[now][°][1]=
öf
;

95 if(
°
==
ST
)

97 
dp
[
now
][
°
][0]=0;

98 
dp
[
now
][
°
][1]=0;

101 
i
=0; i<
n
; i++)

103 if((
°
&
	`B
(
i
))==0)

105 
	`dfs
(
i
,
°
+
	`B
(i));

106 
x
=
dp
[
i
][
°
+
	`B
(i)][0]+
Àn
[
now
][i][0][0];

107 if(
x
<
dp
[
now
][
°
][0])

109 
dp
[
now
][
°
][0]=
x
;

110 
√xt
[
now
][
°
][0]=
i
;

112 
x
=
dp
[
i
][
°
+
	`B
(i)][1]+
Àn
[
now
][i][0][1];

113 if(
x
<
dp
[
now
][
°
][0])

115 
dp
[
now
][
°
][0]=
x
;

116 
√xt
[
now
][
°
][0]=
i
+
n
;

118 
x
=
dp
[
i
][
°
+
	`B
(i)][0]+
Àn
[
now
][i][1][0];

119 if(
x
<
dp
[
now
][
°
][1])

121 
dp
[
now
][
°
][1]=
x
;

122 
√xt
[
now
][
°
][1]=
i
;

124 
x
=
dp
[
i
][
°
+
	`B
(i)][1]+
Àn
[
now
][i][1][1];

125 if(
x
<
dp
[
now
][
°
][1])

127 
dp
[
now
][
°
][1]=
x
;

128 
√xt
[
now
][
°
][1]=
n
+
i
;

132 
	}
}

134 
°rög
 
	$c⁄√˘
(
°rög
 
a
,°rög 
b
)

136 
°rög
 
ªt
=
a
;

137 
l
=0,
ml
=
	`mö
(
a
.
	`Àngth
(),
b
.length());

138 
i
=1; i<=
ml
; i++)

139 if(
a
.
	`sub°r
◊.
	`Àngth
()-
i
,i)==
b
.substr(0,i))

140 
l
=
i
;

141 
ªt
+=
b
.
	`sub°r
(
l
,b.
	`Àngth
()-l);

142  
ªt
;

143 
	}
}

145 
	$show
(
now
,
°
,
èg
)

147 if(
èg
==0)

149 
™s
=
	`c⁄√˘
(
s
[
now
],ans);

150 
™s
=
	`c⁄√˘
◊ns,
	`ªvî£
(
s
[
now
]));

154 
™s
=
	`c⁄√˘
(
	`ªvî£
(
s
[
now
]),ans);

155 
™s
=
	`c⁄√˘
◊ns,
s
[
now
]);

157 if(
°
==
ST
)

159 
nx
=
√xt
[
now
][
°
][
èg
],
¡
;

160 
¡
=
nx
/
n
,nx=nx%n;

161 
	`show
(
nx
,
°
+
	`B
“x),
¡
);

162 
	}
}

164 
	$gao
()

166 
	`mem£t
(
dp
,-1,(dp));

168 
i
=0; i<
n
; i++)

170 
	`dfs
(
i
,
	`B
(i));

171 
dp
[
i
][0][0]=
öf
;

172 
x
=
dp
[
i
][
	`B
(i)][0]+
Àn
[i][i][0][0];

173 if(
x
<
dp
[
i
][0][0])

175 
dp
[
i
][0][0]=
x
;

176 
√xt
[
i
][0][0]=0;

178 
x
=
dp
[
i
][
	`B
(i)][1]+
Àn
[i][i][1][1];

179 if(
x
<
dp
[
i
][0][0])

181 
dp
[
i
][0][0]=
x
;

182 
√xt
[
i
][0][0]=1;

185 
ªt
=
öf
,
id
=-1;

186 
i
=0; i<
n
; i++)

188 if(
ªt
>
dp
[
i
][0][0])

189 
ªt
=
dp
[
i
][0][0],
id
=i;

191 
™s
=
	`°rög
("");

192 
	`show
(
id
,
	`B
(id),
√xt
[id][0][0]);

193 
cout
<<
™s
<<
ídl
;

194 if(
™s
.
	`Àngth
()!=
ªt
)

196 
	}
}

198 
	$maö
()

200 
ä
;

201 
	`sˇnf
("%d",&
ä
)+1)

203 
i
=0; i<
ä
; i++)

204 
cö
>>
ts
[
i
];

205 
	`dñªp
(
ä
);

206 
ST
=
	`B
(
n
)-1;

207 
	`gëÀn
();

208 
	`gao
();

211 
	}
}

	@problems/sgu/sgu_339.cpp

1 
	~<c°dio
>

2 
	#N
 1101

	)

4 
	s£g
{ 
	mx
,
	my
; }
	gsg
[
N
];

5 
	gs
[20];

6 
	gt›
;

8 
	$maö
()

10 
t›
=0;

11 
x
,
y
;

12 
	`sˇnf
("%s%d%d",
s
,&
x
,&
y
)+1)

14 if(
s
[0]=='+')

16 
ªt
=0;

17 
i
=0; i<
t›
; i++)

18 if(
sg
[
i
].
x
>=x&&sg[i].
y
<=y)

19 
ªt
++;

20 
sg
[
t›
].
x
=x,sg[t›++].
y
=y;

21 
	`¥ötf
("%d\n",
ªt
);

25 
id
=-1;

26 
i
=
t›
-1; i>=0; i--)

27 if(
sg
[
i
].
x
==x&&sg[i].
y
==y)

29 
id
=
i
;

32 if(
id
>=0)

34 
i
=
id
; i+1<
t›
; i++)

35 
sg
[
i
]=sg[i+1];

36 
t›
--;

41 
	}
}

	@problems/sgu/sgu_375.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#öf
 0x3fffffff

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gve˘‹
<> 
	gvec
;

9 
	$dfs
(
n
)

11 if(!(
n
&1))

12  
öf
;

13 if(
n
==1)

15 
ªt
=
	`dfs
(
n
/2)+1;

16 if(
ªt
<
öf
)

18 
vec
.
	`push_back
(2);

19  
ªt
;

21 
ªt
=
	`dfs
(
n
/2+1)+1;

22 if(
ªt
<
öf
)

24 
vec
.
	`push_back
(1);

25  
ªt
;

27  
öf
;

28 
	}
}

30 
	$maö
()

32 
n
;

33 
	`sˇnf
("%d",&
n
)+1)

35 
vec
.
	`˛ór
();

36 
ªt
=
	`dfs
(
n
);

37 if(
ªt
<
öf
)

39 
	`¥ötf
("%d\n",
ªt
);

40 
i
=0; i<
vec
.
	`size
(); i++)

42 
	`¥ötf
("%d",
vec
[
i
]);

43 if(
i
<
vec
.
	`size
()-1)

44 
	`¥ötf
(" ");

46 
	`puts
("");

49 
	`puts
("No solution");

51 
	}
}

	@problems/sgu/sgu_463.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 111

	)

5 
	gm©
[
N
][N];

6 
	gsm
[
N
][N];

7 
	gs
[1111];

8 
	gvis
[
N
][N];

9 
	gdú
[4][2]={ {1,0},{0,-1},{-1,0},{0,1} };

10 
	snode
{ 
	md
,
	mx
,
	my
; }
	gno
;

12 
	$sﬁve
()

14 
	`mem£t
(
vis
,0,(vis));

15 
l
=
	`°æí
(
s
);

16 
ªt
=0;

17 
no
.
x
Úo.
y
=0,no.
d
=3;

18 
i
=0; i<
l
; i++)

20 if(
s
[
i
]=='L')

21 
no
.
d
=((no.d-1)%4+4)%4;

22 if(
s
[
i
]=='R')

23 
no
.
d
=(no.d+1)%4;

26 
x
=
no
.x+
dú
[no.
d
][0],
y
Úo.y+dú[no.d][1],
xx
[3],
yy
[3];

27 if(
no
.
d
==0)

29 
xx
[1]=
x
,
yy
[1]=
y
;

30 
xx
[2]=
x
,
yy
[2]=
y
+1;

32 if(
no
.
d
==1)

34 
xx
[1]=
no
.
x
,
yy
[1]Úo.
y
;

35 
xx
[2]=
no
.
x
+1,
yy
[2]Úo.
y
;

37 if(
no
.
d
==2)

39 
xx
[1]=
no
.
x
,
yy
[1]Úo.
y
;

40 
xx
[2]=
no
.
x
,
yy
[2]Úo.
y
+1;

44 
xx
[1]=
x
,
yy
[1]=
y
;

45 
xx
[2]=
x
+1,
yy
[2]=
y
;

47 
k
=1; k<=2; k++)

49 if(
vis
[
xx
[
k
]][
yy
[k]])

50 
ªt
+=
m©
[
xx
[
k
]][
yy
[k]]/2;

53 
ªt
+=
m©
[
xx
[
k
]][
yy
[k]];

54 
vis
[
xx
[
k
]][
yy
[k]]=1;

57 
no
.
x
=x,no.
y
=y;

60  
ªt
;

61 
	}
}

63 
	$maö
()

65 
m
,
n
;

66 
	`sˇnf
("%d%d",&
m
,&
n
)+1)

68 
	`mem£t
(
m©
,0,(mat));

69 
i
=1; i<=
m
; i++)

70 
	`sˇnf
("%s",
sm
[
i
]+1);

71 
i
=1; i<=
m
; i++)

72 
j
=1; j<=
n
; j++)

73 
m©
[
i
][
j
]=
sm
[i][j]-'0';

74 
	`sˇnf
("%s",
s
);

75 
	`¥ötf
("%d\n",
	`sﬁve
());

78 
	}
}

	@problems/sgu/sgu_479.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#N
 222

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gm©
[
N
][N],
	gvis
[N][N];

9 
	gve˘‹
<> 
	gque
;

10 
	gve˘‹
<> 
	g™s
;

12 
	gdú
[4][2]={{1,0},{-1,0},{0,1},{0,-1}};

14 
	$öbﬂrd
(
x
,
y
,
m
,
n
)

16  0<=
x
&&x<
m
&&0<=
y
&&y<
n
;

17 
	}
}

19 
	$ok
(
m
,
n
)

21 
˙t
=0,
âl
=
m
*
n
,
l
,
r
;

22 
que
.
	`˛ór
();

23 
™s
.
	`˛ór
();

24 
	`mem£t
(
vis
,0,(vis));

25 ; 
˙t
<
âl
;)

27 
i
=0; i<
m
; i++)

28 
j
=0; j<
n
; j++)

30 if(
vis
[
i
][
j
]) ;

31 if(
m©
[
i
][
j
]==1)

32 
que
.
	`push_back
(
i
*
N
+
j
);

33 if(
m©
[
i
][
j
]==0)

36 if(
que
.
	`size
()==0)

38 
i
=0; i<
que
.
	`size
(); i++)

40 
x
=
que
[
i
]/
N
,
y
=que[i]%N;

41 
i
=0; i<4; i++)

43 
xx
=
x
+
dú
[
i
][0],
yy
=
y
+dir[i][1];

44 if(!
	`öbﬂrd
(
xx
,
yy
,
m
,
n
))

46 if(
vis
[
xx
][
yy
])

48 
m©
[
xx
][
yy
]--;

49 if(
m©
[
xx
][
yy
]<=0)

52 
™s
.
	`push_back
(
x
*
N
+
y
);

53 
˙t
++;

54 
vis
[
x
][
y
]=1;

56 ; 
que
.
	`size
()>0;)

57 
que
.
	`p›_back
();

60 
	}
}

62 
	$maö
()

64 
n
,
m
;

65 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

67 
i
=0; i<
m
; i++)

68 
j
=0; j<
n
; j++)

69 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

70 if(
	`ok
(
m
,
n
))

72 
i
=
™s
.
	`size
()-1; i>=0; i--)

74 
	`¥ötf
("%d %d\n",
™s
[
i
]/
N
+1,ans[i]%N+1);

78 
	`puts
("No solution");

81 
	}
}

	@problems/sgu/sgu_484.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	#N
 111

	)

5 
	#S
 111111

	)

7 
	snode
{ 
	mx
,
	my
; }
	gq
[
S
],
	g°
;

9 
	gm©
[
N
][N];

10 
	gm
,
	gn
;

11 
	gvis
[
N
][N];

13 
ölöe
 
	$öbﬂrd
(
x
,
y
){  0<=x&&x<=
m
&&0<=y&&y<
n
; 
	}
}

15 
	$gao
()

17 
	`mem£t
(
vis
,0,(vis));

18 
l
,
r
,
f
=0;

19 
¥e
='P';

20 
q
[
l
=
r
=0]=
°
;

21 ; 
l
<=
r
;)

23 
node
 
now
=
q
[
l
++],
√xt
=now;

24 if(
now
.
x
==
m
)

25  
now
.
y
+1;

26 if(
vis
[
now
.
x
][now.
y
])

28 
vis
[
now
.
x
][now.
y
]=1;

29 
nc
=
m©
[
now
.
x
][now.
y
];

30 if(
nc
==
¥e
&&!
f
)

31 
√xt
.
x
++,
f
=1;

32 if(
nc
=='/')

33 
√xt
.
y
--,
f
=0;

34 if(
nc
=='\\')

35 
√xt
.
y
++,
f
=0;

37 
√xt
.
x
++,
f
=1;

38 if(!
	`öbﬂrd
(
√xt
.
x
,√xt.
y
))

40 
¥e
=
nc
;

41 
q
[++
r
]=
√xt
;

44 
	}
}

46 
	$maö
()

48 
	`sˇnf
("%d%d",&
m
,&
n
)+1)

50 
i
=0; i<
m
; i++)

52 
	`sˇnf
("%s",&
m©
[
i
]);

53 
j
=0; j<
n
; j++)

54 if(
m©
[
i
][
j
]=='P')

55 
°
.
x
=
i
,°.
y
=
j
;

57 
	`¥ötf
("%d\n",
	`gao
());

60 
	}
}

	@problems/spoj/spoj_1161_string.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gs
[10][10];

32 
	$˙t_num
(&
x
,&
y
)

34 
x
=
y
=0;

35 
i
=0; i<3; i++)

36 
j
=0; j<3; j++)

38 if(
s
[
i
][
j
]=='O')

39 
y
++;

40 if(
s
[
i
][
j
]=='X')

41 
x
++;

43 
	}
}

45 
	$wö
(
x
)

47 
i
=0; i<3; i++)

49 if(
s
[
i
][0]==
x
&&s[i][1]==x&&s[i][2]==x)

51 
s
[
i
][0]=s[i][1]=s[i][2]='.';

54 if(
s
[0][
i
]==
x
&&s[1][i]==x&&s[2][i]==x)

56 
s
[0][
i
]=s[1][i]=s[2][i]='.';

60 if(
s
[0][0]==
x
&&s[1][1]==x&&s[2][2]==x)

62 
s
[0][0]=s[1][1]=s[2][2]='.';

65 if(
s
[0][2]==
x
&&s[1][1]==x&&s[2][0]==x)

67 
s
[0][2]=s[1][1]=s[2][0]='.';

71 
	}
}

73 
	$put_yes
()

75 
x
,
o
,
xw
,
ow
;

76 
	`˙t_num
(
x
,
o
);

77 if(
x
<
o
)  0;

78 if(
x
>
o
+1)  0;

79 
xw
=
	`wö
('X');

80 
ow
=
	`wö
('O');

85 if(
ow
&&
x
>
o
)

87 if(
xw
&&
x
==
o
)

89 if(
xw
&&
ow
)  0;

90 if(
xw
&&
	`wö
('X'))

92 if(
ow
&&
	`wö
('O'))

95 
	}
}

97 
	$maö
()

99 
t
;

100 
	`sˇnf
("%d",&
t
);

101 ; 
t
--; )

103 
i
=0; i<3; i++)

104 
	`sˇnf
("%s",
s
[
i
]);

105 if(
	`put_yes
())

106 
	`puts
("yes");

108 
	`puts
("no");

111 
	}
}

	@problems/spoj/spoj_1162_string.cpp

7 
	~<c°rög
>

8 
	~<c°dio
>

9 
	~<ve˘‹
>

10 
	~<£t
>

11 
	~<m≠
>

12 
	~<queue
>

13 
	~<°rög
>

14 
	~<cm©h
>

15 
	~<io°ªam
>

16 
	~<Æg‹ôhm
>

17 
	#N
 1010

	)

18 
	#M
 1000010

	)

19 
	#S
 1000100

	)

20 
	#MOD
 1000000007

	)

22 
	tLL
;

23 
usög
 
«me•a˚
 
	g°d
;

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

28 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

30 
	gs
[10][10],
	g°r
[12];

32 
	$˙t_num
(&
x
,&
y
,&
z
)

34 
x
=
y
=
z
=0;

35 
i
=0; i<3; i++)

36 
j
=0; j<3; j++)

38 if(
s
[
i
][
j
]=='O')

39 
y
++;

40 if(
s
[
i
][
j
]=='X')

41 
x
++;

43 
z
++;

45 
	}
}

47 
	$wö
(
x
)

49 
i
=0; i<3; i++)

51 if(
s
[
i
][0]==
x
&&s[i][1]==x&&s[i][2]==x)

53 
s
[
i
][0]=s[i][1]=s[i][2]='.';

56 if(
s
[0][
i
]==
x
&&s[1][i]==x&&s[2][i]==x)

58 
s
[0][
i
]=s[1][i]=s[2][i]='.';

62 if(
s
[0][0]==
x
&&s[1][1]==x&&s[2][2]==x)

64 
s
[0][0]=s[1][1]=s[2][2]='.';

67 if(
s
[0][2]==
x
&&s[1][1]==x&&s[2][0]==x)

69 
s
[0][2]=s[1][1]=s[2][0]='.';

73 
	}
}

75 
	$put_yes
()

77 
x
,
o
,
xw
,
ow
,
z
;

78 
	`˙t_num
(
x
,
o
,
z
);

79 if(
x
<
o
)  0;

80 if(
x
>
o
+1)  0;

81 
xw
=
	`wö
('X');

82 
ow
=
	`wö
('O');

83 if(
xw
&&
ow
)  0;

84 if(
xw
&&
	`wö
('X'))

86 if(
ow
&&
	`wö
('O'))

88 if(
xw
&&
x
==
o
+1)

90 if(
ow
&&
x
==
o
)

92 if(
z
==0&&
ow
==0&&
xw
==0)

95 
	}
}

97 
	$maö
()

99 
t
;

100 ; 
	`sˇnf
("%s",
°r
)!=
EOF
&&
	`°rcmp
(str,"end"); )

102 
i
=0; i<3; i++)

103 
j
=0; j<3; j++)

104 
s
[
i
][
j
]=
°r
[i*3+j];

105 if(
	`put_yes
())

106 
	`puts
("valid");

108 
	`puts
("invalid");

111 
	}
}

	@problems/timus/timus_1922.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 1011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	snode
{ 
	mc
,
	mi
; }
	gno
[
N
];

9 
	$cmp
(
node
 
a
,nodê
b
){ á.
c
<b.c; 
	}
}

10 
	gn
;

12 
	$ok
(
i
)

14 
j
=
i
+1; j<
n
; j++)

15 if(
no
[
j
].
c
<=
i
+2)

18 
	}
}

20 
	$maö
()

22 
	`sˇnf
("%d",&
n
)+1)

24 
i
=0; i<
n
; i++)

26 
	`sˇnf
("%d",&
no
[
i
].
c
);

27 
no
[
i
].i=i+1;

29 
	`s‹t
(
no
,no+
n
,
cmp
);

30 
ªt
=0;

31 
i
=0; i<
n
; i++)

33 if(
no
[
i
].
c
<=i+1)

35 if(
	`ok
(
i
))

36 
ªt
++;

39 
	`¥ötf
("%d\n",
ªt
);

40 
i
=0; i<
n
; i++)

42 if(
no
[
i
].
c
<=i+1)

44 if(
	`ok
(
i
))

46 
	`¥ötf
("%d",
i
+1);

47 
j
=0; j<=
i
; j++)

48 
	`¥ötf
(" %d",
no
[
j
].
i
);

49 
	`puts
("");

55 
	}
}

	@problems/timus/timus_1923.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 55

	)

5 
	gs
[
N
][N];

6 
	gm
,
	gn
;

7 
	gvis
[
N
][N];

8 
	gªt
=0;

10 
ölöe
 
	$öbﬂrd
(
i
,
j
){  0<=i&&i<
m
&&0<=j&&j<
n
; 
	}
}

12 
	$fûl
(
x
,
y
,
now
,
z
)

14 if(!
	`öbﬂrd
(
x
,
y
))

16 if(
vis
[
x
][
y
])

18 if(
s
[
x
][
y
]!=
now
)

20 
vis
[
x
][
y
]=1;

21 
s
[
x
][
y
]=
z
;

22 
	`fûl
(
x
+1,
y
,
now
,
z
);

23 
	`fûl
(
x
-1,
y
,
now
,
z
);

24 
	`fûl
(
x
,
y
+1,
now
,
z
);

25 
	`fûl
(
x
,
y
-1,
now
,
z
);

26 
	}
}

28 
	$gao
(
x
,
y
,
z
)

30 if(!
	`öbﬂrd
(
x
,
y
))

32 if(
vis
[
x
][
y
])

34 if(
s
[
x
][
y
]!=
z
)

36 
vis
[
x
][
y
]=1;

37 
ªt
++;

38 
	`gao
(
x
+1,
y
,
z
);

39 
	`gao
(
x
-1,
y
,
z
);

40 
	`gao
(
x
,
y
+1,
z
);

41 
	`gao
(
x
,
y
-1,
z
);

42 
	}
}

44 
	$maö
()

46 
	`sˇnf
("%d%d",&
m
,&
n
)+1)

48 
i
=0; i<
m
; i++)

50 
	`sˇnf
("%s",&
s
[
i
]);

51 
j
=0; j<
n
; j++)

52 
s
[
i
][
j
]-='0';

54 
l
;

55 
	`sˇnf
("%d",&
l
);

56 
now
=0;

57 
i
=0; i<
l
; i++)

59 
x
,
x0
,
y0
;

60 
	`sˇnf
("%d",&
x
);

61 if(
now
==0)

62 
x0
=
m
-1,
y0
=0;

64 
x0
=0,
y0
=
n
-1;

65 
	`mem£t
(
vis
,0,(vis));

66 
	`fûl
(
x0
,
y0
,
s
[x0][y0],
x
);

73 
now
^=1;

75 
r1
,
r2
;

76 
	`mem£t
(
vis
,0,(vis));

77 
ªt
=0;

78 
	`gao
(
m
-1,0,
s
[m-1][0]);

79 
r1
=
ªt
;

80 
ªt
=0;

81 
	`mem£t
(
vis
,0,(vis));

82 
	`gao
(0,
n
-1,
s
[0][n-1]);

83 
r2
=
ªt
;

84 
	`¥ötf
("%d\n%d\n",
r1
,
r2
);

87 
	}
}

	@problems/timus/timus_1924.cpp

1 
	~<c°dio
>

3 
	$maö
()

5 
n
;

6 
	`sˇnf
("%d",&
n
)+1)

8 
ªt
=(1+
n
)*n/2;

9 if(
ªt
&1)

10 
	`puts
("grimy");

12 
	`puts
("black");

15 
	}
}

	@problems/timus/timus_1926.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<c°rög
>

4 
	#N
 100101

	)

5 
	#M
 100

	)

6 
	#X
 15

	)

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 
	gdp
[
X
][
N
];

12 
	gid
[100],
	gp
[100],
	g∂i°
[100],
	gt›
;

13 
	gªt
[
X
];

14 
	gs
[
N
];

16 
LL
 
	gb
[
X
],
	gw
[X];

17 
	gç
;

19 
LL
 
	$ext_gcd
(
LL
 
a
,LL 
b
,LL &
x
,LL &
y
)

21 if(!
b
Ë 
x
=1,
y
=0,
a
;

22 
LL
 
g
=
	`ext_gcd
(
b
,
a
%b,
y
,
x
);

23 
y
-=
a
/
b
*
x
;

24  
g
;

25 
	}
}

27 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

29 
LL
 
t
,
d
,
x
,
y
,
ªt
=
b
[0],
m
=
w
[0],
â
,
Ác
,
√xtm
,
i
;

30 
i
=1; i<
k
; i++)

32 
d
=
	`ext_gcd
(
m
,
w
[
i
],
x
,
y
);

33 
t
=
b
[
i
]-
ªt
;

34 if(
t
%
d
)  -1;

35 
â
=
w
[
i
]/
d
;

36 
Ác
=(
x
*(
t
/
d
)%
â
+tt)%tt;

37 
√xtm
=
m
/
d
*
w
[
i
];

38 
ªt
=(‘ë+
m
*
Ác
)%
√xtm
+nextm)%nextm;

39 
m
=
√xtm
;

41  (
ªt
%
m
+m)%m;

42 
	}
}

44 
	$öô
()

46 
t›
=0;

47 
i
=0; i<
M
; i++)

48 
p
[
i
]=i;

49 
i
=2; i<
M
; i++)

51 if(
p
[
i
]==i)

52 
∂i°
[
t›
++]=
i
;

53 
j
=0; j<
t›
&&
i
*
∂i°
[j]<
M
; j++)

55 
p
[
i
*
∂i°
[
j
]]=plist[j];

56 if(
i
%
∂i°
[
j
]==0)

60 
i
=0; 
∂i°
[i]<=47; i++)

61 
id
[
∂i°
[
i
]]=i;

62 
i
=0; i<
X
; i++)

64 
dp
[
i
][1]=1;

65 
j
=2; j<=
N
; j++)

67 
x
=
dp
[
i
][
j
-1];

68 
dp
[
i
][
j
]=
x
*10%
∂i°
[i];

71 
	}
}

73 
	$maö
()

75 
	`öô
();

76 
n
;

77 
	`sˇnf
("%s",
s
)+1)

79 
n
=
	`°æí
(
s
);

80 
i
=0; i<
n
; i++)

81 
s
[
i
]-='0';

82 
i
=0; i<
X
; i++)

84 
r
=0;

85 
j
=0; j<
n
; j++)

87 
r
*=10,r+=
s
[
j
];

88 
r
Ù%
∂i°
[
i
];

90 
ªt
[
i
]=
r
%
∂i°
[i];

92 
m
;

93 
	`sˇnf
("%d",&
m
);

94 ; 
m
--;)

96 
èg
,
x
,
y
;

97 
	`sˇnf
("%d",&
èg
);

98 if(
èg
==0)

100 
LL
 
now
;

101 
cö
>>
now
;

102 if(
now
==1)

104 
	`puts
("0");

107 
ç
=0;

108 
i
=0; i<
X
; i++)

109 if(
now
%
∂i°
[
i
]==0)

111 
w
[
ç
]=
∂i°
[
i
];

112 
now
/=
∂i°
[
i
];

113 if(
now
%
∂i°
[
i
]==0)

115 
b
[
ç
]=
ªt
[
i
];

116 
ç
++;

118 
LL
 
™s
=
	`moduœr_löór_sy°em
(
b
,
w
,
ç
);

119 
cout
<<
™s
<<
ídl
;

123 
	`sˇnf
("%d%d",&
x
,&
y
);

124 
i
=0; i<
X
; i++)

126 
md
=
dp
[
i
][
x
],
d
=
y
-
s
[
n
-x];

127 
md
=
d
*md;

128 
ªt
[
i
]=(‘ë[i]+
md
)%
∂i°
[i]+plist[i])%plist[i];

130 
s
[
n
-
x
]=
y
;

135 
	}
}

	@problems/timus/timus_1927.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#ïs
 1e-8

	)

5 c⁄° 
	gpi
=
acos
(-1*1.0);

7 
	snode
{ 
	mx
,
	my
;

8 
node
(){;}

9 
node
(
xx
,
yy
){ 
	mx
=xx,
	my
=yy; }

10 
Àn
(){  
sqπ
(
x
*x+
y
*y); }

11 }
	gv
[2];

12 
	s£g
{ 
node
 
	ma
,
	mb
;

13 
node
 
gëv
(){ Çode(
a
.
x
-
b
.x,a.
y
-b.y); }

14 }
	gs
[2];

16 
	$zîo
(
x
){  
	`Ábs
(x)<
ïs
; 
	}
}

18 
	$xmu…
(
node
 
a
,nodê
b
)

20  
a
.
x
*
b
.
y
-b.x*a.y;

21 
	}
}

22 
	$pmu…
(
node
 
a
,nodê
b
)

24  
a
.
x
*
b
.x+a.
y
*b.y;

25 
	}
}

27 
	$pö
(
x1
,
x2
,
x3
)

29 
y
=(
x1
-
x2
)*(x1-
x3
);

30  
	`zîo
(
y
)?0:y<0?1:-1;

31 
	}
}

33 
	$£gö
(
x1
,
x2
,
x3
,
x4
)

35 
a
=
	`pö
(
x1
,
x3
,
x4
),
b
ıö(
x2
,x3,x4);

36  (
a
==0&&
b
==0)||a>0||b>0;

37 
	}
}

39 
	$gë
(
node
 &
a
,
si
)

41 
x
,
y
;

42 
x
=
a
.x*
	`cos
(
si
)-a.
y
*
	`sö
(si);

43 
y
=
a
.
x
*
	`sö
(
si
)+a.y*
	`cos
(si);

44 
a
.
x
=x,a.
y
=y;

45 
	}
}

47 
	$maö
()

49 
	`sˇnf
("%lf%lf%lf%lf",&
s
[0].
a
.
x
,&s[0].a.
y
,&s[0].
b
.x,&s[0].b.y)+1)

51 
	`sˇnf
("%lf%lf%lf%lf",&
s
[1].
a
.
x
,&s[1].a.
y
,&s[1].
b
.x,&s[1].b.y);

52 
i
=0; i<2; i++)

53 
v
[
i
]=
s
[i].
	`gëv
();

54 if(
	`zîo
(
	`xmu…
(
v
[0],v[1])))

56 
x
=
v
[0].x,
y
=v[0].y;

57 if(!
	`zîo
(
y
))

59 
si
=
	`©™2
(
y
,
x
);

60 if(
si
<-
pi
/2)

61 
si
+=
pi
;

62 if(
si
>
pi
/2)

63 
si
-=
pi
;

64 
si
=-si;

65 
i
=0; i<2; i++)

67 
	`gë
(
s
[
i
].
a
,
si
);

68 
	`gë
(
s
[
i
].
b
,
si
);

71 if(
	`£gö
(
s
[0].
a
.
x
,s[0].
b
.x,s[1].a.x,s[1].b.x)||segin(s[1].a.x,s[1].b.x,s[0].a.x,s[0].b.x))

72 
	`puts
("-1");

74 
	`puts
("0");

78 
node
 
nv
;

79 
nv
.
x
=
v
[0].
y
,nv.y=-v[0].x;

80 
ml
=
	`pmu…
(
v
[1],
nv
);

81 
ml
/=
v
[1].
	`Àn
();

82 
ml
/=
nv
.
	`Àn
();

83 
bün
=
	`Ábs
(
v
[1].
	`Àn
()/
ml
);

84 
	`¥ötf
("%.12lf\n",
bün
*
v
[0].
	`Àn
());

88 
	}
}

	@problems/timus/timus_1928.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<utûôy
>

6 
usög
 
«me•a˚
 
	g°d
;

9 
	mMAXN
 = 10010

12 
	g∑ú
<, > 
	tpii
;

14 
	gn
, 
	gm
, 
	gk
;

15 
pii
 
	gf
[
MAXN
][2];

17 
pii
 
	$dp
(
x
, 
p
)

19 i‡(
x
 =0Ë 
	`pii
(0, 0);

20 i‡(
f
[
x
][
p
].
fú°
 != -1)  f[x][p];

22 i‡(
x
 - 
k
 < 0)

23 
f
[
x
][
p
] = 
	`pii
(
m
,0);

25 
i
 = 1; i <
k
&&i<=
x
; i++) {

26 
pii
 
r
 = 
	`dp
(
x
 - 
i
, 
p
 ^ 1);

27 i‡(
r
.
£c⁄d
 + 
i
 > 
f
[
x
][
p
].
fú°
) {

28 
f
[
x
][
p
] = 
	`pii
(
r
.
£c⁄d
 + 
i
,Ñ.
fú°
);

29 } i‡(
r
.
£c⁄d
 + 
i
 =
f
[
x
][
p
].
fú°
 &&Ñ.first < f[x][p].second) {

30 
f
[
x
][
p
] = 
	`pii
(
r
.
£c⁄d
 + 
i
,Ñ.
fú°
);

34  
f
[
x
][
p
];

35 
	}
}

37 
	$maö
()

39 ~
	`sˇnf
("%d%d%d", &
n
, &
m
, &
k
)) {

40 
	`mem£t
(
f
, 0xff,  f);

41 
pii
 
r
 = 
	`dp
(
n
, 0);

42 
	`¥ötf
("%d %d\n", 
r
.
fú°
,Ñ.
£c⁄d
);

46 
	}
}

	@problems/timus/timus_1929.cpp

1 
	~<c°dio
>

3 
	$c
(
n
)

5 if(
n
<=1)  0;

6  
n
*(n-1)/2;

7 
	}
}

9 
	$maö
()

11 
n
,
èg
,
m
;

12 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

14 
èg
=0;

15 
i
=0; i<
n
; i++)

17 
x
;

18 
	`sˇnf
("%d",&
x
);

19 if(
x
==1)

20 
èg
=1;

22 
ªt
=0;

23 if(
m
<
n
/3)

24 
ªt
=0;

25 if(
èg
)

27 if(
m
==
n
/3)

28 
ªt
=
	`c
(
n
-
m
);

29 if(
m
==
n
/3+1)

30 
ªt
=
	`c
(
n
-1)-c(
m
-1);

32 
ªt
=
	`c
(
n
-1);

36 if(
m
==
n
/3)

37 
ªt
=
m
*(
n
-m-1);

39 
ªt
=
	`c
(
n
-1)-c“-
m
-1);

41 
	`¥ötf
("%d\n",
ªt
);

44 
	}
}

	@problems/zoj/3519.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<£t
>

4 
	#N
 511

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gmu…i£t
<> 
	g°
;

9 
	gmu…i£t
<>::
ôî©‹
 
ô
;

11 
	$maö
()

13 
n
,
x
;

14 
	`sˇnf
("%d%d",&
n
,&
x
)+1)

16 
°
.
	`˛ór
();

17 
i
=0; i<
n
; i++)

19 
x
;

20 
	`sˇnf
("%d",&
x
);

21 
°
.
	`ö£π
(
x
);

25 
ô
=
	`uµî_bound
(
°
.
	`begö
(),°.
	`íd
(),
x
);

26 if(
ô
!=
°
.
	`íd
())

28 
x
+=2;

29 
°
.
	`îa£
(
ô
);

34 
	`¥ötf
("%d\n",
x
+
°
.
	`size
());

37 
	}
}

	@problems/zoj/zoj_3497.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 30

	)

5 
	#S
 10100

	)

7 
	gid
[
N
][N],
	gm©
[N][N],
	gt›
,
	gnow
[N][N],
	gªt
[N][N],
	gtmp
[N][N];

9 
	$show
(
m©
[][
N
])

11 
i
=0; i<
t›
; i++,
	`puts
(""))

12 
j
=0; j<
t›
; j++)

13 
	`¥ötf
("%d ",
m©
[
i
][
j
]);

14 
	}
}

16 
	$mul
(
c
[][
N
],
a
[][N],
b
[][N])

18 
	`mem£t
(
tmp
,0,(tmp));

19 
i
=0; i<
t›
; i++)

20 
j
=0; j<
t›
; j++)

21 
k
=0; k<
t›
; k++)

22 
tmp
[
i
][
j
]+=
a
[i][
k
]*
b
[k][j];

23 
i
=0; i<
t›
; i++)

24 
j
=0; j<
t›
; j++)

25 if(
tmp
[
i
][
j
])

26 
c
[
i
][
j
]=1;

28 
c
[
i
][
j
]=0;

29 
	}
}

31 
	$sﬁve
(
x
)

33 
	`mem£t
(
ªt
,0,(ret));

34 
i
=0; i<
t›
; i++)

35 
ªt
[
i
][i]=1;

36 ; 
x
;)

38 if(
x
&1)

40 
	`mul
(
ªt
,ªt,
now
);

42 
	`mul
(
now
,now,now);

43 
x
>>=1;

45 
	}
}

47 
	$maö
()

49 
ts
,
m
,
n
;

50 
	`sˇnf
("%d",&
ts
);

51 ; 
ts
--;)

53 
	`mem£t
(
m©
,0,(mat));

54 
	`sˇnf
("%d%d\n",&
m
,&
n
);

55 
t›
=0;

56 
i
=1; i<=
m
; i++)

57 
j
=1; j<=
n
; j++)

58 
id
[
i
][
j
]=
t›
++;

59 
i
=1; i<=
m
; i++)

60 
j
=1; j<=
n
; j++)

62 
	`sˇnf
(" (");

63 
k
=0; k<4; k++)

65 
x
,
y
;

66 
	`sˇnf
("%*c%d%*c%d%*c",&
x
,&
y
);

67 if(
k
+1<4)

68 
	`sˇnf
("%*c");

69 
m©
[
id
[
i
][
j
]][id[
x
][
y
]]=1;

71 
	`sˇnf
(")");

73 
i
=0; i<
t›
; i++)

74 
m©
[
id
[
m
][
n
]][
i
]=0;

75 
qs
;

76 
	`sˇnf
("%d",&
qs
);

77 
i
=0; i<
qs
; i++)

79 
x
;

80 
	`sˇnf
("%d",&
x
);

81 
u
=0; u<
t›
; u++)

82 
v
=0; v<
t›
; v++)

83 
now
[
u
][
v
]=
m©
[u][v];

84 
	`sﬁve
(
x
);

85 if(
ªt
[0][
id
[
m
][
n
]])

87 
˙t
=0;

88 
j
=0; j<
t›
; j++)

89 if(
ªt
[0][
j
])

90 
˙t
++;

91 if(
˙t
>1)

92 
	`puts
("Maybe");

94 
	`puts
("True");

97 
	`puts
("False");

99 
	`puts
("");

102 
	}
}

	@problems/zoj/zoj_3498.cpp

1 
	~<c°dio
>

3 
	$dfs
(
n
)

5 if(
n
==1)

7  
	`dfs
(
n
/2)+1;

8 
	}
}

10 
	$maö
()

12 
ts
;

13 
	`sˇnf
("%d",&
ts
);

14 
ts
--)

16 
n
;

17 
	`sˇnf
("%d",&
n
);

18 
	`¥ötf
("%d\n",
	`dfs
(
n
));

21 
	}
}

	@problems/zoj/zoj_3499.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 500

	)

5 
usög
 
«me•a˚
 
	g°d
;

6 
	gd©
[
N
];

8 
	$cmp
(
a
,
b
){ á<b; 
	}
}

10 
	$maö
()

12 
n
,
ts
;

13 
	`sˇnf
("%d",&
ts
);

14 ; 
ts
--;)

16 
	`sˇnf
("%d",&
n
);

17 
i
=0; i<
n
; i++)

18 
	`sˇnf
("%lf",&
d©
[
i
]);

19 
	`s‹t
(
d©
,d©+
n
,
cmp
);

20 
ªt
;

21 if(
n
&1)

22 
ªt
=
d©
[
n
/2];

24 
ªt
=(
d©
[
n
/2]+dat[n/2-1])/2;

25 
	`¥ötf
("%.3lf\n",
ªt
);

28 
	}
}

	@problems/zoj/zoj_3500.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<cm©h
>

5 
usög
 
«me•a˚
 
	g°d
;

6 c⁄° 
	gpi
=
acos
(-1);

8 
	$f
(
r
,
x
)

10  
pi
*
r
*r*
x
-1.0/3*pi*x*x*x;

11 
	}
}

13 
	$ˇl
(
x
,
y
,
z
)

15  
	`sqπ
(
x
*x+
y
*y+
z
*z);

16 
	}
}

18 
	scú
{ 
	mx
,
	my
,
	mz
,
	mr
; }
	gc
[2];

20 
	$cccs
(
r1
,
r2
,
d
)

22  (
r1
*r1+
d
*d-
r2
*r2)/(2*r1*d);

23 
	}
}

25 
	$maö
()

27 
ts
;

28 
	`sˇnf
("%d",&
ts
);

29 
ts
--)

31 
i
=0; i<2; i++)

32 
	`sˇnf
("%lf%lf%lf%lf",&
c
[
i
].
x
,&c[i].
y
,&c[i].
z
,&c[i].
r
);

33 
d
=
	`ˇl
(
c
[0].
x
-c[1].x,c[0].
y
-c[1].y,c[0].
z
-c[1].z);

34 
ªt
=0;

35 
i
=0; i<2; i++)

36 
ªt
+=4.0/3*
pi
*
c
[
i
].
r
*c[i].r*c[i].r;

37 if(
d
>=
c
[0].
r
+c[1].r)

41 if(
	`mö
(
c
[0].
r
,c[1].r)+
d
<=
	`max
(c[0].r,c[1].r))

43 
r
=
	`mö
(
c
[0].r,c[1].r);

44 
ªt
-=4.0/3*
pi
*
r
*r*r;

48 
º
=
	`f
(
c
[0].
r
,c[0].r)-f(c[0].r,c[0].r*
	`cccs
(c[0].r,c[1].r,
d
));

49 
º
+=
	`f
(
c
[1].
r
,c[1].r)-f(c[1].r,c[1].r*
	`cccs
(c[1].r,c[0].r,
d
));

50 
ªt
-=
º
;

52 
	`¥ötf
("%.2lf\n",
ªt
);

55 
	}
}

	@problems/zoj/zoj_3501.cpp

1 
	~<c°dio
>

2 
	~<io°ªam
>

3 
	~<Æg‹ôhm
>

4 
	~<°rög
>

5 
	#N
 10011

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
°rög
 
	gs
[5][9]={"I","II","III","IV","V","VI","VII","VIII","IX",

14 
	snode
{ 
°rög
 
	ms
; 
	mx
; }
	gno
[
N
];

16 
	$cmp
(
node
 
a
,nodê
b
){ á.
s
<b.s; 
	}
}

18 
	$dfs
(
x
,
i
,
l
)

20 if(
x
==0)

22 
	`dfs
(
x
/10,
i
,
l
+1);

23 
now
=
x
%10;

24 if(
now
==0)

26 
no
[
i
].
s
+=s[
l
][
now
-1];

27 
	}
}

29 
	$gë
(
i
)

31 
x
=
no
[
i
].x;

32 
	`dfs
(
x
,
i
,0);

33 
	}
}

35 
	$maö
()

37 
n
,
ts
;

38 
	`sˇnf
("%d",&
ts
);

39 
	`sˇnf
("%d",&
n
),
ts
--)

41 
i
=0; i<
n
; i++)

43 
	`sˇnf
("%d",&
no
[
i
].
x
);

44 
no
[
i
].
s
="";

45 
	`gë
(
i
);

47 
	`s‹t
(
no
,no+
n
,
cmp
);

53 
	`¥ötf
("%d",
no
[0].
x
);

54 
i
=1; i<
n
; i++)

55 
	`¥ötf
(" %d",
no
[
i
].
x
);

56 
	`puts
("");

59 
	}
}

	@problems/zoj/zoj_3502.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 2000

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
];

8 
	gm©
[12][12];

9 
	g‹d
[
N
];

11 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

13 
	$dfs
(
°
,
n
,
l
)

15 if(
dp
[
°
]>=0)

16  
dp
[
°
];

17 if(
°
==
	`B
(
n
)-1)

18  
dp
[
°
]=0;

19 
ªt
=-1;

20 
p
=0;

21 
i
=0; i<
n
; i++)

23 if(
°
&
	`B
(
i
))

25 
p
=
m©
[
i
][i];

26 
j
=0; j<
n
; j++)

27 if(
°
&
	`B
(
j
))

28 
p
=
	`max
’,
m©
[
j
][
i
]);

29 
x
=
	`dfs
(
°
+
	`B
(
i
),
n
,
l
+1)+
p
;

30 if(
ªt
<
x
)

33 
ªt
=
x
,
‹d
[
°
]=
i
;

36  
dp
[
°
]=
ªt
;

37 
	}
}

39 
	$show
(
°
,
n
)

41 if(
°
==
	`B
(
n
)-1)

43 
nx
=
‹d
[
°
];

44 
	`¥ötf
("%c",'A'+
nx
);

45 
	`show
(
°
+
	`B
(
nx
),
n
);

46 
	}
}

48 
	$maö
()

50 
ts
,
n
;

51 
	`sˇnf
("%d",&
ts
);

52 
ts
--)

54 
	`sˇnf
("%d",&
n
);

55 
i
=0; i<
	`B
(
n
)+1; i++)

56 
dp
[
i
]=-1;

57 
i
=0; i<
n
; i++)

58 
j
=0; j<
n
; j++)

60 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

62 
	`¥ötf
("%.2lf\n",0.01*
	`dfs
(0,
n
,0));

63 
	`show
(0,
n
);

64 
	`puts
("");

67 
	}
}

	@problems/zoj/zoj_3504.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<cm©h
>

4 
	~<s°ªam
>

5 
	~<°rög
>

6 
	~<io°ªam
>

7 
	~<ˇs£π
>

9 
usög
 
«me•a˚
 
	g°d
;

11 
	snode
{ 
	mx
,
	my
; };

12 
	gve˘‹
<
	gnode
> 
	gvec
[2];

13 
°rög
 
	g°r
;

15 
	$Àn
(
x
,
y
)

17  
	`sqπ
(
x
*x+
y
*y);

18 
	}
}

20 
	$gë
(
i
)

22 
i°rög°ªam
 
	`iss
(
°r
);

23 
node
 
now
;

24 
x
;

25 
iss
>>
x
>>
now
.x>>x>>now.
y
>>x)

26 
vec
[
i
].
	`push_back
(
now
);

27 
	}
}

29 
	$maö
()

31 
p
;

32 
	`gëlöe
(
cö
,
°r
))

34 
i
=0; i<2; i++)

35 
vec
[
i
].
	`˛ór
();

36 
	`gë
(0);

37 
	`gëlöe
(
cö
,
°r
);

38 
	`gë
(1);

39 
	`sˇnf
("%lf",&
p
);

40 
x
;

41 (
x
=
	`gëch¨
())!='\n');

42 
	`as£π
(
vec
[0].
	`size
()==vec[1].size());

43 
ªt
=0;

44 
size_t
 
i
=0; i<
vec
[0].
	`size
(); i++)

45 
ªt
+=
	`pow
(
	`Àn
(
vec
[0][
i
].
x
-vec[1][i].x,vec[0][i].
y
-vec[1][i].y),
p
);

46 
	`¥ötf
("%.16lf\n",
	`pow
(
ªt
,1.0/
p
));

49 
	}
}

	@problems/zoj/zoj_3505.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<c°rög
>

5 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

8 
	gs
[24];

9 
LL
 
	gdp
[24],
	gthªe
[24];

10 
	gve˘‹
<> 
	gvec
;

12 
	$öô
()

14 
	`mem£t
(
dp
,0,(dp));

15 
dp
[0]=1;

16 
thªe
[0]=1;

17 
i
=1; i<24; i++)

18 
thªe
[
i
]=three[i-1]*3;

19 
i
=1; i<24; i++)

20 
dp
[
i
]=
thªe
[i]+dp[i-1];

21 
	}
}

23 
LL
 
	$gë
(
n
)

25 
l
=
	`°æí
(
s
);

26 
LL
 
ªt
=0;

27 
¥e
=0;

28 
i
=0; i<
l
; i++)

30 
LL
 
x
;

31 
c
=0;

32 
j
=0; j<
s
[
i
]-'0'; j++)

34 if(
j
==
¥e
)

36 
c
++;

38 
x
=
c
*
dp
[
n
-
i
-1];

39 
¥e
=
s
[
i
]-'0';

40 
ªt
+=
x
+1;

42  
ªt
;

43 
	}
}

45 
	g¨r
[10];

47 
	$show
(
n
,
LL
 
x
)

49 
vec
.
	`˛ór
();

50 
¥e
=0;

51 
i
=0; i<
n
&&
x
>0; i++)

53 
c
=0;

54 
j
=0; j<4; j++)

56 if(
j
==
¥e
)

58 
¨r
[
c
++]=
j
;

60 
now
=
x
/
dp
[
n
-
i
-1],
mod
=x%dp[n-i-1];

62 if(
mod
==0)

63 
now
--,
mod
=
dp
[
n
-
i
-1];

64 
vec
.
	`push_back
(
¨r
[
now
]);

65 
¥e
=
¨r
[
now
];

66 
x
=
mod
-1;

68 
i
=0; i<
vec
.
	`size
(); i++)

69 
	`¥ötf
("%c",
vec
[
i
]+'0');

70 
	`puts
("");

71 
	}
}

73 
	$maö
()

75 
n
;

76 
LL
 
k
;

77 
	`öô
();

78 
	`sˇnf
("%d%Œd",&
n
,&
k
)+1)

80 
	`sˇnf
("%s",
s
);

81 
LL
 
id
=
	`gë
(
n
);

82 
id
-=
k
;

83 
	`show
(
n
,
id
);

86 
	}
}

	@problems/zoj/zoj_3506_classic_tree_dp.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 1025

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gdp
[
N
][25],
	gvÆ
[N],
	gn
,
	gk
,
	g˙t
[N];

10 
	gve˘‹
<> 
	gli°
[
N
];

12 
	$dfs
(
now
,
p
)

14 
˙t
[
now
]=1;

15 
dp
[
now
][0]=
vÆ
[now];

16 
size_t
 
i
=0; i<
li°
[
now
].
	`size
(); i++)

18 
to
=
li°
[
now
][
i
];

19 if(
to
==
p
) ;

20 
	`dfs
(
to
,
now
);

21 
˙t
[
now
]+=˙t[
to
];

22 
u
=
k
; u>=0; u--)

24 
dp
[
now
][
u
]+=dp[
to
][0];

25 
v
=1; v<=
u
; v++)

27 
dp
[
now
][
u
]=
	`mö
(dp[now][u],dp[
to
][
v
]+dp[now][u-v]);

29 
v
=1; v<=
˙t
[
to
]&&v<=
u
; v++)

30 
dp
[
now
][
u
]=
	`mö
(dp[now][u],dp[now][u-
v
]);

33 
	}
}

35 
	$sﬁve
()

37 
ªt
;

38 
i
=0; i<
n
; i++)

39 
	`fûl
(
dp
[
i
],dp[i]+25,
öf
);

40 
	`dfs
(0,-1);

41 
ªt
=
dp
[0][
k
];

42 
i
=1; i<
n
; i++)

43 
j
=1; j<=
n
-
˙t
[
i
]&&j<=
k
; j++)

44 
ªt
=
	`mö
‘ë,
dp
[
i
][
k
-
j
]);

45  
ªt
;

46 
	}
}

48 
	$maö
()

50 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

52 
i
=0; i<
n
; i++)

53 
li°
[
i
].
	`˛ór
();

54 
i
=0; i<
n
; i++)

55 
	`sˇnf
("%d",&
vÆ
[
i
]);

56 
i
=0; i<
n
-1; i++)

58 
x
,
y
;

59 
	`sˇnf
("%d%d",&
x
,&
y
);

60 
x
--,
y
--;

61 
li°
[
x
].
	`push_back
(
y
);

62 
li°
[
y
].
	`push_back
(
x
);

64 
	`¥ötf
("%d ",
	`sﬁve
());

65 
i
=0; i<
n
; i++)

66 
vÆ
[
i
]=-val[i];

67 
	`¥ötf
("%d\n",-
	`sﬁve
());

70 
	}
}

	@problems/zoj/zoj_3508.cpp

1 
	~<c°dio
>

2 
	~<£t
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	#N
 100010

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	ssﬁ
{ 
	mx
,
	mèg
,
	mi
,
	ml
; }
	gno
[
N
];

10 
	snode
{ 
	mx
,
	mi
;

11 
‰õnd
 
	m›î©‹
 <(
node
 
	ma
,nodê
	mb
){ á.
	mx
==
b
.
x
?
a
.
i
<b.i:a.x<b.x; }

14 
	$cmp
(
sﬁ
 
a
,sﬁ 
b
){ á.
x
==b.x?a.
èg
<b.èg:a.x<b.x; 
	}
}

15 
	gt›
;

16 
	gvis
[
N
];

17 
	g£t
<
	gnode
> 
	g°
;

18 
	g£t
<
	gnode
>::
ôî©‹
 
ô
;

20 
	$add
(
x
,
èg
,
i
)

22 
no
[
t›
].
x
=x,no[t›].
èg
Òag,no[t›].
i
=i;

23 
t›
++;

24 
	}
}

26 
	$maö
()

28 
n
,
m
;

29 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

31 
t›
=0;

32 
	`mem£t
(
vis
,0,(vis));

33 
°
.
	`˛ór
();

34 
i
=0; i<
n
; i++)

36 
x
,
y
;

37 
	`sˇnf
("%d%d",&
x
,&
y
);

38 
	`add
(
x
,-1,
i
);

39 
no
[
t›
-1].
l
=
y
;

40 
	`add
(
y
,1,
i
);

41 
no
[
t›
-1].
l
=
x
;

43 
i
=0; i<
m
; i++)

45 
x
;

46 
	`sˇnf
("%d",&
x
);

47 
	`add
(
x
,0,-1);

49 
	`s‹t
(
no
,no+
t›
,
cmp
);

50 
ªt
=0;

52 
i
=0; i<
t›
; i++)

54 if(
no
[
i
].
èg
==0)

56 
ô
=
°
.
	`begö
(); it!=°.
	`íd
(); it++)

58 if(
ô
->
x
<
no
[
i
].x)

59 
°
.
	`îa£
(
ô
);

63 if(
°
.
	`size
()==0)

65 
ô
=
°
.
	`begö
();

66 
ªt
++;

67 
vis
[
ô
->
i
]=1;

68 
°
.
	`îa£
(
ô
);

70 if(
no
[
i
].
èg
==-1)

72 
node
 
now
;

73 
now
.
i
=
no
[i].i;

74 
now
.
x
=
no
[
i
].
l
;

75 
°
.
	`ö£π
(
now
);

79 if(
vis
[
no
[
i
].i])

81 
node
 
now
;

82 
now
.
i
=
no
[i].i;

83 
now
.
x
=
no
[
i
].x;

84 
°
.
	`îa£
(
now
);

87 
	`¥ötf
("%d\n",
ªt
);

90 
	}
}

	@problems/zoj/zoj_3511.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

4 
	~<£t
>

5 
	#N
 10011

	)

6 
	#pii
 
∑ú
<,>

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	g∑ú
<,
	gpii
> 
	g£g
[
N
];

11 
	gli°
[
N
];

13 
	$gao
(
l
,
r
)

15 
ªt
=1;

16 ; 
l
!=
r
; )

17 
l
=
li°
[l],
ªt
++;

18  
ªt
;

19 
	}
}

21 
	$maö
()

23 
n
,
m
;

24 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

26 
i
=0; i<
n
; i++)

27 
li°
[
i
]=i+1;

28 
li°
[
n
-1]=0;

29 
i
=0; i<
m
; i++)

31 
x
,
y
;

32 
	`sˇnf
("%d%d",&
x
,&
y
);

33 
x
--,
y
--;

34 if(
x
>
y
Ë
	`sw≠
(x,y);

35 
£g
[
i
].
fú°
=
y
-
x
;

36 
£g
[
i
].
£c⁄d
.
fú°
=
x
;

37 
£g
[
i
].
£c⁄d
.£c⁄d=
y
;

38 if(
y
-
x
>
n
+x-y)

40 
£g
[
i
].
fú°
=
n
+
x
-
y
;

41 
	`sw≠
(
£g
[
i
].
£c⁄d
.
fú°
,seg[i].second.second);

45 
	`s‹t
(
£g
,£g+
m
);

46 
ªt
=0,
À·
=
n
,
tmp
;

47 
i
=0; i<
m
; i++)

49 
ªt
=
	`max
‘ë,
tmp
=
	`gao
(
£g
[
i
].
£c⁄d
.
fú°
,seg[i].second.second));

50 
À·
-=
tmp
-2;

51 
li°
[
£g
[
i
].
£c⁄d
.
fú°
]=seg[i].second.second;

53 
	`¥ötf
("%d\n",
	`max
(
ªt
,
À·
));

56 
	}
}

	@problems/zoj/zoj_3516.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	~<ve˘‹
>

5 
	#N
 10011

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	gvÆ
[
N
];

10 
	gve˘‹
<> 
	gå
[
N
];

12 
	gdp
[
N
][3],
	g˙t
[N],
	gcc
[N],
	gq
[10];

13 
	$cmp
(
a
,
b
){ á>b; 
	}
}

15 
	$dfs
(
now
,
p
)

17 
˙t
[
now
]=
cc
[now]=1;

18 
dp
[
now
][0]=
vÆ
[now];

19 
i
=0; i<
å
[
now
].
	`size
(); i++)

21 
to
=
å
[
now
][
i
];

22 if(
to
==
p
) ;

23 
	`dfs
(
to
,
now
);

24 
˙t
[
now
]+=˙t[
to
];

25 
t›
=0;

26 
j
=0; j<
cc
[
to
]; j++)

27 
q
[
t›
++]=
dp
[
to
][
j
];

28 
j
=0; j<
cc
[
now
]; j++)

29 
q
[
t›
++]=
dp
[
now
][
j
];

30 
	`s‹t
(
q
,q+
t›
,
cmp
);

31 
j
=0; j<
t›
&&j<3; j++)

32 
dp
[
now
][
j
]=
q
[j];

33 
cc
[
now
]=
	`mö
(3,
t›
);

35 
	}
}

37 
	$maö
()

39 
n
;

40 
	`sˇnf
("%d",&
n
)+1)

42 
i
=0; i<
n
; i++)

43 
å
[
i
].
	`˛ór
();

44 
	`sˇnf
("%d",&
vÆ
[0]);

45 
i
=1; i<
n
; i++)

47 
x
,
y
;

48 
	`sˇnf
("%d%d",&
x
,&
y
);

49 
vÆ
[
i
]=
y
;

50 
å
[
i
].
	`push_back
(
x
);

51 
å
[
x
].
	`push_back
(
i
);

53 
	`mem£t
(
˙t
,0,(cnt));

54 
	`mem£t
(
cc
,0,(cc));

55 
	`dfs
(0,-1);

56 
m
;

57 
	`sˇnf
("%d",&
m
);

58 
i
=0; i<
m
; i++)

60 
x
;

61 
	`sˇnf
("%d",&
x
);

62 if(
cc
[
x
]<3)

63 
	`puts
("-1");

66 
	`¥ötf
("%d",
dp
[
x
][0]);

67 
j
=1; j<3; j++)

68 
	`¥ötf
(" %d",
dp
[
x
][
j
]);

69 
	`puts
("");

74 
	}
}

	@problems/zoj/zoj_3523.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	~<°rög
>

5 
	~<io°ªam
>

6 
	#öf
 0x3fffffff

	)

7 
	#N
 101

	)

9 
usög
 
«me•a˚
 
	g°d
;

11 
	snode
{ 
°rög
 
	ms
; 
	mi
; }
	gno
[
N
];

13 
	$cmp
(
node
 
a
,nodê
b
)

15  
a
.
s
<
b
.s;

16 
	}
}

18 
	gss
[
N
];

20 
	gm
,
	gn
,
	gdp
[
N
][N],
	gd©
[N];

22 
	$dfs
(
l
,
mx
)

24 if(
dp
[
l
][
mx
]>=0)

25  
dp
[
l
][
mx
];

26 if(
l
==
n
)

27  
dp
[
l
][
mx
]=0;

28 
ªt
=
öf
;

29 if(
d©
[
l
]>
mx
)

31 
ªt
=
	`mö
‘ë,
	`dfs
(
l
+1,
d©
[l]));

32 
ªt
=
	`mö
‘ë,
	`dfs
(
l
+1,
mx
)+1);

35 
ªt
=
	`dfs
(
l
+1,
mx
)+1;

36  
dp
[
l
][
mx
]=
ªt
;

37 
	}
}

39 
	$maö
()

41 
	`sˇnf
("%d%d",&
m
,&
n
)+1)

43 
	`gëch¨
();

44 
ªt
=0;

45 
i
=0; i<
m
; i++)

47 
j
=0; j<
n
; j++)

49 
	`gës
(
ss
);

50 
no
[
j
].
s
=
	`°rög
(
ss
);

51 
no
[
j
].
i
=j;

53 
	`s‹t
(
no
,no+
n
,
cmp
);

54 
i
=0; i<
n
; i++)

55 
d©
[
i
]=
no
[i].i+1;

56 
	`mem£t
(
dp
,-1,(dp));

57 
ªt
+=
	`dfs
(0,0);

59 
	`¥ötf
("%d\n",
ªt
);

61 
	}
}

	@problems/zoj/zoj_3527.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#N
 100100

	)

6 
	tLL
;

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	ma
,
	mb
,
	mp
; }
	gno
[
N
];

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
N
<<1];

11 
	gvis
[
N
],
	grög
[N],
	gok
,
	gT
,
	gπ
,
	gri
,
	gt›
,
	gli°
[N];

12 
LL
 
	gdp
[
N
][2][2];

13 
	gn
;

15 
	$ö£π
(
f
,
t
)

17 
e
[
t›
].
f
=f,e[t›].
t
=t;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
	$dfs
(
now
)

23 
vis
[
now
]=
T
;

24 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

26 
to
=
e
[
i
].
t
;

27 if(
vis
[
to
]==
T
)

29 
ok
=1;

30 
rög
[
now
]=1;

33 if(
vis
[
to
]) ;

34 
	`dfs
(
to
);

35 if(
ok
)

37 
rög
[
now
]=1;

41 
	}
}

43 
LL
 
	$gao
(
now
,
¥e
,
p
,
Àn
)

45 if(
Àn
>100000) ;;);

46 if(
dp
[
now
][
¥e
][
p
]>=0)

47  
dp
[
now
][
¥e
][
p
];

48 
LL
 
ªt
=0,
add
=0;

49 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

51 if(
e
[
i
].
t
==
π
) ;

52 
add
+=
	`gao
(
e
[
i
].
t
,0,
p
,
Àn
+1);

54 
ªt
=
	`max
‘ë,
add
);

55 
add
=
no
[
now
].
a
;

56 if(
p
>0&&
now
==
ri
)

57 
add
+=
no
[
π
].
b
;

58 if(
¥e
)

59 
add
+=
no
[
now
].
b
;

60 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

62 if(
e
[
i
].
t
==
π
) ;

63 
add
+=
	`gao
(
e
[
i
].
t
,1,
p
==0?
now
==
π
:p,
Àn
+1);

65 
ªt
=
	`max
‘ë,
add
);

66  
dp
[
now
][
¥e
][
p
]=
ªt
;

67 
	}
}

69 
	$fûl
(
now
)

71 
vis
[
now
]=1;

72 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

74 
to
=
e
[
i
].
t
;

75 if(!
vis
[
to
])

76 
	`fûl
(
to
);

78 
	}
}

80 
	$maö
()

82 
	`sˇnf
("%d",&
n
)+1)

84 
t›
=0;

85 
i
=0; i<
n
; i++)

86 
li°
[
i
]=-1;

87 
i
=0; i<
n
; i++)

89 
	`sˇnf
("%d%d%d",&
no
[
i
].
a
,&no[i].
b
,&no[i].
p
);

90 
no
[
i
].
p
--;

91 
	`ö£π
(
no
[
i
].
p
,i);

93 
	`mem£t
(
vis
,0,(vis));

94 
	`mem£t
(
rög
,0,(ring));

95 
T
=1;

96 
i
=0; i<
n
; i++,
T
++)

97 if(!
vis
[
i
])

99 
ok
=0;

100 
	`dfs
(
i
);

102 
	`mem£t
(
vis
,0,(vis));

103 
	`mem£t
(
dp
,-1,(dp));

104 
LL
 
ªt
=0;

105 
i
=0; i<
n
; i++)

107 if((!
vis
[
i
])&&
rög
[i])

109 
π
=
i
,
ri
=
no
[i].
p
;

110 
ªt
+=
	`gao
(
i
,0,0,0);

111 
	`fûl
(
i
);

114 
	`¥ötf
("%Œd\n",
ªt
);

117 
	}
}

	@problems/zoj/zoj_3541.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#N
 220

	)

5 
	#öf
 0x3ffffff

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gdp
[
N
][N][2],
	gd
[N],
	gt
[N],
	gn
,
	g√xt
[N][N][2];

10 
	$dfs
(
l
,
r
,
èg
)

12 
ªt
=
öf
,
tmp
;

13 if(
dp
[
l
][
r
][
èg
]>=0)

14  
dp
[
l
][
r
][
èg
];

15 if(
l
==
r
)

16  
dp
[
l
][
r
][
èg
]=0;

17 if(
èg
==0)

19 
tmp
=
	`dfs
(
l
+1,
r
,0)+
d
[l+1]-d[l];

20 if(
tmp
<
t
[
l
])

22 if(
ªt
>
tmp
)

24 
ªt
=
tmp
;

25 
√xt
[
l
][
r
][
èg
]=0;

28 
tmp
=
	`dfs
(
l
,
r
-1,1)+
d
[r]-d[l]+d[r]-d[r-1];

29 if(
tmp
-
d
[
r
]+d[
l
]<
t
[r])

31 if(
ªt
>
tmp
)

33 
ªt
=
tmp
;

34 
√xt
[
l
][
r
][
èg
]=1;

40 
tmp
=
	`dfs
(
l
+1,
r
,0)+
d
[r]-d[l]+d[l+1]-d[l];

41 if(
tmp
-
d
[
r
]+d[
l
]<
t
[l])

43 if(
ªt
>
tmp
)

45 
ªt
=
tmp
;

46 
√xt
[
l
][
r
][
èg
]=0;

49 
tmp
=
	`dfs
(
l
,
r
-1,1)+
d
[r]-d[r-1];

50 if(
tmp
<
t
[
r
])

52 if(
ªt
>
tmp
)

54 
ªt
=
tmp
;

55 
√xt
[
l
][
r
][
èg
]=1;

59  
dp
[
l
][
r
][
èg
]=
ªt
;

60 
	}
}

62 
	$show
(
l
,
r
,
èg
)

64 if(
l
==
r
)

66 
	`¥ötf
("%d\n",
l
);

70 if(
√xt
[
l
][
r
][
èg
]==0)

72 
	`¥ötf
("%d ",
l
);

73 
	`show
(
l
+1,
r
,0);

77 
	`¥ötf
("%d ",
r
);

78 
	`show
(
l
,
r
-1,1);

81 
	}
}

83 
	$maö
()

85 
l
,
r
;

86 
	`sˇnf
("%d",&
n
)!=
EOF
)

88 
i
=1; i<=
n
; i++)

89 
	`sˇnf
("%d",&
t
[
i
]);

90 
i
=1; i<=
n
; i++)

91 
	`sˇnf
("%d",&
d
[
i
]);

92 
	`mem£t
(
dp
,-1,(dp));

93 
	`dfs
(1,
n
,0);

94 
	`dfs
(1,
n
,1);

95 if(
dp
[1][
n
][0]>=
öf
&&dp[1][n][1]>=inf)

96 
	`puts
("Mission Impossible");

99 if(
dp
[1][
n
][0]<
öf
)

100 
	`show
(1,
n
,0);

102 
	`show
(1,
n
,1);

106 
	}
}

	@problems/zoj/zoj_3549.cpp

1 
	~<c°dio
>

2 
	#MOD
 1000000000000000LL

	)

3 
	tLL
;

5 
LL
 
	$mul
(
LL
 
a
,LL 
b
)

7 
LL
 
ªt
=0;

8 ; 
b
; b>>=1)

10 if(
b
&1)

11 
ªt
=‘ë+
a
)%
MOD
;

12 
a
=◊+a)%
MOD
;

14  
ªt
;

15 
	}
}

17 
LL
 
	$expmul
(
LL
 
a
,LL 
b
)

19 
LL
 
ªt
=1;

20 ; 
b
; )

22 if(
b
&1)

23 
ªt
=
	`mul
‘ë,
a
);

24 
a
=
	`mul
(a,a);

25 
b
>>=1;

27  
ªt
;

28 
	}
}

30 
	$maö
()

32 
m
,
n
;

33 
	`sˇnf
("%d%d",&
m
,&
n
)!=
EOF
)

35 
LL
 
ªt
=0;

36 
i
=1; i<=
m
; i++)

37 
ªt
=‘ë+
	`expmul
(
i
,
n
))%
MOD
;

38 
r
=0;

39 ; 
ªt
%10==0;)

40 
ªt
/=10,
r
++;

41 
	`¥ötf
("%d\n",
r
);

44 
	}
}

	@problems/zoj/zoj_3551.cpp

1 
	~<c°dio
>

2 
	#N
 100011

	)

4 
	gdp
[
N
];

6 
	$maö
()

8 
ts
,
n
;

9 
p
;

10 
	`sˇnf
("%d",&
ts
);

11 ; 
ts
--;)

13 
	`sˇnf
("%d%lf",&
n
,&
p
);

14 
dp
[0]=0;

15 
i
=1; i<
n
; i++)

17 
dp
[
i
]=dp[i-1]+(1.0*
n
*“-1)/2.0)/(1.0*i*“-i)*
p
);

19 
	`¥ötf
("%.3lf\n",
dp
[
n
-1]);

22 
	}
}

	@problems/zoj/zoj_3556.cpp

1 
	~<c°dio
>

2 
	#MOD
 1000000007

	)

3 
	tLL
;

5 
LL
 
	$ˇl
(
LL
 
a
,LL 
b
)

7 
LL
 
ªt
=1;

8 if(
a
<0Ëa+=
MOD
;

9 ; 
b
;)

11 if(
b
&1)

12 
ªt
Ùë*
a
%
MOD
;

13 
a
˜*a%
MOD
;

14 
b
>>=1;

16  
ªt
;

17 
	}
}

19 
	$maö
()

21 
n
,
k
;

22 
	`sˇnf
("%d%d",&
n
,&
k
)+1)

24 
	`¥ötf
("%Œd\n",
	`ˇl
(ˇl(2,
k
)-1,
n
));

27 
	}
}

	@problems/zoj/zoj_3557.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1000001

	)

4 
	tLL
;

5 
	gn
,
	gm
,
	gmod
;

7 
LL
 
	$expmul
(
LL
 
a
,LL 
b
)

9 
LL
 
ªt
=1;

10 ; 
b
;)

12 if(
b
&1)

13 
ªt
Ùë*
a
%
mod
;

14 
a
˜*a%
mod
;

15 
b
>>=1;

17  
ªt
;

18 
	}
}

20 
LL
 
	$comb
(
LL
 
a
,LL 
b
)

22 if(
a
<
b
)  0;

23 
LL
 
ªt
=1;

24 
LL
 
up
,
dn
;

25 
c
=0;

26 
i
=1; i<=
b
; i++)

28 
up
=
a
-
i
+1;

29 
dn
=
i
;

30 ; 
up
%
mod
==0;Ë
c
++,up/=mod;

31 ; 
dn
%
mod
==0;Ë
c
--,dn/=mod;

32 
ªt
Ùë*
up
%
mod
*
	`expmul
(
dn
,mod-2)%mod;

34 if(
c
>0)  0;

35  
ªt
;

36 
	}
}

38 
	$maö
()

40 
LL
 
a
,
b
;

41 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
mod
)!=
EOF
)

43 
b
=
m
;

44 
a
=
n
-(
m
-1);

45 
	`¥ötf
("%Œd\n",
	`comb
(
a
,
b
));

48 
	}
}

	@problems/zoj/zoj_3558.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#MOD
 100000007

	)

4 
	tLL
;

5 
usög
 
«me•a˚
 
	g°d
;

7 
LL
 
	$ˇl
(
LL
 
l
,LL 
r
)

9  (
l
+
r
)*‘-l+1)/2%
MOD
;

10 
	}
}

12 
	$maö
()

14 
LL
 
n
,
sq
;

15 
	`sˇnf
("%Œd",&
n
)!=
EOF
)

17 
LL
 
ªt
=0;

18 
sq
=()
	`sqπ
(1.0*
n
);

19 
LL
 
d
=1; d<=
sq
; d++)

21 
LL
 
Œ
=
n
/(
d
+1)+1,
º
=n/d;

22 if(
º
==
n
)

23 
º
--;

24 if(
Œ
>
º
) ;

25 
LL
 
now
=((
d
*(d+1)/2%
MOD
*
	`ˇl
(
Œ
,
º
)%MOD-d*ˇl÷l,º)%MOD+d*
n
%MOD*(rr-ll+1)%MOD-d*d%MOD*cal(ll,rr)%MOD)+MOD)%MOD;

26 
ªt
=‘ë+
now
)%
MOD
;

28 
LL
 
l
=1;Ü<=
sq
&&l<=
n
-1;Ü++)

30 
LL
 
d
=
n
/
l
;

31 
LL
 
now
=((
d
*(d+1)/2%
MOD
*
l
-d*l+d*
n
-d*d%MOD*l)%MOD+MOD)%MOD;

32 
ªt
=‘ë+
now
)%
MOD
;

34 
LL
 
d
=
sq
;

35 
LL
 
Œ
=
n
/(
d
+1)+1,
º
=n/d;

36 
LL
 
l
=
Œ
;Ü<=
sq
&&l<=
n
-1&&l<=
º
;Ü++)

38 
LL
 
d
=
n
/
l
;

39 
LL
 
now
=((
d
*(d+1)/2%
MOD
*
l
-d*l+d*
n
-d*d%MOD*l)%MOD+MOD)%MOD;

40 
ªt
=(‘ë-
now
)%
MOD
+MOD)%MOD;

42 
	`¥ötf
("%Œd\n",
ªt
);

45 
	}
}

	@problems/zoj/zoj_3622.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

4 
usög
 
«me•a˚
 
	g°d
;

6 
	tLL
;

7 
LL
 
	$B
(
i
){  1LL<<i; 
	}
}

8 
LL
 
	gfive
[40];

10 
	$ˇl
(
n
)

12 
ªt
=0;

13 
i
=0; 
five
[i]<=
n
; i++)

15 
j
=
	`max
(
i
-3,0); j<=i+1; j++)

17 if(
five
[
i
]*
	`B
(
j
)<=
n
)

18 
ªt
++;

23  
ªt
;

24 
	}
}

26 
	$maö
()

28 
five
[0]=1;

29 
i
=1; i<40; i++)

30 
five
[
i
]=5*five[i-1];

31 
l
,
r
;

32 
	`sˇnf
("%d%d",&
l
,&
r
)+1)

33 
	`¥ötf
("%d\n",
	`ˇl
(
r
)-ˇl(
l
-1));

35 
	}
}

	@problems/zoj/zoj_3626.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#N
 111

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gve˘‹
<> 
	gli°
[
N
];

9 
	gvÆ
[
N
],
	gti
[N][N];

10 
	gdp
[
N
][N<<1];

11 
	gm
,
	gn
;

13 
	$dfs
(
now
,
p
)

15 
size_t
 
i
=0; i<
li°
[
now
].
	`size
(); i++)

17 
to
=
li°
[
now
][
i
];

18 if(
to
==
p
)

20 
	`dfs
(
to
,
now
);

21 
u
=
m
; u>=
ti
[
now
][
to
]; u--)

23 
v
=0; v<=
u
-
ti
[
now
][
to
]; v++)

25 
dp
[
now
][
u
]=
	`max
(dp[now][u],dp[
to
][
v
]+dp[now][u-v-
ti
[now][to]]);

29 
	}
}

31 
	$maö
()

33 
	`sˇnf
("%d",&
n
)+1)

35 
i
=0; i<
n
; i++)

37 
	`sˇnf
("%d",&
vÆ
[
i
]);

38 
li°
[
i
].
	`˛ór
();

40 
i
=0; i<
n
-1; i++)

42 
x
,
y
,
z
;

43 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

44 
x
--,
y
--;

45 
li°
[
x
].
	`push_back
(
y
);

46 
li°
[
y
].
	`push_back
(
x
);

47 
ti
[
x
][
y
]Òi[y][x]=
z
;

49 
k
;

50 
	`sˇnf
("%d%d",&
k
,&
m
);

51 
m
/=2;

52 
k
--;

53 
	`mem£t
(
dp
,0,(dp));

54 
i
=0; i<
n
; i++)

55 
j
=0; j<=
m
; j++)

56 
dp
[
i
][
j
]=
vÆ
[i];

57 
	`dfs
(
k
,-1);

58 
ªt
=0;

59 
i
=0; i<=
m
; i++)

60 
ªt
=
	`max
‘ë,
dp
[
k
][
i
]);

61 
	`¥ötf
("%d\n",
ªt
);

64 
	}
}

	@problems/zoj/zoj_3627.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 100010

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gd©
[
N
];

9 
LL
 
	gsum
[
N
],
	gªt
;

11 
	$ˇl
(
l
,
r
,
t
,
n
)

13 
ªt
=
	`max
‘ë,
sum
[
r
]-sum[
l
-1]);

14 
u
=0; u<=
t
; u++)

16 if(
l
-
u
<1)

18 
ªt
=
	`max
‘ë,
sum
[
	`mö
(
n
,max(
r
,r-
u
+
t
-u))]-sum[
l
-u-1]);

20 
u
=0; u<=
t
; u++)

22 if(
r
+
u
>
n
)

24 
ªt
=
	`max
‘ë,
sum
[
r
+
u
]-sum[max(0,
	`mö
(
l
,l-
t
+u+u-1))]);

26 
	}
}

28 
	$maö
()

30 
n
,
p
,
m
,
t
;

31 
	`sˇnf
("%d%d",&
n
,&
p
)+1)

33 
i
=1; i<=
n
; i++)

34 
	`sˇnf
("%Œd",&
d©
[
i
]);

35 
sum
[0]=0;

36 
i
=1; i<=
n
; i++)

37 
sum
[
i
]=sum[i-1]+
d©
[i];

38 
	`sˇnf
("%d%d",&
m
,&
t
);

39 if(
t
<=
m
/2)

40 
	`¥ötf
("%Œd\n",
sum
[
	`mö
(
p
+
t
,
n
)]-sum[
	`max
(p-t-1,0)]);

43 
ªt
=0;

44 if(
m
&1)

46 
	`ˇl
(
	`max
(
p
-
m
/2-1,1),
	`mö
’+m/2,
n
),
t
-m/2-1,n);

47 
	`ˇl
(
	`max
(
p
-
m
/2,1),
	`mö
’+m/2+1,
n
),
t
-m/2-1,n);

50 
	`ˇl
(
	`max
(
p
-
m
/2,1),
	`mö
’+m/2,
n
),
t
-m/2,n);

51 
	`¥ötf
("%Œd\n",
ªt
);

55 
	}
}

	@problems/zoj/zoj_3630.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<ve˘‹
>

4 
	#N
 111

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gd‚
[
N
],
	gID
,
	gmx
,
	gid
[N],
	glow
[N],
	gtime
,
	gt›
,
	g°
[N],
	gvis
[N];

9 
	gve˘‹
<> 
	gli°
[
N
];

11 
	$èr
(
now
)

13 
low
[
now
]=
d‚
[now]=
time
++;

14 
°
[++
t›
]=
now
;

15 
vis
[
now
]=1;

16 
i
=0; i<
li°
[
now
].
	`size
(); i++)

18 
to
=
li°
[
now
][
i
];

19 if(!
d‚
[
to
])

21 
	`èr
(
to
);

22 
low
[
now
]=
	`mö
÷ow[now],low[
to
]);

24 if(
vis
[
to
])

25 
low
[
now
]=
	`mö
÷ow[now],
d‚
[
to
]);

27 if(
d‚
[
now
]==
low
[now])

29 
˙t
=0;

30 ; 
t›
>=0; )

32 
x
=
°
[
t›
--];

33 
vis
[
x
]=0;

34 
id
[
x
]=
ID
;

35 
˙t
++;

36 if(
x
==
now
)

39 if(
˙t
<2)

40 
˙t
=0;

41 
mx
=
	`max
(mx,
˙t
);

42 
ID
++;

44 
	}
}

46 
	$maö
()

48 
n
,
m
;

49 
	`sˇnf
("%d%d",&
n
,&
m
)!=
EOF
)

51 
i
=0; i<
n
; i++)

52 
li°
[
i
].
	`˛ór
();

53 
i
=0; i<
m
; i++)

55 
x
,
y
;

56 
	`sˇnf
("%d%d",&
x
,&
y
);

57 
li°
[
x
].
	`push_back
(
y
);

59 
ªt
=
N
;

60 
i
=0; i<
n
; i++)

62 
	`mem£t
(
vis
,0,(vis));

63 
	`mem£t
(
d‚
,0,(dfn));

64 
	`mem£t
(
low
,0,(low));

65 
mx
=0;

66 
ID
=1;

67 
time
=1;

68 
t›
=-1;

69 
d‚
[
i
]=
time
++;

70 
id
[
i
]=
ID
++;

71 
j
=0; j<
n
; j++)

72 if(!
d‚
[
j
])

73 
	`èr
(
j
);

74 
ªt
=
	`mö
‘ë,
mx
);

76 
	`¥ötf
("%d\n",
ªt
);

79 
	}
}

	@problems/zoj/zoj_3631.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<£t
>

4 
	#N
 40

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	g£t
<> 
	gn°
;

9 
	g£t
<> 
	gt°
;

10 
	g£t
<>::
ôî©‹
 
ô
;

11 
	gd©
[
N
];

12 
	gsum
[
N
];

14 
	$cmp
(
a
,
b
){ á>b; 
	}
}

16 
	$maö
()

18 
n
,
m
;

19 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

21 
n°
.
	`˛ór
();

22 
t°
.
	`˛ór
();

23 
i
=0; i<
n
; i++)

24 
	`sˇnf
("%d",&
d©
[
i
]);

25 
	`s‹t
(
d©
,d©+
n
,
cmp
);

26 
sum
[
n
-1]=
d©
[n-1];

27 
i
=
n
-2; i>=0; i--)

28 
sum
[
i
]=sum[i+1]+
d©
[i];

29 if(
sum
[0]<=
m
)

31 
	`¥ötf
("%d\n",
sum
[0]);

34 
i
=0; i<
n
; i++)

36 if(
n°
.
	`size
()>0)

38 
ô
=
n°
.
	`íd
();

39 
ô
--;

40 
x
=*
ô
;

41 if(
x
==
m
)

43 if(
sum
[
i
]+
x
<=
m
)

45 
n°
.
	`ö£π
(
sum
[
i
]+
x
);

48 
ô
=
n°
.
	`begö
(); it!Ú°.
	`íd
(); it++)

50 if(*
ô
+
sum
[
i
]<=
x
)

52 
n°
.
	`îa£
(
ô
);

53 
t°
.
	`îa£
(*
ô
);

58 if(
d©
[
i
]<=
m
)

60 
t°
.
	`ö£π
(
d©
[
i
]);

61 
ô
=
n°
.
	`begö
(); it!Ú°.
	`íd
(); it++)

62 if(*
ô
+
d©
[
i
]<=
m
)

63 
t°
.
	`ö£π
(*
ô
+
d©
[
i
]);

64 
n°
=
t°
;

67 if(
n°
.
	`size
()==0)

68 
	`¥ötf
("%d\n",0);

71 
ô
=
n°
.
	`íd
();

72 
ô
--;

73 
	`¥ötf
("%d\n",*
ô
);

77 
	}
}

	@problems/zoj/zoj_3632.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 50010

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 c⁄° 
LL
 
	göf
=0x3ffffffffffffLL;

10 
	snode
{ 
	ml
,
	mr
; 
LL
 
	mv
;

11 
gm
(){  (
	ml
+
	mr
)>>1; }

12 }
	gno
[
N
<<2];

14 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

15 
ölöe
 
	$R
(
i
){  i<<1|1; 
	}
}

17 
	gd©
[
N
],
	gvÆ
[N];

19 
	$öô
(
id
,
l
,
r
)

21 
no
[
id
].
l
ˆ,no[id].
r
Ù,no[id].
v
=
öf
;

22 if(
l
==
r
) ;

23 
m
=
no
[
id
].
	`gm
();

24 
	`öô
(
	`L
(
id
),
l
,
m
);

25 
	`öô
(
	`R
(
id
),
m
+1,
r
);

26 
	}
}

28 
	$upd©e
(
id
,
p
,
LL
 
x
)

30 
l
=
no
[
id
].l,
r
Úo[id].r,
m
Úo[id].
	`gm
();

31 if(
l
==
r
)

33 
no
[
id
].
v
=
	`mö
(
x
,no[id].v);

36 if(
p
<=
m
)

37 
	`upd©e
(
	`L
(
id
),
p
,
x
);

39 
	`upd©e
(
	`R
(
id
),
p
,
x
);

40 
no
[
id
].
v
=
	`mö
“o[
	`L
(id)].v,no[
	`R
(id)].v);

41 
	}
}

43 
LL
 
	$quîy
(
id
,
Œ
,
º
)

45 
l
=
no
[
id
].l,
r
Úo[id].r,
m
Úo[id].
	`gm
();

46 if(
Œ
<=
l
&&
º
>=
r
)

47  
no
[
id
].
v
;

48 
LL
 
ªt
=
öf
;

49 if(
º
>=
l
&&
Œ
<=
m
)

50 
ªt
=
	`mö
‘ë,
	`quîy
(
	`L
(
id
),
Œ
,
º
));

51 if(
Œ
<=
r
&&
º
>
m
)

52 
ªt
=
	`mö
‘ë,
	`quîy
(
	`R
(
id
),
Œ
,
º
));

53  
ªt
;

54 
	}
}

56 
	$maö
()

58 
n
;

59 
	`sˇnf
("%d",&
n
)+1)

61 
i
=1; i<=
n
; i++)

62 
	`sˇnf
("%d",&
vÆ
[
i
]);

63 
i
=1; i<=
n
; i++)

64 
	`sˇnf
("%d",&
d©
[
i
]);

65 
	`öô
(1,1,
n
);

66 
	`upd©e
(1,
	`mö
(
d©
[1],
n
),
vÆ
[1]);

67 
i
=2; i<=
n
; i++)

69 
LL
 
x
=
	`quîy
(1,
i
-1,
n
);

70 
	`upd©e
(1,
	`mö
(
i
+
d©
[i]-1,
n
),
x
+
vÆ
[i]);

72 
	`¥ötf
("%Œd\n",
	`quîy
(1,
n
,n));

75 
	}
}

	@problems/zoj/zoj_3633.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	#N
 501001

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
],
	gd©
[N];

8 
	gm≠
<,> 
	gmp
;

10 
	$maö
()

12 
n
;

13 
	`sˇnf
("%d",&
n
)+1)

15 
mp
.
	`˛ór
();

16 
dp
[0]=0;

17 
i
=1; i<=
n
; i++)

19 
	`sˇnf
("%d",&
d©
[
i
]);

20 
dp
[
i
]=
	`max
(dp[i-1],
mp
[
d©
[i]]);

21 
mp
[
d©
[
i
]]=i;

23 
m
;

24 
	`sˇnf
("%d",&
m
);

25 ; 
m
--;)

27 
l
,
r
;

28 
	`sˇnf
("%d%d",&
l
,&
r
);

29 if(
dp
[
r
]>=
l
)

30 
	`¥ötf
("%d\n",
d©
[
dp
[
r
]]);

32 
	`puts
("OK");

34 
	`puts
("");

37 
	}
}

	@problems/zoj/zoj_3634.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<cm©h
>

4 
	#öf
 1e15

	)

5 
	#N
 100100

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	ga
[
N
],
	gb
[N],
	gsum
[N];

10 
	gda
[
N
],
	gdb
[N];

12 
	$maö
()

14 
n
;

15 
x
,
y
;

16 
	`sˇnf
("%d%lf%lf",&
n
,&
x
,&
y
)+1)

18 
i
=1; i<=
n
; i++)

19 
	`sˇnf
("%lf%lf",&
a
[
i
],&
b
[i]);

20 if(
n
==0)

22 
	`¥ötf
("%.2lf\n",
x
);

25 
da
[
n
]=
	`max
(1.0,1.0/
a
[n]*
b
[n]);

26 
db
[
n
]=
b
[n];

27 
i
=
n
-1; i>=1; i--)

29 
da
[
i
]=
	`max
(1.0/
a
[i]*
db
[i+1]+1.0/a[i]*
b
[i]*da[i+1],da[i+1]);

30 
db
[
i
]=db[i+1]+
b
[i]*
da
[i+1];

32 
	`¥ötf
("%.2lf\n",
x
*
da
[1]+
y
*
db
[1]);

35 
	}
}

	@problems/zoj/zoj_3635.cpp

1 
	~<c°dio
>

2 
	#N
 50011

	)

4 
ölöe
 
	$low_bô
(
i
){  i&(-i); 
	}
}

5 
	gd©
[
N
];

6 
	g™s
[
N
];

8 
	$gë
(
x
)

10 
ªt
=0;

11 ; 
x
; x^=
	`low_bô
(x))

12 
ªt
+=
d©
[
x
];

13  
ªt
;

14 
	}
}

16 
	$upd©e
(
x
,
èg
)

18 ; 
x
<
N
; x+=
	`low_bô
(x))

19 
d©
[
x
]+=
èg
;

20 
	}
}

22 
	$maö
()

24 
n
;

25 
	`sˇnf
("%d",&
n
)+1)

27 
i
=1; i<=
n
; i++)

28 
	`upd©e
(
i
,1);

29 
i
=1; i<=
n
; i++)

31 
x
,
l
,
r
,
mid
;

32 
	`sˇnf
("%d",&
x
);

33 
l
=1,
r
=
n
;

34 ; 
l
<=
r
;)

36 
mid
=(
l
+
r
)>>1;

37 if(
	`gë
(
mid
)>=
x
)

38 
r
=
mid
-1;

40 
l
=
mid
+1;

42 
	`upd©e
(
l
,-1);

43 
™s
[
i
]=
l
;

45 
m
;

46 
	`sˇnf
("%d",&
m
);

47 
i
=0; i<
m
; i++)

49 
x
;

50 
	`sˇnf
("%d",&
x
);

51 
	`¥ötf
("%d",
™s
[
x
]);

52 if(
i
+1<
m
)

53 
	`¥ötf
(" ");

55 
	`puts
("");

58 
	}
}

	@problems/zoj/zoj_3636.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#öf
 0x7fffffff

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gs
[39];

8 
	gn
,
	gk
,
	gm
;

9 
	gid
[32];

10 
	gve˘‹
<> 
	gvec
;

12 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

14 
	$sﬁve
()

16 
ve˘‹
<> 
™s
;

17 
i
=0; i<
n
; i++)

19 
nid
=-1;

20 
j
=0; j<
vec
.
	`size
(); j++)

21 if(
vec
[
j
]&
	`B
(
i
))

23 
x
=
vec
[
j
];

24 
™s
.
	`push_back
(
x
);

25 
nid
=
™s
.
	`size
()-1;

26 
u
=0; u<
vec
.
	`size
(); u++)

27 if(
vec
[
u
]&
	`B
(
i
))

28 
vec
[
u
]^=
x
;

31 
id
[
i
]=
nid
;

33 
vec
=
™s
;

34 
	}
}

36 
	$ok
(
x
)

38 
now
=0;

39 
i
=0; i<
n
; i++)

41 if((
x
&
	`B
(
i
))!=(
now
&B(i)))

43 if(
id
[
i
]<0)

45 
now
^=
vec
[
id
[
i
]];

48  
now
==
x
;

49 
	}
}

51 
	$gë™s
(
x
)

53 
ªt
=
öf
,
˙t
=3;

54 
i
=0; i<=
n
; i++)

55 
j
=(
i
==
n
)?n:i+1; j<=n; j++)

56 
k
=(
j
==
n
)?n:j+1; k<=n; k++)

58 
t˙t
=(
i
!=
n
)+(
j
!Ú)+(
k
!=n);

59 
tx
=
x
^(1<<
i
)^(1<<
j
)^(1<<
k
);

60 if(
tx
&
	`B
(
n
))

61 
tx
^=
	`B
(
n
);

62 if(
	`ok
(
tx
))

64 if(
t˙t
<
˙t
)

65 
˙t
=
t˙t
,
ªt
=
tx
;

66 if(
t˙t
==
˙t
)

67 
ªt
=
	`mö
‘ë,
tx
);

70 if(
ªt
>=
öf
)  -1;

71  
ªt
;

72 
	}
}

74 
	$show
(
x
)

76 
s
[
n
]='\0';

77 
i
=0; i<
n
; i++)

79 if(
x
&
	`B
(
i
))

80 
s
[
n
-
i
-1]='1';

82 
s
[
n
-
i
-1]='0';

84 
	`¥ötf
("%s\n",
s
);

85 
	}
}

87 
	$gë
()

89 
x
=0;

90 
j
=0; j<
n
; j++)

91 
x
<<=1,x+=
s
[
j
]-'0';

92  
x
;

93 
	}
}

95 
	$maö
()

97 
	`sˇnf
("%d%d%d",&
n
,&
k
,&
m
)+1)

99 
vec
.
	`˛ór
();

100 
i
=0; i<
k
; i++)

102 
	`sˇnf
("%s",
s
);

103 
x
=
	`gë
();

104 
vec
.
	`push_back
(
x
);

106 
	`sﬁve
();

112 
i
=0; i<
m
; i++)

114 
	`sˇnf
("%s",
s
);

115 
x
=
	`gë
();

116 
y
=
	`gë™s
(
x
);

117 if(
y
<0)

118 
	`puts
("NA");

120 
	`show
(
y
);

124 
	}
}

	@problems/zoj/zoj_3637.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<c°rög
>

4 
	~<°rög
>

5 
	~<m≠
>

6 
	#N
 530000

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	snode
{ 
	ml
; 
	mv
;

11 
‰õnd
 
	m›î©‹
 < (
node
 
	ma
,nodê
	mb
){ á.
	ml
<b.l; }

13 
	gdp
[
N
];

14 
	gve˘‹
<
	gnode
> 
	gvec
[
N
];

15 
°rög
 
	gm«me
[13]={"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};

16 
	gday
[13]={0,31,29,31,30,31,30,31,31,30,31,30,31};

17 
	gm≠
<
	g°rög
,> 
	gmp
;

20 
	gs
[20];

22 
	$gë
()

24 
ªt
=0,
x
,
y
;

25 
	`sˇnf
("%s",
s
);

26 
ªt
=
day
[
mp
[
	`°rög
(
s
)]]*24*60;

27 
	`sˇnf
("%d%s",&
x
,
s
);

28 
ªt
+=(
x
-1)*24*60;

29 
	`sˇnf
("%d:%d%s",&
x
,&
y
,
s
);

30 
ªt
+=
x
*60+
y
;

31 if(
s
[0]=='p')

32 
ªt
+=12*60;

33  
ªt
;

34 
	}
}

36 
	gve˘‹
<
	gnode
>::
ôî©‹
 
ô
;

38 
	$maö
()

40 
n
;

41 
i
=0; i<12; i++)

42 
mp
[
m«me
[
i
]]=i;

43 
i
=1; i<=12; i++)

44 
day
[
i
]+=day[i-1];

45 
	`sˇnf
("%d",&
n
)!=
EOF
)

47 
	`mem£t
(
dp
,0,(dp));

48 
i
=0; i<
N
; i++)

49 
vec
[
i
].
	`˛ór
();

50 
i
=0; i<
n
; i++)

52 
v
;

53 
x
=
	`gë
(),
y
=get();

54 
	`sˇnf
("%lf",&
v
);

55 
node
 
tmp
;

56 
tmp
.
l
=
x
,tmp.
v
=v;

57 
vec
[
y
].
	`push_back
(
tmp
);

59 
i
=1; i<
N
; i++)

61 
dp
[
i
]=dp[i-1];

62 
j
=0; j<
vec
[
i
].
	`size
(); j++)

64 
dp
[
i
]=
	`max
(dp[i],dp[max(
vec
[i][
j
].
l
-5,0)]+vec[i][j].
v
);

67 
	`¥ötf
("%.1lf\n",
dp
[
N
-1]);

70 
	}
}

	@problems/zoj/zoj_3640.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#N
 10011

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gdp
[
N
];

8 c⁄° 
	gÁc
=(1+
sqπ
(5.0))/2;

9 
	gc
[
N
],
	gti
[N];

11 
	$gë
(
x
)

13  (
Ác
*
x
);

14 
	}
}

16 
	$maö
()

18 
n
,
f
,
mx
;

19 
	`sˇnf
("%d%d",&
n
,&
f
)!=
EOF
)

21 
mx
=
f
;

22 
i
=0; i<
n
; i++)

24 
	`sˇnf
("%d",&
c
[
i
]);

25 
ti
[
i
]=
	`gë
(
c
[i]*c[i]);

26 
mx
=
	`max
(mx,
c
[
i
]);

28 
mx
++;

29 
i
=
mx
; i>=
f
; i--)

31 
dp
[
i
]=0;

32 
j
=0; j<
n
; j++)

34 if(
i
>
c
[
j
])

35 
dp
[
i
]+=
ti
[
j
];

37 
dp
[
i
]+=(1+dp[
	`mö
(i+
c
[
j
],
mx
)]);

39 
dp
[
i
]/=
n
;

41 
	`¥ötf
("%.3lf\n",
dp
[
f
]);

44 
	}
}

	@problems/zoj/zoj_3641.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<m≠
>

4 
	~<£t
>

5 
	~<°rög
>

6 
	#N
 100001

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	suföd


12 
	mp
[
N
],
	mf
;

13 
öô
(
n
)

15 
	mi
=0; i<
	mn
; i++)

16 
	mp
[
i
]=i;

18 
run
(&
x
)

20 
	my
=
x
,
	mt
;

21 ; 
	mx
!=
p
[
x
]; x=p[x]);

22 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

24 }
	guf
;

26 
	gs
[20],
	gs1
[20],
	gs2
[20];

28 
	$maö
()

30 
n
,
≥o
;

31 
	`sˇnf
("%d",&
n
)!=
EOF
)

33 
£t
<> 
öf
[
N
];

34 
£t
<>::
ôî©‹
 
ô
;

35 
m≠
<
°rög
,> 
id
;

36 
uf
.
	`öô
(
n
);

37 
≥o
=0;

38 
i
=0; i<
n
; i++)

40 
	`sˇnf
("%s",
s
);

41 if(
	`°rcmp
(
s
,"arrive")==0)

43 
m
,
x
;

44 
	`sˇnf
("%s%d",
s1
,&
m
);

45 
j
=0; j<
m
; j++)

47 
	`sˇnf
("%d",&
x
);

48 
öf
[
≥o
].
	`ö£π
(
x
);

50 
id
[
	`°rög
(
s1
)]=
≥o
;

51 
≥o
++;

53 if(
	`°rcmp
(
s
,"share")==0)

55 
	`sˇnf
("%s%s",
s1
,
s2
);

56 
i1
=
id
[
	`°rög
(
s1
)],
i2
=id[°rög(
s2
)];

57 
uf
.
	`run
(
i1
);

58 
uf
.
	`run
(
i2
);

59 if(
i1
==
i2
)

61 
uf
.
p
[
i1
]=
i2
;

62 
ô
=
öf
[
i1
].
	`begö
(); it!=öf[i1].
	`íd
(); it++)

64 
öf
[
i2
].
	`ö£π
(*
ô
);

65 
öf
[
i1
].
	`îa£
(
ô
);

70 
	`sˇnf
("%s",
s
);

71 
ii
=
id
[
	`°rög
(
s
)];

72 
uf
.
	`run
(
ii
);

73 
	`¥ötf
("%d\n",
öf
[
ii
].
	`size
());

78 
	}
}

	@problems/zoj/zoj_3642.cpp

1 
	~<c°dio
>

2 
	~<m≠
>

3 
	#öf
 0x3fffffff

	)

4 
	#N
 100001

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mw
; }
	ge
[
N
];

10 
	gt›
,
	gli°
[500];

12 
	$_ö£π
(
f
,
t
,
w
)

14 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

15 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

16 
	}
}

18 
	$ö£π
(
f
,
t
,
w
)

20 
	`_ö£π
(
f
,
t
,
w
);

21 
	`_ö£π
(
t
,
f
,0);

22 
	}
}

24 
	gm≠
<,> 
	gid
;

25 
	gids
,
	gup
[300],
	gœy
[500],
	gq
[
N
];

27 
	$bfs
(
f
,
t
,
n
)

29 
l
,
r
;

30 
i
=0; i<
n
; i++)

31 
œy
[
i
]=-1;

32 
q
[
l
=
r
=0]=
f
;

33 
œy
[
f
]=0;

34 ; 
l
<=
r
;)

36 
now
=
q
[
l
++];

37 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

39 
to
=
e
[
i
].
t
;

40 if(
œy
[
to
]==-1&&
e
[
i
].
w
>0)

41 
œy
[
to
]ˆay[
now
]+1,
q
[++
r
]=to;

44  
œy
[
t
]>=0;

45 
	}
}

47 
	$dfs
(
now
,
t
,
now_Êow
)

49 
ªt
=0;

50 if(
now
==
t
Ë 
now_Êow
;

51 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

53 if(
ªt
>=
now_Êow
)

55 
to
=
e
[
i
].
t
,
x
;

56 if(
œy
[
to
]=ˆay[
now
]+1&&
e
[
i
].
w
>0)

58 
x
=
	`dfs
(
to
,
t
,
	`mö
(
now_Êow
-
ªt
,
e
[
i
].
w
));

59 
ªt
+=
x
;

60 
e
[
i
].
w
-=
x
;

61 
e
[
i
^1].
w
+=
x
;

64 if(
ªt
==0Ë
œy
[
now
]=-1;

65  
ªt
;

66 
	}
}

68 
	$max_Êow
(
f
,
t
,
n
)

70 
ªt
=0;

71 
	`bfs
(
f
,
t
,
n
))

72 
ªt
+=
	`dfs
(
f
,
t
,
öf
);

73  
ªt
;

74 
	}
}

76 
	$maö
()

78 
n
;

79 
	`sˇnf
("%d",&
n
)!=
EOF
)

81 
t›
=0;

82 
ids
=
n
;

83 
id
.
	`˛ór
();

84 
i
=0; i<500; i++)

85 
li°
[
i
]=-1;

86 
i
=0; i<
n
; i++)

88 
m
,
l
,
r
,
x
,
y
;

89 
	`sˇnf
("%d%d%d",&
m
,&
l
,&
up
[
i
]);

90 
j
=0; j<
m
; j++)

92 
	`sˇnf
("%d",&
x
);

93 if(
id
.
	`cou¡
(
x
)<=0)

95 
id
[
x
]=
ids
++;

97 
y
=
id
[
x
];

98 
	`ö£π
(
i
,
y
,1);

101 
x
;

102 
	`sˇnf
("%d",&
x
);

103 
x
--;

104 
i
=0; i<
n
; i++)

106 if(
i
!=
x
)

107 
	`ö£π
(
ids
,
i
,
up
[i]);

109 
	`ö£π
(
ids
,
i
,
öf
);

111 
i
=
n
; i<
ids
; i++)

112 
	`ö£π
(
i
,
ids
+1,1);

113 
	`¥ötf
("%d\n",
	`max_Êow
(
ids
,ids+1,ids+2));

116 
	}
}

	@problems/zoj/zoj_3643.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 900001

	)

5 
	g≥i
[
N
],
	g‹i
[N];

6 
	gÁû
[
N
],
	gid
[N],
	g°
[N],
	gt›
,
	glo
,
	gÕ
;

8 
	$gë_Áû
()

10 
Áû
[0]=-1;

11 
j
;

12 
i
=1; i<
Õ
; i++)

14 
j
=
Áû
[
i
-1];

15 ; 
j
>=0&&
≥i
[j+1]!ıei[
i
]; j=
Áû
[j]);

16 if(
≥i
[
j
+1]=ıei[
i
]Ë
Áû
[i]=j+1;

17 
Áû
[
i
]=-1;

19 
	}
}

21 
	$sﬁve
()

23 
ªt
=0,
i
,
j
;

24 
t›
=-1;

25 
i
=0,
j
=-1; i<
lo
; i++)

27 
°
[++
t›
]=
i
;

28 ; 
j
>=0&&
≥i
[j+1]!=
‹i
[
i
]; j=
Áû
[j]);

29 if(
≥i
[
j
+1]==
‹i
[
i
])

30 
j
=j+1;

31 
id
[
i
]=
j
;

32 if(
j
==
Õ
-1)

34 
t›
-=
Õ
;

35 if(
t›
<0)

36 
j
=-1;

38 
j
=
id
[
°
[
t›
]];

39 
ªt
++;

42  
ªt
;

43 
	}
}

45 
	$maö
()

47 
	`sˇnf
("%s%s",
≥i
,
‹i
)!=
EOF
)

49 
lo
=
	`°æí
(
‹i
);

50 
Õ
=
	`°æí
(
≥i
);

51 
	`gë_Áû
();

52 
	`¥ötf
("%d\n",
	`sﬁve
());

55 
	}
}

	@problems/zoj/zoj_3644.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<m≠
>

4 
	#N
 2001

	)

5 
	#X
 1000001

	)

6 
	#MOD
 1000000007

	)

8 
usög
 
«me•a˚
 
	g°d
;

9 
	tLL
;

11 
	gm≠
<,
	gLL
> 
	gmp
;

12 
	gve˘‹
<> 
	gli°
[
N
];

13 
	gn
,
	gm
,
	gk
;

14 
	gp
[
N
];

16 
	$gcd
(
a
,
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

18 
LL
 
	$dfs
(
now
,
LL
 
¥e
)

20 if(
¥e
>
k
)

22 
x
=
now
*
N
+
¥e
;

23 if(
mp
.
	`cou¡
(
x
)>0)

24  
mp
[
x
];

25 
g
=
	`gcd
(
p
[
now
],
¥e
);

26 
LL
 
nx
=
¥e
*
p
[
now
]/
g
;

27 if(
nx
==
¥e
)

28  
mp
[
x
]=0;

29 if(
now
==
n
)

31 if(
nx
==
k
)

32  
mp
[
x
]=1;

34  
mp
[
x
]=0;

36 
LL
 
ªt
=0;

37 
i
=0; i<
li°
[
now
].
	`size
(); i++)

39 
to
=
li°
[
now
][
i
];

40 
ªt
=‘ë+
	`dfs
(
to
,
nx
))%
MOD
;

42  
mp
[
x
]=
ªt
;

43 
	}
}

45 
	$maö
()

47 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
k
)+1)

49 
mp
.
	`˛ór
();

50 
i
=0; i<=
n
; i++)

51 
li°
[
i
].
	`˛ór
();

52 
i
=0; i<
m
; i++)

54 
x
,
y
;

55 
	`sˇnf
("%d%d",&
x
,&
y
);

56 
li°
[
x
].
	`push_back
(
y
);

58 
i
=1; i<=
n
; i++)

59 
	`sˇnf
("%d",&
p
[
i
]);

60 
LL
 
ªt
=0;

61 
i
=0; i<
li°
[1].
	`size
(); i++)

63 
ªt
=‘ë+
	`dfs
(
li°
[1][
i
],
p
[1]))%
MOD
;

65 
	`¥ötf
("%Œd\n",
ªt
);

68 
	}
}

	@problems/zoj/zoj_3645.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	~<cm©h
>

5 
	#ïs
 1e-6

	)

7 
usög
 
«me•a˚
 
	g°d
;

9 
	snode
{ 
	mx
[12]; }
	gno
[12];

10 
	gm©
[166][12];

11 
	gt›
=0;

13 
	$sﬁve
()

15 
i
=0; i<11; i++)

17 
id
=-1;

18 
j
=
i
; j<
t›
; j++)

19 if(
	`Ábs
(
m©
[
i
][
j
])>0)

21 
id
=
j
;

24 if(
id
==-1)

26 
j
=0; j<12; j++)

27 
	`sw≠
(
m©
[
i
][
j
],m©[
id
][j]);

28 
j
=
i
+1; j<12; j++)

29 
m©
[
i
][
j
]/=mat[i][i];

30 
m©
[
i
][i]=1.0;

31 
k
=0; k<
t›
; k++)

33 if(
k
==
i
)

35 if(
	`Ábs
(
m©
[
k
][
i
])>0)

37 
j
=11; j>=
i
; j--)

38 
m©
[
k
][
j
]-=m©[
i
][j]*mat[k][i];

43 
	}
}

45 
	$maö
()

47 
n
,
ts
;

48 
	`sˇnf
("%d",&
ts
);

49 ; 
ts
--;)

51 
	`mem£t
(
m©
,0,(mat));

52 
t›
=0;

53 
i
=0; i<12; i++)

55 
j
=0; j<12; j++)

57 
	`sˇnf
("%lf",&
no
[
i
].
x
[
j
]);

60 
i
=0; i<12; i++)

62 
j
=
i
+1; j<12; j++)

64 
k
=0; k<11; k++)

66 
m©
[
t›
][
k
]=-2*
no
[
i
].
x
[k]+2*no[
j
].x[k];

67 
m©
[
t›
][11]-=
no
[
i
].
x
[
k
]*no[i].x[k]-no[
j
].x[k]*no[j].x[k];

69 
m©
[
t›
][11]+=
no
[
i
].
x
[11]*no[i].x[11]-no[
j
].x[11]*no[j].x[11];

70 
t›
++;

73 
èg
=
	`sﬁve
();

74 if(
èg
==0)

76 
i
=0; i<11; i++)

77 if(
	`Ábs
(
m©
[
i
][11])<
ïs
)

78 
m©
[
i
][11]=0.0;

79 
	`¥ötf
("%.2lf",
m©
[0][11]);

80 
i
=1; i<11; i++)

81 
	`¥ötf
(" %.2lf",
m©
[
i
][11]);

82 
	`puts
("");

85 
	}
}

	@problems/zoj/zoj_3646.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 211

	)

4 
	#S
 100001

	)

6 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

7 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N];

8 
	gs
[
N
];

10 
	$ö£π
(
f
,
t
)

12 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
n
=
li°
[f];

13 
li°
[
f
]=
t›
++;

14 
	}
}

16 
	$föd
(
now
)

18 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

20 
to
=
e
[
i
].
t
;

21 if(!
y
[
to
])

23 
y
[
to
]=1;

24 if(
m©ch
[
to
]<0||
	`föd
(match[to]))

26 
m©ch
[
to
]=
now
;

32 
	}
}

34 
	$hung¨y
(
m
,
n
)

36 
ªt
=0;

37 
	`mem£t
(
m©ch
,-1,(match));

38 
i
=0; i<
m
; i++)

40 
	`mem£t
(
y
,0,(y));

41 if(
	`föd
(
i
))

42 
ªt
++;

44  
ªt
;

45 
	}
}

47 
	$maö
()

49 
n
;

50 
	`sˇnf
("%d",&
n
)!=
EOF
)

52 
t›
=0;

53 
i
=0; i<
n
; i++)

54 
li°
[
i
]=-1;

55 
i
=0; i<
n
; i++)

57 
	`sˇnf
("%s",
s
);

58 
j
=0; j<
n
; j++)

59 if(
s
[
j
]=='U')

60 
	`ö£π
(
i
,
j
);

62 
ªt
=
	`hung¨y
(
n
,n);

63 if(
n
==
ªt
)

64 
	`puts
("YES");

66 
	`puts
("NO");

69 
	}
}

	@problems/zoj/zoj_3647.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 1011

	)

4 
	tLL
;

6 
LL
 
	$comb
(
LL
 
a
)

8 if(
a
<=2)  0;

9  
a
*(a-1)*(a-2)/6;

10 
	}
}

12 
LL
 
	$com2
(
LL
 
x
)

14 if(
x
<=1)  0;

15  
x
*(x-1)/2;

16 
	}
}

18 
	$gcd
(
a
,
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

19 
LL
 
	gf
[
N
][N];

21 
	$öô
()

23 
	`mem£t
(
f
,0,(f));

24 
i
=0; i<
N
; i++)

26 
f
[1][
i
]=f[i][1]=
	`com2
(i);

27 
f
[0][
i
]=f[i][0]=
	`com2
(i);

29 
i
=2; i<
N
; i++)

30 
j
=
i
; j<
N
; j++)

31 
f
[
j
][
i
]=f[i][j]=f[i-1][j]+f[i][j-1]-f[i-1][j-1]+
	`gcd
(i,j)-1;

32 
	}
}

34 
	$maö
()

36 
n
,
m
;

37 
	`öô
();

38 
	`sˇnf
("%d%d",&
m
,&
n
)+1)

40 
LL
 
ªt
=0,
˙t
=(
n
+1)*(
m
+1);

41 
ªt
=
	`comb
(
˙t
);

42 
LL
 
™s
=0,
tmp
;

43 
i
=0; i<=
m
; i++)

44 
j
=0; j<=
n
; j++)

46 
tmp
=
f
[
i
][
j
]+f[
m
-i][
n
-j]+f[i][n-j]+f[m-i][j]-
	`com2
(i)-com2(j)-com2(m-i)-com2(n-j);

47 
™s
+=
tmp
;

49 
	`¥ötf
("%Œd\n",
ªt
-
™s
/2);

52 
	}
}

	@problems/zoj/zoj_3648.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#N
 110

	)

5 
	tLL
;

7 
LL
 
	gdp
[
N
][N],
	gf
[N][N];

9 
	$öô
()

11 
	`mem£t
(
dp
,0,(dp));

12 
	`mem£t
(
f
,0,(f));

13 
i
=2; i<
N
; i++)

14 
j
=2; j<
N
; j++)

16 
p
=1;Ö<=
i
;Ö++)

18 
l
=1,
r
=
j
;

19 
l
=(
i
*
p
-p*p)/
j
;

20 ; 
l
*
j
<=(
i
*
p
-p*p); )

21 
l
++;

22 
c
=0;

23 
q
=
l
; q<=
r
; q++)

25 if(
p
==
i
&&
q
==
j
) ;

26 if(
q
*q+
i
*
p
>
j
*q)

27 
c
++;

29 
dp
[
i
][
j
]+=
c
;

30 if(
p
==
i
)

31 
f
[
i
][
j
]=
c
;

34 
	}
}

36 
	$maö
()

38 
	`öô
();

39 
m
,
n
;

40 
	`sˇnf
("%d%d",&
m
,&
n
)+1)

42 
LL
 
ªt
=0;

43 
i
=2; i<=
m
; i++)

44 
j
=2; j<=
n
; j++)

45 
ªt
+=(((
dp
[
i
][
j
]+dp[j][i])<<1)-((
f
[i][j]+f[j][i])<<1))*(
m
-i+1)*(
n
-j+1);

46 
	`¥ötf
("%Œd\n",
ªt
);

49 
	}
}

	@problems/zoj/zoj_3649_classic_tree.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3ffffff

	)

5 
	#X
 18

	)

6 
	#N
 60011

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	ml
; }
	ge
[
N
<<1],
	ges
[N<<1];

11 
	suföd


13 
	mp
[
N
];

14 
öô
(
n
){ 
	mi
=0; i<Ú; i++Ë
	mp
[
i
]=i; }

15 
∑
(
x
)

17 
	my
=
x
,
	mt
;

18 ; 
	mx
!=
p
[
x
]; x=p[x]);

19 ; 
	my
!=
p
[
t
=
y
]; yı[y],
	mp
[t]=
x
);

20  
	mx
;

22 }
	guf
;

23 
	gvÆ
[
N
],
	gt›
,
	gli°
[N],
	g∑
[N][
X
],
	gmi
[N][X],
	gmx
[N][X],
	gdp1
[N][X],
	gdp2
[N][X],
	gœy
[N];

25 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

27 
	$ö£π
(
f
,
t
,
l
)

29 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

30 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

31 
	}
}

33 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
>b.l; 
	}
}

35 
	$kruskÆ
(
m
,
n
)

37 
ªt
=0;

38 
uf
.
	`öô
(
n
);

39 
i
=0; i<
m
; i++)

41 
f
=
uf
.
	`∑
(
es
[
i
].f),
t
=uf.pa(es[i].t);

42 if(
f
==
t
)

44 
uf
.
p
[
f
]=
t
;

45 
ªt
+=
es
[
i
].
l
;

46 
	`ö£π
(
es
[
i
].
f
,es[i].
t
,es[i].
l
);

47 
	`ö£π
(
es
[
i
].
t
,es[i].
f
,es[i].
l
);

49  
ªt
;

50 
	}
}

52 
	$dfs
(
now
,
p
,
l
)

54 
œy
[
now
]=
l
;

55 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

57 
to
=
e
[
i
].
t
;

58 if(
to
==
p
) ;

59 
∑
[
to
][0]=
now
;

60 
mi
[
to
][0]=
	`mö
(
vÆ
[
now
],val[to]);

61 
mx
[
to
][0]=
	`max
(
vÆ
[
now
],val[to]);

62 
dp1
[
to
][0]=
vÆ
[
now
]-val[to];

63 
dp2
[
to
][0]=
vÆ
[to]-vÆ[
now
];

64 
u
=1; u<
X
; u++)

66 
µ
=
∑
[
to
][
u
-1];

67 
∑
[
to
][
u
]ıa[
µ
][u-1];

68 
mi
[
to
][
u
]=
	`mö
(mi[to][u-1],mi[
µ
][u-1]);

69 
mx
[
to
][
u
]=
	`max
(mx[to][u-1],mx[
µ
][u-1]);

70 
dp1
[
to
][
u
]=
	`max
(max(dp1[to][u-1],dp1[
µ
][u-1]),
mx
[µ][u-1]-
mi
[to][u-1]);

71 
dp2
[
to
][
u
]=
	`max
(max(dp2[to][u-1],dp2[
µ
][u-1]),
mx
[to][u-1]-
mi
[pp][u-1]);

73 
	`dfs
(
to
,
now
,
l
+1);

75 
	}
}

77 
	$lˇ
(
x
,
y
)

79 if(
œy
[
x
]<œy[
y
]Ë
	`sw≠
(x,y);

80 if(
œy
[
x
]>œy[
y
])

82 
d
=
œy
[
x
]-œy[
y
];

83 
i
=0; i<
X
; i++)

84 if(
	`B
(
i
)&
d
)

85 
x
=
∑
[x][
i
];

87 if(
x
!=
y
)

89 
i
=
X
-1; i>=0; i--)

90 if(
∑
[
x
][
i
]!ıa[
y
][i])

91 
x
=
∑
[x][
i
],
y
=pa[y][i];

92 
x
=
∑
[x][0],
y
=pa[y][0];

94  
x
;

95 
	}
}

97 
	$gëmx
(
x
,
p
)

99 
d
=
œy
[
x
]-œy[
p
],
ªt
=0;

100 if(
d
<0)

102 
i
=
X
-1; i>=0; i--)

103 if(
d
&
	`B
(
i
))

105 
ªt
=
	`max
‘ë,
mx
[
x
][
i
]);

106 
x
=
∑
[x][
i
];

108  
ªt
;

109 
	}
}

111 
	$gëmi
(
x
,
p
)

113 
d
=
œy
[
x
]-œy[
p
],
ªt
=
öf
;

114 if(
d
<0)

116 
i
=
X
-1; i>=0; i--)

117 if(
d
&
	`B
(
i
))

119 
ªt
=
	`mö
‘ë,
mi
[
x
][
i
]);

120 
x
=
∑
[x][
i
];

122  
ªt
;

123 
	}
}

125 
	$gë1
(
x
,
p
)

127 
d
=
œy
[
x
]-œy[
p
],
ªt
=0,
y
=
öf
;

128 if(
d
<0)

130 
i
=
X
-1; i>=0; i--)

131 if(
d
&
	`B
(
i
))

133 
ªt
=
	`max
‘ë,max(
dp1
[
x
][
i
],
mx
[x][i]-
y
));

134 
y
=
	`mö
(y,
mi
[
x
][
i
]);

135 
x
=
∑
[x][
i
];

137  
ªt
;

138 
	}
}

140 
	$gë2
(
x
,
p
)

142 
d
=
œy
[
x
]-œy[
p
],
ªt
=0,
y
=0;

143 if(
d
<0)

145 
i
=
X
-1; i>=0; i--)

146 if(
d
&
	`B
(
i
))

148 
ªt
=
	`max
‘ë,max(
dp2
[
x
][
i
],
y
-
mi
[x][i]));

149 
y
=
	`max
(y,
mx
[
x
][
i
]);

150 
x
=
∑
[x][
i
];

152  
ªt
;

153 
	}
}

155 
	$sﬁve
(
x
,
y
)

157 
p
=
	`lˇ
(
x
,
y
);

158 
g1
=
	`gë1
(
x
,
p
);

159 
g2
=
	`gë2
(
y
,
p
);

160 
gx
=
	`gëmx
(
y
,
p
);

161 
gi
=
	`gëmi
(
x
,
p
);

162  
	`max
(max(
g1
,
g2
),
gx
-
gi
);

163 
	}
}

165 
	$maö
()

167 
n
,
m
;

168 
	`sˇnf
("%d",&
n
)+1)

170 
t›
=0;

171 
i
=1; i<=
n
; i++)

173 
	`sˇnf
("%d",&
vÆ
[
i
]);

174 
li°
[
i
]=-1;

176 
li°
[0]=-1;

177 
	`sˇnf
("%d",&
m
);

178 
i
=0; i<
m
; i++)

180 
x
,
y
,
z
;

181 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
z
);

182 
es
[
i
].
f
=
x
,es[i].
t
=
y
,es[i].
l
=
z
;

184 
	`s‹t
(
es
,es+
m
,
cmp
);

185 
ªt
=
	`kruskÆ
(
m
,
n
),
qs
;

186 
	`¥ötf
("%d\n",
ªt
);

187 
	`mem£t
(
∑
,0,(pa));

188 
	`fûl
(
mx
[0],mx[
n
+1],-
öf
);

189 
	`fûl
(
mi
[0],mi[
n
+1],
öf
);

190 
	`fûl
(
dp1
[0],dp1[
n
+1],-
öf
);

191 
	`fûl
(
dp2
[0],dp2[
n
+1],-
öf
);

192 
œy
[0]=0;

193 
	`dfs
(1,0,1);

195 
	`sˇnf
("%d",&
qs
);

196 
i
=0; i<
qs
; i++)

198 
x
,
y
;

199 
	`sˇnf
("%d%d",&
x
,&
y
);

200 
	`¥ötf
("%d\n",
	`sﬁve
(
x
,
y
));

204 
	}
}

	@problems/zoj/zoj_3650.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x7fffffff

	)

5 
	#N
 100010

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	snode
{ 
LL
 
	mx
,
	mh
; }
	gno
[
N
];

12 
	$cmp
(
node
 
a
,nodê
b
){ á.
x
==b.x?a.
h
<b.h:a.x<b.x; 
	}
}

13 
	gdl
[
N
],
	gdr
[N],
	gddl
[N],
	gddr
[N];

14 
	gvÆ
[2]={ 
N
 , 0 };

15 
	gdp
[
N
];

17 
	s°a
{ 
	mx
,
	mi
; };

18 
	gve˘‹
<
	g°a
> 
	g°
;

20 
	s£g


22 
	snode
{ 
	ml
,
	mr
,
	mx
[2];

23 
gm
(){  (
	ml
+
	mr
)>>1; }

24 }
	mno
[
N
<<2];

26 
ölöe
 
L
(
i
){  
	mi
<<1; }

27 
ölöe
 
R
(
i
){  
	mi
<<1|1; }

29 
öô
(
id
,
l
,
r
)

31 
	mno
[
id
].
	mx
[0]=0,no[id].
	ml
=
l
,no[id].
	mr
=
r
,no[id].x[1]=0;

32 if(
	ml
==
r
) ;

33 
	mm
=
no
[
id
].
gm
();

34 
öô
(
L
(
id
),
l
,
m
);

35 
öô
(
R
(
id
),
m
+1,
r
);

38 
upd©e
(
id
,
p
,
x
)

40 
	mm
=
no
[
id
].
gm
();

41 if(
	mno
[
id
].
	ml
==
no
[id].
r
)

43 
no
[
id
].
x
[0]=no[id].x[1]=x;

46 if(
	mm
>=
p
)

47 
upd©e
(
L
(
id
),
p
,
x
);

49 
upd©e
(
R
(
id
),
p
,
x
);

50 
	mno
[
id
].
	mx
[0]=
mö
(
no
[
L
(id)].
x
[0],no[
R
(id)].x[0]);

51 
	mno
[
id
].
	mx
[1]=
max
(
no
[
L
(id)].
x
[1],no[
R
(id)].x[1]);

54 
mycmp
(
a
,
b
,
èg
)

56 if(
	mèg
==0)

57  
mö
(
a
,
b
);

58  
max
(
a
,
b
);

61 
quîy
(
id
,
Œ
,
º
,
èg
)

63 
	ml
=
no
[
id
].
l
,
	mr
Úo[id].
r
,
	mm
Úo[id].
gm
();

64 if(
	mŒ
<=
l
&&
º
>=
r
)

65  
no
[
id
].
x
[
èg
];

66 
	mªt
=
vÆ
[
èg
];

67 if(
	mº
>=
l
&&
Œ
<=
m
)

68 
ªt
=
mycmp
‘ë,
quîy
(
L
(
id
),
Œ
,
º
,
èg
),tag);

69 if(
	mŒ
<=
r
&&
º
>
m
)

70 
ªt
=
mycmp
‘ë,
quîy
(
R
(
id
),
Œ
,
º
,
èg
),tag);

71  
	mªt
;

73 }
	gsg
;

75 
	$gë
(
now
,
l
,
r
,
èg
)

77 
LL
 
x
=
no
[
now
].x+
èg
*no[now].
h
;

78 
mid
;

79 ; 
l
<=
r
;)

81 
mid
=(
l
+
r
)>>1;

82 if(
èg
==-1)

84 if(
no
[
mid
].
x
>=x)

85 
r
=
mid
-1;

87 
l
=
mid
+1;

91 if(
no
[
mid
].
x
<=x)

92 
l
=
mid
+1;

94 
r
=
mid
-1;

97 if(
èg
==-1)

98  
l
;

99  
r
;

100 
	}
}

102 
	$gëid
(
x
)

104 
l
=0,
r
=
°
.
	`size
()-1,
mid
;

105 ; 
l
<=
r
;)

107 
mid
=(
l
+
r
)>>1;

108 if(
°
[
mid
].
x
>=x)

109 
r
=
mid
-1;

111 
l
=
mid
+1;

113  
°
[
l
].
i
;

114 
	}
}

116 
	$maö
()

118 
n
;

119 
	`sˇnf
("%d",&
n
)+1)

121 
i
=1; i<=
n
; i++)

122 
	`sˇnf
("%Œd%Œd",&
no
[
i
].
x
,&no[i].
h
);

123 
	`s‹t
(
no
+1,no+
n
+1,
cmp
);

124 
dl
[1]=1;

125 
i
=2; i<=
n
; i++)

126 
dl
[
i
]=
	`gë
(i,1,i-1,-1);

127 
dr
[
n
]=n;

128 
i
=
n
-1; i>=1; i--)

129 
dr
[
i
]=
	`gë
(i,i+1,
n
,1);

131 
sg
.
	`öô
(1,1,
n
);

132 
ddl
[1]=1;

133 
sg
.
	`upd©e
(1,1,1);

134 
i
=2; i<=
n
; i++)

136 
l
=
dl
[
i
],
r
=i-1;

137 if(
l
>
r
)

138 
ddl
[
i
]=i;

140 
ddl
[
i
]=
sg
.
	`quîy
(1,
l
,
r
,0);

141 
sg
.
	`upd©e
(1,
i
,
ddl
[i]);

143 
sg
.
	`öô
(1,1,
n
);

144 
ddr
[
n
]=n;

145 
sg
.
	`upd©e
(1,
n
,n);

146 
i
=
n
-1; i>=1; i--)

148 
r
=
dr
[
i
],
l
=i+1;

149 if(
l
>
r
)

150 
ddr
[
i
]=i;

152 
ddr
[
i
]=
sg
.
	`quîy
(1,
l
,
r
,1);

153 
sg
.
	`upd©e
(1,
i
,
ddr
[i]);

156 
dp
[0]=0;

157 
°
.
	`˛ór
();

158 
°a
 
tmp
;

159 
i
=1; i<=
n
; i++)

161 
dp
[
i
]=dp[
ddl
[i]-1]+1;

162 
xx
=-1,
sz
=
°
.
	`size
();

163 if(
sz
>0)

165 
xx
=
	`max
(xx,
°
[
sz
-1].
x
);

166 if(
xx
>=
i
)

168 
id
=
	`gëid
(
i
);

169 
dp
[
i
]=
	`mö
(dp[i],dp[
id
-1]+1);

172 
°
.
	`˛ór
();

174 if(
ddr
[
i
]>=
xx
)

176 
tmp
.
x
=
ddr
[
i
];

177 
tmp
.
i
=i;

178 ; 
°
.
	`size
()>0; )

180 if(
dp
[
tmp
.
i
-1]<=dp[
°
[°.
	`size
()-1].i-1])

181 
°
.
	`p›_back
();

184 
°
.
	`push_back
(
tmp
);

187 
	`¥ötf
("%d\n",
dp
[
n
]);

190 
	}
}

	@problems/zoj/zoj_3651.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#MOD
 1234567890

	)

6 
usög
 
«me•a˚
 
	g°d
;

7 
	tLL
;

9 
LL
 
	gªt
[4][4],
	gm©
[4][4],
	gtmp
[4][4];

10 
LL
 
	gp
,
	gq
,
	gn
;

12 
	snode
{ 
LL
 
	mi
,
	ma
,
	mb
; }
	gno
[9];

14 
	$mul
(
LL
 
c
[][4],LL 
a
[][4],LL 
b
[][4])

16 
	`mem£t
(
tmp
,0,(tmp));

17 
i
=0; i<4; i++)

18 
j
=0; j<4; j++)

19 
k
=0; k<4; k++)

20 
tmp
[
i
][
j
]=—mp[i][j]+
a
[i][
k
]*
b
[k][j])%
MOD
;

21 
i
=0; i<4; i++)

22 
j
=0; j<4; j++)

23 
c
[
i
][
j
]=
tmp
[i][j];

24 
	}
}

26 
	$ˇl
(
LL
 
a
,LL 
b
,LL 
x
,LL 
y
,LL 
n
)

28 
	`mem£t
(
ªt
,0,(ret));

29 
	`mem£t
(
m©
,0,(mat));

30 
i
=0; i<4; i++)

31 
ªt
[
i
][i]=1;

32 
m©
[0][0]=mat[0][1]=mat[0][2]=mat[1][3]=mat[2][3]=1;

33 
m©
[1][0]=m©[1][1]=m©[3][2]=(
q
-1)%
MOD
;

34 
m©
[2][0]=m©[2][2]=m©[3][1]=(
p
-1)%
MOD
;

35 
m©
[3][3]=(
p
>1&&
q
>1)?’+q-3)%
MOD
:0;

36 ; 
n
;)

38 if(
n
&1)

39 
	`mul
(
ªt
,ªt,
m©
);

40 
	`mul
(
m©
,mat,mat);

41 
n
>>=1;

43 
LL
 
º
=0;

44 
°
=0;

45 
°
=(
a
!=
x
)*2+(
b
!=
y
);

46 
i
=0; i<3; i++)

47 
º
=‘r+
ªt
[
i
][
°
])%
MOD
;

48  (
º
);

49 
	}
}

51 
	$cmp
(
node
 
a
,nodê
b
){ á.
i
<b.i; 
	}
}

53 
	$maö
()

55 
	`sˇnf
("%Œd%Œd%Œd",&
n
,&
p
,&
q
)+1)

57 
i
=0; i<8; i++)

58 
	`sˇnf
("%Œd%Œd%Œd",&
no
[
i
].i,&no[i].
a
,&no[i].
b
);

59 
	`s‹t
(
no
,no+8,
cmp
);

60 
no
[8]=no[0];

61 
LL
 
¥e
=
no
[0].
i
,
º
=1;

62 
i
=1; i<9; i++)

64 if(
no
[
i
].i==
¥e
)

66 if(
no
[
i
].
a
=Úo[i-1].a&&no[i].
b
==no[i-1].b)

68 
º
=0;

72 
º
Ùr*
	`ˇl
(
no
[
i
].
a
,no[i].
b
,no[i-1].a,no[i-1].b,“o[i].i-
¥e
+
n
)%n-1)%
MOD
;

74 
¥e
=
no
[
i
].i;

76 
	`¥ötf
("%Œd\n",
º
);

79 
	}
}

	@problems/zoj/zoj_3652.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<c°rög
>

4 
	#öf
 0x3fffffff

	)

5 
	#S
 2000011

	)

6 
	#N
 55

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gm
,
	gn
,
	göû
,
	gm©
[
N
][N],
	gboss
[N][N],
	gbôch
;

11 
	gdú
[4][2]={{1,0},{-1,0},{0,1},{0,-1}};

13 
ölöe
 
	$öbﬂrd
(
x
,
y
){  1<=x&&x<=
m
&&1<=y&&y<=
n
; 
	}
}

14 
	snode
{ 
	mx
,
	my
,
	ml
,
	mc
,
	m°
; }
	g°
,
	ged
,
	gq
[
S
];

15 
	gdp
[
N
][N][N][11];

17 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

19 
	$bfs
()

21 
l
,
r
;

22 
i
=0; i<=
m
; i++)

23 
j
=0; j<=
n
; j++)

24 
k
=0; k<
	`B
(
bôch
); k++)

25 
u
=0; u<11; u++)

26 
dp
[
i
][
j
][
k
][
u
]=
öf
;

27 
°
.
c
=0,°.
l
=0,°.°=
	`B
(
bôch
)-1;

28 
q
[
l
=
r
=0]=
°
;

29 
dp
[
°
.
x
][°.
y
][°.°][°.
l
]=0;

30 ; 
l
<=
r
;)

32 
node
 
now
=
q
[
l
++],
√xt
;

33 if(
now
.
l
==0)

35 
now
.
l
=
öû
;

36 
now
.
c
++;

37 
q
[++
r
]=
now
;

40 
i
=0; i<4; i++)

42 
xx
=
now
.
x
+
dú
[
i
][0],
yy
Úow.
y
+dú[i][1],
∆
Úow.
l
,
nc
Úow.
c
,
nb
Úow.
°
;

43 if(!
	`öbﬂrd
(
xx
,
yy
))

45 if(
m©
[
xx
][
yy
]==-1)

47 if(
m©
[
xx
][
yy
]>0)

49 if(
now
.
°
&
	`B
(
m©
[
xx
][
yy
]-1))

51 
∆
=0;

54 
∆
--;

57 
∆
--;

59 if(
boss
[
xx
][
yy
]>0)

60 if(
now
.
°
&
	`B
(
boss
[
xx
][
yy
]-1))

61 
nb
=
now
.
°
-
	`B
(
boss
[
xx
][
yy
]-1);

63 if(
nc
<
dp
[
xx
][
yy
][
nb
][
∆
])

65 
dp
[
xx
][
yy
][
nb
][
∆
]=
nc
;

66 
√xt
.
c
=
nc
,√xt.
l
=
∆
,√xt.
°
=
nb
;

67 
√xt
.
x
=
xx
,√xt.
y
=
yy
;

68 if(
r
+1>=
S
)

70 
q
[++
r
]=
√xt
;

74 
	}
}

76 
	$maö
()

78 
	`sˇnf
("%d%d%d",&
m
,&
n
,&
öû
)+1)

80 
	`mem£t
(
boss
,0,(boss));

81 
i
=1; i<=
m
; i++)

82 
j
=1; j<=
n
; j++)

83 
	`sˇnf
("%d",&
m©
[
i
][
j
]);

84 
	`sˇnf
("%d",&
bôch
);

85 
i
=1; i<=
bôch
; i++)

87 
x
,
y
;

88 
	`sˇnf
("%d%d",&
x
,&
y
);

89 
boss
[
x
][
y
]=
i
;

91 
	`sˇnf
("%d%d%d%d",&
°
.
x
,&°.
y
,&
ed
.x,&ed.y);

92 
	`bfs
();

93 
º
=
öf
;

94 
i
=0; i<
	`B
(
bôch
); i++)

96 
u
=0; u<=
öû
; u++)

98 
º
=
	`mö
‘r,
dp
[
ed
.
x
][ed.
y
][
i
][
u
]);

101 if(
º
>=
öf
)

102 
	`puts
("WeÇeed God's help!");

104 
	`¥ötf
("%d\n",
º
);

107 
	}
}

	@problems/zoj/zoj_3653.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<ve˘‹
>

4 
	#öf
 0x3fffffff

	)

5 
	#T
 10010

	)

6 
	#N
 1010

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gdp
[
T
][128];

11 
	snode
{ 
	mr
,
	mv
;

12 
node
(
º
,
vv
){ 
	mr
Ùr,
	mv
=vv; }

13 
node
(){;}

15 
	gve˘‹
<
	gnode
> 
	gvec
[
T
];

17 
	$maö
()

19 
n
,
t
,
k
,
l
,
ts
,
mxt
;

20 
	`sˇnf
("%d",&
ts
);

21 
	`sˇnf
("%d%d%d%d",&
n
,&
t
,&
k
,&
l
)+1,
ts
--)

23 
mxt
=0;

24 
i
=0; i<
T
; i++)

25 
vec
[
i
].
	`˛ór
();

26 
i
=0; i<
n
; i++)

28 
l
,
r
,
v
;

29 
	`sˇnf
("%d%d%d",&
l
,&
r
,&
v
);

30 
mxt
=
	`max
(mxt,
r
);

31 
vec
[
l
].
	`push_back
(
	`node
(
r
,
v
));

33 
	`fûl
(
dp
[0],dp[
T
-1],-
öf
);

34 
dp
[0][0]=0;

35 
ªt
=-
öf
;

36 
i
=0; i<
T
; i++)

38 
j
=1; j<=
t
+
l
&&j<=
i
; j++)

40 
dp
[
i
][
j
]=
	`max
(dp[i][j],dp[i-1][j-1]-max(j-
t
,0)*max(j-t,0)+max(j-1-t,0)*max(j-1-t,0));

42 
j
=
t
; j<Ò+
l
; j++)

44 
¶
=
k
+(
j
-
t
);

45 if(
i
-
¶
>=0)

46 
dp
[
i
][0]=
	`max
(dp[i][0],dp[i-
¶
][
j
]);

48 
j
=0; j<=
t
+
l
; j++)

50 if(
j
>
i
)

52 if(
dp
[
i
][
j
]<=-
öf
) ;

53 
u
=0; u<
vec
[
i
].
	`size
(); u++)

55 
node
 
now
=
vec
[
i
][
u
];

56 
d
=
now
.
r
-
i
;

57 if(
d
<=
t
+
l
-
j
)

59 
dp
[
i
+
d
][
j
+d]=
	`max
(dp[i+d][j+d],dp[i][j]+
now
.
v
+max(j-
t
,0)*max(j-t,0)-max(j+d-t,0)*max(j+d-t,0));

64 
i
=0; i<
T
-1; i++)

65 
j
=0; j<=
i
&&j<=
t
+
l
; j++)

66 
ªt
=
	`max
‘ë,
dp
[
i
][
j
]);

67 
	`¥ötf
("%d\n",
ªt
);

70 
	}
}

	@problems/zoj/zoj_3654.cpp

1 
	~<c°dio
>

2 
	tLL
;

4 
	$maö
()

6 
LL
 
x
,
y
;

7 
	`sˇnf
("%Œd",&
x
)+1)

9 
sig
;

12 
sig
=
	`gëch¨
();

13 if(
sig
=='\n')

15 if(
sig
=='-')

17 
	`sˇnf
("%Œd",&
y
);

18 
x
-=
y
;

22 
	`sˇnf
("%Œd",&
y
);

23 
x
+=
y
;

26 
LL
 
u
,
v
;

27 
	`sˇnf
("%Œd%Œd",&
u
,&
v
);

28 if(
u
==9)

29 
	`puts
("A");

30 if(
v
==9)

31 
	`puts
("B");

32 if(
x
==
u
)

33 
	`puts
("B");

35 
	`puts
("A");

37 
	}
}

	@problems/zoj/zoj_3666.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#N
 11000

	)

5 
usög
 
«me•a˚
 
	g°d
;

7 
	gve˘‹
<> 
	gå
[
N
];

8 
	gèg
[
N
];

10 
	gÊag
[4][4]={0,0,0,0,

16 
	gn
;

18 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

20 
	$dfs
(
now
)

22 
ªt
=0;

23 
i
=0; i<
å
[
now
].
	`size
(); i++)

25 
to
=
å
[
now
][
i
];

26 if(
èg
[
to
]>=0)

28 if(
èg
[
to
]&
	`B
(0))

30 
ªt
|=
	`B
(1);

31 if(
èg
[
to
]&
	`B
(2))

32 
ªt
|=
	`B
(2);

35 
ªt
|=
	`B
(0);

39 
tg
=
	`dfs
(
to
);

40 if(
tg
&
	`B
(0))

42 
ªt
|=
	`B
(1);

43 if(
tg
&
	`B
(2))

44 
ªt
|=
	`B
(2);

47 
ªt
|=
	`B
(0);

50 if(
ªt
==0)

51 
ªt
=
	`B
(0);

52 if((
ªt
&
	`B
(0))&&(ret&B(1)))

53 
ªt
|=
	`B
(2);

54  
èg
[
now
]=
ªt
;

55 
	}
}

57 
	$maö
()

59 
ˇ
=1;

60 
	`sˇnf
("%d",&
n
)+1)

62 
i
=0; i<
n
; i++)

63 
å
[
i
].
	`˛ór
();

64 
	`¥ötf
("Ca£ %d:\n",
ˇ
++);

65 
i
=0; i<
n
-1; i++)

67 
m
;

68 
	`sˇnf
("%d",&
m
);

69 
j
=0; j<
m
; j++)

71 
x
;

72 
	`sˇnf
("%d",&
x
);

73 
å
[
i
].
	`push_back
(
x
-1);

76 
i
=0; i<
n
; i++)

77 
èg
[
i
]=-1;

78 
i
=0; i<
n
; i++)

79 if(
èg
[
i
]==-1)

81 
	`dfs
(
i
);

88 
q
;

89 
	`sˇnf
("%d",&
q
);

90 
i
=0; i<
q
; i++)

92 
m
,
x
;

93 
	`sˇnf
("%d%d",&
m
,&
x
);

94 
ªt
=
èg
[
x
-1]&3;

95 
j
=1; j<
m
; j++)

97 
x
;

98 
	`sˇnf
("%d",&
x
);

99 
ªt
=
Êag
[
èg
[
x
-1]&3][ret];

101 if(
ªt
&
	`B
(1))

102 
	`puts
("Alice");

104 
	`puts
("Bob");

108 
	}
}

	@problems/zoj/zoj_3668.cpp

1 
	~<c°dio
>

2 
	~<ˇs£π
>

3 
	~<ve˘‹
>

4 
	~<utûôy
>

5 
	#N
 1111

	)

6 
	#M
 1000000

	)

7 
	#öf
 0x3fffffff

	)

9 
usög
 
«me•a˚
 
	g°d
;

11 
	gn
,
	gm
;

12 
	gq
[
M
],
	gdis
[
N
],
	g˙t
[N],
	göq
[N];

13 
	gve˘‹
<
	g∑ú
<,> > 
	gvec
[
N
];

15 
	$ö£π
(
f
,
t
,
l
)

17 
vec
[
f
].
	`push_back
(
	`make_∑ú
(
t
,
l
));

18 
	}
}

20 
ölöe
 
	$gë
(&
i
){  (++i)%
M
; 
	}
}

22 
	$•Á
(
s
)

24 
l
=0,
r
=1;

25 
q
[0]=
s
;

26 
dis
[
s
]=0;

27 
öq
[
s
]=1;

29 ; 
l
!=
r
;)

31 
now
=
q
[
l
++];

32 i‡(
l
 =
M
)Ü = 0;

33 
öq
[
now
]=0;

34 if(
˙t
[
now
]>
n
)  0;

36 
i
=0; i<
vec
[
now
].
	`size
(); i++)

38 
to
=
vec
[
now
][
i
].
fú°
,
l
=vec[now][i].
£c⁄d
;

39 if(
dis
[
now
]+
l
<dis[
to
])

41 
dis
[
to
]=dis[
now
]+
l
;

42 if(
öq
[
to
]) ;

43 
q
[
r
++]=
to
;

44 i‡(
r
 =
M
)Ñ = 0;

45 
˙t
[
to
]++;

46 
öq
[
to
]=1;

51 
	}
}

53 
	$maö
()

55 
	`sˇnf
("%d%d",&
n
,&
m
)+1)

57 
i
=0; i<
n
+3; i++)

58 
vec
[
i
].
	`˛ór
();

59 
i
=0; i<
m
; i++)

61 
l
,
r
,
x
,
y
;

62 
	`sˇnf
("%d%d%d%d",&
l
,&
r
,&
x
,&
y
);

63 
	`ö£π
(
l
-1,
r
,
y
);

64 
	`ö£π
(
r
,
l
-1,-
x
);

66 
i
=1; i<=
n
; i++)

68 
	`ö£π
(
i
-1,i,10000);

69 
	`ö£π
(
i
,i-1,10000);

71 
i
=0; i<=
n
+2; i++)

72 
dis
[
i
]=
öf
,
˙t
[i]=0,
öq
[i]=0;

73 
èg
=
	`•Á
(0);

74 if(
èg
)

76 
	`¥ötf
("%d",
dis
[1]);

77 
i
=2; i<=
n
; i++)

78 
	`¥ötf
(" %d",
dis
[
i
]-dis[i-1]);

79 
	`puts
("");

82 
	`puts
("The spacecraft is broken!");

85 
	}
}

	@problems/zoj/zoj_3674.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	~<m≠
>

4 
	~<£t
>

5 
	~<ve˘‹
>

6 
	~<°rög
>

7 
	~<io°ªam
>

8 
	~<s°ªam
>

9 
	#N
 500

	)

11 
usög
 
«me•a˚
 
	g°d
;

13 
	gn
,
	gm
,
	gt›
;

14 
	gm≠
<
	g°rög
,> 
	gmp
;

15 
	gm≠
<
	g°rög
,> 
	g™i
;

16 
	gm≠
<,
	g°rög
> 
	g©i
;

17 
	g£t
<> 
	g°
[
N
];

18 
	g£t
<> 
	g™s
;

19 
	g£t
<>::
ôî©‹
 
ô
;

20 
	gve˘‹
<
	g°rög
> 
	gvec
;

22 
	g£t
<> 
gao
(
£t
<> 
a
,£t<> 
b
)

24 
	g£t
<> 
	gªt
;

25 
	gô
=
b
.
begö
(); it!=b.
íd
(); it++)

26 if(
	ga
.
cou¡
(*
ô
))

27 
	gªt
.
ö£π
(*
ô
);

28  
	gªt
;

31 
	$maö
()

33 
	`sˇnf
("%d",&
n
)+1)

35 
°rög
 
s
,
ts
;

36 
t›
=0;

37 
i
=0; i<
n
; i++)

38 
°
[
i
].
	`˛ór
();

39 
mp
.
	`˛ór
();

40 
™i
.
	`˛ór
();

41 
©i
.
	`˛ór
();

42 
™s
.
	`˛ór
();

43 
i
=0; i<
n
; i++)

45 
cö
>>
s
;

46 
	`gëch¨
();

47 
™i
[
s
]=
i
;

48 
	`gëlöe
(
cö
,
s
);

49 
i°rög°ªam
 
	`is
(
s
);

50 
is
>>
ts
)

52 if(
mp
.
	`cou¡
(
ts
)<=0)

54 
©i
[
t›
]=
ts
;

55 
mp
[
ts
]=
t›
++;

57 
°
[
i
].
	`ö£π
(
mp
[
ts
]);

60 
	`sˇnf
("%d",&
m
);

61 
	`gëch¨
();

62 
i
=0; i<
m
; i++)

64 
	`gëlöe
(
cö
,
s
);

65 
i°rög°ªam
 
	`is
(
s
);

66 
is
>>
ts
;

67 
id
=
™i
[
ts
];

68 
™s
=
°
[
id
];

69 
is
>>
ts
)

71 
id
=
™i
[
ts
];

72 
™s
=
	`gao
◊ns,
°
[
id
]);

74 if(
™s
.
	`size
()>0)

76 
vec
.
	`˛ór
();

77 
ô
=
™s
.
	`begö
(); it!˜ns.
	`íd
(); it++)

79 
vec
.
	`push_back
(
©i
[*
ô
]);

81 
	`s‹t
(
vec
.
	`begö
(),vec.
	`íd
());

82 
cout
<<
vec
[0];

83 
i
=1; i<
vec
.
	`size
(); i++)

84 
cout
<<" "<<
vec
[
i
];

85 
	`puts
("");

88 
	`puts
("NO");

92 
	}
}

	@template/AC_Auto_Machine.cpp

2 
	~<c°rög
>

3 
	~<c°dio
>

4 
	#N
 52

	)

5 
	#S
 1000

	)

7 
	snode
{ 
	m√xt
[
N
],
	mÁû
,
	mis
; }
	gno
[
S
];

8 
	gt›
,
	gq
[
S
];

10 
ölöe
 
	$gë_öd
(
x
){  x-'a'; 
	}
}

12 
	$öô
()

14 
t›
=1;

15 
i
=0; i<
S
; i++)

17 
no
[
i
].
is
=0,no[i].
Áû
=-1;

18 
j
=0; j<
N
; j++)

19 
no
[
i
].
√xt
[
j
]=-1;

21 
	}
}

23 
	$ö£π
(
s
[])

25 
l
=
	`°æí
(
s
),
p
=0;

26 
i
=0; i<
l
; i++)

28 
ii
=
	`gë_öd
(
s
[
i
]);

29 if(
no
[
p
].
is
)

31 if(
no
[
p
].
√xt
[
ii
]==-1)

32 
no
[
p
].
√xt
[
ii
]=
t›
++;

33 
p
=
no
[p].
√xt
[
ii
];

35 
no
[
p
].
is
=1;

36 
	}
}

38 
	$buûd_ac
(
n
)

40 
l
,
r
;

41 
q
[
l
=
r
=0]=0;

42 ; 
l
<=
r
;)

44 
now
=
q
[
l
++];

45 
i
=0; i<
n
; i++)

47 
ii
=
no
[
now
].
√xt
[
i
];

48 if(
ii
==-1)

50 if(
now
==0)

51 
no
[
now
].
√xt
[
i
]=0;

53 
no
[
now
].
√xt
[
i
]Úo[no[now].
Áû
].next[i];

57 if(
now
==0)

58 
no
[
ii
].
Áû
=0;

61 
no
[
ii
].
Áû
Úo[no[
now
].Áû].
√xt
[
i
];

62 if(
no
[no[
ii
].
Áû
].
is
)

63 
no
[
ii
].
is
=1;

65 
q
[++
r
]=
ii
;

69 
	}
}

77 
	~<c°dio
>

78 
	~<io°ªam
>

79 
	~<c°rög
>

80 
	~<°rög
>

81 
	~<ve˘‹
>

83 
usög
 
«me•a˚
 
	g°d
;

84 
	tLL
;

86 c⁄° 
	gX
 = 2;

87 c⁄° 
	gN
 = 1000010;

89 
	gq
[
N
];

91 
	snode
 {

92 
	m√xt
[
X
],
	mÁû
,
	mis
;

93 
LL
 
	m˙t
;

94 
öô
() {

95 
	mÁû
=-1;

96 
	mis
=0;

97 
	m˙t
=0;

98 
	mi
=0; i<
	mX
; i++)

99 
	m√xt
[
i
]=-1;

103 
	sAC
 {

104 
node
 
	mno
[
N
];

105 
	mt›
;

107 
öô
() {

108 
	mt›
=1;

109 
	mno
[0].
öô
();

112 
√xt_node
() {

113 
	mno
[
t›
].
öô
();

114  
	mt›
++;

117 
gid
(
x
) {

118  
	mx
-'0';

121 
ö£π
(
°rög
 
s
) {

122 
	mp
=0;

123 
	mi
=0; i<
	ms
.
Àngth
(); i++) {

124 
	mii
=
gid
(
s
[
i
]);

125 if(
	mno
[
p
].
	m√xt
[
ii
]==-1) {

126 
no
[
t›
].
öô
();

127 
	mno
[
p
].
	m√xt
[
ii
]=
t›
++;

129 
	mp
=
no
[
p
].
√xt
[
ii
];

131 
	mno
[
p
].
	mis
=1;

134 
buûd_ac
() {

135 
	ml
=0,
	mr
=0;

136 
	mq
[0]=0;

137 ; 
	ml
<=
r
;) {

138 
	mnow
=
q
[
l
++];

139 
	mi
=0; i<
	mX
; i++) {

140 
	mni
=
no
[
now
].
√xt
[
i
];

141 if(
	mni
!=-1) {

142 
no
[
ni
].
˙t
Úo[ni].
is
;

143 if(
	mnow
==0) {

144 
no
[
ni
].
Áû
=0;

146 
	m¥e
=
no
[
now
].
Áû
;

147 ; 
	m¥e
!=-1&&
no
[
¥e
].
√xt
[
i
]==-1;)

148 
	m¥e
=
no
[
¥e
].
Áû
;

149 if(
	m¥e
==-1) {

150 
no
[
ni
].
Áû
=0;

153 
	mno
[
ni
].
	mÁû
=
no
[
¥e
].
√xt
[
i
];

154 
	mno
[
ni
].
	m˙t
+=
no
[no[ni].
Áû
].
˙t
;

157 
	mq
[++
r
]=
ni
;

163 
LL
 
quîy
(
°rög
 
s
) {

164 
	mp
=0;

165 
LL
 
	mªt
=0;

166 
	mi
=0; i<
	ms
.
Àngth
(); i++) {

167 
	mii
=
gid
(
s
[
i
]);

168 ; 
	mp
!=0 && 
no
[
p
].
√xt
[
ii
]==-1;)

169 
	mp
=
no
[
p
].
Áû
;

170 
	mp
=
no
[
p
].
√xt
[
ii
];

171 if(
	mp
==-1)

172 
p
=0;

173 
	mªt
+=
no
[
p
].
˙t
;

175  
	mªt
;

178 
föd
(
°rög
 
s
) {

179 
	mp
=0;

180 
	mi
=0; i<
	ms
.
Àngth
(); i++) {

181 
	mii
=
gid
(
s
[
i
]);

182 
	mp
=
no
[
p
].
√xt
[
ii
];

183 if(
	mp
==-1)

186 if(
	mno
[
p
].
	mis
)  1;

189 }
	ghp
,
	gbuf
;

191 
	gts
[5*
N
];

193 
	$dfs
(
p1
,
p2
) {

194 
i
=0; i<2; i++) {

195 if(
buf
.
no
[
p1
].
√xt
[
i
]!=-1) {

196 if(
hp
.
no
[
p2
].
√xt
[
i
]==-1) {

197 
hp
.
no
[
p2
].
√xt
[
i
]=hp.
	`√xt_node
();

199 
n2
=
hp
.
no
[
p2
].
√xt
[
i
];

200 
n1
=
buf
.
no
[
p1
].
√xt
[
i
];

201 
hp
.
no
[
n2
].
is
|=
buf
.no[
n1
].is;

202 
	`dfs
(
n1
,
n2
);

205 
	}
}

208 
	$mîge
() {

209 
	`dfs
(0,0);

210 
buf
.
	`öô
();

211 
hp
.
	`buûd_ac
();

212 
	}
}

	@template/KMP_match.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

5 
	$kmp_Áû
(
s
[],
Áû
[])

7 
i
,
p
,
l
=
	`°æí
(
s
);

8 
Áû
[0]=-1,
i
=1; i<
l
; i++)

10 
p
=
Áû
[
i
-1];

11 
p
>=0&&
s
[p+1]!=s[
i
]Ëp=
Áû
[p];

12 if(
s
[
p
+1]==s[
i
]Ë
Áû
[i]=p+1;

13 
Áû
[
i
]=-1;

15 
	}
}

17 
	$kmp_m©ch
(
s
[],
t
[],
Áû_t
[])

19 
SL
=
	`°æí
(
s
),
TL
=°æí(
t
),
s_i
,
t_i
;

20 
	`kmp_Áû
(
t
,
Áû_t
);

21 
s_i
=
t_i
=0; s_i<
SL
&&t_i<
TL
;)

23 if(
s
[
s_i
]==
t
[
t_i
]) s_i++,t_i++;

24 if(
t_i
==0Ë
s_i
++;

25 
t_i
=
Áû_t
[t_i-1]+1;

27  
t_i
<
TL
?-1:
s_i
-t_i;

28 
	}
}

	@template/KM_match.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 1001

	)

6 
	#S
 1000100

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

12 
	g¶ack
[
N
],
	gvÆx
[N],
	gvÆy
[N],
	gm©
[N][N],
	gm2y
[N],
	gvx
[N],
	gvy
[N],
	gli°
[N],
	gt›
;

14 
	$ö£π
(
f
,
t
)

16 
e
[
t›
].
f
=f,e[t›].
t
=t;

17 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

18 
	}
}

20 
	$föd_∑th
(
now
)

22 
t
,
i
,
v
;

23 
vx
[
now
]=1;

24 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

26 
t
=
e
[
i
].t;

27 
v
=
vÆx
[
now
]+
vÆy
[
t
]-
m©
[now][t];

28 if(!
vy
[
t
]&&
v
==0)

30 
vy
[
t
]=1;

31 if(
m2y
[
t
]==-1||
	`föd_∑th
(m2y[t]))

33 
m2y
[
t
]=
now
;

37 if(
¶ack
[
t
]>
v
)

38 
¶ack
[
t
]=
v
;

41 
	}
}

43 
	$km_m©ch
(
n
)

45 
i
,
j
,
k
,
ªt
=0,
d
;

46 
i
=0; i<
n
; i++)

48 
m2y
[
i
]=-1;

49 
vÆx
[
i
]=-
öf
,
vÆy
[i]=0;

50 
j
=0; j<
n
; j++)

51 
vÆx
[
i
]=
	`max
(vÆx[i],
m©
[i][
j
]);

53 
i
=0; i<
n
; i++)

55 
	`mem£t
(
vx
,0,(vx));

56 
	`mem£t
(
vy
,0,(vy));

57 
k
=0; k<
n
; k++)

58 
¶ack
[
k
]=
öf
;

59 ; !
	`föd_∑th
(
i
); )

61 
d
=
öf
;

62 
k
=0; k<
n
; k++)

63 if(!
vy
[
k
]&&
¶ack
[k]<
d
)

64 
d
=
¶ack
[
k
];

65 
k
=0; k<
n
; k++)

67 if(
vx
[
k
])

68 
vÆx
[
k
]-=
d
,
vx
[k]=0;

69 if(
vy
[
k
])

70 
vÆy
[
k
]+=
d
,
vy
[k]=0;

74 
i
=0; i<
n
; i++)

75 
ªt
+=
vÆx
[
i
]+
vÆy
[i];

76  
ªt
;

77 
	}
}

	@template/LCA_online.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#N
 20000

	)

4 
	#S
 100000

	)

6 
	tLL
;

8 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

9 
	snode
{ 
	mh
,
	mi
; }
	gno
[
N
];

10 
	gv
[
N
],
	gt›
,
	gli°
[N],
	gç
,
	gdp
[N][17],
	gpos
[N];

12 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

13 
	$big
(
i
,
j
){  
no
[i].
h
>no[j].h?i:j; 
	}
}

14 
	$smÆl
(
i
,
j
){  
no
[i].
h
<no[j].h?i:j; 
	}
}

16 
	$ö£π
(
f
,
t
)

18 
e
[
t›
].
f
=f,e[t›].
t
=t;

19 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

20 
	}
}

22 
	$dfs
(
now
,
l
)

24 
v
[
now
]=1;

25 
pos
[
now
]=
ç
;

26 
no
[
ç
].
i
=
now
;

27 
no
[
ç
++].
h
=
l
;

28 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

30 
to
=
e
[
i
].
t
;

31 if(!
v
[
to
])

33 
	`dfs
(
to
,
l
+1);

34 
no
[
ç
].
i
=
now
;

35 
no
[
ç
++].
h
=
l
;

38 
	}
}

40 
	$RMQ
(
n
)

42 
k
=(
	`log
(1.0*
n
)/log(2.0));

43 
i
=1; i<=
n
; i++)

44 
dp
[
i
][0]=i;

45 
j
=1; j<=
k
; j++)

46 
i
=1; i<=
n
; i++)

48 if(
i
+
	`B
(
j
)-1>
n
)

50 
dp
[
i
][
j
]=
	`smÆl
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

52 
	}
}

54 
	$quîy
(
l
,
r
)

56 
d
,
k
;

57 if(
l
>
r
Ë
d
=l,l=r,r=d;

58 
d
=
r
-
l
+1;

59 
k
=(
	`log
(1.0*
d
)/log(2.0));

60  
	`smÆl
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

61 
	}
}

	@template/LCA_tarjan.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#N
 50000

	)

4 
	#S
 200000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	sedge
{ 
	mf
,
	mt
,
	ml
,
	mn
; }
	ge
[
S
];

9 
	snode
{ 
	mt
,
	mr
,
	mi
;

10 
node
(
a
,
b
,
c
){ 
	mt
˜,
	mr
=b,
	mi
=c; }

12 
	gve˘‹
<
	gnode
> 
	gq
[
N
];

13 
	gv
[
N
],
	gvis
[N],
	gÀn
[N],
	gªt
[N],
	gli°
[N],
	gt›
;

15 
	$ö£π
(
f
,
t
,
l
)

17 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
	suföd


23 
	mp
[
N
],
	mt
;

24 
öô
(){ 
	mi
=0; i<
	mN
; 
	mp
[
i
]=i++); }

25 
run
(&
x
)

27 
	my
=
x
;

28 ; (
	mt
=
p
[
x
])!=x; 
	mx
ı[x],
	mp
[
t
]=p[x]);

29 ; 
	mp
[
t
=
y
]!=
x
;Ö[y]=x,
	my
=
p
[t]);

31 
is‰õnd
(
i
,
j
)

33 
run
(
i
);Ñun(
j
);

34  
	mi
==
j
;

36 
£t‰õnd
(
i
,
j
)

38 
run
(
i
);Ñun(
j
);

39 
	mp
[
i
]=
j
;

41 }
	guf
;

43 
	$èrj™
(
now
,
l
)

45 
Àn
[
now
]=
l
;

46 
v
[
now
]=1;

47 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

49 
to
=
e
[
i
].
t
;

50 if(
v
[
to
])

52 
	`èrj™
(
to
,
l
+
e
[
i
].l);

53 
uf
.
	`£t‰õnd
(
to
,
now
);

55 
vis
[
now
]=1;

56 
i
=0; i<
q
[
now
].
	`size
(); i++)

58 
to
=
q
[
now
][
i
].
t
;

59 if(!
vis
[
to
])

61 
p
=
to
,
ii
=
q
[
now
][
i
].i;

62 
uf
.
	`run
(
p
);

63 
ªt
[
ii
]=
l
+
Àn
[
to
]-2*Àn[
p
];

64 
q
[
now
][
i
].
r
=
l
+
Àn
[
to
]-2*Àn[
p
];

66 
	}
}

	@template/MST_cnt.cpp

1 
	~<ve˘‹
>

2 
	~<c°rög
>

3 
	~<c°dio
>

4 
	~<Æg‹ôhm
>

5 
	#M
 1011

	)

6 
	#N
 111

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gn
,
	gm
,
	gmod
,
	gvis
[
N
];

11 
	sedge
{ 
	mf
,
	mt
,
	ml
; }
	ge
[
M
];

13 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
<b.l; 
	}
}

14 
	gö
[
N
][N];

15 
LL
 
	gm©
[
N
][N];

16 
	gve˘‹
<> 
	gvec
[
N
];

18 
	suföd


20 
	mp
[101];

21 
öô
(
n
)

23 
	mi
=0; i<
	mn
; i++Ë
	mp
[
i
]=i;

25 
Á
(
x
)

27 
	my
=
x
,
	mt
;

28 ; 
	mx
!=
p
[
x
]; x=p[x]);

29 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

30  
	mx
;

32 
£tf
(
a
,
b
)

34 
	ma
=
Á
(
a
),
	mb
=Á(
b
);

35 
	mp
[
a
]=
b
;

36  
	ma
!=
b
;

38 }
	guf
,
	gnowu
;

40 
LL
 
	$ˇlm©
(
LL
 
m©
[][
N
],
n
)

42 
i
=0;i<
n
;i++)

43 
j
=0;j<
n
;j++)

44 
m©
[
i
][
j
]%=
mod
;

45 
LL
 
ªt
=1;

46 
i
=1; i<
n
; i++)

48 
j
=
i
+1; j<
n
; j++)

49 
m©
[
j
][
i
]!=0)

51 
LL
 
t
=
m©
[
i
][i]/m©[
j
][i];

52 
k
=
i
; k<
n
; k++)

53 
m©
[
i
][
k
]=(m©[i][k]-m©[
j
][k]*
t
)%
mod
;

54 
k
=
i
; k<
n
; k++)

55 
	`sw≠
(
m©
[
i
][
k
],m©[
j
][k]);

56 
ªt
=-ret;

58 if(
m©
[
i
][i]==0)

60 
ªt
Ùë*
m©
[
i
][i]%
mod
;

62  (
ªt
+
mod
)%mod;

63 
	}
}

65 
	$maö
()

67 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
mod
)!=
EOF
)

69 if(
n
==0&&
m
==0&&
mod
==0)

71 
i
=0; i<
m
; i++)

73 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
l
);

74 
e
[
i
].
f
--,e[i].
t
--;

76 
	`s‹t
(
e
,e+
m
,
cmp
);

77 
uf
.
	`öô
(
n
);

78 
nowu
.
	`öô
(
n
);

79 
	`mem£t
(
vis
,0,(vis));

80 
	`mem£t
(
ö
,0,(in));

81 
j
,
nowl
;

82 
LL
 
ªt
=1;

83 
i
=0; i<
m
; i=
j
)

85 
nowu
=
uf
;

86 
nowl
=
e
[
i
].
l
;

87 
j
=
i
; j<
m
; j++)

88 if(
e
[
j
].
l
!=
nowl
)

90 
	`mem£t
(
vis
,0,(vis));

91 
k
=
i
; k<
j
; k++)

93 
x
=
e
[
k
].
f
,
y
Û[k].
t
,
px
=
uf
.
	`Á
(x),
py
=uf.fa(y);

94 if(
px
==
py
)

96 
vis
[
px
]=vis[
py
]=1;

97 
nowu
.
	`£tf
(
px
,
py
);

98 
ö
[
px
][
py
]++;

99 
ö
[
py
][
px
]++;

101 
j
=0; j<
n
; j++)

102 
vec
[
j
].
	`˛ór
();

103 
j
=0; j<
n
; j++)

104 if(
vis
[
j
])

106 
u
=
nowu
.
	`Á
(
j
);

107 
vec
[
u
].
	`push_back
(
j
);

108 
vis
[
j
]=0;

110 
j
=0; j<
n
; j++)

111 if(
vec
[
j
].
	`size
()>0)

113 
u
=0; u<
n
; u++)

114 
v
=0; v<
n
; v++)

115 
m©
[
u
][
v
]=mat[v][u]=0;

117 
sz
=
vec
[
j
].
	`size
();

118 
u
=0; u<
sz
; u++)

119 
v
=
u
+1; v<
sz
; v++)

121 
pu
=
vec
[
j
][
u
],
pv
=vec[j][
v
];

122 
m©
[
v
][
u
]-=
ö
[
pu
][
pv
];

123 
m©
[
u
][
v
]=mat[v][u];

124 
m©
[
u
][u]+=
ö
[
pu
][
pv
];

125 
m©
[
v
][v]+=
ö
[
pu
][
pv
];

127 
LL
 
nowc
=
	`ˇlm©
(
m©
,
sz
);

128 
ªt
Ùë*
nowc
%
mod
;

130 
uf
=
nowu
;

132 
	`mem£t
(
vis
,0,(vis));

133 
i
=0; i<
n
; i++)

134 
vis
[
uf
.
	`Á
(
i
)]=1;

135 
num
=0;

136 
i
=0; i<
n
; i++)

137 if(
vis
[
i
])

138 
num
++;

139 
ªt
=‘ë%
mod
+mod)%mod;

140 
™s
=(
ªt
);

141 if(
num
!=1)

142 
	`puts
("0");

144 
	`¥ötf
("%d\n",
™s
);

147 
	}
}

	@template/RMQ.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#N
 50000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gd©
[
N
],
	gdp
[N][18],
	gmi
[N][18];

10 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

11 
ölöe
 
	$big
(
a
,
b
){ á>b?a:b; 
	}
}

12 
ölöe
 
	$smÆl
(
a
,
b
){ á<b?a:b; 
	}
}

14 
	$RMQ
(
n
)

16 
k
=(
	`log
(1.0*
n
)/log(2.0));

17 
i
=1; i<=
n
; i++)

18 
dp
[
i
][0]=
mi
[i][0]=
d©
[i];

19 
j
=1; j<=
k
; j++)

20 
i
=1; i<=
n
; i++)

22 if(
i
+
	`B
(
j
)-1>
n
)

24 
dp
[
i
][
j
]=
	`big
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

25 
mi
[
i
][
j
]=
	`smÆl
(mi[i][j-1],mi[i+
	`B
(j-1)][j-1]);

27 
	}
}

29 
	$quîy
(
l
,
r
,
èg
)

31 
k
=(
	`log
(1.0*(
r
-
l
+1))/log(2.0));

32 if(
èg
==1)

33  
	`big
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

35  
	`smÆl
(
mi
[
l
][
k
],mi[
r
-
	`B
(k)+1][k]);

36 
	}
}

	@template/ZL_MST.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

4 
	#öf
 1e8

	)

5 
	#S
 1000001

	)

6 
	#N
 1001

	)

8 
	tñem_t
;

10 
	sedge
{ 
	mf
,
	mt
; 
ñem_t
 
	ml
; }
	ge
[
S
];

11 
	gt›
,
	gli°
[
N
],
	gid
[N],
	gv
[N],
	g¥e
[N];

12 
ñem_t
 
	gÀn
[
N
];

14 
ñem_t
 
	$ZL_MST
(
r
,
n
)

16 
√xä
,
f
,
t
;

17 
ñem_t
 
ªt
=0;

20 
	`mem£t
(
¥e
,-1,(pre));

21 
	`mem£t
(
v
,-1,(v));

22 
	`mem£t
(
id
,-1,(id));

23 
i
=0; i<
n
; i++)

24 
Àn
[
i
]=
öf
;

25 
i
=0; i<
t›
; i++)

27 
f
=
e
[
i
].f,
t
=e[i].t;

28 if(
f
==
t
) ;

29 if(
Àn
[
t
]>
e
[
i
].
l
)

30 
Àn
[
t
]=
e
[
i
].
l
,
¥e
[t]=
f
;

32 
i
=0; i<
n
; i++)

33 if(
¥e
[
i
]==-1&&i!=
r
)

35 
√xä
=0;

36 
Àn
[
r
]=0;

37 
i
=0; i<
n
; i++)

39 
ªt
+=
Àn
[
i
];

40 
now
=
i
;

41 ; 
v
[
now
]!=
i
&&
id
[now]==-1&&now!=
r
; )

43 
v
[
now
]=
i
;

44 
now
=
¥e
[now];

46 if(
now
!=
r
&&
id
[now]==-1)

48 
f
=
¥e
[
now
]; f!=now; f=pre[f])

49 
id
[
f
]=
√xä
;

50 
id
[
now
]=
√xä
++;

53 if(
√xä
==0) ;

54 
i
=0; i<
n
; i++)

55 if(
id
[
i
]<0)

56 
id
[
i
]=
√xä
++;

57 
i
=0; i<
t›
; i++)

59 
f
=
e
[
i
].f,
t
=e[i].t;

60 
e
[
i
].
f
=
id
[f];

61 
e
[
i
].
t
=
id
[t];

62 if(
f
==
t
) ;

63 
e
[
i
].
l
-=
Àn
[
t
];

65 
n
=
√xä
;

66 
r
=
id
[r];

68  
ªt
;

69 
	}
}

	@template/all_templete.cpp

2 
	~<c°dio
>

4 
	#MAXN
 200

	)

5 
	#öf
 1000000000

	)

6 
	tñem_i
;

14 
	$bñlm™_f‹d
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò*
mö
,*
¥e
)

16 
v
[
MAXN
],
i
,
j
,
k
,
èg
;

17 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

18 
mö
[
s
]=0,
j
=0; j<
n
; j++)

20 
k
=-1,
i
=0; i<
n
; i++)

21 if(!
v
[
i
] && (
k
==-1||
mö
[i]<min[k]))

22 
k
=
i
;

23 
v
[
k
]=1,
i
=0; i<
n
; i++)

24 if(!
v
[
i
] && 
m©
[
k
][i]>=0 && 
mö
[k]+mat[k][i]<min[i])

25 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i];

27 
èg
=1,
j
=0;Åag&&j<=
n
; j++)

28 
èg
=
i
=0; i<
n
; i++)

29 
k
=0; k<
n
; k++)

30 if(
mö
[
k
]+
m©
[k][
i
]<min[i])

31 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i],
èg
=1;

32  
j
<=
n
;

33 
	}
}

37 
	~<c°dio
>

38 
	#öf
 1000000

	)

39 
	#MAXS
 30000

	)

40 
	#MAXN
 500

	)

41 
	tñem_t
;

43 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

44 
	gli°
[
MAXN
],
	gt›
;

45 
ñem_t
 
	gmö
[
MAXN
];

47 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

49 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

50 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

51 
	}
}

53 
	$bñlm™_f‹d
(
n
,
s
)

55 
i
,
èg
,
j
;

56 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
;

57 
mö
[
s
]=
i
=0,
èg
=1; i<=
n
&&tag; i++)

59 
èg
=0,
j
=0; j<
t›
; j++)

60 if(
mö
[
e
[
j
].
f
]+e[j].
l
<mö[e[j].
t
])

61 
mö
[
e
[
j
].
t
]=mö[e[j].
f
]+e[j].
l
,
èg
=1;

63  
i
<=
n
;

64 
	}
}

67 
	~<c°dio
>

68 
	~<c°rög
>

70 
	#DIGIT
 4

	)

71 
	#DEPTH
 10000

	)

72 
	#MAXN
 2502

	)

73 
	#SGN
(
x
Ë((x)>0?1:((x)<0?-1:0))

	)

74 
	#ABS
(
x
Ë((x)>0?(x):-(x))

	)

75 
	tbig_num
[
MAXN
+1];

77 
	$ªad
(
big_num
 
a
)

79 
buf
[
MAXN
*
DIGIT
+1],
ch
; 
i
,
j
;

80 
	`mem£t
(
a
,0,()*(
MAXN
+1));

81 if–
	`sˇnf
("%s",&
buf
)==
EOF
 )  0;

82 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

83 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

84 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

85 
i
=1; i<=
a
[0]; i++)

86 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

87 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

88 ;!
a
[a[0]]&&a[0]>1;a[0]--);

90 
	}
}

92 
	$ªad
(
big_num
 
a
,&
sgn
)

94 
°r
[
MAXN
*
DIGIT
+1],
ch
,*
buf
; 
i
,
j
;

95 
	`mem£t
(
a
,0,()*(
MAXN
+1));

96 if–
	`sˇnf
("%s",&
°r
)==
EOF
 )  0;

97 
buf
=
°r
,
sgn
=1;

98 if(*
buf
=='-'Ë
sgn
=-1,buf++;

99 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

100 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

101 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

102 
i
=1; i<=
a
[0]; i++)

103 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

104 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

105 ;!
a
[a[0]]&&a[0]>1;a[0]--);

106 if(
a
[0]==1 && !a[1]Ë
sgn
=0;

108 
	}
}

110 
	$wrôe
(c⁄° 
big_num
 
a
)

112 
i
,
j
;

113 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

114 
j
=
DEPTH
/10; j; j/=10)

115 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

116 
	}
}

118 
	$comp
(
big_num
 
a
,big_num 
b
)

120 
i
;

121 if(
a
[0]!=
b
[0]) á[0]-b[0];

122 
i
=
a
[0]; i; i--)

123 if(
a
[
i
]!=
b
[i])

124  
a
[
i
]-
b
[i];

126 
	}
}

128 
	$comp
(
big_num
 
a
,c⁄° 
b
)

130 
c
[12]={1};

131 
c
[1]=
b
; c[c[0]]>=
DEPTH
; c[c[0]+1]=c[c[0]]/DEPTH,c[c[0]]%=DEPTH,c[0]++);

132  
	`comp
(
a
,
c
);

133 
	}
}

135 
	$comp
(
big_num
 
a
,
c
,
d
,big_num 
b
)

137 
i
,
t
=0,
O
=-
DEPTH
*2;

138 if(
b
[0]-
a
[0]<
d
 && 
c
)

140 
i
=
b
[0]; i>
d
; i--)

142 
t
Ò*
DEPTH
+
a
[
i
-
d
]*
c
-
b
[i];

143 if(
t
>0)  1;

144 if(
t
<
O
)  0;

146 
i
=
d
; i; i--)

148 
t
Ò*
DEPTH
-
b
[
i
];

149 if(
t
>0)  1;

150 if(
t
<
O
)  0;

152  
t
>0;

153 
	}
}

155 
	$add
(
big_num
 
a
,big_num 
b
)

157 
i
;

158 
i
=1; i<=
b
[0]; i++)

159 if((
a
[
i
]+=
b
[i])>=
DEPTH
)

160 
a
[
i
]-=
DEPTH
,a[i+1]++;

161 if(
b
[0]>=
a
[0])á[0]=b[0];

162 ; 
a
[
i
]>=
DEPTH
 && i<=a[0];á[i]-=DEPTH,i++,a[i]++ );

163 
a
[0]+=(a[a[0]+1]>0);

164 
	}
}

166 
	$add
(
big_num
 
a
,
b
)

168 
i
=1;

169 
a
[1]+=
b
;á[
i
]>=
DEPTH
 && i<a[0];á[i+1]+=a[i]/DEPTH,a[i]%=DEPTH,i++);

170 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

171 
	}
}

173 
	$sub
(
big_num
 
a
,big_num 
b
)

175 
i
;

176 
i
=1; i<=
b
[0]; i++)

177 if((
a
[
i
]-=
b
[i])<0)

178 
a
[
i
+1]--,a[i]+=
DEPTH
;

179 ; 
a
[
i
]<0;á[i]+=
DEPTH
,i++,a[i]--);

180 ; !
a
[a[0]]&&a[0]>1;á[0]--);

181 
	}
}

183 
	$sub
(
big_num
 
a
,
b
)

185 
i
=1;

186 
a
[1]-=
b
;á[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

187 ; !
a
[a[0]]&&a[0]>1;á[0]--);

188 
	}
}

190 
	$sub
(
big_num
 
a
,big_num 
b
,
c
,
d
)

192 
i
,
O
=
b
[0]+
d
;

193 
i
=1+
d
; i<=
O
; i++)

194 if((
a
[
i
]-=
b
[i-
d
]*
c
)<0)

195 
a
[
i
+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH;

196 ; 
a
[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

197 ; !
a
[a[0]]&&a[0]>1;á[0]--);

198 
	}
}

200 
	$mul
(
big_num
 
a
,big_num 
b
,big_num 
c
)

202 
i
,
j
;

203 
	`mem£t
(
c
,0,()*(
MAXN
+1));

204 
c
[0]=
a
[0]+
b
[0]-1,
i
=1; i<=a[0]; i++)

205 
j
=1;j<=
b
[0];j++)

206 if((
c
[
i
+
j
-1]+=
a
[i]*
b
[j])>=
DEPTH
)

207 
c
[
i
+
j
]+=c[i+j-1]/
DEPTH
,c[i+j-1]%=DEPTH;

208 
c
[0]+=(c[c[0]+1]>0); !c[c[0]]&&c[0]>1; c[0]--);

209 
	}
}

211 
	$mul
(
big_num
 
a
,c⁄° 
b
)

213 
i
;

214 
a
[1]*=
b
,
i
=2; i<=a[0]; i++)

216 
a
[
i
]*=
b
;

217 if(
a
[
i
-1]>=
DEPTH
)

218 
a
[
i
]+˜[i-1]/
DEPTH
,a[i-1]%=DEPTH;

220 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

221 ; !
a
[a[0]] &&á[0]>1;á[0]--);

222 
	}
}

224 
	$div
(
big_num
 
c
,big_num 
a
,big_num 
b
)

226 
h
,
l
,
m
,
i
;

227 
	`mem£t
(
c
,0,()*(
MAXN
+1));

228 
c
[0]=(
b
[0]<
a
[0]+1)?(a[0]-b[0]+2):1;

229 
i
=
c
[0]; i; 
	`sub
(
a
,
b
,c[i]=
m
,i-1),i--)

230 
h
=
DEPTH
-1,
l
=0,
m
=(h+l+1)>>1; h>l; m=(h+l+1)>>1)

231 if–
	`comp
(
b
,
m
,
i
-1,
a
ËË
h
=m-1;

232 
l
=
m
;

233 ; !
c
[c[0]]&&c[0]>1; c[0]--);

234 
c
[0]=c[0]>1?c[0]:1;

235 
	}
}

237 
	$div
(
big_num
 
a
,c⁄° 
b
,& 
c
)

239 
i
;

240 
c
=0,
i
=
a
[0]; i; c=c*
DEPTH
+a[i],a[i]=c/
b
,c%=b,i--);

241 ; !
a
[a[0]]&&a[0]>1;á[0]--);

242 
	}
}

244 
	$sqπ
(
big_num
 
b
,big_num 
a
)

246 
h
,
l
,
m
,
i
;

247 
	`mem£t
(
b
,0,()*(
MAXN
+1));

248 
i
=
b
[0]=(
a
[0]+1)>>1; i; 
	`sub
◊,b,
m
,i-1),b[i]+=m,i--)

249 
h
=
DEPTH
-1,
l
=0,
b
[
i
]=
m
=(h+l+1)>>1; h>l; b[i]=m=(h+l+1)>>1)

250 if(
	`comp
(
b
,
m
,
i
-1,
a
)Ë
h
=m-1;

251 
l
=
m
;

252 ; !
b
[b[0]]&&b[0]>1; b[0]--);

253 
i
=1; i<=
b
[0]; b[i++]>>=1);

254 
	}
}

256 
	$Àngth
(
big_num
 
a
)

258 
t
,
ªt
;

259 
ªt
=(
a
[0]-1)*
DIGIT
,
t
=a[a[0]];Å;Å/=10,ret++);

260  
ªt
>0?ret:1;

261 
	}
}

263 
	$digô
(
big_num
 
a
,
b
)

265 
i
,
ªt
;

266 
ªt
=
a
[(
b
-1)/
DIGIT
+1],
i
=(b-1)%DIGIT; i;Ñet/=10,i--);

267  
ªt
%10;

268 
	}
}

270 
	$zî⁄um
(
big_num
 
a
)

272 
ªt
,
t
;

273 
ªt
=0; !
a
[ret+1];Ñet++);

274 
t
=
a
[
ªt
+1],ªt*=
DIGIT
; !(t%10);Å/=10,ret++);

275  
ªt
;

276 
	}
}

278 
	$comp
(
t
[],
l
,
h
,
d
)

280 
i
,
j
,
tmp
;

281 
i
=
l
; i<=
h
; i++)

282 
tmp
=
i
,
j
=2;Åmp>1; j++)

283 !(
tmp
%
j
))

284 
t
[
j
]+=
d
,
tmp
/=j;

285 
	}
}

287 
	$c⁄vît
(
t
[],
h
,
big_num
 
a
)

289 
i
,
j
,
tmp
=1;

290 
	`mem£t
(
a
,0,()*(
MAXN
+1));

291 
a
[0]˜[1]=1,
i
=2; i<=
h
; i++)

292 if(
t
[
i
])

293 
j
=
t
[
i
]; j; 
tmp
*=i,j--)

294 if(
tmp
*
i
>
DEPTH
)

295 
	`mul
(
a
,
tmp
),tmp=1;

296 
	`mul
(
a
,
tmp
);

297 
	}
}

299 c⁄° 
	gMMM
=10000;

300 
	$combö©i⁄
(
big_num
 
a
,
m
,
n
)

302 
t
[
MMM
]={0};

303 
	`comp
(
t
,
n
+1,
m
,1);

304 
	`comp
(
t
,2,
m
-
n
,-1);

307 
	`c⁄vît
(
t
,
m
,
a
);

308 
	}
}

310 
	$≥rmuèti⁄
(
big_num
 
a
,
m
,
n
)

312 
i
,
t
=1;

313 
	`mem£t
(
a
,0,()*(
MAXN
+1));

314 
a
[0]=a[1]=1;

315 
i
=
m
-
n
+1; i<=m; 
t
*=i++)

316 if(
t
*
i
>
DEPTH
)

317 
	`mul
(
a
,
t
),t=1;

318 
	`mul
(
a
,
t
);

319 
	}
}

324 
	~<c°dio
>

325 
	~<cm©h
>

327 
	tñem_t
;

328 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; };

330 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

332  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

333 
	}
}

334 
poöt
 
	$öãr£˘i⁄
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

336 
poöt
 
ªt
=
a
;

337 
ñem_t
 
up
,
dw
,
t
;

338 
up
=
	`xmu…
(
c
,
d
,c,
a
);

339 
dw
=
	`xmu…
(
a
,
b
,
c
,
d
);

340 
t
=
up
/
dw
;

341 
ªt
.
x
+=(
b
.x-
a
.x)*
t
;

342 
ªt
.
y
+=(
b
.y-
a
.y)*
t
;

343  
ªt
;

344 
	}
}

348 
	~<c°dio
>

349 
	~<cm©h
>

350 
	#MAXN
 10001

	)

351 
	#ïs
 1e-8

	)

352 
	tñem_t
;

354 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp
[
MAXN
];

356 
ölöe
 
	$mö
(
ñem_t
 
a
,ñem_à
b
){ á<b?a:b; 
	}
}

357 
ölöe
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á<b?b:a; 
	}
}

358 
ölöe
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

360  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

361 
	}
}

362 
ölöe
 
	$zîo
(
x
){  x>=-
ïs
&&x<=eps;

363 
	}
}

365 
	$ö_pﬁyg⁄
(
poöt
 
a
,
n
,poöà
p
[],
⁄_edge
)

367 
poöt
 
low_p
,
high_p
;

368 
i
,
˙t
=0;

369 
i
=0; i<
n
; i++)

371 if(
p
[
i
].
y
<p[(i+1)%
n
].yË
low_p
ı[i],
high_p
=p[(i+1)%n];

372 
high_p
=
p
[
i
],
low_p
ı[(i+1)%
n
];

373 if(
	`xmu…
(
a
,
low_p
,a,
high_p
)>
ïs
&&a.
y
>=low_p.y&&a.y<high_p.y)

374 
˙t
++;

375 if(
	`zîo
(
	`xmu…
(
a
,
low_p
,a,
high_p
))&&a.
y
>ˆow_p.y&&a.y<=high_p.y&&a.
x
>=
	`mö
÷ow_p.x,high_p.x)&&a.x<=
	`max
(low_p.x,high_p.x))

376  
⁄_edge
;

378  
˙t
&1;

379 
	}
}

383 
	~<c°dio
>

384 
	tLL
;

386 
LL
 
	$comb
(
n
,
m
)

388 
LL
 
ªt
=1; 
i
=
n
;

389 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

390  
ªt
;

391 
	}
}

393 
LL
 
	$comb2num
(
n
,
m
,
c
[])

395 
LL
 
ªt
=
	`comb
(
n
,
m
); 
i
,
j
;

396 
i
=0; i<
m
; i++)

397 
ªt
-=
	`comb
(
n
-
c
[
i
],
m
-i);

398  
ªt
;

399 
	}
}

402 
	~<c°dio
>

403 
	~<cm©h
>

404 
	~<c°rög
>

405 
	~<Æg‹ôhm
>

406 
	#ïs
 1e-8

	)

407 
	#öf
 100000000

	)

408 
	#MAXN
 50100

	)

409 
usög
 
	g°d
::
s‹t
;

410 
	tñem_t
;

412 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp1
,
	gp
[
MAXN
],
	gc⁄vîx
[MAXN];

413 
ölöe
 
ñem_t
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á>b?a:b; 
	}
}

414 
ölöe
 
	$zîo
(
ñem_t
 
x
){  x>=-
ïs
&&x<Ûps; 
	}
}

416 
ölöe
 
ñem_t
 
	$Àn
(
poöt
 
a
,poöà
b
)

418  
	`sqπ
((
b
.
x
-
a
.x)*(b.x-a.x)+(b.
y
-a.y)*(b.y-a.y));

419 
	}
}

420 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
)

422  (
a
.
x
-
c
.x)*(
b
.
y
-c.y)-(a.y-c.y)*(b.x-c.x);

423 
	}
}

425 
	$cmp
(
poöt
 
a
,poöà
b
)

427 
ñem_t
 
x
;

428 
x
=
	`xmu…
(
a
,
b
,
p1
);

429 if(
	`zîo
(
x
))

430  
	`Àn
(
a
,
p1
)<Àn(
b
,p1);

431  
x
>0;

432 
	}
}

434 
	$_c⁄vîx
(
n
,
poöt
 
p
[],poöà
c⁄
[])

436 
i
,
s
;

437 
p1
.
x
ı1.
y
=
öf
;

438 
i
=0; i<
n
; i++)

440 if(
p
[
i
].
y
<
p1
.y)

441 
p1
=
p
[
i
];

442 if(
p
[
i
].
y
==
p1
.y&&p[i].
x
<p1.x)

443 
p1
=
p
[
i
];

445 
	`s‹t
(
p
,p+
n
,
cmp
);

446 
c⁄
[0]=
p
[0],c⁄[1]ı[1],
s
=2;

447 
i
=0; i<
n
; 
c⁄
[
s
++]=
p
[i++])

448 ; 
s
>1&&
	`xmu…
(
c⁄
[s-1],
p
[
i
],c⁄[s-2])<=
ïs
; s--);

450  
s
;

451 
	}
}

454 
	~<c°dio
>

456 
	gdays
[12]={31,28,31,30,31,30,31,31,30,31,30,31};

457 
	sd©e
{ 
	my
,
	mm
,
	md
; };

460 
ölöe
 
	$À≠
(
yór
)

462  (
yór
%4==0 && year%100!=0)||0==year%400;

463 
	}
}

466 
ölöe
 
	$ÀgÆ
(
d©e
 
a
)

468 if(
a
.
m
<0 ||á.m>12)  0;

469 if(
a
.
m
==2Ëá.
d
>0 &&á.d<=28+
	`À≠
◊.
y
);

470  
a
.
d
>0 &&á.d<=
days
[a.
m
-1];

471 
	}
}

474 
ölöe
 
	$d©ecmp
(
d©e
 
a
,d©ê
b
)

476 if(
a
.
y
 !
b
.y) á.y-b.y;

477 if(
a
.
m
 !
b
.m) á.m-b.m;

478  
a
.
d
-
b
.d;

479 
	}
}

484 
	$wìkday
(
d©e
 
a
)

486 
tm
=
a
.
m
>=3? (a.m-2):(a.m+10);

487 
ty
=
a
.
m
>=3?á.
y
:(a.y-1);

488  (
ty
+ty/4-ty/100+ty/400+()(2.6*
tm
-0.2)+
a
.
d
)%7;

489 
	}
}

493 
	$d©e2öt
(
d©e
 
a
)

495 
ªt
=
a
.
y
*365+◊.y-1)/4-◊.y-1)/100+◊.y-1)/400,
i
;

496 
days
[1]+=
	`À≠
(
a
.
y
);

497 
i
=0; i<
a
.
m
-1; 
ªt
+=
days
[i++]);

498 
days
[1]=28;

499  
ªt
+
a
.
d
;

500 
	}
}

505 
d©e
 
	$öt2d©e
(
a
)

507 
d©e
 
ªt
;

508 
ªt
.
y
=
a
/146097*400;

509 
a
%=146097;á>=365+
	`À≠
(
ªt
.
y
);á-=365+leap(ret.y),ret.y++);

510 
days
[1]+=
	`À≠
(
ªt
.
y
);

511 
ªt
.
m
=1; 
a
>=
days
[ret.m-1];á-=days[ret.m-1],ret.m++);

512 
days
[1]=28;

513 
ªt
.
d
=
a
+1;

514  
ªt
;

515 
	}
}

518 
	~<c°dio
>

519 
	~<c°rög
>

521 c⁄° 
	gMAXN
=1001;

522 c⁄° 
	göf
=1000000000;

523 
	tñem_i
;

524 
	gmö1
[
MAXN
],
	gmö2
[MAXN],
	gm©
[MAXN][MAXN];

530 
	$dijk°ø
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò
mö
[],
¥e
[])

532 
v
[
MAXN
],
i
,
j
,
k
;

533 
i
=0;i<
n
;i++Ë
v
[i]=0,
mö
[i]=
öf
,
¥e
[i]=-1;

534 
mö
[
s
]=0,
i
=0;i<
n
;i++){

535 
k
=-1,
j
=0;j<
n
;j++)

536 i‡(!
v
[
j
]&&((
k
==-1)||
mö
[j]<min[k]))

537 
k
=
j
;

538 
v
[
k
]=1,
j
=0;j<
n
;j++)

539 if(!
v
[
j
] && 
mö
[
k
]+
m©
[k][j]<min[j])

540 
mö
[
j
]=mö[
k
]+
m©
[
¥e
[j]=k][j];

542 
	}
}

545 
	~<c°dio
>

546 
	~<queue
>

547 
	#MAXN
 1000

	)

548 
	#MAXS
 2000000

	)

549 
	#öf
 100000000

	)

550 
usög
 
«me•a˚
 
	g°d
;

551 
	tñem_t
;

552 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

553 
	shóp_t


555 
	mv
; 
ñem_t
 
	ml
;

556 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

557 }
	gh_t
;

558 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	g¥e
[MAXN];

559 
ñem_t
 
	gmö_l
[
MAXN
];

560 
	g¥i‹ôy_queue
<
	ghóp_t
> 
	gq
;

562 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

564 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

565 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

566 
	}
}

568 
	$dijk°ø
(
n
,
s
)

570 
i
;

571 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö_l
[i]=
öf
,
¥e
[i]=-1;

572 
mö_l
[
h_t
.
v
=
s
]=h_t.
l
=0; 
q
.
	`push
(h_t);

573 ; !
q
.
	`em±y
();)

575 
h_t
=
q
.
	`t›
(),q.
	`p›
();

576 if(!
v
[
h_t
.v])

577 
v
[
h_t
.v]=1,
i
=
li°
[h_t.v]; i!=-1; i=
e
[i].
n
)

578 if(!
v
[
e
[
i
].
t
]&&
mö_l
[e[i].
f
]+e[i].
l
<min_l[e[i].t])

579 
¥e
[
e
[
i
].
t
]Û[i].
f
,
mö_l
[
h_t
.
v
Û[i].t]=h_t.
l
=mö_l[e[i].f]+e[i].l,
q
.
	`push
(h_t);

581 
	}
}

586 
	~<c°dio
>

587 
	~<c°rög
>

588 
	#MAXN
 5010

	)

589 
	#MAXS
 100000

	)

590 
	tñem_t
;

592 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

593 
	gv
[
MAXN
],
	gli°
[MAXN],
	gid
[MAXN],
	g°
[MAXN],
	gd‚
[MAXN],
	glow
[MAXN],
	g˙t
,
	gt›
;

595 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

597 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

598 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

599 
	}
}

601 
	$£¨ch
(
n
,
now
,&
ªt
)

603 
i
;

604 
d‚
[
°
[°[0]++]=
now
]=
low
[now]=++
˙t
; 
v
[now]=1;

605 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

606 if(!
d‚
[
e
[
i
].
t
])

608 
	`£¨ch
(
n
,
e
[
i
].
t
,
ªt
);

609 if(
low
[
e
[
i
].
t
]<low[
now
])Üow[now]=low[e[i].t];

611 if(
d‚
[
e
[
i
].
t
]<d‚[
now
])

613 if(
v
[
e
[
i
].
t
]&&
d‚
[e[i].t]<
low
[
now
])

614 
low
[
now
]=
d‚
[
e
[
i
].
t
];

616 if(
low
[
now
]==
d‚
[now])

617 
ªt
++; 
°
[°[0]]!=
now
; 
id
[°[--°[0]]]Ùë,
v
[st[st[0]]]=0);

618 
	}
}

620 
	$föd_comp⁄íts
(
n
)

622 
ªt
=0,
i
;

623 
i
=0; i<=
n
+1; i++Ë
°
[i]=-1,
d‚
[i]=0;

624 
°
[0]=1,
˙t
=
i
=0; i<
n
; i++)

625 if(!
d‚
[
i
])

626 
	`£¨ch
(
n
,
i
,
ªt
);

627  
ªt
;

628 
	}
}

631 
	~<c°dio
>

632 
	~<c°rög
>

634 
	tñem_i
;

635 
	#MAXN
 200

	)

636 
	#öf
 1000000000

	)

637 
ñem_i
 
	gm©
[
MAXN
][MAXN],
	gmö
[MAXN][MAXN];

638 
	g¥e
[
MAXN
][MAXN];

644 
	$Êoyd_w¨shÆl
(
n
,
ñem_i
 
m©
[][
MAXN
],ñem_ò
mö
[][MAXN],
¥e
[][MAXN])

646 
i
,
j
,
k
;

647 
i
=0;i<
n
;i++)

648 
j
=0;j<
n
;j++)

649 
mö
[
i
][
j
]=
m©
[i][j],
¥e
[i][j]=(i==j)?-1:i;

650 
k
=0;k<
n
;k++)

651 
i
=0;i<
n
;i++)

652 
j
=0;j<
n
;j++)

653 if(
mö
[
i
][
k
]+mö[k][
j
]<min[i][j])

654 
mö
[
i
][
j
]=mö[i][
k
]+mö[k][j],
¥e
[i][j]=pre[k][j];

655 
	}
}

658 
	~<c°dio
>

659 
	#MAXN
 1000

	)

661 
	gd©
[
MAXN
],
	gtmp
[MAXN];

663 
	$show
(
n
,
tmp
[])

665 
i
;

666 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

667 
	`puts
("");

668 
	}
}

670 
	$gícomb
(
s
,
e
,
m
,
˙t
)

672 
i
;

673 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

675 
i
=
s
; i+
m
-
˙t
<=
e
; i++)

676 
tmp
[
˙t
++]=
d©
[
i
],
	`gícomb
(i+1,
e
,
m
,cnt),cnt--;

677 
	}
}

679 
	$gí_comb
(
n
,
m
)

681 
i
;

682 
i
=0; i<
n
; i++Ë
d©
[i]=i+1;

683 
	`gícomb
(0,
n
,
m
,0);

684 
	}
}

688 
	~<c°dio
>

689 
	#MAXN
 1000

	)

691 
	gèg
[
MAXN
],
	gtmp
[MAXN],
	ga
[MAXN];

693 
	$show
(
m
,
tmp
[])

695 
i
;

696 
i
=0; i<
m
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

697 
	`puts
("");

698 
	}
}

700 
	$gí≥rm
(
n
,
m
,
˙t
)

702 
i
;

703 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

705 
i
=0; i<
n
; i++)

706 if(!
èg
[
i
])

707 
èg
[
i
]=1,
tmp
[
˙t
]=
a
[i],
	`gí≥rm
(
n
,
m
,cnt+1),tag[i]=0;

708 
	}
}

710 
	$gí_≥rm
(
n
,
m
)

712 
i
;

713 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
èg
[i]=0;

714 
	`gí≥rm
(
n
,
m
,0);

715 
	}
}

718 
	~<c°dio
>

719 
	~<c°rög
>

720 
	#MAXN
 1000

	)

722 
	gpos
[
MAXN
],
	gdú
[MAXN],
	ga
[MAXN];

724 
	$show
(
n
,
tmp
[])

726 
i
;

727 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

728 
	`puts
("");

729 
	}
}

731 
	$_gí_≥rm_sw≠
(
n
,
l
)

733 
p1
,
p2
,
i
,
t
;

734 if(
l
==
n
Ë
	`show
“,
a
);

737 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

738 
i
=0; i<
l
; i++)

740 
p2
=(
p1
=
pos
[
l
])+
dú
[l];

741 
t
=
a
[
p2
],a[p2]˜[
p1
],a[p1]=t;

742 
pos
[
a
[
p1
]-1]ı1,pos[a[
p2
]-1]=p2;

743 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

746 
dú
[
l
]=-dir[l];

747 
	}
}

749 
	$gí_≥rm_sw≠
(
n
)

751 
i
;

752 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
dú
[i]=-1,
pos
[i]=i;

753 
	`_gí_≥rm_sw≠
(
n
,0);

754 
	}
}

761 
	~<c°dio
>

762 
	#MAXN
 220

	)

763 
	#MAXS
 100000

	)

764 
	tñem_t
;

766 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

767 
	gt›
,
	gm©ch1
[
MAXN
],
	gq
[
MAXS
],
	gm©ch2
[MAXN],
	gli°
[MAXN],
	gtmp2
[MAXN];

769 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

771 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

772 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

773 
	}
}

775 
	$hung¨y
(
m
,
n
)

777 
i
,
j
,
k
,
l
,
r
,
mx
=(
m
>
n
)?m:n,
ªt
=0,
x
,
y
,
t
;

778 
i
=0; i<
mx
; i++Ë
m©ch1
[i]=
m©ch2
[i]=-1;

779 
i
=0; i<
m
; 
ªt
+=(
m©ch1
[i++]>-1))

781 
j
=0; j<
n
; j++Ë
tmp2
[j]=-1;

782 
q
[
l
=
r
=0]=
i
;Ü<Ù&&
m©ch1
[i]<0;Ü++)

783 
k
=
q
[
l
],
j
=
li°
[k]; j!=-1&&
m©ch1
[
i
]<0; j=
e
[j].
n
)

784 if(
tmp2
[
e
[
j
].
t
]<0)

786 
q
[++
r
]=
m©ch2
[
e
[
j
].
t
],
tmp2
[e[j].t]=
k
;

787 if(
q
[
r
]<0)

788 
y
=
e
[
j
].
t
; y>=0; y=t)

789 
m©ch2
[
y
]=
x
=
tmp2
[y],
t
=
m©ch1
[x],match1[x]=y;

792  
ªt
;

793 
	}
}

797 
	~<c°dio
>

798 
	~<c°rög
>

800 
	$kmp_Áû
(
s
[],
Áû
[])

802 
i
,
p
,
l
=
	`°æí
(
s
);

803 
Áû
[0]=-1,
i
=1; i<
l
; i++)

805 
p
=
Áû
[
i
-1];

806 
p
>=0&&
s
[p+1]!=s[
i
]Ëp=
Áû
[p];

807 if(
s
[
p
+1]==s[
i
]Ë
Áû
[i]=p+1;

808 
Áû
[
i
]=-1;

810 
	}
}

812 
	$kmp_m©ch
(
s
[],
t
[],
Áû_t
[])

814 
SL
=
	`°æí
(
s
),
TL
=°æí(
t
),
s_i
,
t_i
;

815 
	`kmp_Áû
(
t
,
Áû_t
);

816 
s_i
=
t_i
=0; s_i<
SL
&&t_i<
TL
;)

818 if(
s
[
s_i
]==
t
[
t_i
]) s_i++,t_i++;

819 if(
t_i
==0Ë
s_i
++;

820 
t_i
=
Áû_t
[t_i-1]+1;

822  
t_i
<
TL
?-1:
s_i
-t_i;

823 
	}
}

827 
	~<c°dio
>

828 
	#MAXN
 20100

	)

829 
	#MAXS
 880100

	)

830 
	#öf
 0x7fffffff

	)

831 
	tñem_t
;

833 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	mw
; }
	ge
[
MAXS
];

834 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gœy
[MAXN];

836 
	$ö£π
(
f
,
t
,
ñem_t
 
w
)

838 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

839 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

840 
	}
}

842 
ölöe
 
	$™ti
(
öd
){  ind^1; 
	}
}

843 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

845 
	$bfs
(
s
,
t
,
n
)

847 
l
,
r
,
i
,
j
;

848 
i
=0; i<
n
; i++Ë
œy
[i]=-1;

849 
q
[
l
=
r
=0]=
s
; 
œy
[s]=0;

850 ; 
l
<=
r
; )

852 
i
=
q
[
l
++];

853 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

855 if(
œy
[
e
[
j
].
t
]<0&&e[j].
w
>0)

856 
œy
[
e
[
j
].
t
]ˆay[
i
]+1,
q
[++
r
]=e[j].t;

859  
œy
[
t
]>=0;

860 
	}
}

862 
ñem_t
 
	$dfs
(
now
,
t
,
ñem_t
 
now_Êow
)

864 
âl
=0,
sögÀ
,
i
,
j
;

865 if(
now
==
t
Ë 
now_Êow
;

866 
i
=
li°
[
now
]; i!=-1&&
âl
<
now_Êow
; i=
e
[i].
n
)

867 if(
œy
[
e
[
i
].
t
]=ˆay[
now
]+1&&e[i].
w
>0&&(
sögÀ
=
	`dfs
”[i].t,t,
	`mö
”[i].w,
now_Êow
-
âl
))))

869 
e
[
i
].
w
-=
sögÀ
;

870 
e
[
	`™ti
(
i
)].
w
+=
sögÀ
;

871 
âl
+=
sögÀ
;

873 if(
âl
==0Ë
œy
[
now
]=-1;

874  
âl
;

875 
	}
}

877 
ñem_t
 
	$di˙ic
(
s
,
t
,
n
)

879 
ñem_t
 
ªt
=0;

880 
	`bfs
(
s
,
t
,
n
))

881 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

882  
ªt
;

883 
	}
}

886 
	~<c°dio
>

887 
	#öf
 1000000000

	)

888 
	#MAXN
 200

	)

889 
	#MAXS
 160000

	)

891 
	sedge
{ 
	mf
,
	mt
,
	mc
,
	mÊow
,
	mn
; }
	ge
[
MAXS
];

892 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gv
[MAXN],
	g¥e
[MAXN],
	gmö
[MAXN],
	gmax_Êow
;

894 
	$s_ö£π
(
f
,
t
,
c
,
Êow
)

896 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c,e[t›].
Êow
=flow;

897 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

898 
	}
}

900 
	$ö£π
(
f
,
t
,
c
,
Êow
)

902 
	`s_ö£π
(
f
,
t
,
c
,
Êow
);

903 
	`s_ö£π
(
t
,
f
,-
c
,0);

904 
	}
}

906 
	$•Á
(
n
,
s
,
t
)

908 
i
,
l
,
r
,
j
;

909 
i
=0; i<
n
; i++Ë
¥e
[i]=-1,
mö
[i]=
öf
,
v
[i]=0;

910 
q
[
l
=
r
=0]=
s
;

911 
mö
[
s
]=0,
v
[s]=1;

912 ; 
l
<=
r
; )

914 
i
=
q
[
l
++];

915 
v
[
i
]=0;

916 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

917 if(
e
[
j
].
Êow
>0&&
mö
[
i
]+e[j].
c
<mö[e[j].
t
])

919 
¥e
[
e
[
j
].
t
]=j;

920 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
c
;

921 if(!
v
[
e
[
j
].
t
])

922 
v
[
e
[
j
].
t
]=1,
q
[++
r
]=e[j].t;

925  
mö
[
t
]!=
öf
;

926 
	}
}

928 
	$mcmf
(
n
,
s
,
t
)

930 
ªt
=0,
i
,
now_Êow
;

931 
max_Êow
=0;

932 ; 
	`•Á
(
n
,
s
,
t
); )

934 
now_Êow
=
öf
;

935 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

936 if(
now_Êow
>
e
[
i
].
Êow
)

937 
now_Êow
=
e
[
i
].
Êow
;

938 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

939 
e
[
i
].
Êow
-=
now_Êow
,e[i^1].flow+=now_flow;

940 
max_Êow
+=
now_Êow
;

941 
ªt
+=
now_Êow
*
mö
[
t
];

943  
ªt
;

944 
	}
}

947 
	~<c°dio
>

948 
	tLL
;

951 
LL
 
	$exp⁄ít
(
LL
 
m
,LL 
a
)

953 
LL
 
ªt
=1;

954 ; 
a
;á>>=1,
m
*=m)

955 if(
a
&1)

956 
ªt
*=
m
;

957  
ªt
;

958 
	}
}

961 
LL
 
	$moduœr_exp⁄ít
(
LL
 
a
,LL 
b
,LL 
m
)

963 
LL
 
ªt
=1;

964 ; 
b
; b>>=1,
a
=◊%
m
*(a%m))%m)

965 if(
b
&1)

966 
ªt
Ùë%
m
*(
a
%m)%m;

967  
ªt
;

968 
	}
}

970 
	~<c°dio
>

971 
	#MAXN
 100

	)

972 
	tLL
;

974 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

975 
LL
 
	$lcm
(
LL
 
a
,LL 
b
){ á*b/
	`gcd
◊,b); 
	}
}

978 
LL
 
	$ext_gcd
(
LL
 
a
,LL 
b
,LL &
x
,LL &
y
)

980 
LL
 
ªt
,
t
;

981 if(!
b
)

983 
x
=1,
y
=0;

984  
a
;

986 
ªt
=
	`ext_gcd
(
b
,
a
%b,
x
,
y
);

987 
t
=
x
,x=
y
,yÒ-
a
/
b
*y;

988  
ªt
;

989 
	}
}

993 
LL
 
	$moduœr_löór
(
LL
 
a
,LL 
b
,LL 
m
,LL 
sﬁ
[])

995 
LL
 
d
,
e
,
x
,
y
,
i
;

996 
d
=
	`ext_gcd
(
a
,
m
,
x
,
y
);

997 if(
b
%
d
)  0;

998 
e
=(
x
*(
b
/
d
)%
m
+m)%m;

999 
i
=0; i<
d
; i++)

1000 
sﬁ
[
i
]=(
e
+i*(
m
/
d
))%m;

1001  
d
;

1002 
	}
}

1010 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

1012 
LL
 
d
,
x
,
y
,
ªt
=0,
m
,
n
=1,
i
;

1013 
i
=0; i<
k
; i++Ë
n
*=
w
[i];

1014 
i
=0; i<
k
; i++)

1016 
m
=
n
/
w
[
i
];

1017 
d
=
	`ext_gcd
(
w
[
i
],
m
,
x
,
y
);

1018 
ªt
=‘ë+
y
*
m
*
b
[
i
])%
n
;

1020  (
ªt
+
n
)%n;

1021 
	}
}

1029 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

1031 
LL
 
t
,
d
,
x
,
y
,
ªt
=
b
[0],
m
=
w
[0],
â
,
Ác
,
√xtm
,
i
;

1032 
i
=1; i<
k
; i++)

1034 
d
=
	`ext_gcd
(
m
,
w
[
i
],
x
,
y
);

1035 
t
=
b
[
i
]-
ªt
;

1036 if(
t
%
d
)  -1;

1037 
â
=
w
[
i
]/
d
;

1038 
Ác
=(
x
*(
t
/
d
)%
â
+tt)%tt;

1039 
√xtm
=
m
/
d
*
w
[
i
];

1040 
ªt
=(‘ë+
m
*
Ác
)%
√xtm
+nextm)%nextm;

1041 
m
=
√xtm
;

1043  (
ªt
%
m
+m)%m;

1044 
	}
}

1048 
	~<c°dio
>

1049 
	~<c°rög
>

1050 
	~<queue
>

1051 
	#MAXN
 10010

	)

1052 
	#MAXS
 200020

	)

1053 
	#öf
 1000000000

	)

1054 
	tñem_t
;

1055 
usög
 
«me•a˚
 
	g°d
;

1057 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
;

1058 
‰õnd
 
boﬁ
 
	m›î©‹
<(
edge
 
	ma
,edgê
	mb
){ á.
	ml
>b.l; }

1059 }
	ge
[
MAXS
],
	ge_t
;

1060 
	suföd


1062 
	mp
[
MAXN
],
	mt
;

1063 
öi
(){ 
mem£t
(
p
,0,(p)); }

1064 
run
(&
x
){ ; 
	mp
[
t
=x]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));}

1065 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

1066 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

1067 }
	guf
;

1068 
	gt›
,
	gli°
[
MAXN
];

1070 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

1072 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

1073 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1074 
	}
}

1076 
ñem_t
 
	$kruskÆ
(
n
)

1078 
¥i‹ôy_queue
<
edge
> 
q
;

1079 
uf
.
	`öi
(); 
ñem_t
 
ªt
=0;

1080 
i
,
j
;

1081 
i
=0; i<
n
; i++)

1082 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

1083 
q
.
	`push
(
e
[
j
]);

1084 
i
=0; i<
n
-1&&!
q
.
	`em±y
(); )

1086 
e_t
=
q
.
	`t›
(); q.
	`p›
();

1087 if(!
uf
.
	`is‰õnd
(
e_t
.
f
+1,e_t.
t
+1))

1088 
ªt
+=
e_t
.
l
,
uf
.
	`£t‰õnd
”_t.
f
+1,e_t.
t
+1),
i
++;

1090  
ªt
;

1091 
	}
}

1093 
	$maö
()

1095 
n
,
i
,
m
,
l
,
x
,
y
; 
ñem_t
 
ªt
;

1096 
	`sˇnf
("%d%d",&
n
,&
m
);

1097 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

1098 
i
=0; i<
m
; i++)

1099 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
),
	`ö£π
(x-1,y-1,l),insert(y-1,x-1,l);

1101 
ªt
=
	`kruskÆ
(
n
);

1102 
	`¥ötf
("%d\n",
ªt
);

1104 
	}
}

1108 
	~<c°dio
>

1109 
	~<queue
>

1110 
usög
 
«me•a˚
 
	g°d
;

1111 
	#MAXN
 10010

	)

1112 
	#MAXS
 200020

	)

1113 
	#öf
 1000000000

	)

1114 
	tñem_t
;

1116 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

1117 
	shóp_t
{ 
	mv
; 
ñem_t
 
	ml
;

1118 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

1119 }
	gh_t
;

1120 
	gt›
,
	g¥e
[
MAXN
],
	gv
[MAXN],
	gli°
[MAXN];

1121 
ñem_t
 
	gmö_l
[
MAXN
];

1123 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

1125 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

1126 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1127 
	}
}

1129 
ñem_t
 
	$¥im
(
n
)

1131 
i
,
j
; 
ñem_t
 
ªt
=0;

1132 
¥i‹ôy_queue
<
hóp_t
> 
q
;

1133 
i
=0; i<
n
; i++Ë
mö_l
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

1134 
h_t
.
v
=h_t.
l
=0; 
q
.
	`push
(h_t);

1135 ; !
q
.
	`em±y
(); )

1137 
h_t
=
q
.
	`t›
(),q.
	`p›
(); 
i
=h_t.
v
;

1138 if(!
v
[
i
])

1139 
v
[
i
]=1,
ªt
+=
h_t
.
l
,
j
=
li°
[i]; j!=-1; j=
e
[j].
n
)

1140 if(!
v
[
e
[
j
].
t
]&&
mö_l
[e[j].t]>e[j].
l
)

1141 
¥e
[
e
[
j
].
t
]=
i
,
mö_l
[
h_t
.
v
Û[j].t]=h_t.
l
Û[j].l,
q
.
	`push
(h_t);

1143  
ªt
;

1144 
	}
}

1146 
	$maö
()

1148 
n
,
m
,
l
,
i
,
x
,
y
; 
ñem_t
 
ªt
;

1149 
	`sˇnf
("%d%d",&
n
,&
m
);

1150 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

1151 
i
=0; i<
m
; i++)

1153 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
);

1154 
	`ö£π
(
x
-1,
y
-1,
l
);

1155 
	`ö£π
(
y
-1,
x
-1,
l
);

1157 
ªt
=
	`¥im
(
n
);

1158 
	`¥ötf
("%d\n",
ªt
);

1160 
	}
}

1163 
	~<c°dio
>

1164 
	tLL
;

1166 
LL
 
	$comb
(
n
,
m
)

1168 
LL
 
ªt
=1; 
i
=
n
;

1169 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

1170  
ªt
;

1171 
	}
}

1174 
	$num2comb
(
n
,
m
,
LL
 
t
,
c
[])

1176 
i
,
j
=1,
p
;

1177 
i
=0; i<
m
; 
c
[i++]=
j
++)

1178 ; 
t
>(
p
=
	`comb
(
n
-
j
,
m
-
i
-1));Å-=p,j++);

1179 
	}
}

1182 
	~<c°dio
>

1185 
	$num2≥rm
(
n
,
t
,
p
[])

1187 
i
,
j
;

1188 
i
=
n
-1; i>=0; i--)

1189 
p
[
i
]=
t
%(
n
-i),t/=n-i;

1190 
i
=
n
-1; i>=0; i--)

1191 
j
=
i
-1; j>=0; j--)

1192 if(
p
[
j
]<ı[
i
])

1193 
p
[
i
]++;

1194 
	}
}

1197 
	~<c°dio
>

1200 
	$≥rm2num
(
n
,
p
[])

1202 
ªt
=1,
k
=1,
i
,
j
;

1203 
i
=
n
-2; i>=0; 
k
*=(n-(i--)))

1204 
j
=
i
+1; j<
n
; j++)

1205 if(
p
[
j
]<p[
i
])

1206 
ªt
+=
k
;

1207  
ªt
;

1208 
	}
}

1212 
	~<c°dio
>

1213 
	~<c°rög
>

1214 
	#MAXS
 8000800

	)

1215 
	#MAXN
 1010

	)

1217 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mv
; }
	ge
[
MAXS
];

1218 
	gli°
[
MAXN
],
	gt›
,
	g°
[
MAXS
],
	gs_t›
,
	gd‚
[MAXN],
	glow
[MAXN],
	gid
,
	gcomp
[MAXN];

1220 
	$s_ö£π
(
f
,
t
,
v
)

1222 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
v
=v;

1223 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1224 
	}
}

1226 
	$ö£π
(
f
,
t
,
v
)

1228 
	`s_ö£π
(
f
,
t
,0);

1229 
	`s_ö£π
(
t
,
f
,0);

1230 
	}
}

1232 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

1235 
	$ªc‹d
(
now
,
n
)

1237 
i
;

1238 
id
++; ;)

1240 
i
=
°
[
s_t›
--];

1241 
comp
[
e
[
i
].
f
]=comp[e[i].
t
]=
id
;

1242 if(
e
[
i
].
f
==
now
) ;

1244 
	}
}

1246 
	$dfs
(
now
,&
˙t
,
n
)

1248 
i
,
t
;

1249 
d‚
[
now
]=
low
[now]=++
˙t
;

1250 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

1251 if(!
e
[
i
].
v
)

1253 
e
[
i
].
v
=e[i^1].v=1;

1254 
t
=
e
[
i
].t;

1255 
°
[++
s_t›
]=
i
;

1256 if(!
d‚
[
t
])

1258 
	`dfs
(
t
,
˙t
,
n
);

1259 
low
[
now
]=
	`mö
÷ow[now],low[
t
]);

1260 if(
low
[
t
]>=
d‚
[
now
])

1261 
	`ªc‹d
(
now
,
n
);

1263 
low
[
now
]=
	`mö
÷ow[now],
d‚
[
t
]);

1265 
	}
}

1267 
	$p_b_comp⁄ít
(
n
)

1269 
i
,
˙t
=0; 
s_t›
=-1,
id
=0;

1270 
	`mem£t
(
°
,0,(st));

1271 
	`mem£t
(
d‚
,0,(dfn));

1272 
i
=0; i<
n
; i++)

1273 if(!
d‚
[
i
])

1274 
	`dfs
(
i
,
˙t
,
n
);

1275 
	}
}

1285 
	~<c°dio
>

1286 
	~<cm©h
>

1287 
	~<c°rög
>

1288 
	~<Æg‹ôhm
>

1289 
usög
 
	g°d
::
s‹t
;

1290 
	#N
 10110

	)

1292 
	slöe
{ 
	mx
,
	my1
,
	my2
,
	mèg
; }
	gl
[
N
<<1];

1293 
	s£g_åì


1295 
	ml
,
	mr
,
	mcﬁ
,
	mÀn
,
	m˙t
,
	mbl
,
	mbr
;

1296 }
	g£gt
[
N
<<2];

1302 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

1303 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

1304 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

1305 
ölöe
 
	$max
(
a
,
b
){ á>b?a:b; 
	}
}

1306 
ölöe
 
	$Àngth
(
l
,
r
){  
co‹
[r]-co‹[l]; 
	}
}

1308 
	gco‹
[
N
<<1],
	gâl
,
	gt›
;

1311 
	$gë_id
(
x
)

1313 
l
,
r
,
m
;

1314 
l
=1,
r
=
t›
;Ü<=r; )

1316 
m
=(
l
+
r
)>>1;

1317 if(
co‹
[
m
]<
x
)

1318 
l
=
m
+1;

1319 if(
co‹
[
m
]>
x
)

1320 
r
=
m
-1;

1322  
m
;

1325 
	}
}

1327 
	$¸óã_åì
(
id
,
l
,
r
)

1329 
m
=(
l
+
r
)>>1;

1330 
£gt
[
id
].
l
ˆ,£gt[id].
r
=r;

1331 
£gt
[
id
].
cﬁ
=£gt[id].
Àn
=0;

1332 
£gt
[
id
].
bl
=£gt[id].
br
=£gt[id].
˙t
=0;

1333 if(
r
-
l
<=1)

1335 
	`¸óã_åì
(
	`L
(
id
),
l
,
m
);

1336 
	`¸óã_åì
(
	`R
(
id
),
m
,
r
);

1337 
	}
}

1339 
	$upd©e
(
id
,
l
,
r
)

1341 if(
£gt
[
id
].
cﬁ
||
r
==
l
)

1343 
£gt
[
id
].
Àn
=
	`Àngth
(
l
,
r
);

1344 
£gt
[
id
].
˙t
=£gt[id].
bl
=£gt[id].
br
=1;

1348 
£gt
[
id
].
Àn
=£gt[
	`L
(id)].Àn+£gt[
	`R
(id)].len;

1349 
£gt
[
id
].
˙t
=£gt[
	`L
(id)].˙t+£gt[
	`R
(id)].cnt;

1350 if(
£gt
[
	`L
(
id
)].
br
&&£gt[
	`R
(id)].
bl
)

1351 
£gt
[
id
].
˙t
--;

1352 
£gt
[
id
].
bl
=£gt[
	`L
(id)].bl;

1353 
£gt
[
id
].
br
=£gt[
	`R
(id)].br;

1355 
	}
}

1358 
	$ö£π_£g
(
id
,
Œ
,
º
)

1360 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

1361 if(
Œ
==
l
&&
º
==
r
)

1362 
£gt
[
id
].
cﬁ
++;

1365 if(
Œ
<
m
)

1366 
	`ö£π_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

1367 if(
º
>
m
)

1368 
	`ö£π_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1369 if(
£gt
[
	`L
(
id
)].
cﬁ
&&£gt[
	`R
(id)].col)

1371 
£gt
[
	`L
(
id
)].
cﬁ
--;

1372 
	`upd©e
(
	`L
(
id
),
l
,
m
);

1373 
£gt
[
	`R
(
id
)].
cﬁ
--;

1374 
	`upd©e
(
	`R
(
id
),
m
,
r
);

1375 
£gt
[
id
].
cﬁ
++;

1378 
	`upd©e
(
id
,
l
,
r
);

1379 
	}
}

1382 
	$dñ_£g
(
id
,
Œ
,
º
)

1384 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

1385 if(
Œ
==
l
&&
º
==
r
)

1386 
£gt
[
id
].
cﬁ
--;

1387 if(
£gt
[
id
].
cﬁ
)

1389 
£gt
[
id
].
cﬁ
--;

1390 if(
Œ
>
l
)

1391 
	`ö£π_£g
(
id
,
l
,
Œ
);

1392 if(
º
<
r
)

1393 
	`ö£π_£g
(
id
,
º
,
r
);

1397 if(
Œ
<
m
)

1398 
	`dñ_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

1399 if(
º
>
m
)

1400 
	`dñ_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1402 
	`upd©e
(
id
,
l
,
r
);

1403 
	}
}

1406 
	$£g_Àn
(
id
,
Œ
,
º
)

1408 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

1409 if(
£gt
[
id
].
cﬁ
||(
Œ
==
l
&&
º
==
r
))

1410  
£gt
[
id
].
Àn
;

1411 if(
Œ
<
m
)

1412 
ªt
+=
	`£g_Àn
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

1413 if(
º
>
m
)

1414 
ªt
+=
	`£g_Àn
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1415  
ªt
;

1416 
	}
}

1419 
	$£g_˙t
(
id
,
Œ
,
º
)

1421 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

1422 if(
£gt
[
id
].
cﬁ
)

1424 if(
l
==
Œ
&&
r
==
º
)

1425  
£gt
[
id
].
˙t
;

1426 if(
Œ
<
m
)

1427 
ªt
+=
	`£g_˙t
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

1428 if(
º
>
m
)

1429 
ªt
+=
	`£g_˙t
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1430  
ªt
;

1431 
	}
}

1434 
	~<c°dio
>

1435 
	~<c°rög
>

1436 
	~<cm©h
>

1437 
	~<queue
>

1438 
	#öf
 1e8

	)

1439 
	#MAXS
 2000001

	)

1440 
	#MAXN
 1001

	)

1442 
	tñem_t
;

1443 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

1444 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	gö
[MAXN],
	gq
[
MAXS
];

1445 
ñem_t
 
	gmö
[
MAXN
];

1447 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

1449 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

1450 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1451 
	}
}

1453 
boﬁ
 
	$•Á
(
n
,
s
)

1455 
i
,
j
,
l
,
r
;

1456 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö
[i]=
öf
,
ö
[i]=0;

1457 
l
=
r
=
mö
[
s
]=0,
q
[l]=s,
ö
[s]++;

1458 ; 
l
<=
r
; )

1460 
i
=
q
[
l
++],
v
[i]=0;

1461 if(
ö
[
i
]>
n
)  0;

1462 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

1463 if(
mö
[
i
]+
e
[
j
].
l
<mö[e[j].
t
])

1465 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
l
;

1466 if(!
v
[
e
[
j
].
t
])

1468 
v
[
e
[
j
].
t
]=1;

1469 
ö
[
e
[
j
].
t
]++;

1470 
q
[++
r
]=
e
[
j
].
t
;

1475 
	}
}

1479 
	~<c°dio
>

1480 
	~<c°rög
>

1481 
	#MAXN
 100011

	)

1482 
	#MAXC
 11

	)

1483 
	gt›
;

1485 
	$gë_öd
(
x
){  x-'0'; 
	}
}

1486 
	såõ_node
{ 
boﬁ
 
	mis
; 
	mn
[
MAXC
]; }
	gno
[
MAXN
];

1488 
	såõ_åì


1490 
åõ_node
 
	mr
;

1491 
åõ_åì
(){ 
	mr
=
no
[0]; }

1492 
ö£π
(
s
[])

1494 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

1495 
	mi
=0; i<
	ml
; i++)

1497 if(
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]<0)

1499 
	mno
[
t›
].
	mis
=0;

1500 
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]=
t›
++;

1502 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

1504 
	mno
[
p
].
	mis
=1;

1507 
£¨ch
(
s
[])

1509 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

1510 
	mi
=0; i<
	ml
&&
	mp
!=-1; i++)

1511 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

1512  
	mp
!=-1&&
no
[
p
].
is
==1;

1514 }
	gåõ
;

1516 
	$öô
()

1518 
i
,
j
;

1519 
i
=0; i<
MAXN
; i++)

1520 
no
[
i
].
is
=
j
=0; j<
MAXC
; j++)

1521 
no
[
i
].
n
[
j
]=-1;

1522 
t›
=1;

1523 
	}
}

1525 
	$maö
()

1528 
	}
}

1531 
	~<c°dio
>

1532 
	~<c°rög
>

1533 
	#MAXN
 100011

	)

1536 
	suföd


1538 
	mp
[
MAXN
],
	mt
;

1539 
öi
(){ 
mem£t
(
p
,0,(p)); }

1540 
run
(&
x
){ ; 
	mp
[
t
=x]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));}

1541 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

1542 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

1543 }
	guf
;

1546 
	suföd


1548 
	mp
[
N
],
	mt
;

1549 
öô
()

1551 
	mi
=0; i<=
N
; i++)

1552 
	mp
[
i
]=i;

1554 
run
(&
x
)

1556 ; 
	mp
[
t
=
x
]!=x; 
	mx
=
p
[x],p[t]=p[x]);

1558 
is‰õnd
(
i
,
j
)

1560 
run
(
i
);Ñun(
j
);

1561  
	mi
==
j
;

1563 
£t‰õnd
(
i
,
j
)

1565 
run
(
i
);Ñun(
j
);

1566 
	mp
[
i
]=
p
[
j
];

1568 }
	guf
;

1571 
ölöe
 
	$sig
(
x
){  x>0?1:-1; 
	}
}

1572 
ölöe
 
	$abs
(
x
){  x>0?x:-x; 
	}
}

1574 
	suföd


1576 
	mp
[
MAXN
],
	mt
;

1578 
öô
(){ 
mem£t
(
p
,0,(p)); }

1580 
_run
(&
x
)

1582  ; 
	mp
[
t
=
abs
(
x
)]; 
	mx
=
sig
(x)*
p
[abs(x)],p[t]=sig(p[t])*(p[abs(x)]?p[abs(x)]:abs(p[t])));

1585 
_run_bŸh
(&
i
,&
j
)

1587 
_run
(
i
); _run(
j
);

1590 
_£t_side
(
x
,
i
,
j
)

1592 
	mp
[
abs
(
i
)]=
sig
(i)*◊bs(i)=˜bs(
j
)?0:(
x
*j));

1596 
_judge_side
(
x
,
i
,
j
)

1598  ((
	mi
==
x
*
j
)&&
i
);

1601 
£t_‰õnd
(
i
,
j
)

1603 
_run_bŸh
(
i
,
j
);

1604 
_£t_side
(1,
i
,
j
);

1605  !
_judge_side
(-1,
i
,
j
);

1608 
£t_íemy
(
i
,
j
)

1610 
_run_bŸh
(
i
,
j
);

1611 
_£t_side
(-1,
i
,
j
);

1612  !
_judge_side
(1,
i
,
j
);

1615 
is_‰õnd
(
i
,
j
)

1617 
_run_bŸh
(
i
,
j
);

1618  
_judge_side
(1,
i
,
j
);

1621 
is_íemy
(
i
,
j
)

1623 
_run_bŸh
(
i
,
j
);

1624  
_judge_side
(-1,
i
,
j
);

1626 }
	guf
;

1629 
	~<c°dio
>

1630 
	~<c°rög
>

1631 
	~<Æg‹ôhm
>

1632 
	#öf
 0x3fffffff

	)

1633 
	#N
 1001

	)

1634 
	#S
 1000100

	)

1636 
usög
 
«me•a˚
 
	g°d
;

1638 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

1640 
	g¶ack
[
N
],
	gvÆx
[N],
	gvÆy
[N],
	gm©
[N][N],
	gm2y
[N],
	gvx
[N],
	gvy
[N],
	gli°
[N],
	gt›
;

1642 
	$ö£π
(
f
,
t
)

1644 
e
[
t›
].
f
=f,e[t›].
t
=t;

1645 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1646 
	}
}

1648 
	$föd_∑th
(
now
)

1650 
t
,
i
,
v
;

1651 
vx
[
now
]=1;

1652 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

1654 
t
=
e
[
i
].t;

1655 
v
=
vÆx
[
now
]+
vÆy
[
t
]-
m©
[now][t];

1656 if(!
vy
[
t
]&&
v
==0)

1658 
vy
[
t
]=1;

1659 if(
m2y
[
t
]==-1||
	`föd_∑th
(m2y[t]))

1661 
m2y
[
t
]=
now
;

1665 if(
¶ack
[
t
]>
v
)

1666 
¶ack
[
t
]=
v
;

1669 
	}
}

1671 
	$km_m©ch
(
n
)

1673 
i
,
j
,
k
,
ªt
=0,
d
;

1674 
i
=0; i<
n
; i++)

1676 
m2y
[
i
]=-1;

1677 
vÆx
[
i
]=-
öf
,
vÆy
[i]=0;

1678 
j
=0; j<
n
; j++)

1679 
vÆx
[
i
]=
	`max
(vÆx[i],
m©
[i][
j
]);

1681 
i
=0; i<
n
; i++)

1683 
	`mem£t
(
vx
,0,(vx));

1684 
	`mem£t
(
vy
,0,(vy));

1685 
k
=0; k<
n
; k++)

1686 
¶ack
[
k
]=
öf
;

1687 ; !
	`föd_∑th
(
i
); )

1689 
d
=
öf
;

1690 
k
=0; k<
n
; k++)

1691 if(!
vy
[
k
]&&
¶ack
[k]<
d
)

1692 
d
=
¶ack
[
k
];

1693 
k
=0; k<
n
; k++)

1695 if(
vx
[
k
])

1696 
vÆx
[
k
]-=
d
,
vx
[k]=0;

1697 if(
vy
[
k
])

1698 
vÆy
[
k
]+=
d
,
vy
[k]=0;

1702 
i
=0; i<
n
; i++)

1703 
ªt
+=
vÆx
[
i
]+
vÆy
[i];

1704  
ªt
;

1705 
	}
}

	@template/bell_manford.cpp

2 
	~<c°dio
>

4 
	#MAXN
 200

	)

5 
	#öf
 1000000000

	)

6 
	tñem_i
;

14 
	$bñlm™_f‹d
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò*
mö
,*
¥e
)

16 
v
[
MAXN
],
i
,
j
,
k
,
èg
;

17 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

18 
mö
[
s
]=0,
j
=0; j<
n
; j++)

20 
k
=-1,
i
=0; i<
n
; i++)

21 if(!
v
[
i
] && (
k
==-1||
mö
[i]<min[k]))

22 
k
=
i
;

23 
v
[
k
]=1,
i
=0; i<
n
; i++)

24 if(!
v
[
i
] && 
m©
[
k
][i]>=0 && 
mö
[k]+mat[k][i]<min[i])

25 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i];

27 
èg
=1,
j
=0;Åag&&j<=
n
; j++)

28 
èg
=
i
=0; i<
n
; i++)

29 
k
=0; k<
n
; k++)

30 if(
mö
[
k
]+
m©
[k][
i
]<min[i])

31 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i],
èg
=1;

32  
j
<=
n
;

33 
	}
}

37 
	~<c°dio
>

38 
	#öf
 1000000

	)

39 
	#MAXS
 30000

	)

40 
	#MAXN
 500

	)

41 
	tñem_t
;

43 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

44 
	gli°
[
MAXN
],
	gt›
;

45 
ñem_t
 
	gmö
[
MAXN
];

47 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

49 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

50 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

51 
	}
}

53 
	$bñlm™_f‹d
(
n
,
s
)

55 
i
,
èg
,
j
;

56 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
;

57 
mö
[
s
]=
i
=0,
èg
=1; i<=
n
&&tag; i++)

59 
èg
=0,
j
=0; j<
t›
; j++)

60 if(
mö
[
e
[
j
].
f
]+e[j].
l
<mö[e[j].
t
])

61 
mö
[
e
[
j
].
t
]=mö[e[j].
f
]+e[j].
l
,
èg
=1;

63  
i
<=
n
;

64 
	}
}

	@template/big_integer.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	#DIGIT
 4

	)

5 
	#DEPTH
 10000

	)

6 
	#MAXN
 2502

	)

7 
	#SGN
(
x
Ë((x)>0?1:((x)<0?-1:0))

	)

8 
	#ABS
(
x
Ë((x)>0?(x):-(x))

	)

9 
	tbig_num
[
MAXN
+1];

11 
	$ªad
(
big_num
 
a
)

13 
buf
[
MAXN
*
DIGIT
+1],
ch
; 
i
,
j
;

14 
	`mem£t
(
a
,0,()*(
MAXN
+1));

15 if–
	`sˇnf
("%s",&
buf
)==
EOF
 )  0;

16 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

17 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

18 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

19 
i
=1; i<=
a
[0]; i++)

20 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

21 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

22 ;!
a
[a[0]]&&a[0]>1;a[0]--);

24 
	}
}

26 
	$ªad
(
big_num
 
a
,&
sgn
)

28 
°r
[
MAXN
*
DIGIT
+1],
ch
,*
buf
; 
i
,
j
;

29 
	`mem£t
(
a
,0,()*(
MAXN
+1));

30 if–
	`sˇnf
("%s",&
°r
)==
EOF
 )  0;

31 
buf
=
°r
,
sgn
=1;

32 if(*
buf
=='-'Ë
sgn
=-1,buf++;

33 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

34 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

35 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

36 
i
=1; i<=
a
[0]; i++)

37 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

38 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

39 ;!
a
[a[0]]&&a[0]>1;a[0]--);

40 if(
a
[0]==1 && !a[1]Ë
sgn
=0;

42 
	}
}

44 
	$wrôe
(c⁄° 
big_num
 
a
)

46 
i
,
j
;

47 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

48 
j
=
DEPTH
/10; j; j/=10)

49 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

50 
	}
}

52 
	$comp
(
big_num
 
a
,big_num 
b
)

54 
i
;

55 if(
a
[0]!=
b
[0]) á[0]-b[0];

56 
i
=
a
[0]; i; i--)

57 if(
a
[
i
]!=
b
[i])

58  
a
[
i
]-
b
[i];

60 
	}
}

62 
	$comp
(
big_num
 
a
,c⁄° 
b
)

64 
c
[12]={1};

65 
c
[1]=
b
; c[c[0]]>=
DEPTH
; c[c[0]+1]=c[c[0]]/DEPTH,c[c[0]]%=DEPTH,c[0]++);

66  
	`comp
(
a
,
c
);

67 
	}
}

69 
	$comp
(
big_num
 
a
,
c
,
d
,big_num 
b
)

71 
i
,
t
=0,
O
=-
DEPTH
*2;

72 if(
b
[0]-
a
[0]<
d
 && 
c
)

74 
i
=
b
[0]; i>
d
; i--)

76 
t
Ò*
DEPTH
+
a
[
i
-
d
]*
c
-
b
[i];

77 if(
t
>0)  1;

78 if(
t
<
O
)  0;

80 
i
=
d
; i; i--)

82 
t
Ò*
DEPTH
-
b
[
i
];

83 if(
t
>0)  1;

84 if(
t
<
O
)  0;

86  
t
>0;

87 
	}
}

89 
	$add
(
big_num
 
a
,big_num 
b
)

91 
i
;

92 
i
=1; i<=
b
[0]; i++)

93 if((
a
[
i
]+=
b
[i])>=
DEPTH
)

94 
a
[
i
]-=
DEPTH
,a[i+1]++;

95 if(
b
[0]>=
a
[0])á[0]=b[0];

96 ; 
a
[
i
]>=
DEPTH
 && i<=a[0];á[i]-=DEPTH,i++,a[i]++ );

97 
a
[0]+=(a[a[0]+1]>0);

98 
	}
}

100 
	$add
(
big_num
 
a
,
b
)

102 
i
=1;

103 
a
[1]+=
b
;á[
i
]>=
DEPTH
 && i<a[0];á[i+1]+=a[i]/DEPTH,a[i]%=DEPTH,i++);

104 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

105 
	}
}

107 
	$sub
(
big_num
 
a
,big_num 
b
)

109 
i
;

110 
i
=1; i<=
b
[0]; i++)

111 if((
a
[
i
]-=
b
[i])<0)

112 
a
[
i
+1]--,a[i]+=
DEPTH
;

113 ; 
a
[
i
]<0;á[i]+=
DEPTH
,i++,a[i]--);

114 ; !
a
[a[0]]&&a[0]>1;á[0]--);

115 
	}
}

117 
	$sub
(
big_num
 
a
,
b
)

119 
i
=1;

120 
a
[1]-=
b
;á[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

121 ; !
a
[a[0]]&&a[0]>1;á[0]--);

122 
	}
}

124 
	$sub
(
big_num
 
a
,big_num 
b
,
c
,
d
)

126 
i
,
O
=
b
[0]+
d
;

127 
i
=1+
d
; i<=
O
; i++)

128 if((
a
[
i
]-=
b
[i-
d
]*
c
)<0)

129 
a
[
i
+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH;

130 ; 
a
[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

131 ; !
a
[a[0]]&&a[0]>1;á[0]--);

132 
	}
}

134 
	$mul
(
big_num
 
a
,big_num 
b
,big_num 
c
)

136 
i
,
j
;

137 
	`mem£t
(
c
,0,()*(
MAXN
+1));

138 
c
[0]=
a
[0]+
b
[0]-1,
i
=1; i<=a[0]; i++)

139 
j
=1;j<=
b
[0];j++)

140 if((
c
[
i
+
j
-1]+=
a
[i]*
b
[j])>=
DEPTH
)

141 
c
[
i
+
j
]+=c[i+j-1]/
DEPTH
,c[i+j-1]%=DEPTH;

142 
c
[0]+=(c[c[0]+1]>0); !c[c[0]]&&c[0]>1; c[0]--);

143 
	}
}

145 
	$mul
(
big_num
 
a
,c⁄° 
b
)

147 
i
;

148 
a
[1]*=
b
,
i
=2; i<=a[0]; i++)

150 
a
[
i
]*=
b
;

151 if(
a
[
i
-1]>=
DEPTH
)

152 
a
[
i
]+˜[i-1]/
DEPTH
,a[i-1]%=DEPTH;

154 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

155 ; !
a
[a[0]] &&á[0]>1;á[0]--);

156 
	}
}

158 
	$div
(
big_num
 
c
,big_num 
a
,big_num 
b
)

160 
h
,
l
,
m
,
i
;

161 
	`mem£t
(
c
,0,()*(
MAXN
+1));

162 
c
[0]=(
b
[0]<
a
[0]+1)?(a[0]-b[0]+2):1;

163 
i
=
c
[0]; i; 
	`sub
(
a
,
b
,c[i]=
m
,i-1),i--)

164 
h
=
DEPTH
-1,
l
=0,
m
=(h+l+1)>>1; h>l; m=(h+l+1)>>1)

165 if–
	`comp
(
b
,
m
,
i
-1,
a
ËË
h
=m-1;

166 
l
=
m
;

167 ; !
c
[c[0]]&&c[0]>1; c[0]--);

168 
c
[0]=c[0]>1?c[0]:1;

169 
	}
}

171 
	$div
(
big_num
 
a
,c⁄° 
b
,& 
c
)

173 
i
;

174 
c
=0,
i
=
a
[0]; i; c=c*
DEPTH
+a[i],a[i]=c/
b
,c%=b,i--);

175 ; !
a
[a[0]]&&a[0]>1;á[0]--);

176 
	}
}

178 
	$sqπ
(
big_num
 
b
,big_num 
a
)

180 
h
,
l
,
m
,
i
;

181 
	`mem£t
(
b
,0,()*(
MAXN
+1));

182 
i
=
b
[0]=(
a
[0]+1)>>1; i; 
	`sub
◊,b,
m
,i-1),b[i]+=m,i--)

183 
h
=
DEPTH
-1,
l
=0,
b
[
i
]=
m
=(h+l+1)>>1; h>l; b[i]=m=(h+l+1)>>1)

184 if(
	`comp
(
b
,
m
,
i
-1,
a
)Ë
h
=m-1;

185 
l
=
m
;

186 ; !
b
[b[0]]&&b[0]>1; b[0]--);

187 
i
=1; i<=
b
[0]; b[i++]>>=1);

188 
	}
}

190 
	$Àngth
(
big_num
 
a
)

192 
t
,
ªt
;

193 
ªt
=(
a
[0]-1)*
DIGIT
,
t
=a[a[0]];Å;Å/=10,ret++);

194  
ªt
>0?ret:1;

195 
	}
}

197 
	$digô
(
big_num
 
a
,
b
)

199 
i
,
ªt
;

200 
ªt
=
a
[(
b
-1)/
DIGIT
+1],
i
=(b-1)%DIGIT; i;Ñet/=10,i--);

201  
ªt
%10;

202 
	}
}

204 
	$zî⁄um
(
big_num
 
a
)

206 
ªt
,
t
;

207 
ªt
=0; !
a
[ret+1];Ñet++);

208 
t
=
a
[
ªt
+1],ªt*=
DIGIT
; !(t%10);Å/=10,ret++);

209  
ªt
;

210 
	}
}

212 
	$comp
(
t
[],
l
,
h
,
d
)

214 
i
,
j
,
tmp
;

215 
i
=
l
; i<=
h
; i++)

216 
tmp
=
i
,
j
=2;Åmp>1; j++)

217 !(
tmp
%
j
))

218 
t
[
j
]+=
d
,
tmp
/=j;

219 
	}
}

221 
	$c⁄vît
(
t
[],
h
,
big_num
 
a
)

223 
i
,
j
,
tmp
=1;

224 
	`mem£t
(
a
,0,()*(
MAXN
+1));

225 
a
[0]˜[1]=1,
i
=2; i<=
h
; i++)

226 if(
t
[
i
])

227 
j
=
t
[
i
]; j; 
tmp
*=i,j--)

228 if(
tmp
*
i
>
DEPTH
)

229 
	`mul
(
a
,
tmp
),tmp=1;

230 
	`mul
(
a
,
tmp
);

231 
	}
}

233 c⁄° 
	gMMM
=10000;

234 
	$combö©i⁄
(
big_num
 
a
,
m
,
n
)

236 
t
[
MMM
]={0};

237 
	`comp
(
t
,
n
+1,
m
,1);

238 
	`comp
(
t
,2,
m
-
n
,-1);

241 
	`c⁄vît
(
t
,
m
,
a
);

242 
	}
}

244 
	$≥rmuèti⁄
(
big_num
 
a
,
m
,
n
)

246 
i
,
t
=1;

247 
	`mem£t
(
a
,0,()*(
MAXN
+1));

248 
a
[0]=a[1]=1;

249 
i
=
m
-
n
+1; i<=m; 
t
*=i++)

250 if(
t
*
i
>
DEPTH
)

251 
	`mul
(
a
,
t
),t=1;

252 
	`mul
(
a
,
t
);

253 
	}
}

	@template/cmp_geometry.cpp

3 
	~<c°dio
>

4 
	~<cm©h
>

6 
	tñem_t
;

7 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; };

9 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

11  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

12 
	}
}

13 
poöt
 
	$öãr£˘i⁄
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

15 
poöt
 
ªt
=
a
;

16 
ñem_t
 
up
,
dw
,
t
;

17 
up
=
	`xmu…
(
c
,
d
,c,
a
);

18 
dw
=
	`xmu…
(
a
,
b
,
c
,
d
);

19 
t
=
up
/
dw
;

20 
ªt
.
x
+=(
b
.x-
a
.x)*
t
;

21 
ªt
.
y
+=(
b
.y-
a
.y)*
t
;

22  
ªt
;

23 
	}
}

27 
	~<c°dio
>

28 
	~<cm©h
>

29 
	#MAXN
 10001

	)

30 
	#ïs
 1e-8

	)

31 
	tñem_t
;

33 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp
[
MAXN
];

35 
ölöe
 
	$mö
(
ñem_t
 
a
,ñem_à
b
){ á<b?a:b; 
	}
}

36 
ölöe
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á<b?b:a; 
	}
}

37 
ölöe
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

39  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

40 
	}
}

41 
ölöe
 
	$zîo
(
x
){  x>=-
ïs
&&x<=eps;

42 
	}
}

44 
	$ö_pﬁyg⁄
(
poöt
 
a
,
n
,poöà
p
[],
⁄_edge
)

46 
poöt
 
low_p
,
high_p
;

47 
i
,
˙t
=0;

48 
i
=0; i<
n
; i++)

50 if(
p
[
i
].
y
<p[(i+1)%
n
].yË
low_p
ı[i],
high_p
=p[(i+1)%n];

51 
high_p
=
p
[
i
],
low_p
ı[(i+1)%
n
];

52 if(
	`xmu…
(
a
,
low_p
,a,
high_p
)>
ïs
&&a.
y
>=low_p.y&&a.y<high_p.y)

53 
˙t
++;

54 if(
	`zîo
(
	`xmu…
(
a
,
low_p
,a,
high_p
))&&a.
y
>ˆow_p.y&&a.y<=high_p.y&&a.
x
>=
	`mö
÷ow_p.x,high_p.x)&&a.x<=
	`max
(low_p.x,high_p.x))

55  
⁄_edge
;

57  
˙t
&1;

58 
	}
}

	@template/comb2num.cpp

3 
	~<c°dio
>

4 
	tLL
;

6 
LL
 
	$comb
(
n
,
m
)

8 
LL
 
ªt
=1; 
i
=
n
;

9 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

10  
ªt
;

11 
	}
}

13 
LL
 
	$comb2num
(
n
,
m
,
c
[])

15 
LL
 
ªt
=
	`comb
(
n
,
m
); 
i
,
j
;

16 
i
=0; i<
m
; i++)

17 
ªt
-=
	`comb
(
n
-
c
[
i
],
m
-i);

18  
ªt
;

19 
	}
}

	@template/converx_hull.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	#ïs
 1e-8

	)

6 
	#öf
 100000000

	)

7 
	#MAXN
 50100

	)

8 
usög
 
	g°d
::
s‹t
;

9 
	tñem_t
;

11 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp1
,
	gp
[
MAXN
],
	gc⁄vîx
[MAXN];

12 
ölöe
 
ñem_t
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á>b?a:b; 
	}
}

13 
ölöe
 
	$zîo
(
ñem_t
 
x
){  x>=-
ïs
&&x<Ûps; 
	}
}

15 
ölöe
 
ñem_t
 
	$Àn
(
poöt
 
a
,poöà
b
)

17  
	`sqπ
((
b
.
x
-
a
.x)*(b.x-a.x)+(b.
y
-a.y)*(b.y-a.y));

18 
	}
}

19 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
)

21  (
a
.
x
-
c
.x)*(
b
.
y
-c.y)-(a.y-c.y)*(b.x-c.x);

22 
	}
}

24 
	$cmp
(
poöt
 
a
,poöà
b
)

26 
ñem_t
 
x
;

27 
x
=
	`xmu…
(
a
,
b
,
p1
);

28 if(
	`zîo
(
x
))

29  
	`Àn
(
a
,
p1
)<Àn(
b
,p1);

30  
x
>0;

31 
	}
}

33 
	$_c⁄vîx
(
n
,
poöt
 
p
[],poöà
c⁄
[])

35 
i
,
s
;

36 
p1
.
x
ı1.
y
=
öf
;

37 
i
=0; i<
n
; i++)

39 if(
p
[
i
].
y
<
p1
.y)

40 
p1
=
p
[
i
];

41 if(
p
[
i
].
y
==
p1
.y&&p[i].
x
<p1.x)

42 
p1
=
p
[
i
];

44 
	`s‹t
(
p
,p+
n
,
cmp
);

45 
c⁄
[0]=
p
[0],c⁄[1]ı[1],
s
=2;

46 
i
=0; i<
n
; 
c⁄
[
s
++]=
p
[i++])

47 ; 
s
>1&&
	`xmu…
(
c⁄
[s-1],
p
[
i
],c⁄[s-2])<=
ïs
; s--);

49  
s
;

50 
	}
}

	@template/date.cpp

2 
	~<c°dio
>

4 
	gdays
[12]={31,28,31,30,31,30,31,31,30,31,30,31};

5 
	sd©e
{ 
	my
,
	mm
,
	md
; };

8 
ölöe
 
	$À≠
(
yór
)

10  (
yór
%4==0 && year%100!=0)||0==year%400;

11 
	}
}

14 
ölöe
 
	$ÀgÆ
(
d©e
 
a
)

16 if(
a
.
m
<0 ||á.m>12)  0;

17 if(
a
.
m
==2Ëá.
d
>0 &&á.d<=28+
	`À≠
◊.
y
);

18  
a
.
d
>0 &&á.d<=
days
[a.
m
-1];

19 
	}
}

22 
ölöe
 
	$d©ecmp
(
d©e
 
a
,d©ê
b
)

24 if(
a
.
y
 !
b
.y) á.y-b.y;

25 if(
a
.
m
 !
b
.m) á.m-b.m;

26  
a
.
d
-
b
.d;

27 
	}
}

32 
	$wìkday
(
d©e
 
a
)

34 
tm
=
a
.
m
>=3? (a.m-2):(a.m+10);

35 
ty
=
a
.
m
>=3?á.
y
:(a.y-1);

36  (
ty
+ty/4-ty/100+ty/400+()(2.6*
tm
-0.2)+
a
.
d
)%7;

37 
	}
}

41 
	$d©e2öt
(
d©e
 
a
)

43 
ªt
=
a
.
y
*365+◊.y-1)/4-◊.y-1)/100+◊.y-1)/400,
i
;

44 
days
[1]+=
	`À≠
(
a
.
y
);

45 
i
=0; i<
a
.
m
-1; 
ªt
+=
days
[i++]);

46 
days
[1]=28;

47  
ªt
+
a
.
d
;

48 
	}
}

53 
d©e
 
	$öt2d©e
(
a
)

55 
d©e
 
ªt
;

56 
ªt
.
y
=
a
/146097*400;

57 
a
%=146097;á>=365+
	`À≠
(
ªt
.
y
);á-=365+leap(ret.y),ret.y++);

58 
days
[1]+=
	`À≠
(
ªt
.
y
);

59 
ªt
.
m
=1; 
a
>=
days
[ret.m-1];á-=days[ret.m-1],ret.m++);

60 
days
[1]=28;

61 
ªt
.
d
=
a
+1;

62  
ªt
;

63 
	}
}

	@template/dijkstra.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

5 c⁄° 
	gMAXN
=1001;

6 c⁄° 
	göf
=1000000000;

7 
	tñem_i
;

8 
	gmö1
[
MAXN
],
	gmö2
[MAXN],
	gm©
[MAXN][MAXN];

14 
	$dijk°ø
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò
mö
[],
¥e
[])

16 
v
[
MAXN
],
i
,
j
,
k
;

17 
i
=0;i<
n
;i++Ë
v
[i]=0,
mö
[i]=
öf
,
¥e
[i]=-1;

18 
mö
[
s
]=0,
i
=0;i<
n
;i++){

19 
k
=-1,
j
=0;j<
n
;j++)

20 i‡(!
v
[
j
]&&((
k
==-1)||
mö
[j]<min[k]))

21 
k
=
j
;

22 
v
[
k
]=1,
j
=0;j<
n
;j++)

23 if(!
v
[
j
] && 
mö
[
k
]+
m©
[k][j]<min[j])

24 
mö
[
j
]=mö[
k
]+
m©
[
¥e
[j]=k][j];

26 
	}
}

33 
	~<c°dio
>

34 
	~<queue
>

35 
	#MAXN
 1000

	)

36 
	#MAXS
 2000000

	)

37 
	#öf
 100000000

	)

38 
usög
 
«me•a˚
 
	g°d
;

39 
	tñem_t
;

40 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

41 
	shóp_t


43 
	mv
; 
ñem_t
 
	ml
;

44 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

45 }
	gh_t
;

46 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	g¥e
[MAXN];

47 
ñem_t
 
	gmö_l
[
MAXN
];

48 
	g¥i‹ôy_queue
<
	ghóp_t
> 
	gq
;

50 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

52 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

53 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

54 
	}
}

56 
	$dijk°ø
(
n
,
s
)

58 
i
;

59 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö_l
[i]=
öf
,
¥e
[i]=-1;

60 
mö_l
[
h_t
.
v
=
s
]=h_t.
l
=0; 
q
.
	`push
(h_t);

61 ; !
q
.
	`em±y
();)

63 
h_t
=
q
.
	`t›
(),q.
	`p›
();

64 if(!
v
[
h_t
.v])

65 
v
[
h_t
.v]=1,
i
=
li°
[h_t.v]; i!=-1; i=
e
[i].
n
)

66 if(!
v
[
e
[
i
].
t
]&&
mö_l
[e[i].
f
]+e[i].
l
<min_l[e[i].t])

67 
¥e
[
e
[
i
].
t
]Û[i].
f
,
mö_l
[
h_t
.
v
Û[i].t]=h_t.
l
=mö_l[e[i].f]+e[i].l,
q
.
	`push
(h_t);

69 
	}
}

	@template/find_components.cpp

4 
	~<c°dio
>

5 
	~<c°rög
>

6 
	#MAXN
 5010

	)

7 
	#MAXS
 100000

	)

8 
	tñem_t
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

11 
	gv
[
MAXN
],
	gli°
[MAXN],
	gid
[MAXN],
	g°
[MAXN],
	gd‚
[MAXN],
	glow
[MAXN],
	g˙t
,
	gt›
;

13 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

15 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$£¨ch
(
n
,
now
,&
ªt
)

21 
i
;

22 
d‚
[
°
[°[0]++]=
now
]=
low
[now]=++
˙t
; 
v
[now]=1;

23 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

24 if(!
d‚
[
e
[
i
].
t
])

26 
	`£¨ch
(
n
,
e
[
i
].
t
,
ªt
);

27 if(
low
[
e
[
i
].
t
]<low[
now
])Üow[now]=low[e[i].t];

29 if(
d‚
[
e
[
i
].
t
]<d‚[
now
])

31 if(
v
[
e
[
i
].
t
]&&
d‚
[e[i].t]<
low
[
now
])

32 
low
[
now
]=
d‚
[
e
[
i
].
t
];

34 if(
low
[
now
]==
d‚
[now])

35 
ªt
++; 
°
[°[0]]!=
now
; 
id
[°[--°[0]]]Ùë,
v
[st[st[0]]]=0);

36 
	}
}

38 
	$föd_comp⁄íts
(
n
)

40 
ªt
=0,
i
;

41 
i
=0; i<=
n
+1; i++Ë
°
[i]=-1,
d‚
[i]=0;

42 
°
[0]=1,
˙t
=
i
=0; i<
n
; i++)

43 if(!
d‚
[
i
])

44 
	`£¨ch
(
n
,
i
,
ªt
);

45  
ªt
;

46 
	}
}

	@template/floyd_warshall.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

5 
	tñem_i
;

6 
	#MAXN
 200

	)

7 
	#öf
 1000000000

	)

8 
ñem_i
 
	gm©
[
MAXN
][MAXN],
	gmö
[MAXN][MAXN];

9 
	g¥e
[
MAXN
][MAXN];

15 
	$Êoyd_w¨shÆl
(
n
,
ñem_i
 
m©
[][
MAXN
],ñem_ò
mö
[][MAXN],
¥e
[][MAXN])

17 
i
,
j
,
k
;

18 
i
=0;i<
n
;i++)

19 
j
=0;j<
n
;j++)

20 
mö
[
i
][
j
]=
m©
[i][j],
¥e
[i][j]=(i==j)?-1:i;

21 
k
=0;k<
n
;k++)

22 
i
=0;i<
n
;i++)

23 
j
=0;j<
n
;j++)

24 if(
mö
[
i
][
k
]+mö[k][
j
]<min[i][j])

25 
mö
[
i
][
j
]=mö[i][
k
]+mö[k][j],
¥e
[i][j]=pre[k][j];

26 
	}
}

	@template/gen_comb.cpp

2 
	~<c°dio
>

3 
	#MAXN
 1000

	)

5 
	gd©
[
MAXN
],
	gtmp
[MAXN];

7 
	$show
(
n
,
tmp
[])

9 
i
;

10 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

11 
	`puts
("");

12 
	}
}

14 
	$gícomb
(
s
,
e
,
m
,
˙t
)

16 
i
;

17 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

19 
i
=
s
; i+
m
-
˙t
<=
e
; i++)

20 
tmp
[
˙t
++]=
d©
[
i
],
	`gícomb
(i+1,
e
,
m
,cnt),cnt--;

21 
	}
}

23 
	$gí_comb
(
n
,
m
)

25 
i
;

26 
i
=0; i<
n
; i++Ë
d©
[i]=i+1;

27 
	`gícomb
(0,
n
,
m
,0);

28 
	}
}

	@template/gen_perm.cpp

2 
	~<c°dio
>

3 
	#MAXN
 1000

	)

5 
	gèg
[
MAXN
],
	gtmp
[MAXN],
	ga
[MAXN];

7 
	$show
(
m
,
tmp
[])

9 
i
;

10 
i
=0; i<
m
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

11 
	`puts
("");

12 
	}
}

14 
	$gí≥rm
(
n
,
m
,
˙t
)

16 
i
;

17 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

19 
i
=0; i<
n
; i++)

20 if(!
èg
[
i
])

21 
èg
[
i
]=1,
tmp
[
˙t
]=
a
[i],
	`gí≥rm
(
n
,
m
,cnt+1),tag[i]=0;

22 
	}
}

24 
	$gí_≥rm
(
n
,
m
)

26 
i
;

27 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
èg
[i]=0;

28 
	`gí≥rm
(
n
,
m
,0);

29 
	}
}

	@template/gen_perm_swap.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

4 
	#MAXN
 1000

	)

6 
	gpos
[
MAXN
],
	gdú
[MAXN],
	ga
[MAXN];

8 
	$show
(
n
,
tmp
[])

10 
i
;

11 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

12 
	`puts
("");

13 
	}
}

15 
	$_gí_≥rm_sw≠
(
n
,
l
)

17 
p1
,
p2
,
i
,
t
;

18 if(
l
==
n
Ë
	`show
“,
a
);

21 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

22 
i
=0; i<
l
; i++)

24 
p2
=(
p1
=
pos
[
l
])+
dú
[l];

25 
t
=
a
[
p2
],a[p2]˜[
p1
],a[p1]=t;

26 
pos
[
a
[
p1
]-1]ı1,pos[a[
p2
]-1]=p2;

27 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

30 
dú
[
l
]=-dir[l];

31 
	}
}

33 
	$gí_≥rm_sw≠
(
n
)

35 
i
;

36 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
dú
[i]=-1,
pos
[i]=i;

37 
	`_gí_≥rm_sw≠
(
n
,0);

38 
	}
}

	@template/hungary.cpp

5 
	~<c°dio
>

6 
	#MAXN
 220

	)

7 
	#MAXS
 100000

	)

8 
	tñem_t
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

11 
	gt›
,
	gm©ch1
[
MAXN
],
	gq
[
MAXS
],
	gm©ch2
[MAXN],
	gli°
[MAXN],
	gtmp2
[MAXN];

13 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

15 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$hung¨y
(
m
,
n
)

21 
i
,
j
,
k
,
l
,
r
,
mx
=(
m
>
n
)?m:n,
ªt
=0,
x
,
y
,
t
;

22 
i
=0; i<
mx
; i++Ë
m©ch1
[i]=
m©ch2
[i]=-1;

23 
i
=0; i<
m
; 
ªt
+=(
m©ch1
[i++]>-1))

25 
j
=0; j<
n
; j++Ë
tmp2
[j]=-1;

26 
q
[
l
=
r
=0]=
i
;Ü<Ù&&
m©ch1
[i]<0;Ü++)

27 
k
=
q
[
l
],
j
=
li°
[k]; j!=-1&&
m©ch1
[
i
]<0; j=
e
[j].
n
)

28 if(
tmp2
[
e
[
j
].
t
]<0)

30 
q
[++
r
]=
m©ch2
[
e
[
j
].
t
],
tmp2
[e[j].t]=
k
;

31 if(
q
[
r
]<0)

32 
y
=
e
[
j
].
t
; y>=0; y=t)

33 
m©ch2
[
y
]=
x
=
tmp2
[y],
t
=
m©ch1
[x],match1[x]=y;

36  
ªt
;

37 
	}
}

43 
	~<c°dio
>

44 
	#N
 1001

	)

45 
	#S
 1000001

	)

47 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

48 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N];

50 
	$föd
(
now
)

52 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

54 
to
=
e
[
i
].
t
;

55 if(!
y
[
to
])

57 
y
[
to
]=1;

58 if(
m©ch
[
to
]<0||
	`föd
(match[to]))

60 
m©ch
[
to
]=
now
;

66 
	}
}

68 
	$hung¨y
(
m
,
n
)

70 
ªt
=0;

71 
	`mem£t
(
m©ch
,-1,(match));

72 
i
=0; i<
m
; i++)

74 
	`mem£t
(
y
,0,(y));

75 if(
	`föd
(
i
))

76 
ªt
++;

78  
ªt
;

79 
	}
}

	@template/max_clique.cpp

1 
	~<c°dio
>

2 
	#MAXN
 60

	)

9 
	$˛ique
(
n
,
u
[],
m©
[][
MAXN
],
size
,& 
max
,& 
bb
,
ªs
[],
º
[],
c
[])

11 
i
,
j
,
vn
,
v
[
MAXN
];

12 if(
n
)

14 if(
size
+
c
[
u
[0]]<=
max
) ;

15 
i
=0; i<
n
+
size
-
max
 && i<n; ++i)

17 
j
=
i
+1,
vn
=0; j<
n
; ++j)

18 if(
m©
[
u
[
i
]][u[
j
]])

19 
v
[
vn
++]=
u
[
j
];

20 
º
[
size
]=
u
[
i
];

21 
	`˛ique
(
vn
,
v
,
m©
,
size
+1,
max
,
bb
,
ªs
,
º
,
c
);

22 if(
bb
) ;

25 if(
size
>
max
)

27 
max
=
size
;

28 
i
=0; i<
size
; ++i)

29 
ªs
[
i
]=
º
[i];

30 
bb
=1;

32 
	}
}

34 
	$max˛ique
(
n
,
m©
[][
MAXN
],
ªt
[])

36 
max
=0,
bb
,
c
[
MAXN
],
i
,
j
,
vn
,
v
[MAXN],
º
[MAXN];

37 
c
[
i
=
n
-1]=0; i>=0; --i)

39 
vn
=0,
j
=
i
+1; j<
n
; ++j)

40 if(
m©
[
i
][
j
])

41 
v
[
vn
++]=
j
;

42 
bb
=0, 
º
[0]=
i
;

43 
	`˛ique
(
vn
,
v
,
m©
,1,
max
,
bb
,
ªt
,
º
,
c
);

44 
c
[
i
]=
max
;

46  
max
;

47 
	}
}

	@template/maxflow_dicnic.cpp

3 
	~<c°dio
>

4 
	#MAXN
 20100

	)

5 
	#MAXS
 880100

	)

6 
	#öf
 0x7fffffff

	)

7 
	tñem_t
;

9 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	mw
; }
	ge
[
MAXS
];

10 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gœy
[MAXN];

12 
	$ö£π
(
f
,
t
,
ñem_t
 
w
)

14 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

15 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

16 
	}
}

18 
ölöe
 
	$™ti
(
öd
){  ind^1; 
	}
}

19 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

21 
	$bfs
(
s
,
t
,
n
)

23 
l
,
r
,
i
,
j
;

24 
i
=0; i<
n
; i++Ë
œy
[i]=-1;

25 
q
[
l
=
r
=0]=
s
; 
œy
[s]=0;

26 ; 
l
<=
r
; )

28 
i
=
q
[
l
++];

29 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

31 if(
œy
[
e
[
j
].
t
]<0&&e[j].
w
>0)

32 
œy
[
e
[
j
].
t
]ˆay[
i
]+1,
q
[++
r
]=e[j].t;

35  
œy
[
t
]>=0;

36 
	}
}

38 
ñem_t
 
	$dfs
(
now
,
t
,
ñem_t
 
now_Êow
)

40 
âl
=0,
sögÀ
,
i
,
j
;

41 if(
now
==
t
Ë 
now_Êow
;

42 
i
=
li°
[
now
]; i!=-1&&
âl
<
now_Êow
; i=
e
[i].
n
)

43 if(
œy
[
e
[
i
].
t
]=ˆay[
now
]+1&&e[i].
w
>0&&(
sögÀ
=
	`dfs
”[i].t,t,
	`mö
”[i].w,
now_Êow
-
âl
))))

45 
e
[
i
].
w
-=
sögÀ
;

46 
e
[
	`™ti
(
i
)].
w
+=
sögÀ
;

47 
âl
+=
sögÀ
;

49 if(
âl
==0Ë
œy
[
now
]=-1;

50  
âl
;

51 
	}
}

53 
ñem_t
 
	$di˙ic
(
s
,
t
,
n
)

55 
ñem_t
 
ªt
=0;

56 
	`bfs
(
s
,
t
,
n
))

57 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

58  
ªt
;

59 
	}
}

	@template/mcmf.cpp

3 
	~<c°dio
>

4 
	#öf
 1000000000

	)

5 
	#MAXN
 200

	)

6 
	#MAXS
 160000

	)

8 
	sedge
{ 
	mf
,
	mt
,
	mc
,
	mÊow
,
	mn
; }
	ge
[
MAXS
];

9 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gv
[MAXN],
	g¥e
[MAXN],
	gmö
[MAXN],
	gmax_Êow
;

11 
	$s_ö£π
(
f
,
t
,
c
,
Êow
)

13 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c,e[t›].
Êow
=flow;

14 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

15 
	}
}

17 
	$ö£π
(
f
,
t
,
c
,
Êow
)

19 
	`s_ö£π
(
f
,
t
,
c
,
Êow
);

20 
	`s_ö£π
(
t
,
f
,-
c
,0);

21 
	}
}

23 
	$•Á
(
n
,
s
,
t
)

25 
i
,
l
,
r
,
j
;

26 
i
=0; i<
n
; i++Ë
¥e
[i]=-1,
mö
[i]=
öf
,
v
[i]=0;

27 
q
[
l
=
r
=0]=
s
;

28 
mö
[
s
]=0,
v
[s]=1;

29 ; 
l
<=
r
; )

31 
i
=
q
[
l
++];

32 
v
[
i
]=0;

33 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

34 if(
e
[
j
].
Êow
>0&&
mö
[
i
]+e[j].
c
<mö[e[j].
t
])

36 
¥e
[
e
[
j
].
t
]=j;

37 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
c
;

38 if(!
v
[
e
[
j
].
t
])

39 
v
[
e
[
j
].
t
]=1,
q
[++
r
]=e[j].t;

42  
mö
[
t
]!=
öf
;

43 
	}
}

45 
	$mcmf
(
n
,
s
,
t
)

47 
ªt
=0,
i
,
now_Êow
;

48 
max_Êow
=0;

49 ; 
	`•Á
(
n
,
s
,
t
); )

51 
now_Êow
=
öf
;

52 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

53 if(
now_Êow
>
e
[
i
].
Êow
)

54 
now_Êow
=
e
[
i
].
Êow
;

55 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

56 
e
[
i
].
Êow
-=
now_Êow
,e[i^1].flow+=now_flow;

57 
max_Êow
+=
now_Êow
;

58 
ªt
+=
now_Êow
*
mö
[
t
];

60  
ªt
;

61 
	}
}

65 
	~<c°dio
>

66 
	~<cm©h
>

67 
	~<ve˘‹
>

68 
	~<queue
>

69 
	~<utûôy
>

71 
usög
 
«me•a˚
 
	g°d
;

72 c⁄° 
	gN
 = 460;

73 c⁄° 
	göf
 = 0x3fffffff;

75 
	sedge
 {

76 
	mto
,
	mco°
,
	mÊow
,
	m™ti
;

77 
edge
(){}

78 
edge
(
t
,
c
,
f
,
a
):
to
—),
co°
(c),
Êow
(f),
™ti
(a){}

81 
	gve˘‹
<
	gedge
> 
	ggr
[
N
+2];

82 
	gqueue
<> 
	gq
;

83 
	g∑ú
<,> 
	g¥e
[
N
];

84 
	gdis
[
N
],
	gvis
[N],
	gmax_Êow
;

86 
	$ö£π
(
f
,
t
,
c
,
Êow
) {

87 
gr
[
f
].
	`push_back
(
	`edge
(
t
,
c
,
Êow
,gr[t].
	`size
()));

88 
gr
[
t
].
	`push_back
(
	`edge
(
f
,-
c
,0,gr[f].
	`size
()-1));

89 
	}
}

91 
	$•Á
(
n
,
s
,
t
) {

92 ; !
q
.
	`em±y
(); ) {

93 
q
.
	`p›
();

95 
i
=0; i<
n
; i++) {

96 
dis
[
i
]=
öf
,
vis
[i]=0;

97 
¥e
[
i
]=
	`make_∑ú
(-1,-1);

99 
q
.
	`push
(
s
);

100 
dis
[
s
]=0,
vis
[s]=1;

101 ; !
q
.
	`em±y
();) {

102 
now
=
q
.
	`‰⁄t
();

103 
q
.
	`p›
();

104 
vis
[
now
]=0;

105 
i
=0; i<
gr
[
now
].
	`size
(); i++) {

106 
to
=
gr
[
now
][
i
].to;

107 if(
gr
[
now
][
i
].
Êow
>0 && 
dis
[
to
]>dis[now]+gr[now][i].
co°
) {

108 
dis
[
to
]=dis[
now
]+
gr
[now][
i
].
co°
;

109 
¥e
[
to
]=
	`make_∑ú
(
now
,
i
);

110 if(!
vis
[
to
]) {

111 
vis
[
to
]=1;

112 
q
.
	`push
(
to
);

117  
¥e
[
t
].
fú°
>=0;

118 
	}
}

120 
	$mcmf
(
n
,
s
,
t
) {

121 
ªt
=0;

122 
max_Êow
=0;

123 ; 
	`•Á
(
n
,
s
,
t
);) {

124 
now_Êow
=
öf
;

125 
i
=
t
; 
¥e
[i].
fú°
 != -1; i=pre[i].first) {

126 
x
=
¥e
[
i
].
fú°
,
y
ıª[i].
£c⁄d
;

127 
now_Êow
=
	`mö
“ow_Êow,
gr
[
x
][
y
].
Êow
);

129 
i
=
t
; 
¥e
[i].
fú°
 != -1; i=pre[i].first) {

130 
x
=
¥e
[
i
].
fú°
,
y
ıª[i].
£c⁄d
;

131 
to
=
gr
[
x
][
y
].to;

132 
gr
[
x
][
y
].
Êow
-=
now_Êow
;

133 
gr
[
to
][gr[
x
][
y
].
™ti
].
Êow
+=
now_Êow
;

135 
max_Êow
+=
now_Êow
;

136 
ªt
+=
now_Êow
*
dis
[
t
];

138  
ªt
;

139 
	}
}

	@template/miller_rabbin_pollar_rho.cpp

1 
	~<c°dio
>

2 
	~<c°dlib
>

3 
	~<˘ime
>

4 
	#N
 1001

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gli°
[
N
];

9 
	gt›
;

11 
LL
 
	$mulmod
(
LL
 
a
,LL 
b
,LL 
n
)

13 
LL
 
ªt
=0;

14 
a
˜%
n
;

15 ; 
b
; )

17 if(
b
&1)

19 
ªt
Ùë+
a
;

20 if(
ªt
>
n
)Ñet-=n;

22 
a
<<=1;

23 if(
a
>
n
)

24 
a
-=
n
;

25 
b
>>=1;

27  
ªt
;

28 
	}
}

30 
LL
 
	$expmod
(
LL
 
a
,LL 
b
,LL 
n
)

32 
LL
 
ªt
=1;

33 ; 
b
;)

35 if(
b
&1)

36 
ªt
=
	`mulmod
‘ë,
a
,
n
);

37 
a
=
	`mulmod
◊,a,
n
);

38 
b
>>=1;

40  
ªt
;

41 
	}
}

43 
	$mûÀr_øbbö
(
LL
 
n
,
times
=8)

45 if(
n
==2)  1;

46 if((
n
&1)==0||n<2)  0;

47 
LL
 
m
=
n
-1,
x
,
y
;

48 
k
=0;

49 ; (
m
&1)==0; m>>=1,
k
++);

50 
i
=0; i<
times
; i++)

52 
x
=
	`ønd
()%(
n
-2)+2;

53 
y
=
x
=
	`expmod
(x,
m
,
n
);

54 if(
x
==1) ;

55 
j
=0; j<
k
; j++)

57 
y
=
	`mulmod
(
x
,x,
n
);

58 if(
y
==1&&
x
!=
n
-1&&x!=1)  0;

59 
x
=
y
;

61 if(
y
!=1)  0;

64 
	}
}

66 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

68 
LL
 
	$pﬁœr_rho
(
LL
 
n
,
c
)

70 
LL
 
x
,
y
,
p
;

71 
i
=1,
k
=2;

72 
y
=
x
=
	`ønd
()%(
n
-1)+1;

75 
i
++;

76 
x
=(
	`mulmod
(x,x,
n
)+
c
)%n;

77 if(
x
==
y
Ë 
n
;

78 
p
=
	`gcd
(
x
-
y
,
n
);

79 if(1<
p
&&p<
n
) Ö;

80 if(
i
==
k
)

82 
k
<<=1;

83 
y
=
x
;

86 
	}
}

89 
	$föd_Ác
(
LL
 
n
,
c
)

91 if(
n
==1)

93 if(
	`mûÀr_øbbö
(
n
))

95 
li°
[
t›
++]=
n
;

98 
LL
 
x
=
n
;

99 
nc
=
c
;

100 ; 
x
>=
n
; )

101 
x
=
	`pﬁœr_rho
(
n
,
nc
--);

102 
	`föd_Ác
(
n
/
x
,
c
);

103 
	`föd_Ác
(
x
,
c
);

104 
	}
}

	@template/modular_exponent.cpp

1 
	~<c°dio
>

2 
	tLL
;

5 
LL
 
	$exp⁄ít
(
LL
 
m
,LL 
a
)

7 
LL
 
ªt
=1;

8 ; 
a
;á>>=1,
m
*=m)

9 if(
a
&1)

10 
ªt
*=
m
;

11  
ªt
;

12 
	}
}

15 
LL
 
	$moduœr_exp⁄ít
(
LL
 
a
,LL 
b
,LL 
m
)

17 
LL
 
ªt
=1;

18 ; 
b
; b>>=1,
a
=◊%
m
*(a%m))%m)

19 if(
b
&1)

20 
ªt
Ùë%
m
*(
a
%m)%m;

21  
ªt
;

22 
	}
}

	@template/modular_linear_system.cpp

1 
	~<c°dio
>

2 
	#MAXN
 100

	)

3 
	tLL
;

5 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

6 
LL
 
	$lcm
(
LL
 
a
,LL 
b
){ á*b/
	`gcd
◊,b); 
	}
}

9 
LL
 
	$ext_gcd
(
LL
 
a
,LL 
b
,LL &
x
,LL &
y
)

11 if(!
b
Ë 
x
=1,
y
=0,
a
;

12 
LL
 
g
=
	`ext_gcd
(
b
,
a
%b,
y
,
x
);

13 
y
-=
a
/
b
*
x
;

14  
g
;

15 
	}
}

19 
LL
 
	$moduœr_löór
(
LL
 
a
,LL 
b
,LL 
m
,LL 
sﬁ
[])

21 
LL
 
d
,
e
,
x
,
y
,
i
;

22 
d
=
	`ext_gcd
(
a
,
m
,
x
,
y
);

23 if(
b
%
d
)  0;

24 
e
=(
x
*(
b
/
d
)%
m
+m)%m;

25 
i
=0; i<
d
; i++)

26 
sﬁ
[
i
]=(
e
+i*(
m
/
d
))%m;

27  
d
;

28 
	}
}

36 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

38 
LL
 
d
,
x
,
y
,
ªt
=0,
m
,
n
=1,
i
;

39 
i
=0; i<
k
; i++Ë
n
*=
w
[i];

40 
i
=0; i<
k
; i++)

42 
m
=
n
/
w
[
i
];

43 
d
=
	`ext_gcd
(
w
[
i
],
m
,
x
,
y
);

44 
ªt
=‘ë+
y
*
m
*
b
[
i
])%
n
;

46  (
ªt
+
n
)%n;

47 
	}
}

55 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

57 
LL
 
t
,
d
,
x
,
y
,
ªt
=
b
[0],
m
=
w
[0],
â
,
Ác
,
√xtm
,
i
;

58 
i
=1; i<
k
; i++)

60 
d
=
	`ext_gcd
(
m
,
w
[
i
],
x
,
y
);

61 
t
=
b
[
i
]-
ªt
;

62 if(
t
%
d
)  -1;

63 
â
=
w
[
i
]/
d
;

64 
Ác
=(
x
*(
t
/
d
)%
â
+tt)%tt;

65 
√xtm
=
m
/
d
*
w
[
i
];

66 
ªt
=(‘ë+
m
*
Ác
)%
√xtm
+nextm)%nextm;

67 
m
=
√xtm
;

69  (
ªt
%
m
+m)%m;

70 
	}
}

	@template/mst_kruskal.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	~<queue
>

6 
	#MAXN
 10010

	)

7 
	#MAXS
 200020

	)

8 
	#öf
 1000000000

	)

9 
	tñem_t
;

10 
usög
 
«me•a˚
 
	g°d
;

12 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
;

13 
‰õnd
 
boﬁ
 
	m›î©‹
<(
edge
 
	ma
,edgê
	mb
){ á.
	ml
>b.l; }

14 }
	ge
[
MAXS
],
	ge_t
;

15 
	suföd


17 
	mp
[
MAXN
],
	mt
;

18 
öi
(){ 
mem£t
(
p
,0,(p)); }

19 
run
(&
x
){ ; 
	mp
[
t
=x]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));}

20 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

21 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

22 }
	guf
;

23 
	gt›
,
	gli°
[
MAXN
];

25 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

27 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

28 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

29 
	}
}

31 
ñem_t
 
	$kruskÆ
(
n
)

33 
¥i‹ôy_queue
<
edge
> 
q
;

34 
uf
.
	`öi
(); 
ñem_t
 
ªt
=0;

35 
i
,
j
;

36 
i
=0; i<
n
; i++)

37 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

38 
q
.
	`push
(
e
[
j
]);

39 
i
=0; i<
n
-1&&!
q
.
	`em±y
(); )

41 
e_t
=
q
.
	`t›
(); q.
	`p›
();

42 if(!
uf
.
	`is‰õnd
(
e_t
.
f
+1,e_t.
t
+1))

43 
ªt
+=
e_t
.
l
,
uf
.
	`£t‰õnd
”_t.
f
+1,e_t.
t
+1),
i
++;

45  
ªt
;

46 
	}
}

48 
	$maö
()

50 
n
,
i
,
m
,
l
,
x
,
y
; 
ñem_t
 
ªt
;

51 
	`sˇnf
("%d%d",&
n
,&
m
);

52 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

53 
i
=0; i<
m
; i++)

54 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
),
	`ö£π
(x-1,y-1,l),insert(y-1,x-1,l);

56 
ªt
=
	`kruskÆ
(
n
);

57 
	`¥ötf
("%d\n",
ªt
);

59 
	}
}

	@template/mst_prim.cpp

3 
	~<c°dio
>

4 
	~<queue
>

5 
usög
 
«me•a˚
 
	g°d
;

6 
	#MAXN
 10010

	)

7 
	#MAXS
 200020

	)

8 
	#öf
 1000000000

	)

9 
	tñem_t
;

11 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

12 
	shóp_t
{ 
	mv
; 
ñem_t
 
	ml
;

13 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

14 }
	gh_t
;

15 
	gt›
,
	g¥e
[
MAXN
],
	gv
[MAXN],
	gli°
[MAXN];

16 
ñem_t
 
	gmö_l
[
MAXN
];

18 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

20 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

21 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

22 
	}
}

24 
ñem_t
 
	$¥im
(
n
)

26 
i
,
j
; 
ñem_t
 
ªt
=0;

27 
¥i‹ôy_queue
<
hóp_t
> 
q
;

28 
i
=0; i<
n
; i++Ë
mö_l
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

29 
h_t
.
v
=h_t.
l
=0; 
q
.
	`push
(h_t);

30 ; !
q
.
	`em±y
(); )

32 
h_t
=
q
.
	`t›
(),q.
	`p›
(); 
i
=h_t.
v
;

33 if(!
v
[
i
])

34 
v
[
i
]=1,
ªt
+=
h_t
.
l
,
j
=
li°
[i]; j!=-1; j=
e
[j].
n
)

35 if(!
v
[
e
[
j
].
t
]&&
mö_l
[e[j].t]>e[j].
l
)

36 
¥e
[
e
[
j
].
t
]=
i
,
mö_l
[
h_t
.
v
Û[j].t]=h_t.
l
Û[j].l,
q
.
	`push
(h_t);

38  
ªt
;

39 
	}
}

41 
	$maö
()

43 
n
,
m
,
l
,
i
,
x
,
y
; 
ñem_t
 
ªt
;

44 
	`sˇnf
("%d%d",&
n
,&
m
);

45 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

46 
i
=0; i<
m
; i++)

48 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
);

49 
	`ö£π
(
x
-1,
y
-1,
l
);

50 
	`ö£π
(
y
-1,
x
-1,
l
);

52 
ªt
=
	`¥im
(
n
);

53 
	`¥ötf
("%d\n",
ªt
);

55 
	}
}

	@template/multi_hungary.cpp

1 
	~<c°dio
>

2 
	#N
 1001

	)

3 
	#S
 100001

	)

5 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

6 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N][N],
	g˙t
[N],
	glim
[N];

8 
	$ö£π
(
f
,
t
)

10 
e
[
t›
].
f
=f,e[t›].
t
=t;

11 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

12 
	}
}

14 
	$föd
(
now
)

16 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

18 
to
=
e
[
i
].to;

19 if(!
y
[
to
])

21 
v
[
to
]=1;

22 if(
˙t
[
to
]<
lim
[to])

24 
m©ch
[
to
][
˙t
[to]++]=
now
;

27 
j
=0; j<
˙t
[
to
]; j++)

28 if(
	`föd
(
m©ch
[
to
][
j
]))

30 
m©ch
[
to
][
j
]=
now
;

36 
	}
}

38 
	$mu…i_hung¨y
(
m
,
n
)

40 
ªt
=0;

41 
	`mem£t
(
˙t
,0,(cnt));

42 
i
=0; i<
m
; i++)

44 
	`mem£t
(
y
,0,(y));

45 if(
	`föd
(
i
))

46 
ªt
++;

48  
ªt
;

49 
	}
}

	@template/num2comb.cpp

1 
	~<c°dio
>

2 
	tLL
;

4 
LL
 
	$comb
(
n
,
m
)

6 
LL
 
ªt
=1; 
i
=
n
;

7 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

8  
ªt
;

9 
	}
}

12 
	$num2comb
(
n
,
m
,
LL
 
t
,
c
[])

14 
i
,
j
=1,
p
;

15 
i
=0; i<
m
; 
c
[i++]=
j
++)

16 ; 
t
>(
p
=
	`comb
(
n
-
j
,
m
-
i
-1));Å-=p,j++);

17 
	}
}

	@template/num2perm.cpp

1 
	~<c°dio
>

4 
	$num2≥rm
(
n
,
t
,
p
[])

6 
i
,
j
;

7 
i
=
n
-1; i>=0; i--)

8 
p
[
i
]=
t
%(
n
-i),t/=n-i;

9 
i
=
n
-1; i>=0; i--)

10 
j
=
i
-1; j>=0; j--)

11 if(
p
[
j
]<ı[
i
])

12 
p
[
i
]++;

13 
	}
}

	@template/partition_tree.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 100011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	g≥rm
[
N
],
	gd©
[N],
	g˙t
[20][N],
	gåì
[20][N];

7 
	$cmp
(
a
,
b
){ á<b; 
	}
}

9 
	$buûd
(
c
,
l
,
r
)

11 
mid
=(
l
+
r
)>>1,
lc
=mid-l+1,
Õ
ˆ,
Ω
=mid+1;

12 if(
l
==
r
) ;

13 
i
=
l
; i<=
mid
; i++)

14 if(
≥rm
[
i
]<≥rm[
mid
])

15 
lc
--;

16 
i
=
l
; i<=
r
; i++)

18 if(
i
==
l
)

19 
˙t
[
c
][
i
]=0;

21 
˙t
[
c
][
i
]=cnt[c][i-1];

22 if(
åì
[
c
][
i
]==
≥rm
[
mid
])

24 if(
lc
>0)

26 
lc
--;

27 
˙t
[
c
][
i
]++;

28 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

31 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

33 if(
åì
[
c
][
i
]<
≥rm
[
mid
])

35 
˙t
[
c
][
i
]++;

36 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

39 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

41 
	`buûd
(
c
+1,
l
,
mid
);

42 
	`buûd
(
c
+1,
mid
+1,
r
);

43 
	}
}

45 
	$quîy
(
c
,
l
,
r
,
ql
,
qr
,
k
)

47 if(
l
==
r
Ë 
≥rm
[l];

48 
c1
,
c2
=
˙t
[
c
][
qr
],
mid
=(
l
+
r
)>>1,
d1
=
ql
-l,
d2
=qr-ql+1;

49 if(
ql
==
l
Ë
c1
=0;

50 
c1
=
˙t
[
c
][
ql
-1];

51 
c2
-=
c1
;

52 if(
k
<=
c2
)

53  
	`quîy
(
c
+1,
l
,
mid
,l+
c1
,l+c1+
c2
-1,
k
);

55  
	`quîy
(
c
+1,
mid
+1,
r
,mid+1+
d1
-
c1
,mid+d1+
d2
-c1-
c2
,
k
-c2);

56 
	}
}

	@template/perm2num.cpp

1 
	~<c°dio
>

4 
	$≥rm2num
(
n
,
p
[])

6 
ªt
=1,
k
=1,
i
,
j
;

7 
i
=
n
-2; i>=0; 
k
*=(n-(i--)))

8 
j
=
i
+1; j<
n
; j++)

9 if(
p
[
j
]<p[
i
])

10 
ªt
+=
k
;

11  
ªt
;

12 
	}
}

	@template/point_binary_connect_component.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	#MAXS
 8000800

	)

6 
	#MAXN
 1010

	)

8 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mv
; }
	ge
[
MAXS
];

9 
	gli°
[
MAXN
],
	gt›
,
	g°
[
MAXS
],
	gs_t›
,
	gd‚
[MAXN],
	glow
[MAXN],
	gid
,
	gcomp
[MAXN];

11 
	$s_ö£π
(
f
,
t
,
v
)

13 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
v
=v;

14 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

15 
	}
}

17 
	$ö£π
(
f
,
t
,
v
)

19 
	`s_ö£π
(
f
,
t
,0);

20 
	`s_ö£π
(
t
,
f
,0);

21 
	}
}

23 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

26 
	$ªc‹d
(
now
,
n
)

28 
i
;

29 
id
++; ;)

31 
i
=
°
[
s_t›
--];

32 
comp
[
e
[
i
].
f
]=comp[e[i].
t
]=
id
;

33 if(
e
[
i
].
f
==
now
) ;

35 
	}
}

37 
	$dfs
(
now
,&
˙t
,
n
)

39 
i
,
t
;

40 
d‚
[
now
]=
low
[now]=++
˙t
;

41 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

42 if(!
e
[
i
].
v
)

44 
e
[
i
].
v
=e[i^1].v=1;

45 
t
=
e
[
i
].t;

46 
°
[++
s_t›
]=
i
;

47 if(!
d‚
[
t
])

49 
	`dfs
(
t
,
˙t
,
n
);

50 
low
[
now
]=
	`mö
÷ow[now],low[
t
]);

51 if(
low
[
t
]>=
d‚
[
now
])

52 
	`ªc‹d
(
now
,
n
);

54 
low
[
now
]=
	`mö
÷ow[now],
d‚
[
t
]);

56 
	}
}

58 
	$p_b_comp⁄ít
(
n
)

60 
i
,
˙t
=0; 
s_t›
=-1,
id
=0;

61 
	`mem£t
(
°
,0,(st));

62 
	`mem£t
(
d‚
,0,(dfn));

63 
i
=0; i<
n
; i++)

64 if(!
d‚
[
i
])

65 
	`dfs
(
i
,
˙t
,
n
);

66 
	}
}

	@template/segment_tree.cpp

8 
	~<c°dio
>

9 
	~<cm©h
>

10 
	~<c°rög
>

11 
	~<Æg‹ôhm
>

12 
usög
 
	g°d
::
s‹t
;

13 
	#N
 10110

	)

15 
	slöe
{ 
	mx
,
	my1
,
	my2
,
	mèg
; }
	gl
[
N
<<1];

16 
	s£g_åì


18 
	ml
,
	mr
,
	mcﬁ
,
	mÀn
,
	m˙t
,
	mbl
,
	mbr
;

19 }
	g£gt
[
N
<<2];

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$max
(
a
,
b
){ á>b?a:b; 
	}
}

29 
ölöe
 
	$Àngth
(
l
,
r
){  
co‹
[r]-co‹[l]; 
	}
}

31 
	gco‹
[
N
<<1],
	gâl
,
	gt›
;

34 
	$gë_id
(
x
)

36 
l
,
r
,
m
;

37 
l
=1,
r
=
t›
;Ü<=r; )

39 
m
=(
l
+
r
)>>1;

40 if(
co‹
[
m
]<
x
)

41 
l
=
m
+1;

42 if(
co‹
[
m
]>
x
)

43 
r
=
m
-1;

45  
m
;

48 
	}
}

50 
	$¸óã_åì
(
id
,
l
,
r
)

52 
m
=(
l
+
r
)>>1;

53 
£gt
[
id
].
l
ˆ,£gt[id].
r
=r;

54 
£gt
[
id
].
cﬁ
=£gt[id].
Àn
=0;

55 
£gt
[
id
].
bl
=£gt[id].
br
=£gt[id].
˙t
=0;

56 if(
r
-
l
<=1)

58 
	`¸óã_åì
(
	`L
(
id
),
l
,
m
);

59 
	`¸óã_åì
(
	`R
(
id
),
m
,
r
);

60 
	}
}

62 
	$upd©e
(
id
,
l
,
r
)

64 if(
£gt
[
id
].
cﬁ
||
r
==
l
)

66 
£gt
[
id
].
Àn
=
	`Àngth
(
l
,
r
);

67 
£gt
[
id
].
˙t
=£gt[id].
bl
=£gt[id].
br
=1;

71 
£gt
[
id
].
Àn
=£gt[
	`L
(id)].Àn+£gt[
	`R
(id)].len;

72 
£gt
[
id
].
˙t
=£gt[
	`L
(id)].˙t+£gt[
	`R
(id)].cnt;

73 if(
£gt
[
	`L
(
id
)].
br
&&£gt[
	`R
(id)].
bl
)

74 
£gt
[
id
].
˙t
--;

75 
£gt
[
id
].
bl
=£gt[
	`L
(id)].bl;

76 
£gt
[
id
].
br
=£gt[
	`R
(id)].br;

78 
	}
}

81 
	$ö£π_£g
(
id
,
Œ
,
º
)

83 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

84 if(
Œ
==
l
&&
º
==
r
)

85 
£gt
[
id
].
cﬁ
++;

88 if(
Œ
<
m
)

89 
	`ö£π_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

90 if(
º
>
m
)

91 
	`ö£π_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

92 if(
£gt
[
	`L
(
id
)].
cﬁ
&&£gt[
	`R
(id)].col)

94 
£gt
[
	`L
(
id
)].
cﬁ
--;

95 
	`upd©e
(
	`L
(
id
),
l
,
m
);

96 
£gt
[
	`R
(
id
)].
cﬁ
--;

97 
	`upd©e
(
	`R
(
id
),
m
,
r
);

98 
£gt
[
id
].
cﬁ
++;

101 
	`upd©e
(
id
,
l
,
r
);

102 
	}
}

105 
	$dñ_£g
(
id
,
Œ
,
º
)

107 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

108 if(
Œ
==
l
&&
º
==
r
)

109 
£gt
[
id
].
cﬁ
--;

110 if(
£gt
[
id
].
cﬁ
)

112 
£gt
[
id
].
cﬁ
--;

113 if(
Œ
>
l
)

114 
	`ö£π_£g
(
id
,
l
,
Œ
);

115 if(
º
<
r
)

116 
	`ö£π_£g
(
id
,
º
,
r
);

120 if(
Œ
<
m
)

121 
	`dñ_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

122 if(
º
>
m
)

123 
	`dñ_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

125 
	`upd©e
(
id
,
l
,
r
);

126 
	}
}

129 
	$£g_Àn
(
id
,
Œ
,
º
)

131 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

132 if(
£gt
[
id
].
cﬁ
||(
Œ
==
l
&&
º
==
r
))

133  
£gt
[
id
].
Àn
;

134 if(
Œ
<
m
)

135 
ªt
+=
	`£g_Àn
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

136 if(
º
>
m
)

137 
ªt
+=
	`£g_Àn
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

138  
ªt
;

139 
	}
}

142 
	$£g_˙t
(
id
,
Œ
,
º
)

144 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

145 if(
£gt
[
id
].
cﬁ
)

147 if(
l
==
Œ
&&
r
==
º
)

148  
£gt
[
id
].
˙t
;

149 if(
Œ
<
m
)

150 
ªt
+=
	`£g_˙t
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

151 if(
º
>
m
)

152 
ªt
+=
	`£g_˙t
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

153  
ªt
;

154 
	}
}

	@template/spfa.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

4 
	~<cm©h
>

5 
	~<queue
>

6 
	#öf
 1e8

	)

7 
	#MAXS
 2000001

	)

8 
	#MAXN
 1001

	)

10 
	tñem_t
;

11 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

12 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	gö
[MAXN],
	gq
[
MAXS
];

13 
ñem_t
 
	gmö
[
MAXN
];

15 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

17 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
boﬁ
 
	$•Á
(
n
,
s
)

23 
i
,
j
,
l
,
r
;

24 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö
[i]=
öf
,
ö
[i]=0;

25 
l
=
r
=
mö
[
s
]=0,
q
[l]=s,
ö
[s]++;

26 ; 
l
<=
r
; )

28 
i
=
q
[
l
++],
v
[i]=0;

29 if(
ö
[
i
]>
n
)  0;

30 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

31 if(
mö
[
i
]+
e
[
j
].
l
<mö[e[j].
t
])

33 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
l
;

34 if(!
v
[
e
[
j
].
t
])

36 
v
[
e
[
j
].
t
]=1;

37 
ö
[
e
[
j
].
t
]++;

38 
q
[++
r
]=
e
[
j
].
t
;

43 
	}
}

	@template/suffix_array.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	#N
 100001

	)

6 
	gs
[
N
];

7 
	gß
[
N
],
	gsb
[N],
	g˙t
[N],
	gønk
[N],
	gd©
[N],
	gdp
[N][20],
	gheight
[N];

8 
	$equÆ
(
i
,
j
,
l
,*
y
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

10 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

12 
	$ødix_s‹t
(
n
,
m
,
l
,*
x
,*
y
)

14 
k
,
i
;

15 
k
=0,
i
=
n
-
l
; i<n; i++Ë
y
[k++]=i;

16 
i
=0; i<
n
; i++)

17 if(
ß
[
i
]>=
l
Ë
y
[
k
++]=sa[i]-l;

18 
	`mem£t
(
˙t
,0,(cnt));

19 
i
=0; i<
n
; i++Ë
˙t
[
x
[i]]++;

20 
i
=1; i<
m
; i++Ë
˙t
[i]+=cnt[i-1];

21 
i
=
n
-1; i>=0; i--Ë
ß
[--
˙t
[
x
[
y
[i]]]]=y[i];

22 
	}
}

24 
	$da
(
n
,
m
)

26 *
t
,*
x
=
ønk
,*
y
=
sb
,
l
,
k
,
i
;

27 
i
=0; i<
n
; i++Ë
x
[i]=
s
[i],
ß
[i]=i;

28 
	`ødix_s‹t
(
n
,
m
,0,
x
,
y
);

29 
k
=
l
=1; k<
n
;Ü<<=1)

31 
	`ødix_s‹t
(
n
,
m
,
l
,
x
,
y
);

32 
t
=
x
,x=
y
,y=t;

33 
x
[
ß
[0]]=0,
k
=1;

34 
i
=1; i<
n
; i++)

35 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
l
,
y
)?
k
-1:k++;

36 
m
=
k
;

38 
i
=0; i<
n
; i++Ë
ønk
[
ß
[i]]=i;

39 
	}
}

41 
	$ˇlc_height
(
n
)

43 
k
=0;

44 
i
=0; i<
n
-1; i++)

46 
k
=(k>0)?k-1:0;

47 
j
=
ß
[
ønk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

48 
height
[
ønk
[
i
]]=
k
;

50 
height
[0]=0;

51 
	}
}

53 
	$RMQ
(
n
)

55 
k
=(
	`log
(1.0*
n
)/log(2.0)),
a
,
b
;

56 
i
=1; i<=
n
; i++)

57 
d©
[
i
]=
height
[i-1],
dp
[i][0]=i;

58 
j
=1; j<=
k
; j++)

59 
i
=1; i+
	`B
(
j
)-1<=
n
; i++)

61 
a
=
dp
[
i
][
j
-1];

62 
b
=
dp
[
i
+
	`B
(
j
-1)][j-1];

63 if(
d©
[
a
]<d©[
b
]Ë
dp
[
i
][
j
]=a;

64 
dp
[
i
][
j
]=
b
;

66 
	}
}

68 
	$RMQ_quîy
(
a
,
b
)

70 
k
=(
	`log
(1.0*(
b
-
a
+1))/log(2.0));

71 
a
=
dp
[a][
k
],
b
=dp[b-
	`B
(k)+1][k];

72  
d©
[
a
]>d©[
b
]?b:a;

73 
	}
}

75 
	$l˝
(
a
,
b
)

77 
t
;

78 
a
=
ønk
[a],
b
=rank[b];

79 if(
a
>
b
Ë
t
=a,a=b,b=t;

80  
height
[
	`RMQ_quîy
(
a
+1,
b
)];

81 
	}
}

	@template/suffix_auto_mation.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	~<ve˘‹
>

6 
	~<Æg‹ôhm
>

7 
	#N
 2000100

	)

8 
	#X
 26

	)

10 
usög
 
«me•a˚
 
	g°d
;

12 
	snode
 {

13 
	mf
,
	ml
,
	mnum
,
	mnx
[
X
],
	mÊag
;

14 
node
() {

15 
	mf
=-1,
	ml
=0,
	mnum
=0,
	mÊag
=-1;

16 
	mi
=0; i<
	mX
; i++) {

17 
	mnx
[
i
]=-1;

20 }
	gno
[
N
];

22 
	gT
,
	gèû
,
	ghód
,
	gt›
;

23 
	gs
[
N
],
	gqs
[N];

24 
	gve˘‹
<> 
	gvec
[
N
];

26 
	$ö£π
(
x
,
l
) {

27 
p
=
èû
,
q
=
t›
++;

28 
èû
=
q
;

29 
no
[
q
].
l
=l;

30 
no
[
q
].
num
=1;

31 
p
!=-1 && 
no
[p].
nx
[
x
]==-1) {

32 
no
[
p
].
nx
[
x
]=
q
;

33 
p
=
no
[p].
f
;

35 if(
p
==-1) {

36 
no
[
q
].
f
=
hód
;

39 if(
no
[no[
p
].
nx
[
x
]].
l
==no[p].l+1) {

40 
no
[
q
].
f
Úo[
p
].
nx
[
x
];

43 
u
=
t›
++,
≈
=
no
[
p
].
nx
[
x
];

44 
no
[
u
]Úo[
≈
];

45 
no
[
u
].
num
=0;

46 
no
[
u
].
l
Úo[
p
].l+1;

47 
no
[
≈
].
f
Úo[
q
].f=
u
;

48 ; 
p
!=-1 && 
no
[p].
nx
[
x
]==
≈
;ÖÚo[p].
f
) {

49 
no
[
p
].
nx
[
x
]=
u
;

51 
	}
}

53 
	$buûd_ßm
(
s
[]) {

54 
l
=
	`°æí
(
s
);

55 
èû
=
hód
=0;

56 
t›
=1;

57 
i
=0; i<
l
; i++) {

58 
	`ö£π
(
s
[
i
]-'a',i+1);

60 
	}
}

62 
	$quîy
(
qs
[]) {

63 
Àn
=
	`°æí
(
qs
);

64 
ªt
=0;

65 
i
=0; i<
Àn
; i++)

66 
qs
[
Àn
+
i
]=qs[i];

67 
qs
[
Àn
+len]=0;

68 
now
=
hód
,
nowl
=0;

69 
i
=0; i<
Àn
+len; i++) {

70 
x
=
qs
[
i
]-'a';

71 
now
!=-1 && 
no
[now].
nx
[
x
]==-1) {

72 
now
=
no
[now].
f
;

73 
nowl
=
now
>=0?
no
[now].
l
:0;

75 if(
now
==-1) {

76 
now
=
hód
;

77 
nowl
=0;

80 
now
=
no
[now].
nx
[
x
];

81 
nowl
++;

82 if(
nowl
>=
Àn
) {

83 
p
=
now
;

84 ; 
no
[
p
].
f
>=0 &&Ço[no[p].f].
l
>=
Àn
;)

85 
p
=
no
[p].
f
;

86 if(
no
[
p
].
Êag
!=
T
) {

87 
no
[
p
].
Êag
=
T
;

88 
ªt
+=
no
[
p
].
num
;

92  
ªt
;

93 
	}
}

95 
	$maö
() {

96 
	`sˇnf
("%s",
s
);

97 
	`buûd_ßm
(
s
);

98 
i
=0; i<
t›
; i++) {

99 
vec
[
no
[
i
].
l
].
	`push_back
(i);

101 
i
=
N
-1; i>=0; i--) {

102 
j
=0; j<
vec
[
i
].
	`size
(); j++) {

103 
x
=
vec
[
i
][
j
];

104 if(
no
[
x
].
f
>=0)

105 
no
[no[
x
].
f
].
num
+=no[x].num;

108 
q
;

109 
	`sˇnf
("%d",&
q
);

110 
i
=0; i<
q
; i++) {

111 
	`sˇnf
("%s",
qs
);

112 
T
=
i
;

113 
	`¥ötf
("%d\n",
	`quîy
(
qs
));

116 
	}
}

	@template/trie_tree.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	#MAXN
 100011

	)

6 
	#MAXC
 11

	)

7 
	gt›
;

9 
	$gë_öd
(
x
){  x-'0'; 
	}
}

10 
	såõ_node
{ 
boﬁ
 
	mis
; 
	mn
[
MAXC
]; }
	gno
[
MAXN
];

12 
	såõ_åì


14 
åõ_node
 
	mr
;

15 
åõ_åì
(){ 
	mr
=
no
[0]; }

16 
ö£π
(
s
[])

18 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

19 
	mi
=0; i<
	ml
; i++)

21 if(
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]<0)

23 
	mno
[
t›
].
	mis
=0;

24 
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]=
t›
++;

26 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

28 
	mno
[
p
].
	mis
=1;

31 
£¨ch
(
s
[])

33 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

34 
	mi
=0; i<
	ml
&&
	mp
!=-1; i++)

35 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

36  
	mp
!=-1&&
no
[
p
].
is
==1;

38 }
	gåõ
;

40 
	$öô
()

42 
i
,
j
;

43 
i
=0; i<
MAXN
; i++)

44 
no
[
i
].
is
=
j
=0; j<
MAXC
; j++)

45 
no
[
i
].
n
[
j
]=-1;

46 
t›
=1;

47 
	}
}

49 
	$maö
()

52 
	}
}

	@template/union_find_set.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 100011

	)

6 
	suföd


8 
	mp
[
MAXN
],
	mt
;

9 
öi
(){ 
mem£t
(
p
,0,(p)); }

10 
run
(&
x
)

12 
	my
=
x
;

13 ; 
	mp
[
t
=
x
]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));

14 ; 
	mp
[
t
=
y
];Ö[y]=
x
,
	my
=
p
[t]);

16 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

17 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

18 }
	guf
;

21 
	suföd


23 
	mp
[
N
],
	mt
;

24 
öô
()

26 
	mi
=0; i<=
N
; i++)

27 
	mp
[
i
]=i;

29 
run
(&
x
)

31 
	my
=
x
;

32 ; 
	mp
[
t
=
x
]!=x; 
	mx
=
p
[x],p[t]=p[x]);

33 ; 
	mp
[
t
=
y
]!=
x
;Ö[y]=x,
	my
=
p
[t]);

35 
is‰õnd
(
i
,
j
)

37 
run
(
i
);Ñun(
j
);

38  
	mi
==
j
;

40 
£t‰õnd
(
i
,
j
)

42 
run
(
i
);Ñun(
j
);

43 
	mp
[
i
]=
p
[
j
];

45 }
	guf
;

48 
ölöe
 
	$sig
(
x
){  x>0?1:-1; 
	}
}

49 
ölöe
 
	$abs
(
x
){  x>0?x:-x; 
	}
}

51 
	suföd


53 
	mp
[
MAXN
],
	mt
;

55 
öô
(){ 
mem£t
(
p
,0,(p)); }

57 
_run
(&
x
)

59  ; 
	mp
[
t
=
abs
(
x
)]; 
	mx
=
sig
(x)*
p
[abs(x)],p[t]=sig(p[t])*(p[abs(x)]?p[abs(x)]:abs(p[t])));

62 
_run_bŸh
(&
i
,&
j
)

64 
_run
(
i
); _run(
j
);

67 
_£t_side
(
x
,
i
,
j
)

69 
	mp
[
abs
(
i
)]=
sig
(i)*◊bs(i)=˜bs(
j
)?0:(
x
*j));

73 
_judge_side
(
x
,
i
,
j
)

75  ((
	mi
==
x
*
j
)&&
i
);

78 
£t_‰õnd
(
i
,
j
)

80 
_run_bŸh
(
i
,
j
);

81 
_£t_side
(1,
i
,
j
);

82  !
_judge_side
(-1,
i
,
j
);

85 
£t_íemy
(
i
,
j
)

87 
_run_bŸh
(
i
,
j
);

88 
_£t_side
(-1,
i
,
j
);

89  !
_judge_side
(1,
i
,
j
);

92 
is_‰õnd
(
i
,
j
)

94 
_run_bŸh
(
i
,
j
);

95  
_judge_side
(1,
i
,
j
);

98 
is_íemy
(
i
,
j
)

100 
_run_bŸh
(
i
,
j
);

101  
_judge_side
(-1,
i
,
j
);

103 }
	guf
;

	@template_back/SELF_TEMP/AC_Auto_Machine.cpp

2 
	~<c°rög
>

3 
	~<c°dio
>

4 
	#N
 52

	)

5 
	#S
 1000

	)

7 
	snode
{ 
	m√xt
[
N
],
	mÁû
,
	mis
; }
	gno
[
S
];

8 
	gt›
,
	gq
[
S
];

10 
ölöe
 
	$gë_öd
(
x
){  x-'a'; 
	}
}

12 
	$öô
()

14 
t›
=1;

15 
i
=0; i<
S
; i++)

17 
no
[
i
].
is
=0,no[i].
Áû
=-1;

18 
j
=0; j<
N
; j++)

19 
no
[
i
].
√xt
[
j
]=-1;

21 
	}
}

23 
	$ö£π
(
s
[])

25 
l
=
	`°æí
(
s
),
p
=0;

26 
i
=0; i<
l
; i++)

28 
ii
=
	`gë_öd
(
s
[
i
]);

29 if(
no
[
p
].
is
)

31 if(
no
[
p
].
√xt
[
ii
]==-1)

32 
no
[
p
].
√xt
[
ii
]=
t›
++;

33 
p
=
no
[p].
√xt
[
ii
];

35 
no
[
p
].
is
=1;

36 
	}
}

38 
	$buûd_ac
(
n
)

40 
l
,
r
;

41 
q
[
l
=
r
=0]=0;

42 ; 
l
<=
r
;)

44 
now
=
q
[
l
++];

45 
i
=0; i<
n
; i++)

47 
ii
=
no
[
now
].
√xt
[
i
];

48 if(
ii
==-1)

50 if(
now
==0)

51 
no
[
now
].
√xt
[
i
]=0;

53 
no
[
now
].
√xt
[
i
]Úo[no[now].
Áû
].next[i];

57 if(
now
==0)

58 
no
[
ii
].
Áû
=0;

61 
no
[
ii
].
Áû
Úo[no[
now
].Áû].
√xt
[
i
];

62 if(
no
[no[
ii
].
Áû
].
is
)

63 
no
[
ii
].
is
=1;

65 
q
[++
r
]=
ii
;

69 
	}
}

77 
	~<c°dio
>

78 
	~<io°ªam
>

79 
	~<c°rög
>

80 
	~<°rög
>

81 
	~<ve˘‹
>

83 
usög
 
«me•a˚
 
	g°d
;

84 
	tLL
;

86 c⁄° 
	gX
 = 2;

87 c⁄° 
	gN
 = 1000010;

89 
	gq
[
N
];

91 
	snode
 {

92 
	m√xt
[
X
],
	mÁû
,
	mis
;

93 
LL
 
	m˙t
;

94 
öô
() {

95 
	mÁû
=-1;

96 
	mis
=0;

97 
	m˙t
=0;

98 
	mi
=0; i<
	mX
; i++)

99 
	m√xt
[
i
]=-1;

103 
	sAC
 {

104 
node
 
	mno
[
N
];

105 
	mt›
;

107 
öô
() {

108 
	mt›
=1;

109 
	mno
[0].
öô
();

112 
√xt_node
() {

113 
	mno
[
t›
].
öô
();

114  
	mt›
++;

117 
gid
(
x
) {

118  
	mx
-'0';

121 
ö£π
(
°rög
 
s
) {

122 
	mp
=0;

123 
	mi
=0; i<
	ms
.
Àngth
(); i++) {

124 
	mii
=
gid
(
s
[
i
]);

125 if(
	mno
[
p
].
	m√xt
[
ii
]==-1) {

126 
no
[
t›
].
öô
();

127 
	mno
[
p
].
	m√xt
[
ii
]=
t›
++;

129 
	mp
=
no
[
p
].
√xt
[
ii
];

131 
	mno
[
p
].
	mis
=1;

134 
buûd_ac
() {

135 
	ml
=0,
	mr
=0;

136 
	mq
[0]=0;

137 ; 
	ml
<=
r
;) {

138 
	mnow
=
q
[
l
++];

139 
	mi
=0; i<
	mX
; i++) {

140 
	mni
=
no
[
now
].
√xt
[
i
];

141 if(
	mni
!=-1) {

142 
no
[
ni
].
˙t
Úo[ni].
is
;

143 if(
	mnow
==0) {

144 
no
[
ni
].
Áû
=0;

146 
	m¥e
=
no
[
now
].
Áû
;

147 ; 
	m¥e
!=-1&&
no
[
¥e
].
√xt
[
i
]==-1;)

148 
	m¥e
=
no
[
¥e
].
Áû
;

149 if(
	m¥e
==-1) {

150 
no
[
ni
].
Áû
=0;

153 
	mno
[
ni
].
	mÁû
=
no
[
¥e
].
√xt
[
i
];

154 
	mno
[
ni
].
	m˙t
+=
no
[no[ni].
Áû
].
˙t
;

157 
	mq
[++
r
]=
ni
;

163 
LL
 
quîy
(
°rög
 
s
) {

164 
	mp
=0;

165 
LL
 
	mªt
=0;

166 
	mi
=0; i<
	ms
.
Àngth
(); i++) {

167 
	mii
=
gid
(
s
[
i
]);

168 ; 
	mp
!=0 && 
no
[
p
].
√xt
[
ii
]==-1;)

169 
	mp
=
no
[
p
].
Áû
;

170 
	mp
=
no
[
p
].
√xt
[
ii
];

171 if(
	mp
==-1)

172 
p
=0;

173 
	mªt
+=
no
[
p
].
˙t
;

175  
	mªt
;

178 
föd
(
°rög
 
s
) {

179 
	mp
=0;

180 
	mi
=0; i<
	ms
.
Àngth
(); i++) {

181 
	mii
=
gid
(
s
[
i
]);

182 
	mp
=
no
[
p
].
√xt
[
ii
];

183 if(
	mp
==-1)

186 if(
	mno
[
p
].
	mis
)  1;

189 }
	ghp
,
	gbuf
;

191 
	gts
[5*
N
];

193 
	$dfs
(
p1
,
p2
) {

194 
i
=0; i<2; i++) {

195 if(
buf
.
no
[
p1
].
√xt
[
i
]!=-1) {

196 if(
hp
.
no
[
p2
].
√xt
[
i
]==-1) {

197 
hp
.
no
[
p2
].
√xt
[
i
]=hp.
	`√xt_node
();

199 
n2
=
hp
.
no
[
p2
].
√xt
[
i
];

200 
n1
=
buf
.
no
[
p1
].
√xt
[
i
];

201 
hp
.
no
[
n2
].
is
|=
buf
.no[
n1
].is;

202 
	`dfs
(
n1
,
n2
);

205 
	}
}

208 
	$mîge
() {

209 
	`dfs
(0,0);

210 
buf
.
	`öô
();

211 
hp
.
	`buûd_ac
();

212 
	}
}

	@template_back/SELF_TEMP/KMP_match.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

5 
	$kmp_Áû
(
s
[],
Áû
[])

7 
i
,
p
,
l
=
	`°æí
(
s
);

8 
Áû
[0]=-1,
i
=1; i<
l
; i++)

10 
p
=
Áû
[
i
-1];

11 
p
>=0&&
s
[p+1]!=s[
i
]Ëp=
Áû
[p];

12 if(
s
[
p
+1]==s[
i
]Ë
Áû
[i]=p+1;

13 
Áû
[
i
]=-1;

15 
	}
}

17 
	$kmp_m©ch
(
s
[],
t
[],
Áû_t
[])

19 
SL
=
	`°æí
(
s
),
TL
=°æí(
t
),
s_i
,
t_i
;

20 
	`kmp_Áû
(
t
,
Áû_t
);

21 
s_i
=
t_i
=0; s_i<
SL
&&t_i<
TL
;)

23 if(
s
[
s_i
]==
t
[
t_i
]) s_i++,t_i++;

24 if(
t_i
==0Ë
s_i
++;

25 
t_i
=
Áû_t
[t_i-1]+1;

27  
t_i
<
TL
?-1:
s_i
-t_i;

28 
	}
}

	@template_back/SELF_TEMP/KM_match.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 1001

	)

6 
	#S
 1000100

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

12 
	g¶ack
[
N
],
	gvÆx
[N],
	gvÆy
[N],
	gm©
[N][N],
	gm2y
[N],
	gvx
[N],
	gvy
[N],
	gli°
[N],
	gt›
;

14 
	$ö£π
(
f
,
t
)

16 
e
[
t›
].
f
=f,e[t›].
t
=t;

17 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

18 
	}
}

20 
	$föd_∑th
(
now
)

22 
t
,
i
,
v
;

23 
vx
[
now
]=1;

24 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

26 
t
=
e
[
i
].t;

27 
v
=
vÆx
[
now
]+
vÆy
[
t
]-
m©
[now][t];

28 if(!
vy
[
t
]&&
v
==0)

30 
vy
[
t
]=1;

31 if(
m2y
[
t
]==-1||
	`föd_∑th
(m2y[t]))

33 
m2y
[
t
]=
now
;

37 if(
¶ack
[
t
]>
v
)

38 
¶ack
[
t
]=
v
;

41 
	}
}

43 
	$km_m©ch
(
n
)

45 
i
,
j
,
k
,
ªt
=0,
d
;

46 
i
=0; i<
n
; i++)

48 
m2y
[
i
]=-1;

49 
vÆx
[
i
]=-
öf
,
vÆy
[i]=0;

50 
j
=0; j<
n
; j++)

51 
vÆx
[
i
]=
	`max
(vÆx[i],
m©
[i][
j
]);

53 
i
=0; i<
n
; i++)

55 
	`mem£t
(
vx
,0,(vx));

56 
	`mem£t
(
vy
,0,(vy));

57 
k
=0; k<
n
; k++)

58 
¶ack
[
k
]=
öf
;

59 ; !
	`föd_∑th
(
i
); )

61 
d
=
öf
;

62 
k
=0; k<
n
; k++)

63 if(!
vy
[
k
]&&
¶ack
[k]<
d
)

64 
d
=
¶ack
[
k
];

65 
k
=0; k<
n
; k++)

67 if(
vx
[
k
])

68 
vÆx
[
k
]-=
d
,
vx
[k]=0;

69 if(
vy
[
k
])

70 
vÆy
[
k
]+=
d
,
vy
[k]=0;

74 
i
=0; i<
n
; i++)

75 
ªt
+=
vÆx
[
i
]+
vÆy
[i];

76  
ªt
;

77 
	}
}

	@template_back/SELF_TEMP/LCA_online.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#N
 20000

	)

4 
	#S
 100000

	)

6 
	tLL
;

8 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

9 
	snode
{ 
	mh
,
	mi
; }
	gno
[
N
];

10 
	gv
[
N
],
	gt›
,
	gli°
[N],
	gç
,
	gdp
[N][17],
	gpos
[N];

12 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

13 
	$big
(
i
,
j
){  
no
[i].
h
>no[j].h?i:j; 
	}
}

14 
	$smÆl
(
i
,
j
){  
no
[i].
h
<no[j].h?i:j; 
	}
}

16 
	$ö£π
(
f
,
t
)

18 
e
[
t›
].
f
=f,e[t›].
t
=t;

19 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

20 
	}
}

22 
	$dfs
(
now
,
l
)

24 
v
[
now
]=1;

25 
pos
[
now
]=
ç
;

26 
no
[
ç
].
i
=
now
;

27 
no
[
ç
++].
h
=
l
;

28 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

30 
to
=
e
[
i
].
t
;

31 if(!
v
[
to
])

33 
	`dfs
(
to
,
l
+1);

34 
no
[
ç
].
i
=
now
;

35 
no
[
ç
++].
h
=
l
;

38 
	}
}

40 
	$RMQ
(
n
)

42 
k
=(
	`log
(1.0*
n
)/log(2.0));

43 
i
=1; i<=
n
; i++)

44 
dp
[
i
][0]=i;

45 
j
=1; j<=
k
; j++)

46 
i
=1; i<=
n
; i++)

48 if(
i
+
	`B
(
j
)-1>
n
)

50 
dp
[
i
][
j
]=
	`smÆl
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

52 
	}
}

54 
	$quîy
(
l
,
r
)

56 
d
,
k
;

57 if(
l
>
r
Ë
d
=l,l=r,r=d;

58 
d
=
r
-
l
+1;

59 
k
=(
	`log
(1.0*
d
)/log(2.0));

60  
	`smÆl
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

61 
	}
}

	@template_back/SELF_TEMP/LCA_tarjan.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#N
 50000

	)

4 
	#S
 200000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	sedge
{ 
	mf
,
	mt
,
	ml
,
	mn
; }
	ge
[
S
];

9 
	snode
{ 
	mt
,
	mr
,
	mi
;

10 
node
(
a
,
b
,
c
){ 
	mt
˜,
	mr
=b,
	mi
=c; }

12 
	gve˘‹
<
	gnode
> 
	gq
[
N
];

13 
	gv
[
N
],
	gvis
[N],
	gÀn
[N],
	gªt
[N],
	gli°
[N],
	gt›
;

15 
	$ö£π
(
f
,
t
,
l
)

17 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
	suföd


23 
	mp
[
N
],
	mt
;

24 
öô
(){ 
	mi
=0; i<
	mN
; 
	mp
[
i
]=i++); }

25 
run
(&
x
)

27 
	my
=
x
;

28 ; (
	mt
=
p
[
x
])!=x; 
	mx
ı[x],
	mp
[
t
]=p[x]);

29 ; 
	mp
[
t
=
y
]!=
x
;Ö[y]=x,
	my
=
p
[t]);

31 
is‰õnd
(
i
,
j
)

33 
run
(
i
);Ñun(
j
);

34  
	mi
==
j
;

36 
£t‰õnd
(
i
,
j
)

38 
run
(
i
);Ñun(
j
);

39 
	mp
[
i
]=
j
;

41 }
	guf
;

43 
	$èrj™
(
now
,
l
)

45 
Àn
[
now
]=
l
;

46 
v
[
now
]=1;

47 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

49 
to
=
e
[
i
].
t
;

50 if(
v
[
to
])

52 
	`èrj™
(
to
,
l
+
e
[
i
].l);

53 
uf
.
	`£t‰õnd
(
to
,
now
);

55 
vis
[
now
]=1;

56 
i
=0; i<
q
[
now
].
	`size
(); i++)

58 
to
=
q
[
now
][
i
].
t
;

59 if(!
vis
[
to
])

61 
p
=
to
,
ii
=
q
[
now
][
i
].i;

62 
uf
.
	`run
(
p
);

63 
ªt
[
ii
]=
l
+
Àn
[
to
]-2*Àn[
p
];

64 
q
[
now
][
i
].
r
=
l
+
Àn
[
to
]-2*Àn[
p
];

66 
	}
}

	@template_back/SELF_TEMP/MST_cnt.cpp

1 
	~<ve˘‹
>

2 
	~<c°rög
>

3 
	~<c°dio
>

4 
	~<Æg‹ôhm
>

5 
	#M
 1011

	)

6 
	#N
 111

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gn
,
	gm
,
	gmod
,
	gvis
[
N
];

11 
	sedge
{ 
	mf
,
	mt
,
	ml
; }
	ge
[
M
];

13 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
<b.l; 
	}
}

14 
	gö
[
N
][N];

15 
LL
 
	gm©
[
N
][N];

16 
	gve˘‹
<> 
	gvec
[
N
];

18 
	suföd


20 
	mp
[101];

21 
öô
(
n
)

23 
	mi
=0; i<
	mn
; i++Ë
	mp
[
i
]=i;

25 
Á
(
x
)

27 
	my
=
x
,
	mt
;

28 ; 
	mx
!=
p
[
x
]; x=p[x]);

29 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

30  
	mx
;

32 
£tf
(
a
,
b
)

34 
	ma
=
Á
(
a
),
	mb
=Á(
b
);

35 
	mp
[
a
]=
b
;

36  
	ma
!=
b
;

38 }
	guf
,
	gnowu
;

40 
LL
 
	$ˇlm©
(
LL
 
m©
[][
N
],
n
)

42 
i
=0;i<
n
;i++)

43 
j
=0;j<
n
;j++)

44 
m©
[
i
][
j
]%=
mod
;

45 
LL
 
ªt
=1;

46 
i
=1; i<
n
; i++)

48 
j
=
i
+1; j<
n
; j++)

49 
m©
[
j
][
i
]!=0)

51 
LL
 
t
=
m©
[
i
][i]/m©[
j
][i];

52 
k
=
i
; k<
n
; k++)

53 
m©
[
i
][
k
]=(m©[i][k]-m©[
j
][k]*
t
)%
mod
;

54 
k
=
i
; k<
n
; k++)

55 
	`sw≠
(
m©
[
i
][
k
],m©[
j
][k]);

56 
ªt
=-ret;

58 if(
m©
[
i
][i]==0)

60 
ªt
Ùë*
m©
[
i
][i]%
mod
;

62  (
ªt
+
mod
)%mod;

63 
	}
}

65 
	$maö
()

67 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
mod
)!=
EOF
)

69 if(
n
==0&&
m
==0&&
mod
==0)

71 
i
=0; i<
m
; i++)

73 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
l
);

74 
e
[
i
].
f
--,e[i].
t
--;

76 
	`s‹t
(
e
,e+
m
,
cmp
);

77 
uf
.
	`öô
(
n
);

78 
nowu
.
	`öô
(
n
);

79 
	`mem£t
(
vis
,0,(vis));

80 
	`mem£t
(
ö
,0,(in));

81 
j
,
nowl
;

82 
LL
 
ªt
=1;

83 
i
=0; i<
m
; i=
j
)

85 
nowu
=
uf
;

86 
nowl
=
e
[
i
].
l
;

87 
j
=
i
; j<
m
; j++)

88 if(
e
[
j
].
l
!=
nowl
)

90 
	`mem£t
(
vis
,0,(vis));

91 
k
=
i
; k<
j
; k++)

93 
x
=
e
[
k
].
f
,
y
Û[k].
t
,
px
=
uf
.
	`Á
(x),
py
=uf.fa(y);

94 if(
px
==
py
)

96 
vis
[
px
]=vis[
py
]=1;

97 
nowu
.
	`£tf
(
px
,
py
);

98 
ö
[
px
][
py
]++;

99 
ö
[
py
][
px
]++;

101 
j
=0; j<
n
; j++)

102 
vec
[
j
].
	`˛ór
();

103 
j
=0; j<
n
; j++)

104 if(
vis
[
j
])

106 
u
=
nowu
.
	`Á
(
j
);

107 
vec
[
u
].
	`push_back
(
j
);

108 
vis
[
j
]=0;

110 
j
=0; j<
n
; j++)

111 if(
vec
[
j
].
	`size
()>0)

113 
u
=0; u<
n
; u++)

114 
v
=0; v<
n
; v++)

115 
m©
[
u
][
v
]=mat[v][u]=0;

117 
sz
=
vec
[
j
].
	`size
();

118 
u
=0; u<
sz
; u++)

119 
v
=
u
+1; v<
sz
; v++)

121 
pu
=
vec
[
j
][
u
],
pv
=vec[j][
v
];

122 
m©
[
v
][
u
]-=
ö
[
pu
][
pv
];

123 
m©
[
u
][
v
]=mat[v][u];

124 
m©
[
u
][u]+=
ö
[
pu
][
pv
];

125 
m©
[
v
][v]+=
ö
[
pu
][
pv
];

127 
LL
 
nowc
=
	`ˇlm©
(
m©
,
sz
);

128 
ªt
Ùë*
nowc
%
mod
;

130 
uf
=
nowu
;

132 
	`mem£t
(
vis
,0,(vis));

133 
i
=0; i<
n
; i++)

134 
vis
[
uf
.
	`Á
(
i
)]=1;

135 
num
=0;

136 
i
=0; i<
n
; i++)

137 if(
vis
[
i
])

138 
num
++;

139 
ªt
=‘ë%
mod
+mod)%mod;

140 
™s
=(
ªt
);

141 if(
num
!=1)

142 
	`puts
("0");

144 
	`¥ötf
("%d\n",
™s
);

147 
	}
}

	@template_back/SELF_TEMP/RMQ.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#N
 50000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gd©
[
N
],
	gdp
[N][18],
	gmi
[N][18];

10 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

11 
ölöe
 
	$big
(
a
,
b
){ á>b?a:b; 
	}
}

12 
ölöe
 
	$smÆl
(
a
,
b
){ á<b?a:b; 
	}
}

14 
	$RMQ
(
n
)

16 
k
=(
	`log
(1.0*
n
)/log(2.0));

17 
i
=1; i<=
n
; i++)

18 
dp
[
i
][0]=
mi
[i][0]=
d©
[i];

19 
j
=1; j<=
k
; j++)

20 
i
=1; i<=
n
; i++)

22 if(
i
+
	`B
(
j
)-1>
n
)

24 
dp
[
i
][
j
]=
	`big
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

25 
mi
[
i
][
j
]=
	`smÆl
(mi[i][j-1],mi[i+
	`B
(j-1)][j-1]);

27 
	}
}

29 
	$quîy
(
l
,
r
,
èg
)

31 
k
=(
	`log
(1.0*(
r
-
l
+1))/log(2.0));

32 if(
èg
==1)

33  
	`big
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

35  
	`smÆl
(
mi
[
l
][
k
],mi[
r
-
	`B
(k)+1][k]);

36 
	}
}

	@template_back/SELF_TEMP/ZL_MST.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

4 
	#öf
 1e8

	)

5 
	#S
 1000001

	)

6 
	#N
 1001

	)

8 
	tñem_t
;

10 
	sedge
{ 
	mf
,
	mt
; 
ñem_t
 
	ml
; }
	ge
[
S
];

11 
	gt›
,
	gli°
[
N
],
	gid
[N],
	gv
[N],
	g¥e
[N];

12 
ñem_t
 
	gÀn
[
N
];

14 
ñem_t
 
	$ZL_MST
(
r
,
n
)

16 
√xä
,
f
,
t
;

17 
ñem_t
 
ªt
=0;

20 
	`mem£t
(
¥e
,-1,(pre));

21 
	`mem£t
(
v
,-1,(v));

22 
	`mem£t
(
id
,-1,(id));

23 
i
=0; i<
n
; i++)

24 
Àn
[
i
]=
öf
;

25 
i
=0; i<
t›
; i++)

27 
f
=
e
[
i
].f,
t
=e[i].t;

28 if(
f
==
t
) ;

29 if(
Àn
[
t
]>
e
[
i
].
l
)

30 
Àn
[
t
]=
e
[
i
].
l
,
¥e
[t]=
f
;

32 
i
=0; i<
n
; i++)

33 if(
¥e
[
i
]==-1&&i!=
r
)

35 
√xä
=0;

36 
Àn
[
r
]=0;

37 
i
=0; i<
n
; i++)

39 
ªt
+=
Àn
[
i
];

40 
now
=
i
;

41 ; 
v
[
now
]!=
i
&&
id
[now]==-1&&now!=
r
; )

43 
v
[
now
]=
i
;

44 
now
=
¥e
[now];

46 if(
now
!=
r
&&
id
[now]==-1)

48 
f
=
¥e
[
now
]; f!=now; f=pre[f])

49 
id
[
f
]=
√xä
;

50 
id
[
now
]=
√xä
++;

53 if(
√xä
==0) ;

54 
i
=0; i<
n
; i++)

55 if(
id
[
i
]<0)

56 
id
[
i
]=
√xä
++;

57 
i
=0; i<
t›
; i++)

59 
f
=
e
[
i
].f,
t
=e[i].t;

60 
e
[
i
].
f
=
id
[f];

61 
e
[
i
].
t
=
id
[t];

62 if(
f
==
t
) ;

63 
e
[
i
].
l
-=
Àn
[
t
];

65 
n
=
√xä
;

66 
r
=
id
[r];

68  
ªt
;

69 
	}
}

	@template_back/SELF_TEMP/all_templete.cpp

2 
	~<c°dio
>

4 
	#MAXN
 200

	)

5 
	#öf
 1000000000

	)

6 
	tñem_i
;

14 
	$bñlm™_f‹d
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò*
mö
,*
¥e
)

16 
v
[
MAXN
],
i
,
j
,
k
,
èg
;

17 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

18 
mö
[
s
]=0,
j
=0; j<
n
; j++)

20 
k
=-1,
i
=0; i<
n
; i++)

21 if(!
v
[
i
] && (
k
==-1||
mö
[i]<min[k]))

22 
k
=
i
;

23 
v
[
k
]=1,
i
=0; i<
n
; i++)

24 if(!
v
[
i
] && 
m©
[
k
][i]>=0 && 
mö
[k]+mat[k][i]<min[i])

25 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i];

27 
èg
=1,
j
=0;Åag&&j<=
n
; j++)

28 
èg
=
i
=0; i<
n
; i++)

29 
k
=0; k<
n
; k++)

30 if(
mö
[
k
]+
m©
[k][
i
]<min[i])

31 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i],
èg
=1;

32  
j
<=
n
;

33 
	}
}

37 
	~<c°dio
>

38 
	#öf
 1000000

	)

39 
	#MAXS
 30000

	)

40 
	#MAXN
 500

	)

41 
	tñem_t
;

43 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

44 
	gli°
[
MAXN
],
	gt›
;

45 
ñem_t
 
	gmö
[
MAXN
];

47 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

49 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

50 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

51 
	}
}

53 
	$bñlm™_f‹d
(
n
,
s
)

55 
i
,
èg
,
j
;

56 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
;

57 
mö
[
s
]=
i
=0,
èg
=1; i<=
n
&&tag; i++)

59 
èg
=0,
j
=0; j<
t›
; j++)

60 if(
mö
[
e
[
j
].
f
]+e[j].
l
<mö[e[j].
t
])

61 
mö
[
e
[
j
].
t
]=mö[e[j].
f
]+e[j].
l
,
èg
=1;

63  
i
<=
n
;

64 
	}
}

67 
	~<c°dio
>

68 
	~<c°rög
>

70 
	#DIGIT
 4

	)

71 
	#DEPTH
 10000

	)

72 
	#MAXN
 2502

	)

73 
	#SGN
(
x
Ë((x)>0?1:((x)<0?-1:0))

	)

74 
	#ABS
(
x
Ë((x)>0?(x):-(x))

	)

75 
	tbig_num
[
MAXN
+1];

77 
	$ªad
(
big_num
 
a
)

79 
buf
[
MAXN
*
DIGIT
+1],
ch
; 
i
,
j
;

80 
	`mem£t
(
a
,0,()*(
MAXN
+1));

81 if–
	`sˇnf
("%s",&
buf
)==
EOF
 )  0;

82 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

83 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

84 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

85 
i
=1; i<=
a
[0]; i++)

86 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

87 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

88 ;!
a
[a[0]]&&a[0]>1;a[0]--);

90 
	}
}

92 
	$ªad
(
big_num
 
a
,&
sgn
)

94 
°r
[
MAXN
*
DIGIT
+1],
ch
,*
buf
; 
i
,
j
;

95 
	`mem£t
(
a
,0,()*(
MAXN
+1));

96 if–
	`sˇnf
("%s",&
°r
)==
EOF
 )  0;

97 
buf
=
°r
,
sgn
=1;

98 if(*
buf
=='-'Ë
sgn
=-1,buf++;

99 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

100 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

101 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

102 
i
=1; i<=
a
[0]; i++)

103 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

104 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

105 ;!
a
[a[0]]&&a[0]>1;a[0]--);

106 if(
a
[0]==1 && !a[1]Ë
sgn
=0;

108 
	}
}

110 
	$wrôe
(c⁄° 
big_num
 
a
)

112 
i
,
j
;

113 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

114 
j
=
DEPTH
/10; j; j/=10)

115 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

116 
	}
}

118 
	$comp
(
big_num
 
a
,big_num 
b
)

120 
i
;

121 if(
a
[0]!=
b
[0]) á[0]-b[0];

122 
i
=
a
[0]; i; i--)

123 if(
a
[
i
]!=
b
[i])

124  
a
[
i
]-
b
[i];

126 
	}
}

128 
	$comp
(
big_num
 
a
,c⁄° 
b
)

130 
c
[12]={1};

131 
c
[1]=
b
; c[c[0]]>=
DEPTH
; c[c[0]+1]=c[c[0]]/DEPTH,c[c[0]]%=DEPTH,c[0]++);

132  
	`comp
(
a
,
c
);

133 
	}
}

135 
	$comp
(
big_num
 
a
,
c
,
d
,big_num 
b
)

137 
i
,
t
=0,
O
=-
DEPTH
*2;

138 if(
b
[0]-
a
[0]<
d
 && 
c
)

140 
i
=
b
[0]; i>
d
; i--)

142 
t
Ò*
DEPTH
+
a
[
i
-
d
]*
c
-
b
[i];

143 if(
t
>0)  1;

144 if(
t
<
O
)  0;

146 
i
=
d
; i; i--)

148 
t
Ò*
DEPTH
-
b
[
i
];

149 if(
t
>0)  1;

150 if(
t
<
O
)  0;

152  
t
>0;

153 
	}
}

155 
	$add
(
big_num
 
a
,big_num 
b
)

157 
i
;

158 
i
=1; i<=
b
[0]; i++)

159 if((
a
[
i
]+=
b
[i])>=
DEPTH
)

160 
a
[
i
]-=
DEPTH
,a[i+1]++;

161 if(
b
[0]>=
a
[0])á[0]=b[0];

162 ; 
a
[
i
]>=
DEPTH
 && i<=a[0];á[i]-=DEPTH,i++,a[i]++ );

163 
a
[0]+=(a[a[0]+1]>0);

164 
	}
}

166 
	$add
(
big_num
 
a
,
b
)

168 
i
=1;

169 
a
[1]+=
b
;á[
i
]>=
DEPTH
 && i<a[0];á[i+1]+=a[i]/DEPTH,a[i]%=DEPTH,i++);

170 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

171 
	}
}

173 
	$sub
(
big_num
 
a
,big_num 
b
)

175 
i
;

176 
i
=1; i<=
b
[0]; i++)

177 if((
a
[
i
]-=
b
[i])<0)

178 
a
[
i
+1]--,a[i]+=
DEPTH
;

179 ; 
a
[
i
]<0;á[i]+=
DEPTH
,i++,a[i]--);

180 ; !
a
[a[0]]&&a[0]>1;á[0]--);

181 
	}
}

183 
	$sub
(
big_num
 
a
,
b
)

185 
i
=1;

186 
a
[1]-=
b
;á[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

187 ; !
a
[a[0]]&&a[0]>1;á[0]--);

188 
	}
}

190 
	$sub
(
big_num
 
a
,big_num 
b
,
c
,
d
)

192 
i
,
O
=
b
[0]+
d
;

193 
i
=1+
d
; i<=
O
; i++)

194 if((
a
[
i
]-=
b
[i-
d
]*
c
)<0)

195 
a
[
i
+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH;

196 ; 
a
[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

197 ; !
a
[a[0]]&&a[0]>1;á[0]--);

198 
	}
}

200 
	$mul
(
big_num
 
a
,big_num 
b
,big_num 
c
)

202 
i
,
j
;

203 
	`mem£t
(
c
,0,()*(
MAXN
+1));

204 
c
[0]=
a
[0]+
b
[0]-1,
i
=1; i<=a[0]; i++)

205 
j
=1;j<=
b
[0];j++)

206 if((
c
[
i
+
j
-1]+=
a
[i]*
b
[j])>=
DEPTH
)

207 
c
[
i
+
j
]+=c[i+j-1]/
DEPTH
,c[i+j-1]%=DEPTH;

208 
c
[0]+=(c[c[0]+1]>0); !c[c[0]]&&c[0]>1; c[0]--);

209 
	}
}

211 
	$mul
(
big_num
 
a
,c⁄° 
b
)

213 
i
;

214 
a
[1]*=
b
,
i
=2; i<=a[0]; i++)

216 
a
[
i
]*=
b
;

217 if(
a
[
i
-1]>=
DEPTH
)

218 
a
[
i
]+˜[i-1]/
DEPTH
,a[i-1]%=DEPTH;

220 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

221 ; !
a
[a[0]] &&á[0]>1;á[0]--);

222 
	}
}

224 
	$div
(
big_num
 
c
,big_num 
a
,big_num 
b
)

226 
h
,
l
,
m
,
i
;

227 
	`mem£t
(
c
,0,()*(
MAXN
+1));

228 
c
[0]=(
b
[0]<
a
[0]+1)?(a[0]-b[0]+2):1;

229 
i
=
c
[0]; i; 
	`sub
(
a
,
b
,c[i]=
m
,i-1),i--)

230 
h
=
DEPTH
-1,
l
=0,
m
=(h+l+1)>>1; h>l; m=(h+l+1)>>1)

231 if–
	`comp
(
b
,
m
,
i
-1,
a
ËË
h
=m-1;

232 
l
=
m
;

233 ; !
c
[c[0]]&&c[0]>1; c[0]--);

234 
c
[0]=c[0]>1?c[0]:1;

235 
	}
}

237 
	$div
(
big_num
 
a
,c⁄° 
b
,& 
c
)

239 
i
;

240 
c
=0,
i
=
a
[0]; i; c=c*
DEPTH
+a[i],a[i]=c/
b
,c%=b,i--);

241 ; !
a
[a[0]]&&a[0]>1;á[0]--);

242 
	}
}

244 
	$sqπ
(
big_num
 
b
,big_num 
a
)

246 
h
,
l
,
m
,
i
;

247 
	`mem£t
(
b
,0,()*(
MAXN
+1));

248 
i
=
b
[0]=(
a
[0]+1)>>1; i; 
	`sub
◊,b,
m
,i-1),b[i]+=m,i--)

249 
h
=
DEPTH
-1,
l
=0,
b
[
i
]=
m
=(h+l+1)>>1; h>l; b[i]=m=(h+l+1)>>1)

250 if(
	`comp
(
b
,
m
,
i
-1,
a
)Ë
h
=m-1;

251 
l
=
m
;

252 ; !
b
[b[0]]&&b[0]>1; b[0]--);

253 
i
=1; i<=
b
[0]; b[i++]>>=1);

254 
	}
}

256 
	$Àngth
(
big_num
 
a
)

258 
t
,
ªt
;

259 
ªt
=(
a
[0]-1)*
DIGIT
,
t
=a[a[0]];Å;Å/=10,ret++);

260  
ªt
>0?ret:1;

261 
	}
}

263 
	$digô
(
big_num
 
a
,
b
)

265 
i
,
ªt
;

266 
ªt
=
a
[(
b
-1)/
DIGIT
+1],
i
=(b-1)%DIGIT; i;Ñet/=10,i--);

267  
ªt
%10;

268 
	}
}

270 
	$zî⁄um
(
big_num
 
a
)

272 
ªt
,
t
;

273 
ªt
=0; !
a
[ret+1];Ñet++);

274 
t
=
a
[
ªt
+1],ªt*=
DIGIT
; !(t%10);Å/=10,ret++);

275  
ªt
;

276 
	}
}

278 
	$comp
(
t
[],
l
,
h
,
d
)

280 
i
,
j
,
tmp
;

281 
i
=
l
; i<=
h
; i++)

282 
tmp
=
i
,
j
=2;Åmp>1; j++)

283 !(
tmp
%
j
))

284 
t
[
j
]+=
d
,
tmp
/=j;

285 
	}
}

287 
	$c⁄vît
(
t
[],
h
,
big_num
 
a
)

289 
i
,
j
,
tmp
=1;

290 
	`mem£t
(
a
,0,()*(
MAXN
+1));

291 
a
[0]˜[1]=1,
i
=2; i<=
h
; i++)

292 if(
t
[
i
])

293 
j
=
t
[
i
]; j; 
tmp
*=i,j--)

294 if(
tmp
*
i
>
DEPTH
)

295 
	`mul
(
a
,
tmp
),tmp=1;

296 
	`mul
(
a
,
tmp
);

297 
	}
}

299 c⁄° 
	gMMM
=10000;

300 
	$combö©i⁄
(
big_num
 
a
,
m
,
n
)

302 
t
[
MMM
]={0};

303 
	`comp
(
t
,
n
+1,
m
,1);

304 
	`comp
(
t
,2,
m
-
n
,-1);

307 
	`c⁄vît
(
t
,
m
,
a
);

308 
	}
}

310 
	$≥rmuèti⁄
(
big_num
 
a
,
m
,
n
)

312 
i
,
t
=1;

313 
	`mem£t
(
a
,0,()*(
MAXN
+1));

314 
a
[0]=a[1]=1;

315 
i
=
m
-
n
+1; i<=m; 
t
*=i++)

316 if(
t
*
i
>
DEPTH
)

317 
	`mul
(
a
,
t
),t=1;

318 
	`mul
(
a
,
t
);

319 
	}
}

324 
	~<c°dio
>

325 
	~<cm©h
>

327 
	tñem_t
;

328 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; };

330 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

332  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

333 
	}
}

334 
poöt
 
	$öãr£˘i⁄
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

336 
poöt
 
ªt
=
a
;

337 
ñem_t
 
up
,
dw
,
t
;

338 
up
=
	`xmu…
(
c
,
d
,c,
a
);

339 
dw
=
	`xmu…
(
a
,
b
,
c
,
d
);

340 
t
=
up
/
dw
;

341 
ªt
.
x
+=(
b
.x-
a
.x)*
t
;

342 
ªt
.
y
+=(
b
.y-
a
.y)*
t
;

343  
ªt
;

344 
	}
}

348 
	~<c°dio
>

349 
	~<cm©h
>

350 
	#MAXN
 10001

	)

351 
	#ïs
 1e-8

	)

352 
	tñem_t
;

354 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp
[
MAXN
];

356 
ölöe
 
	$mö
(
ñem_t
 
a
,ñem_à
b
){ á<b?a:b; 
	}
}

357 
ölöe
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á<b?b:a; 
	}
}

358 
ölöe
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

360  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

361 
	}
}

362 
ölöe
 
	$zîo
(
x
){  x>=-
ïs
&&x<=eps;

363 
	}
}

365 
	$ö_pﬁyg⁄
(
poöt
 
a
,
n
,poöà
p
[],
⁄_edge
)

367 
poöt
 
low_p
,
high_p
;

368 
i
,
˙t
=0;

369 
i
=0; i<
n
; i++)

371 if(
p
[
i
].
y
<p[(i+1)%
n
].yË
low_p
ı[i],
high_p
=p[(i+1)%n];

372 
high_p
=
p
[
i
],
low_p
ı[(i+1)%
n
];

373 if(
	`xmu…
(
a
,
low_p
,a,
high_p
)>
ïs
&&a.
y
>=low_p.y&&a.y<high_p.y)

374 
˙t
++;

375 if(
	`zîo
(
	`xmu…
(
a
,
low_p
,a,
high_p
))&&a.
y
>ˆow_p.y&&a.y<=high_p.y&&a.
x
>=
	`mö
÷ow_p.x,high_p.x)&&a.x<=
	`max
(low_p.x,high_p.x))

376  
⁄_edge
;

378  
˙t
&1;

379 
	}
}

383 
	~<c°dio
>

384 
	tLL
;

386 
LL
 
	$comb
(
n
,
m
)

388 
LL
 
ªt
=1; 
i
=
n
;

389 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

390  
ªt
;

391 
	}
}

393 
LL
 
	$comb2num
(
n
,
m
,
c
[])

395 
LL
 
ªt
=
	`comb
(
n
,
m
); 
i
,
j
;

396 
i
=0; i<
m
; i++)

397 
ªt
-=
	`comb
(
n
-
c
[
i
],
m
-i);

398  
ªt
;

399 
	}
}

402 
	~<c°dio
>

403 
	~<cm©h
>

404 
	~<c°rög
>

405 
	~<Æg‹ôhm
>

406 
	#ïs
 1e-8

	)

407 
	#öf
 100000000

	)

408 
	#MAXN
 50100

	)

409 
usög
 
	g°d
::
s‹t
;

410 
	tñem_t
;

412 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp1
,
	gp
[
MAXN
],
	gc⁄vîx
[MAXN];

413 
ölöe
 
ñem_t
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á>b?a:b; 
	}
}

414 
ölöe
 
	$zîo
(
ñem_t
 
x
){  x>=-
ïs
&&x<Ûps; 
	}
}

416 
ölöe
 
ñem_t
 
	$Àn
(
poöt
 
a
,poöà
b
)

418  
	`sqπ
((
b
.
x
-
a
.x)*(b.x-a.x)+(b.
y
-a.y)*(b.y-a.y));

419 
	}
}

420 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
)

422  (
a
.
x
-
c
.x)*(
b
.
y
-c.y)-(a.y-c.y)*(b.x-c.x);

423 
	}
}

425 
	$cmp
(
poöt
 
a
,poöà
b
)

427 
ñem_t
 
x
;

428 
x
=
	`xmu…
(
a
,
b
,
p1
);

429 if(
	`zîo
(
x
))

430  
	`Àn
(
a
,
p1
)<Àn(
b
,p1);

431  
x
>0;

432 
	}
}

434 
	$_c⁄vîx
(
n
,
poöt
 
p
[],poöà
c⁄
[])

436 
i
,
s
;

437 
p1
.
x
ı1.
y
=
öf
;

438 
i
=0; i<
n
; i++)

440 if(
p
[
i
].
y
<
p1
.y)

441 
p1
=
p
[
i
];

442 if(
p
[
i
].
y
==
p1
.y&&p[i].
x
<p1.x)

443 
p1
=
p
[
i
];

445 
	`s‹t
(
p
,p+
n
,
cmp
);

446 
c⁄
[0]=
p
[0],c⁄[1]ı[1],
s
=2;

447 
i
=0; i<
n
; 
c⁄
[
s
++]=
p
[i++])

448 ; 
s
>1&&
	`xmu…
(
c⁄
[s-1],
p
[
i
],c⁄[s-2])<=
ïs
; s--);

450  
s
;

451 
	}
}

454 
	~<c°dio
>

456 
	gdays
[12]={31,28,31,30,31,30,31,31,30,31,30,31};

457 
	sd©e
{ 
	my
,
	mm
,
	md
; };

460 
ölöe
 
	$À≠
(
yór
)

462  (
yór
%4==0 && year%100!=0)||0==year%400;

463 
	}
}

466 
ölöe
 
	$ÀgÆ
(
d©e
 
a
)

468 if(
a
.
m
<0 ||á.m>12)  0;

469 if(
a
.
m
==2Ëá.
d
>0 &&á.d<=28+
	`À≠
◊.
y
);

470  
a
.
d
>0 &&á.d<=
days
[a.
m
-1];

471 
	}
}

474 
ölöe
 
	$d©ecmp
(
d©e
 
a
,d©ê
b
)

476 if(
a
.
y
 !
b
.y) á.y-b.y;

477 if(
a
.
m
 !
b
.m) á.m-b.m;

478  
a
.
d
-
b
.d;

479 
	}
}

484 
	$wìkday
(
d©e
 
a
)

486 
tm
=
a
.
m
>=3? (a.m-2):(a.m+10);

487 
ty
=
a
.
m
>=3?á.
y
:(a.y-1);

488  (
ty
+ty/4-ty/100+ty/400+()(2.6*
tm
-0.2)+
a
.
d
)%7;

489 
	}
}

493 
	$d©e2öt
(
d©e
 
a
)

495 
ªt
=
a
.
y
*365+◊.y-1)/4-◊.y-1)/100+◊.y-1)/400,
i
;

496 
days
[1]+=
	`À≠
(
a
.
y
);

497 
i
=0; i<
a
.
m
-1; 
ªt
+=
days
[i++]);

498 
days
[1]=28;

499  
ªt
+
a
.
d
;

500 
	}
}

505 
d©e
 
	$öt2d©e
(
a
)

507 
d©e
 
ªt
;

508 
ªt
.
y
=
a
/146097*400;

509 
a
%=146097;á>=365+
	`À≠
(
ªt
.
y
);á-=365+leap(ret.y),ret.y++);

510 
days
[1]+=
	`À≠
(
ªt
.
y
);

511 
ªt
.
m
=1; 
a
>=
days
[ret.m-1];á-=days[ret.m-1],ret.m++);

512 
days
[1]=28;

513 
ªt
.
d
=
a
+1;

514  
ªt
;

515 
	}
}

518 
	~<c°dio
>

519 
	~<c°rög
>

521 c⁄° 
	gMAXN
=1001;

522 c⁄° 
	göf
=1000000000;

523 
	tñem_i
;

524 
	gmö1
[
MAXN
],
	gmö2
[MAXN],
	gm©
[MAXN][MAXN];

530 
	$dijk°ø
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò
mö
[],
¥e
[])

532 
v
[
MAXN
],
i
,
j
,
k
;

533 
i
=0;i<
n
;i++Ë
v
[i]=0,
mö
[i]=
öf
,
¥e
[i]=-1;

534 
mö
[
s
]=0,
i
=0;i<
n
;i++){

535 
k
=-1,
j
=0;j<
n
;j++)

536 i‡(!
v
[
j
]&&((
k
==-1)||
mö
[j]<min[k]))

537 
k
=
j
;

538 
v
[
k
]=1,
j
=0;j<
n
;j++)

539 if(!
v
[
j
] && 
mö
[
k
]+
m©
[k][j]<min[j])

540 
mö
[
j
]=mö[
k
]+
m©
[
¥e
[j]=k][j];

542 
	}
}

545 
	~<c°dio
>

546 
	~<queue
>

547 
	#MAXN
 1000

	)

548 
	#MAXS
 2000000

	)

549 
	#öf
 100000000

	)

550 
usög
 
«me•a˚
 
	g°d
;

551 
	tñem_t
;

552 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

553 
	shóp_t


555 
	mv
; 
ñem_t
 
	ml
;

556 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

557 }
	gh_t
;

558 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	g¥e
[MAXN];

559 
ñem_t
 
	gmö_l
[
MAXN
];

560 
	g¥i‹ôy_queue
<
	ghóp_t
> 
	gq
;

562 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

564 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

565 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

566 
	}
}

568 
	$dijk°ø
(
n
,
s
)

570 
i
;

571 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö_l
[i]=
öf
,
¥e
[i]=-1;

572 
mö_l
[
h_t
.
v
=
s
]=h_t.
l
=0; 
q
.
	`push
(h_t);

573 ; !
q
.
	`em±y
();)

575 
h_t
=
q
.
	`t›
(),q.
	`p›
();

576 if(!
v
[
h_t
.v])

577 
v
[
h_t
.v]=1,
i
=
li°
[h_t.v]; i!=-1; i=
e
[i].
n
)

578 if(!
v
[
e
[
i
].
t
]&&
mö_l
[e[i].
f
]+e[i].
l
<min_l[e[i].t])

579 
¥e
[
e
[
i
].
t
]Û[i].
f
,
mö_l
[
h_t
.
v
Û[i].t]=h_t.
l
=mö_l[e[i].f]+e[i].l,
q
.
	`push
(h_t);

581 
	}
}

586 
	~<c°dio
>

587 
	~<c°rög
>

588 
	#MAXN
 5010

	)

589 
	#MAXS
 100000

	)

590 
	tñem_t
;

592 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

593 
	gv
[
MAXN
],
	gli°
[MAXN],
	gid
[MAXN],
	g°
[MAXN],
	gd‚
[MAXN],
	glow
[MAXN],
	g˙t
,
	gt›
;

595 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

597 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

598 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

599 
	}
}

601 
	$£¨ch
(
n
,
now
,&
ªt
)

603 
i
;

604 
d‚
[
°
[°[0]++]=
now
]=
low
[now]=++
˙t
; 
v
[now]=1;

605 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

606 if(!
d‚
[
e
[
i
].
t
])

608 
	`£¨ch
(
n
,
e
[
i
].
t
,
ªt
);

609 if(
low
[
e
[
i
].
t
]<low[
now
])Üow[now]=low[e[i].t];

611 if(
d‚
[
e
[
i
].
t
]<d‚[
now
])

613 if(
v
[
e
[
i
].
t
]&&
d‚
[e[i].t]<
low
[
now
])

614 
low
[
now
]=
d‚
[
e
[
i
].
t
];

616 if(
low
[
now
]==
d‚
[now])

617 
ªt
++; 
°
[°[0]]!=
now
; 
id
[°[--°[0]]]Ùë,
v
[st[st[0]]]=0);

618 
	}
}

620 
	$föd_comp⁄íts
(
n
)

622 
ªt
=0,
i
;

623 
i
=0; i<=
n
+1; i++Ë
°
[i]=-1,
d‚
[i]=0;

624 
°
[0]=1,
˙t
=
i
=0; i<
n
; i++)

625 if(!
d‚
[
i
])

626 
	`£¨ch
(
n
,
i
,
ªt
);

627  
ªt
;

628 
	}
}

631 
	~<c°dio
>

632 
	~<c°rög
>

634 
	tñem_i
;

635 
	#MAXN
 200

	)

636 
	#öf
 1000000000

	)

637 
ñem_i
 
	gm©
[
MAXN
][MAXN],
	gmö
[MAXN][MAXN];

638 
	g¥e
[
MAXN
][MAXN];

644 
	$Êoyd_w¨shÆl
(
n
,
ñem_i
 
m©
[][
MAXN
],ñem_ò
mö
[][MAXN],
¥e
[][MAXN])

646 
i
,
j
,
k
;

647 
i
=0;i<
n
;i++)

648 
j
=0;j<
n
;j++)

649 
mö
[
i
][
j
]=
m©
[i][j],
¥e
[i][j]=(i==j)?-1:i;

650 
k
=0;k<
n
;k++)

651 
i
=0;i<
n
;i++)

652 
j
=0;j<
n
;j++)

653 if(
mö
[
i
][
k
]+mö[k][
j
]<min[i][j])

654 
mö
[
i
][
j
]=mö[i][
k
]+mö[k][j],
¥e
[i][j]=pre[k][j];

655 
	}
}

658 
	~<c°dio
>

659 
	#MAXN
 1000

	)

661 
	gd©
[
MAXN
],
	gtmp
[MAXN];

663 
	$show
(
n
,
tmp
[])

665 
i
;

666 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

667 
	`puts
("");

668 
	}
}

670 
	$gícomb
(
s
,
e
,
m
,
˙t
)

672 
i
;

673 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

675 
i
=
s
; i+
m
-
˙t
<=
e
; i++)

676 
tmp
[
˙t
++]=
d©
[
i
],
	`gícomb
(i+1,
e
,
m
,cnt),cnt--;

677 
	}
}

679 
	$gí_comb
(
n
,
m
)

681 
i
;

682 
i
=0; i<
n
; i++Ë
d©
[i]=i+1;

683 
	`gícomb
(0,
n
,
m
,0);

684 
	}
}

688 
	~<c°dio
>

689 
	#MAXN
 1000

	)

691 
	gèg
[
MAXN
],
	gtmp
[MAXN],
	ga
[MAXN];

693 
	$show
(
m
,
tmp
[])

695 
i
;

696 
i
=0; i<
m
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

697 
	`puts
("");

698 
	}
}

700 
	$gí≥rm
(
n
,
m
,
˙t
)

702 
i
;

703 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

705 
i
=0; i<
n
; i++)

706 if(!
èg
[
i
])

707 
èg
[
i
]=1,
tmp
[
˙t
]=
a
[i],
	`gí≥rm
(
n
,
m
,cnt+1),tag[i]=0;

708 
	}
}

710 
	$gí_≥rm
(
n
,
m
)

712 
i
;

713 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
èg
[i]=0;

714 
	`gí≥rm
(
n
,
m
,0);

715 
	}
}

718 
	~<c°dio
>

719 
	~<c°rög
>

720 
	#MAXN
 1000

	)

722 
	gpos
[
MAXN
],
	gdú
[MAXN],
	ga
[MAXN];

724 
	$show
(
n
,
tmp
[])

726 
i
;

727 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

728 
	`puts
("");

729 
	}
}

731 
	$_gí_≥rm_sw≠
(
n
,
l
)

733 
p1
,
p2
,
i
,
t
;

734 if(
l
==
n
Ë
	`show
“,
a
);

737 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

738 
i
=0; i<
l
; i++)

740 
p2
=(
p1
=
pos
[
l
])+
dú
[l];

741 
t
=
a
[
p2
],a[p2]˜[
p1
],a[p1]=t;

742 
pos
[
a
[
p1
]-1]ı1,pos[a[
p2
]-1]=p2;

743 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

746 
dú
[
l
]=-dir[l];

747 
	}
}

749 
	$gí_≥rm_sw≠
(
n
)

751 
i
;

752 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
dú
[i]=-1,
pos
[i]=i;

753 
	`_gí_≥rm_sw≠
(
n
,0);

754 
	}
}

761 
	~<c°dio
>

762 
	#MAXN
 220

	)

763 
	#MAXS
 100000

	)

764 
	tñem_t
;

766 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

767 
	gt›
,
	gm©ch1
[
MAXN
],
	gq
[
MAXS
],
	gm©ch2
[MAXN],
	gli°
[MAXN],
	gtmp2
[MAXN];

769 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

771 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

772 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

773 
	}
}

775 
	$hung¨y
(
m
,
n
)

777 
i
,
j
,
k
,
l
,
r
,
mx
=(
m
>
n
)?m:n,
ªt
=0,
x
,
y
,
t
;

778 
i
=0; i<
mx
; i++Ë
m©ch1
[i]=
m©ch2
[i]=-1;

779 
i
=0; i<
m
; 
ªt
+=(
m©ch1
[i++]>-1))

781 
j
=0; j<
n
; j++Ë
tmp2
[j]=-1;

782 
q
[
l
=
r
=0]=
i
;Ü<Ù&&
m©ch1
[i]<0;Ü++)

783 
k
=
q
[
l
],
j
=
li°
[k]; j!=-1&&
m©ch1
[
i
]<0; j=
e
[j].
n
)

784 if(
tmp2
[
e
[
j
].
t
]<0)

786 
q
[++
r
]=
m©ch2
[
e
[
j
].
t
],
tmp2
[e[j].t]=
k
;

787 if(
q
[
r
]<0)

788 
y
=
e
[
j
].
t
; y>=0; y=t)

789 
m©ch2
[
y
]=
x
=
tmp2
[y],
t
=
m©ch1
[x],match1[x]=y;

792  
ªt
;

793 
	}
}

797 
	~<c°dio
>

798 
	~<c°rög
>

800 
	$kmp_Áû
(
s
[],
Áû
[])

802 
i
,
p
,
l
=
	`°æí
(
s
);

803 
Áû
[0]=-1,
i
=1; i<
l
; i++)

805 
p
=
Áû
[
i
-1];

806 
p
>=0&&
s
[p+1]!=s[
i
]Ëp=
Áû
[p];

807 if(
s
[
p
+1]==s[
i
]Ë
Áû
[i]=p+1;

808 
Áû
[
i
]=-1;

810 
	}
}

812 
	$kmp_m©ch
(
s
[],
t
[],
Áû_t
[])

814 
SL
=
	`°æí
(
s
),
TL
=°æí(
t
),
s_i
,
t_i
;

815 
	`kmp_Áû
(
t
,
Áû_t
);

816 
s_i
=
t_i
=0; s_i<
SL
&&t_i<
TL
;)

818 if(
s
[
s_i
]==
t
[
t_i
]) s_i++,t_i++;

819 if(
t_i
==0Ë
s_i
++;

820 
t_i
=
Áû_t
[t_i-1]+1;

822  
t_i
<
TL
?-1:
s_i
-t_i;

823 
	}
}

827 
	~<c°dio
>

828 
	#MAXN
 20100

	)

829 
	#MAXS
 880100

	)

830 
	#öf
 0x7fffffff

	)

831 
	tñem_t
;

833 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	mw
; }
	ge
[
MAXS
];

834 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gœy
[MAXN];

836 
	$ö£π
(
f
,
t
,
ñem_t
 
w
)

838 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

839 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

840 
	}
}

842 
ölöe
 
	$™ti
(
öd
){  ind^1; 
	}
}

843 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

845 
	$bfs
(
s
,
t
,
n
)

847 
l
,
r
,
i
,
j
;

848 
i
=0; i<
n
; i++Ë
œy
[i]=-1;

849 
q
[
l
=
r
=0]=
s
; 
œy
[s]=0;

850 ; 
l
<=
r
; )

852 
i
=
q
[
l
++];

853 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

855 if(
œy
[
e
[
j
].
t
]<0&&e[j].
w
>0)

856 
œy
[
e
[
j
].
t
]ˆay[
i
]+1,
q
[++
r
]=e[j].t;

859  
œy
[
t
]>=0;

860 
	}
}

862 
ñem_t
 
	$dfs
(
now
,
t
,
ñem_t
 
now_Êow
)

864 
âl
=0,
sögÀ
,
i
,
j
;

865 if(
now
==
t
Ë 
now_Êow
;

866 
i
=
li°
[
now
]; i!=-1&&
âl
<
now_Êow
; i=
e
[i].
n
)

867 if(
œy
[
e
[
i
].
t
]=ˆay[
now
]+1&&e[i].
w
>0&&(
sögÀ
=
	`dfs
”[i].t,t,
	`mö
”[i].w,
now_Êow
-
âl
))))

869 
e
[
i
].
w
-=
sögÀ
;

870 
e
[
	`™ti
(
i
)].
w
+=
sögÀ
;

871 
âl
+=
sögÀ
;

873 if(
âl
==0Ë
œy
[
now
]=-1;

874  
âl
;

875 
	}
}

877 
ñem_t
 
	$di˙ic
(
s
,
t
,
n
)

879 
ñem_t
 
ªt
=0;

880 
	`bfs
(
s
,
t
,
n
))

881 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

882  
ªt
;

883 
	}
}

886 
	~<c°dio
>

887 
	#öf
 1000000000

	)

888 
	#MAXN
 200

	)

889 
	#MAXS
 160000

	)

891 
	sedge
{ 
	mf
,
	mt
,
	mc
,
	mÊow
,
	mn
; }
	ge
[
MAXS
];

892 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gv
[MAXN],
	g¥e
[MAXN],
	gmö
[MAXN],
	gmax_Êow
;

894 
	$s_ö£π
(
f
,
t
,
c
,
Êow
)

896 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c,e[t›].
Êow
=flow;

897 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

898 
	}
}

900 
	$ö£π
(
f
,
t
,
c
,
Êow
)

902 
	`s_ö£π
(
f
,
t
,
c
,
Êow
);

903 
	`s_ö£π
(
t
,
f
,-
c
,0);

904 
	}
}

906 
	$•Á
(
n
,
s
,
t
)

908 
i
,
l
,
r
,
j
;

909 
i
=0; i<
n
; i++Ë
¥e
[i]=-1,
mö
[i]=
öf
,
v
[i]=0;

910 
q
[
l
=
r
=0]=
s
;

911 
mö
[
s
]=0,
v
[s]=1;

912 ; 
l
<=
r
; )

914 
i
=
q
[
l
++];

915 
v
[
i
]=0;

916 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

917 if(
e
[
j
].
Êow
>0&&
mö
[
i
]+e[j].
c
<mö[e[j].
t
])

919 
¥e
[
e
[
j
].
t
]=j;

920 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
c
;

921 if(!
v
[
e
[
j
].
t
])

922 
v
[
e
[
j
].
t
]=1,
q
[++
r
]=e[j].t;

925  
mö
[
t
]!=
öf
;

926 
	}
}

928 
	$mcmf
(
n
,
s
,
t
)

930 
ªt
=0,
i
,
now_Êow
;

931 
max_Êow
=0;

932 ; 
	`•Á
(
n
,
s
,
t
); )

934 
now_Êow
=
öf
;

935 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

936 if(
now_Êow
>
e
[
i
].
Êow
)

937 
now_Êow
=
e
[
i
].
Êow
;

938 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

939 
e
[
i
].
Êow
-=
now_Êow
,e[i^1].flow+=now_flow;

940 
max_Êow
+=
now_Êow
;

941 
ªt
+=
now_Êow
*
mö
[
t
];

943  
ªt
;

944 
	}
}

947 
	~<c°dio
>

948 
	tLL
;

951 
LL
 
	$exp⁄ít
(
LL
 
m
,LL 
a
)

953 
LL
 
ªt
=1;

954 ; 
a
;á>>=1,
m
*=m)

955 if(
a
&1)

956 
ªt
*=
m
;

957  
ªt
;

958 
	}
}

961 
LL
 
	$moduœr_exp⁄ít
(
LL
 
a
,LL 
b
,LL 
m
)

963 
LL
 
ªt
=1;

964 ; 
b
; b>>=1,
a
=◊%
m
*(a%m))%m)

965 if(
b
&1)

966 
ªt
Ùë%
m
*(
a
%m)%m;

967  
ªt
;

968 
	}
}

970 
	~<c°dio
>

971 
	#MAXN
 100

	)

972 
	tLL
;

974 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

975 
LL
 
	$lcm
(
LL
 
a
,LL 
b
){ á*b/
	`gcd
◊,b); 
	}
}

978 
LL
 
	$ext_gcd
(
LL
 
a
,LL 
b
,LL &
x
,LL &
y
)

980 
LL
 
ªt
,
t
;

981 if(!
b
)

983 
x
=1,
y
=0;

984  
a
;

986 
ªt
=
	`ext_gcd
(
b
,
a
%b,
x
,
y
);

987 
t
=
x
,x=
y
,yÒ-
a
/
b
*y;

988  
ªt
;

989 
	}
}

993 
LL
 
	$moduœr_löór
(
LL
 
a
,LL 
b
,LL 
m
,LL 
sﬁ
[])

995 
LL
 
d
,
e
,
x
,
y
,
i
;

996 
d
=
	`ext_gcd
(
a
,
m
,
x
,
y
);

997 if(
b
%
d
)  0;

998 
e
=(
x
*(
b
/
d
)%
m
+m)%m;

999 
i
=0; i<
d
; i++)

1000 
sﬁ
[
i
]=(
e
+i*(
m
/
d
))%m;

1001  
d
;

1002 
	}
}

1010 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

1012 
LL
 
d
,
x
,
y
,
ªt
=0,
m
,
n
=1,
i
;

1013 
i
=0; i<
k
; i++Ë
n
*=
w
[i];

1014 
i
=0; i<
k
; i++)

1016 
m
=
n
/
w
[
i
];

1017 
d
=
	`ext_gcd
(
w
[
i
],
m
,
x
,
y
);

1018 
ªt
=‘ë+
y
*
m
*
b
[
i
])%
n
;

1020  (
ªt
+
n
)%n;

1021 
	}
}

1029 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

1031 
LL
 
t
,
d
,
x
,
y
,
ªt
=
b
[0],
m
=
w
[0],
â
,
Ác
,
√xtm
,
i
;

1032 
i
=1; i<
k
; i++)

1034 
d
=
	`ext_gcd
(
m
,
w
[
i
],
x
,
y
);

1035 
t
=
b
[
i
]-
ªt
;

1036 if(
t
%
d
)  -1;

1037 
â
=
w
[
i
]/
d
;

1038 
Ác
=(
x
*(
t
/
d
)%
â
+tt)%tt;

1039 
√xtm
=
m
/
d
*
w
[
i
];

1040 
ªt
=(‘ë+
m
*
Ác
)%
√xtm
+nextm)%nextm;

1041 
m
=
√xtm
;

1043  (
ªt
%
m
+m)%m;

1044 
	}
}

1048 
	~<c°dio
>

1049 
	~<c°rög
>

1050 
	~<queue
>

1051 
	#MAXN
 10010

	)

1052 
	#MAXS
 200020

	)

1053 
	#öf
 1000000000

	)

1054 
	tñem_t
;

1055 
usög
 
«me•a˚
 
	g°d
;

1057 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
;

1058 
‰õnd
 
boﬁ
 
	m›î©‹
<(
edge
 
	ma
,edgê
	mb
){ á.
	ml
>b.l; }

1059 }
	ge
[
MAXS
],
	ge_t
;

1060 
	suföd


1062 
	mp
[
MAXN
],
	mt
;

1063 
öi
(){ 
mem£t
(
p
,0,(p)); }

1064 
run
(&
x
){ ; 
	mp
[
t
=x]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));}

1065 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

1066 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

1067 }
	guf
;

1068 
	gt›
,
	gli°
[
MAXN
];

1070 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

1072 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

1073 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1074 
	}
}

1076 
ñem_t
 
	$kruskÆ
(
n
)

1078 
¥i‹ôy_queue
<
edge
> 
q
;

1079 
uf
.
	`öi
(); 
ñem_t
 
ªt
=0;

1080 
i
,
j
;

1081 
i
=0; i<
n
; i++)

1082 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

1083 
q
.
	`push
(
e
[
j
]);

1084 
i
=0; i<
n
-1&&!
q
.
	`em±y
(); )

1086 
e_t
=
q
.
	`t›
(); q.
	`p›
();

1087 if(!
uf
.
	`is‰õnd
(
e_t
.
f
+1,e_t.
t
+1))

1088 
ªt
+=
e_t
.
l
,
uf
.
	`£t‰õnd
”_t.
f
+1,e_t.
t
+1),
i
++;

1090  
ªt
;

1091 
	}
}

1093 
	$maö
()

1095 
n
,
i
,
m
,
l
,
x
,
y
; 
ñem_t
 
ªt
;

1096 
	`sˇnf
("%d%d",&
n
,&
m
);

1097 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

1098 
i
=0; i<
m
; i++)

1099 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
),
	`ö£π
(x-1,y-1,l),insert(y-1,x-1,l);

1101 
ªt
=
	`kruskÆ
(
n
);

1102 
	`¥ötf
("%d\n",
ªt
);

1104 
	}
}

1108 
	~<c°dio
>

1109 
	~<queue
>

1110 
usög
 
«me•a˚
 
	g°d
;

1111 
	#MAXN
 10010

	)

1112 
	#MAXS
 200020

	)

1113 
	#öf
 1000000000

	)

1114 
	tñem_t
;

1116 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

1117 
	shóp_t
{ 
	mv
; 
ñem_t
 
	ml
;

1118 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

1119 }
	gh_t
;

1120 
	gt›
,
	g¥e
[
MAXN
],
	gv
[MAXN],
	gli°
[MAXN];

1121 
ñem_t
 
	gmö_l
[
MAXN
];

1123 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

1125 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

1126 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1127 
	}
}

1129 
ñem_t
 
	$¥im
(
n
)

1131 
i
,
j
; 
ñem_t
 
ªt
=0;

1132 
¥i‹ôy_queue
<
hóp_t
> 
q
;

1133 
i
=0; i<
n
; i++Ë
mö_l
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

1134 
h_t
.
v
=h_t.
l
=0; 
q
.
	`push
(h_t);

1135 ; !
q
.
	`em±y
(); )

1137 
h_t
=
q
.
	`t›
(),q.
	`p›
(); 
i
=h_t.
v
;

1138 if(!
v
[
i
])

1139 
v
[
i
]=1,
ªt
+=
h_t
.
l
,
j
=
li°
[i]; j!=-1; j=
e
[j].
n
)

1140 if(!
v
[
e
[
j
].
t
]&&
mö_l
[e[j].t]>e[j].
l
)

1141 
¥e
[
e
[
j
].
t
]=
i
,
mö_l
[
h_t
.
v
Û[j].t]=h_t.
l
Û[j].l,
q
.
	`push
(h_t);

1143  
ªt
;

1144 
	}
}

1146 
	$maö
()

1148 
n
,
m
,
l
,
i
,
x
,
y
; 
ñem_t
 
ªt
;

1149 
	`sˇnf
("%d%d",&
n
,&
m
);

1150 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

1151 
i
=0; i<
m
; i++)

1153 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
);

1154 
	`ö£π
(
x
-1,
y
-1,
l
);

1155 
	`ö£π
(
y
-1,
x
-1,
l
);

1157 
ªt
=
	`¥im
(
n
);

1158 
	`¥ötf
("%d\n",
ªt
);

1160 
	}
}

1163 
	~<c°dio
>

1164 
	tLL
;

1166 
LL
 
	$comb
(
n
,
m
)

1168 
LL
 
ªt
=1; 
i
=
n
;

1169 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

1170  
ªt
;

1171 
	}
}

1174 
	$num2comb
(
n
,
m
,
LL
 
t
,
c
[])

1176 
i
,
j
=1,
p
;

1177 
i
=0; i<
m
; 
c
[i++]=
j
++)

1178 ; 
t
>(
p
=
	`comb
(
n
-
j
,
m
-
i
-1));Å-=p,j++);

1179 
	}
}

1182 
	~<c°dio
>

1185 
	$num2≥rm
(
n
,
t
,
p
[])

1187 
i
,
j
;

1188 
i
=
n
-1; i>=0; i--)

1189 
p
[
i
]=
t
%(
n
-i),t/=n-i;

1190 
i
=
n
-1; i>=0; i--)

1191 
j
=
i
-1; j>=0; j--)

1192 if(
p
[
j
]<ı[
i
])

1193 
p
[
i
]++;

1194 
	}
}

1197 
	~<c°dio
>

1200 
	$≥rm2num
(
n
,
p
[])

1202 
ªt
=1,
k
=1,
i
,
j
;

1203 
i
=
n
-2; i>=0; 
k
*=(n-(i--)))

1204 
j
=
i
+1; j<
n
; j++)

1205 if(
p
[
j
]<p[
i
])

1206 
ªt
+=
k
;

1207  
ªt
;

1208 
	}
}

1212 
	~<c°dio
>

1213 
	~<c°rög
>

1214 
	#MAXS
 8000800

	)

1215 
	#MAXN
 1010

	)

1217 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mv
; }
	ge
[
MAXS
];

1218 
	gli°
[
MAXN
],
	gt›
,
	g°
[
MAXS
],
	gs_t›
,
	gd‚
[MAXN],
	glow
[MAXN],
	gid
,
	gcomp
[MAXN];

1220 
	$s_ö£π
(
f
,
t
,
v
)

1222 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
v
=v;

1223 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1224 
	}
}

1226 
	$ö£π
(
f
,
t
,
v
)

1228 
	`s_ö£π
(
f
,
t
,0);

1229 
	`s_ö£π
(
t
,
f
,0);

1230 
	}
}

1232 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

1235 
	$ªc‹d
(
now
,
n
)

1237 
i
;

1238 
id
++; ;)

1240 
i
=
°
[
s_t›
--];

1241 
comp
[
e
[
i
].
f
]=comp[e[i].
t
]=
id
;

1242 if(
e
[
i
].
f
==
now
) ;

1244 
	}
}

1246 
	$dfs
(
now
,&
˙t
,
n
)

1248 
i
,
t
;

1249 
d‚
[
now
]=
low
[now]=++
˙t
;

1250 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

1251 if(!
e
[
i
].
v
)

1253 
e
[
i
].
v
=e[i^1].v=1;

1254 
t
=
e
[
i
].t;

1255 
°
[++
s_t›
]=
i
;

1256 if(!
d‚
[
t
])

1258 
	`dfs
(
t
,
˙t
,
n
);

1259 
low
[
now
]=
	`mö
÷ow[now],low[
t
]);

1260 if(
low
[
t
]>=
d‚
[
now
])

1261 
	`ªc‹d
(
now
,
n
);

1263 
low
[
now
]=
	`mö
÷ow[now],
d‚
[
t
]);

1265 
	}
}

1267 
	$p_b_comp⁄ít
(
n
)

1269 
i
,
˙t
=0; 
s_t›
=-1,
id
=0;

1270 
	`mem£t
(
°
,0,(st));

1271 
	`mem£t
(
d‚
,0,(dfn));

1272 
i
=0; i<
n
; i++)

1273 if(!
d‚
[
i
])

1274 
	`dfs
(
i
,
˙t
,
n
);

1275 
	}
}

1285 
	~<c°dio
>

1286 
	~<cm©h
>

1287 
	~<c°rög
>

1288 
	~<Æg‹ôhm
>

1289 
usög
 
	g°d
::
s‹t
;

1290 
	#N
 10110

	)

1292 
	slöe
{ 
	mx
,
	my1
,
	my2
,
	mèg
; }
	gl
[
N
<<1];

1293 
	s£g_åì


1295 
	ml
,
	mr
,
	mcﬁ
,
	mÀn
,
	m˙t
,
	mbl
,
	mbr
;

1296 }
	g£gt
[
N
<<2];

1302 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

1303 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

1304 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

1305 
ölöe
 
	$max
(
a
,
b
){ á>b?a:b; 
	}
}

1306 
ölöe
 
	$Àngth
(
l
,
r
){  
co‹
[r]-co‹[l]; 
	}
}

1308 
	gco‹
[
N
<<1],
	gâl
,
	gt›
;

1311 
	$gë_id
(
x
)

1313 
l
,
r
,
m
;

1314 
l
=1,
r
=
t›
;Ü<=r; )

1316 
m
=(
l
+
r
)>>1;

1317 if(
co‹
[
m
]<
x
)

1318 
l
=
m
+1;

1319 if(
co‹
[
m
]>
x
)

1320 
r
=
m
-1;

1322  
m
;

1325 
	}
}

1327 
	$¸óã_åì
(
id
,
l
,
r
)

1329 
m
=(
l
+
r
)>>1;

1330 
£gt
[
id
].
l
ˆ,£gt[id].
r
=r;

1331 
£gt
[
id
].
cﬁ
=£gt[id].
Àn
=0;

1332 
£gt
[
id
].
bl
=£gt[id].
br
=£gt[id].
˙t
=0;

1333 if(
r
-
l
<=1)

1335 
	`¸óã_åì
(
	`L
(
id
),
l
,
m
);

1336 
	`¸óã_åì
(
	`R
(
id
),
m
,
r
);

1337 
	}
}

1339 
	$upd©e
(
id
,
l
,
r
)

1341 if(
£gt
[
id
].
cﬁ
||
r
==
l
)

1343 
£gt
[
id
].
Àn
=
	`Àngth
(
l
,
r
);

1344 
£gt
[
id
].
˙t
=£gt[id].
bl
=£gt[id].
br
=1;

1348 
£gt
[
id
].
Àn
=£gt[
	`L
(id)].Àn+£gt[
	`R
(id)].len;

1349 
£gt
[
id
].
˙t
=£gt[
	`L
(id)].˙t+£gt[
	`R
(id)].cnt;

1350 if(
£gt
[
	`L
(
id
)].
br
&&£gt[
	`R
(id)].
bl
)

1351 
£gt
[
id
].
˙t
--;

1352 
£gt
[
id
].
bl
=£gt[
	`L
(id)].bl;

1353 
£gt
[
id
].
br
=£gt[
	`R
(id)].br;

1355 
	}
}

1358 
	$ö£π_£g
(
id
,
Œ
,
º
)

1360 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

1361 if(
Œ
==
l
&&
º
==
r
)

1362 
£gt
[
id
].
cﬁ
++;

1365 if(
Œ
<
m
)

1366 
	`ö£π_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

1367 if(
º
>
m
)

1368 
	`ö£π_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1369 if(
£gt
[
	`L
(
id
)].
cﬁ
&&£gt[
	`R
(id)].col)

1371 
£gt
[
	`L
(
id
)].
cﬁ
--;

1372 
	`upd©e
(
	`L
(
id
),
l
,
m
);

1373 
£gt
[
	`R
(
id
)].
cﬁ
--;

1374 
	`upd©e
(
	`R
(
id
),
m
,
r
);

1375 
£gt
[
id
].
cﬁ
++;

1378 
	`upd©e
(
id
,
l
,
r
);

1379 
	}
}

1382 
	$dñ_£g
(
id
,
Œ
,
º
)

1384 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

1385 if(
Œ
==
l
&&
º
==
r
)

1386 
£gt
[
id
].
cﬁ
--;

1387 if(
£gt
[
id
].
cﬁ
)

1389 
£gt
[
id
].
cﬁ
--;

1390 if(
Œ
>
l
)

1391 
	`ö£π_£g
(
id
,
l
,
Œ
);

1392 if(
º
<
r
)

1393 
	`ö£π_£g
(
id
,
º
,
r
);

1397 if(
Œ
<
m
)

1398 
	`dñ_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

1399 if(
º
>
m
)

1400 
	`dñ_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1402 
	`upd©e
(
id
,
l
,
r
);

1403 
	}
}

1406 
	$£g_Àn
(
id
,
Œ
,
º
)

1408 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

1409 if(
£gt
[
id
].
cﬁ
||(
Œ
==
l
&&
º
==
r
))

1410  
£gt
[
id
].
Àn
;

1411 if(
Œ
<
m
)

1412 
ªt
+=
	`£g_Àn
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

1413 if(
º
>
m
)

1414 
ªt
+=
	`£g_Àn
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1415  
ªt
;

1416 
	}
}

1419 
	$£g_˙t
(
id
,
Œ
,
º
)

1421 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

1422 if(
£gt
[
id
].
cﬁ
)

1424 if(
l
==
Œ
&&
r
==
º
)

1425  
£gt
[
id
].
˙t
;

1426 if(
Œ
<
m
)

1427 
ªt
+=
	`£g_˙t
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

1428 if(
º
>
m
)

1429 
ªt
+=
	`£g_˙t
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

1430  
ªt
;

1431 
	}
}

1434 
	~<c°dio
>

1435 
	~<c°rög
>

1436 
	~<cm©h
>

1437 
	~<queue
>

1438 
	#öf
 1e8

	)

1439 
	#MAXS
 2000001

	)

1440 
	#MAXN
 1001

	)

1442 
	tñem_t
;

1443 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

1444 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	gö
[MAXN],
	gq
[
MAXS
];

1445 
ñem_t
 
	gmö
[
MAXN
];

1447 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

1449 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

1450 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1451 
	}
}

1453 
boﬁ
 
	$•Á
(
n
,
s
)

1455 
i
,
j
,
l
,
r
;

1456 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö
[i]=
öf
,
ö
[i]=0;

1457 
l
=
r
=
mö
[
s
]=0,
q
[l]=s,
ö
[s]++;

1458 ; 
l
<=
r
; )

1460 
i
=
q
[
l
++],
v
[i]=0;

1461 if(
ö
[
i
]>
n
)  0;

1462 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

1463 if(
mö
[
i
]+
e
[
j
].
l
<mö[e[j].
t
])

1465 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
l
;

1466 if(!
v
[
e
[
j
].
t
])

1468 
v
[
e
[
j
].
t
]=1;

1469 
ö
[
e
[
j
].
t
]++;

1470 
q
[++
r
]=
e
[
j
].
t
;

1475 
	}
}

1479 
	~<c°dio
>

1480 
	~<c°rög
>

1481 
	#MAXN
 100011

	)

1482 
	#MAXC
 11

	)

1483 
	gt›
;

1485 
	$gë_öd
(
x
){  x-'0'; 
	}
}

1486 
	såõ_node
{ 
boﬁ
 
	mis
; 
	mn
[
MAXC
]; }
	gno
[
MAXN
];

1488 
	såõ_åì


1490 
åõ_node
 
	mr
;

1491 
åõ_åì
(){ 
	mr
=
no
[0]; }

1492 
ö£π
(
s
[])

1494 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

1495 
	mi
=0; i<
	ml
; i++)

1497 if(
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]<0)

1499 
	mno
[
t›
].
	mis
=0;

1500 
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]=
t›
++;

1502 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

1504 
	mno
[
p
].
	mis
=1;

1507 
£¨ch
(
s
[])

1509 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

1510 
	mi
=0; i<
	ml
&&
	mp
!=-1; i++)

1511 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

1512  
	mp
!=-1&&
no
[
p
].
is
==1;

1514 }
	gåõ
;

1516 
	$öô
()

1518 
i
,
j
;

1519 
i
=0; i<
MAXN
; i++)

1520 
no
[
i
].
is
=
j
=0; j<
MAXC
; j++)

1521 
no
[
i
].
n
[
j
]=-1;

1522 
t›
=1;

1523 
	}
}

1525 
	$maö
()

1528 
	}
}

1531 
	~<c°dio
>

1532 
	~<c°rög
>

1533 
	#MAXN
 100011

	)

1536 
	suföd


1538 
	mp
[
MAXN
],
	mt
;

1539 
öi
(){ 
mem£t
(
p
,0,(p)); }

1540 
run
(&
x
){ ; 
	mp
[
t
=x]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));}

1541 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

1542 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

1543 }
	guf
;

1546 
	suföd


1548 
	mp
[
N
],
	mt
;

1549 
öô
()

1551 
	mi
=0; i<=
N
; i++)

1552 
	mp
[
i
]=i;

1554 
run
(&
x
)

1556 ; 
	mp
[
t
=
x
]!=x; 
	mx
=
p
[x],p[t]=p[x]);

1558 
is‰õnd
(
i
,
j
)

1560 
run
(
i
);Ñun(
j
);

1561  
	mi
==
j
;

1563 
£t‰õnd
(
i
,
j
)

1565 
run
(
i
);Ñun(
j
);

1566 
	mp
[
i
]=
p
[
j
];

1568 }
	guf
;

1571 
ölöe
 
	$sig
(
x
){  x>0?1:-1; 
	}
}

1572 
ölöe
 
	$abs
(
x
){  x>0?x:-x; 
	}
}

1574 
	suföd


1576 
	mp
[
MAXN
],
	mt
;

1578 
öô
(){ 
mem£t
(
p
,0,(p)); }

1580 
_run
(&
x
)

1582  ; 
	mp
[
t
=
abs
(
x
)]; 
	mx
=
sig
(x)*
p
[abs(x)],p[t]=sig(p[t])*(p[abs(x)]?p[abs(x)]:abs(p[t])));

1585 
_run_bŸh
(&
i
,&
j
)

1587 
_run
(
i
); _run(
j
);

1590 
_£t_side
(
x
,
i
,
j
)

1592 
	mp
[
abs
(
i
)]=
sig
(i)*◊bs(i)=˜bs(
j
)?0:(
x
*j));

1596 
_judge_side
(
x
,
i
,
j
)

1598  ((
	mi
==
x
*
j
)&&
i
);

1601 
£t_‰õnd
(
i
,
j
)

1603 
_run_bŸh
(
i
,
j
);

1604 
_£t_side
(1,
i
,
j
);

1605  !
_judge_side
(-1,
i
,
j
);

1608 
£t_íemy
(
i
,
j
)

1610 
_run_bŸh
(
i
,
j
);

1611 
_£t_side
(-1,
i
,
j
);

1612  !
_judge_side
(1,
i
,
j
);

1615 
is_‰õnd
(
i
,
j
)

1617 
_run_bŸh
(
i
,
j
);

1618  
_judge_side
(1,
i
,
j
);

1621 
is_íemy
(
i
,
j
)

1623 
_run_bŸh
(
i
,
j
);

1624  
_judge_side
(-1,
i
,
j
);

1626 }
	guf
;

1629 
	~<c°dio
>

1630 
	~<c°rög
>

1631 
	~<Æg‹ôhm
>

1632 
	#öf
 0x3fffffff

	)

1633 
	#N
 1001

	)

1634 
	#S
 1000100

	)

1636 
usög
 
«me•a˚
 
	g°d
;

1638 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

1640 
	g¶ack
[
N
],
	gvÆx
[N],
	gvÆy
[N],
	gm©
[N][N],
	gm2y
[N],
	gvx
[N],
	gvy
[N],
	gli°
[N],
	gt›
;

1642 
	$ö£π
(
f
,
t
)

1644 
e
[
t›
].
f
=f,e[t›].
t
=t;

1645 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

1646 
	}
}

1648 
	$föd_∑th
(
now
)

1650 
t
,
i
,
v
;

1651 
vx
[
now
]=1;

1652 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

1654 
t
=
e
[
i
].t;

1655 
v
=
vÆx
[
now
]+
vÆy
[
t
]-
m©
[now][t];

1656 if(!
vy
[
t
]&&
v
==0)

1658 
vy
[
t
]=1;

1659 if(
m2y
[
t
]==-1||
	`föd_∑th
(m2y[t]))

1661 
m2y
[
t
]=
now
;

1665 if(
¶ack
[
t
]>
v
)

1666 
¶ack
[
t
]=
v
;

1669 
	}
}

1671 
	$km_m©ch
(
n
)

1673 
i
,
j
,
k
,
ªt
=0,
d
;

1674 
i
=0; i<
n
; i++)

1676 
m2y
[
i
]=-1;

1677 
vÆx
[
i
]=-
öf
,
vÆy
[i]=0;

1678 
j
=0; j<
n
; j++)

1679 
vÆx
[
i
]=
	`max
(vÆx[i],
m©
[i][
j
]);

1681 
i
=0; i<
n
; i++)

1683 
	`mem£t
(
vx
,0,(vx));

1684 
	`mem£t
(
vy
,0,(vy));

1685 
k
=0; k<
n
; k++)

1686 
¶ack
[
k
]=
öf
;

1687 ; !
	`föd_∑th
(
i
); )

1689 
d
=
öf
;

1690 
k
=0; k<
n
; k++)

1691 if(!
vy
[
k
]&&
¶ack
[k]<
d
)

1692 
d
=
¶ack
[
k
];

1693 
k
=0; k<
n
; k++)

1695 if(
vx
[
k
])

1696 
vÆx
[
k
]-=
d
,
vx
[k]=0;

1697 if(
vy
[
k
])

1698 
vÆy
[
k
]+=
d
,
vy
[k]=0;

1702 
i
=0; i<
n
; i++)

1703 
ªt
+=
vÆx
[
i
]+
vÆy
[i];

1704  
ªt
;

1705 
	}
}

	@template_back/SELF_TEMP/bell_manford.cpp

2 
	~<c°dio
>

4 
	#MAXN
 200

	)

5 
	#öf
 1000000000

	)

6 
	tñem_i
;

14 
	$bñlm™_f‹d
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò*
mö
,*
¥e
)

16 
v
[
MAXN
],
i
,
j
,
k
,
èg
;

17 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

18 
mö
[
s
]=0,
j
=0; j<
n
; j++)

20 
k
=-1,
i
=0; i<
n
; i++)

21 if(!
v
[
i
] && (
k
==-1||
mö
[i]<min[k]))

22 
k
=
i
;

23 
v
[
k
]=1,
i
=0; i<
n
; i++)

24 if(!
v
[
i
] && 
m©
[
k
][i]>=0 && 
mö
[k]+mat[k][i]<min[i])

25 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i];

27 
èg
=1,
j
=0;Åag&&j<=
n
; j++)

28 
èg
=
i
=0; i<
n
; i++)

29 
k
=0; k<
n
; k++)

30 if(
mö
[
k
]+
m©
[k][
i
]<min[i])

31 
mö
[
i
]=mö[
k
]+
m©
[
¥e
[i]=k][i],
èg
=1;

32  
j
<=
n
;

33 
	}
}

37 
	~<c°dio
>

38 
	#öf
 1000000

	)

39 
	#MAXS
 30000

	)

40 
	#MAXN
 500

	)

41 
	tñem_t
;

43 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

44 
	gli°
[
MAXN
],
	gt›
;

45 
ñem_t
 
	gmö
[
MAXN
];

47 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

49 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

50 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

51 
	}
}

53 
	$bñlm™_f‹d
(
n
,
s
)

55 
i
,
èg
,
j
;

56 
i
=0; i<
n
; i++Ë
mö
[i]=
öf
;

57 
mö
[
s
]=
i
=0,
èg
=1; i<=
n
&&tag; i++)

59 
èg
=0,
j
=0; j<
t›
; j++)

60 if(
mö
[
e
[
j
].
f
]+e[j].
l
<mö[e[j].
t
])

61 
mö
[
e
[
j
].
t
]=mö[e[j].
f
]+e[j].
l
,
èg
=1;

63  
i
<=
n
;

64 
	}
}

	@template_back/SELF_TEMP/big_integer.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

4 
	#DIGIT
 4

	)

5 
	#DEPTH
 10000

	)

6 
	#MAXN
 2502

	)

7 
	#SGN
(
x
Ë((x)>0?1:((x)<0?-1:0))

	)

8 
	#ABS
(
x
Ë((x)>0?(x):-(x))

	)

9 
	tbig_num
[
MAXN
+1];

11 
	$ªad
(
big_num
 
a
)

13 
buf
[
MAXN
*
DIGIT
+1],
ch
; 
i
,
j
;

14 
	`mem£t
(
a
,0,()*(
MAXN
+1));

15 if–
	`sˇnf
("%s",&
buf
)==
EOF
 )  0;

16 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

17 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

18 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

19 
i
=1; i<=
a
[0]; i++)

20 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

21 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

22 ;!
a
[a[0]]&&a[0]>1;a[0]--);

24 
	}
}

26 
	$ªad
(
big_num
 
a
,&
sgn
)

28 
°r
[
MAXN
*
DIGIT
+1],
ch
,*
buf
; 
i
,
j
;

29 
	`mem£t
(
a
,0,()*(
MAXN
+1));

30 if–
	`sˇnf
("%s",&
°r
)==
EOF
 )  0;

31 
buf
=
°r
,
sgn
=1;

32 if(*
buf
=='-'Ë
sgn
=-1,buf++;

33 
a
[0]=
	`°æí
(
buf
),
i
=a[0]/2-1; i>=0; i--)

34 
ch
=
buf
[
i
],buf[i]=buf[
a
[0]-1-i],buf[a[0]-1-i]=ch;

35 
j
=
a
[0],a[0]=◊[0]+
DIGIT
-1)/DIGIT; j<a[0]*DIGIT; 
buf
[j++]='0');

36 
i
=1; i<=
a
[0]; i++)

37 
a
[
i
]=0,
j
=0; j<
DIGIT
; j++)

38 
a
[
i
]˜[i]*10+
buf
[i*
DIGIT
-1-
j
]-'0';

39 ;!
a
[a[0]]&&a[0]>1;a[0]--);

40 if(
a
[0]==1 && !a[1]Ë
sgn
=0;

42 
	}
}

44 
	$wrôe
(c⁄° 
big_num
 
a
)

46 
i
,
j
;

47 
	`¥ötf
("%d",
a
[
i
=a[0]]),i--; i; i--)

48 
j
=
DEPTH
/10; j; j/=10)

49 
	`¥ötf
("%d",
a
[
i
]/
j
%10);

50 
	}
}

52 
	$comp
(
big_num
 
a
,big_num 
b
)

54 
i
;

55 if(
a
[0]!=
b
[0]) á[0]-b[0];

56 
i
=
a
[0]; i; i--)

57 if(
a
[
i
]!=
b
[i])

58  
a
[
i
]-
b
[i];

60 
	}
}

62 
	$comp
(
big_num
 
a
,c⁄° 
b
)

64 
c
[12]={1};

65 
c
[1]=
b
; c[c[0]]>=
DEPTH
; c[c[0]+1]=c[c[0]]/DEPTH,c[c[0]]%=DEPTH,c[0]++);

66  
	`comp
(
a
,
c
);

67 
	}
}

69 
	$comp
(
big_num
 
a
,
c
,
d
,big_num 
b
)

71 
i
,
t
=0,
O
=-
DEPTH
*2;

72 if(
b
[0]-
a
[0]<
d
 && 
c
)

74 
i
=
b
[0]; i>
d
; i--)

76 
t
Ò*
DEPTH
+
a
[
i
-
d
]*
c
-
b
[i];

77 if(
t
>0)  1;

78 if(
t
<
O
)  0;

80 
i
=
d
; i; i--)

82 
t
Ò*
DEPTH
-
b
[
i
];

83 if(
t
>0)  1;

84 if(
t
<
O
)  0;

86  
t
>0;

87 
	}
}

89 
	$add
(
big_num
 
a
,big_num 
b
)

91 
i
;

92 
i
=1; i<=
b
[0]; i++)

93 if((
a
[
i
]+=
b
[i])>=
DEPTH
)

94 
a
[
i
]-=
DEPTH
,a[i+1]++;

95 if(
b
[0]>=
a
[0])á[0]=b[0];

96 ; 
a
[
i
]>=
DEPTH
 && i<=a[0];á[i]-=DEPTH,i++,a[i]++ );

97 
a
[0]+=(a[a[0]+1]>0);

98 
	}
}

100 
	$add
(
big_num
 
a
,
b
)

102 
i
=1;

103 
a
[1]+=
b
;á[
i
]>=
DEPTH
 && i<a[0];á[i+1]+=a[i]/DEPTH,a[i]%=DEPTH,i++);

104 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

105 
	}
}

107 
	$sub
(
big_num
 
a
,big_num 
b
)

109 
i
;

110 
i
=1; i<=
b
[0]; i++)

111 if((
a
[
i
]-=
b
[i])<0)

112 
a
[
i
+1]--,a[i]+=
DEPTH
;

113 ; 
a
[
i
]<0;á[i]+=
DEPTH
,i++,a[i]--);

114 ; !
a
[a[0]]&&a[0]>1;á[0]--);

115 
	}
}

117 
	$sub
(
big_num
 
a
,
b
)

119 
i
=1;

120 
a
[1]-=
b
;á[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

121 ; !
a
[a[0]]&&a[0]>1;á[0]--);

122 
	}
}

124 
	$sub
(
big_num
 
a
,big_num 
b
,
c
,
d
)

126 
i
,
O
=
b
[0]+
d
;

127 
i
=1+
d
; i<=
O
; i++)

128 if((
a
[
i
]-=
b
[i-
d
]*
c
)<0)

129 
a
[
i
+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH;

130 ; 
a
[
i
]<0;á[i+1]+=◊[i]-
DEPTH
+1)/DEPTH,a[i]-=(a[i]-DEPTH+1)/DEPTH*DEPTH,i++);

131 ; !
a
[a[0]]&&a[0]>1;á[0]--);

132 
	}
}

134 
	$mul
(
big_num
 
a
,big_num 
b
,big_num 
c
)

136 
i
,
j
;

137 
	`mem£t
(
c
,0,()*(
MAXN
+1));

138 
c
[0]=
a
[0]+
b
[0]-1,
i
=1; i<=a[0]; i++)

139 
j
=1;j<=
b
[0];j++)

140 if((
c
[
i
+
j
-1]+=
a
[i]*
b
[j])>=
DEPTH
)

141 
c
[
i
+
j
]+=c[i+j-1]/
DEPTH
,c[i+j-1]%=DEPTH;

142 
c
[0]+=(c[c[0]+1]>0); !c[c[0]]&&c[0]>1; c[0]--);

143 
	}
}

145 
	$mul
(
big_num
 
a
,c⁄° 
b
)

147 
i
;

148 
a
[1]*=
b
,
i
=2; i<=a[0]; i++)

150 
a
[
i
]*=
b
;

151 if(
a
[
i
-1]>=
DEPTH
)

152 
a
[
i
]+˜[i-1]/
DEPTH
,a[i-1]%=DEPTH;

154 ; 
a
[a[0]]>=
DEPTH
;á[a[0]+1]=a[a[0]]/DEPTH,a[a[0]]%=DEPTH,a[0]++);

155 ; !
a
[a[0]] &&á[0]>1;á[0]--);

156 
	}
}

158 
	$div
(
big_num
 
c
,big_num 
a
,big_num 
b
)

160 
h
,
l
,
m
,
i
;

161 
	`mem£t
(
c
,0,()*(
MAXN
+1));

162 
c
[0]=(
b
[0]<
a
[0]+1)?(a[0]-b[0]+2):1;

163 
i
=
c
[0]; i; 
	`sub
(
a
,
b
,c[i]=
m
,i-1),i--)

164 
h
=
DEPTH
-1,
l
=0,
m
=(h+l+1)>>1; h>l; m=(h+l+1)>>1)

165 if–
	`comp
(
b
,
m
,
i
-1,
a
ËË
h
=m-1;

166 
l
=
m
;

167 ; !
c
[c[0]]&&c[0]>1; c[0]--);

168 
c
[0]=c[0]>1?c[0]:1;

169 
	}
}

171 
	$div
(
big_num
 
a
,c⁄° 
b
,& 
c
)

173 
i
;

174 
c
=0,
i
=
a
[0]; i; c=c*
DEPTH
+a[i],a[i]=c/
b
,c%=b,i--);

175 ; !
a
[a[0]]&&a[0]>1;á[0]--);

176 
	}
}

178 
	$sqπ
(
big_num
 
b
,big_num 
a
)

180 
h
,
l
,
m
,
i
;

181 
	`mem£t
(
b
,0,()*(
MAXN
+1));

182 
i
=
b
[0]=(
a
[0]+1)>>1; i; 
	`sub
◊,b,
m
,i-1),b[i]+=m,i--)

183 
h
=
DEPTH
-1,
l
=0,
b
[
i
]=
m
=(h+l+1)>>1; h>l; b[i]=m=(h+l+1)>>1)

184 if(
	`comp
(
b
,
m
,
i
-1,
a
)Ë
h
=m-1;

185 
l
=
m
;

186 ; !
b
[b[0]]&&b[0]>1; b[0]--);

187 
i
=1; i<=
b
[0]; b[i++]>>=1);

188 
	}
}

190 
	$Àngth
(
big_num
 
a
)

192 
t
,
ªt
;

193 
ªt
=(
a
[0]-1)*
DIGIT
,
t
=a[a[0]];Å;Å/=10,ret++);

194  
ªt
>0?ret:1;

195 
	}
}

197 
	$digô
(
big_num
 
a
,
b
)

199 
i
,
ªt
;

200 
ªt
=
a
[(
b
-1)/
DIGIT
+1],
i
=(b-1)%DIGIT; i;Ñet/=10,i--);

201  
ªt
%10;

202 
	}
}

204 
	$zî⁄um
(
big_num
 
a
)

206 
ªt
,
t
;

207 
ªt
=0; !
a
[ret+1];Ñet++);

208 
t
=
a
[
ªt
+1],ªt*=
DIGIT
; !(t%10);Å/=10,ret++);

209  
ªt
;

210 
	}
}

212 
	$comp
(
t
[],
l
,
h
,
d
)

214 
i
,
j
,
tmp
;

215 
i
=
l
; i<=
h
; i++)

216 
tmp
=
i
,
j
=2;Åmp>1; j++)

217 !(
tmp
%
j
))

218 
t
[
j
]+=
d
,
tmp
/=j;

219 
	}
}

221 
	$c⁄vît
(
t
[],
h
,
big_num
 
a
)

223 
i
,
j
,
tmp
=1;

224 
	`mem£t
(
a
,0,()*(
MAXN
+1));

225 
a
[0]˜[1]=1,
i
=2; i<=
h
; i++)

226 if(
t
[
i
])

227 
j
=
t
[
i
]; j; 
tmp
*=i,j--)

228 if(
tmp
*
i
>
DEPTH
)

229 
	`mul
(
a
,
tmp
),tmp=1;

230 
	`mul
(
a
,
tmp
);

231 
	}
}

233 c⁄° 
	gMMM
=10000;

234 
	$combö©i⁄
(
big_num
 
a
,
m
,
n
)

236 
t
[
MMM
]={0};

237 
	`comp
(
t
,
n
+1,
m
,1);

238 
	`comp
(
t
,2,
m
-
n
,-1);

241 
	`c⁄vît
(
t
,
m
,
a
);

242 
	}
}

244 
	$≥rmuèti⁄
(
big_num
 
a
,
m
,
n
)

246 
i
,
t
=1;

247 
	`mem£t
(
a
,0,()*(
MAXN
+1));

248 
a
[0]=a[1]=1;

249 
i
=
m
-
n
+1; i<=m; 
t
*=i++)

250 if(
t
*
i
>
DEPTH
)

251 
	`mul
(
a
,
t
),t=1;

252 
	`mul
(
a
,
t
);

253 
	}
}

	@template_back/SELF_TEMP/cmp_geometry.cpp

3 
	~<c°dio
>

4 
	~<cm©h
>

6 
	tñem_t
;

7 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; };

9 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

11  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

12 
	}
}

13 
poöt
 
	$öãr£˘i⁄
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

15 
poöt
 
ªt
=
a
;

16 
ñem_t
 
up
,
dw
,
t
;

17 
up
=
	`xmu…
(
c
,
d
,c,
a
);

18 
dw
=
	`xmu…
(
a
,
b
,
c
,
d
);

19 
t
=
up
/
dw
;

20 
ªt
.
x
+=(
b
.x-
a
.x)*
t
;

21 
ªt
.
y
+=(
b
.y-
a
.y)*
t
;

22  
ªt
;

23 
	}
}

27 
	~<c°dio
>

28 
	~<cm©h
>

29 
	#MAXN
 10001

	)

30 
	#ïs
 1e-8

	)

31 
	tñem_t
;

33 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp
[
MAXN
];

35 
ölöe
 
	$mö
(
ñem_t
 
a
,ñem_à
b
){ á<b?a:b; 
	}
}

36 
ölöe
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á<b?b:a; 
	}
}

37 
ölöe
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
,poöà
d
)

39  (
b
.
x
-
a
.x)*(
d
.
y
-
c
.y)-(b.y-a.y)*(d.x-c.x);

40 
	}
}

41 
ölöe
 
	$zîo
(
x
){  x>=-
ïs
&&x<=eps;

42 
	}
}

44 
	$ö_pﬁyg⁄
(
poöt
 
a
,
n
,poöà
p
[],
⁄_edge
)

46 
poöt
 
low_p
,
high_p
;

47 
i
,
˙t
=0;

48 
i
=0; i<
n
; i++)

50 if(
p
[
i
].
y
<p[(i+1)%
n
].yË
low_p
ı[i],
high_p
=p[(i+1)%n];

51 
high_p
=
p
[
i
],
low_p
ı[(i+1)%
n
];

52 if(
	`xmu…
(
a
,
low_p
,a,
high_p
)>
ïs
&&a.
y
>=low_p.y&&a.y<high_p.y)

53 
˙t
++;

54 if(
	`zîo
(
	`xmu…
(
a
,
low_p
,a,
high_p
))&&a.
y
>ˆow_p.y&&a.y<=high_p.y&&a.
x
>=
	`mö
÷ow_p.x,high_p.x)&&a.x<=
	`max
(low_p.x,high_p.x))

55  
⁄_edge
;

57  
˙t
&1;

58 
	}
}

	@template_back/SELF_TEMP/comb2num.cpp

3 
	~<c°dio
>

4 
	tLL
;

6 
LL
 
	$comb
(
n
,
m
)

8 
LL
 
ªt
=1; 
i
=
n
;

9 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

10  
ªt
;

11 
	}
}

13 
LL
 
	$comb2num
(
n
,
m
,
c
[])

15 
LL
 
ªt
=
	`comb
(
n
,
m
); 
i
,
j
;

16 
i
=0; i<
m
; i++)

17 
ªt
-=
	`comb
(
n
-
c
[
i
],
m
-i);

18  
ªt
;

19 
	}
}

	@template_back/SELF_TEMP/converx_hull.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	~<Æg‹ôhm
>

5 
	#ïs
 1e-8

	)

6 
	#öf
 100000000

	)

7 
	#MAXN
 50100

	)

8 
usög
 
	g°d
::
s‹t
;

9 
	tñem_t
;

11 
	spoöt
{ 
ñem_t
 
	mx
,
	my
; }
	gp1
,
	gp
[
MAXN
],
	gc⁄vîx
[MAXN];

12 
ölöe
 
ñem_t
 
	$max
(
ñem_t
 
a
,ñem_à
b
){ á>b?a:b; 
	}
}

13 
ölöe
 
	$zîo
(
ñem_t
 
x
){  x>=-
ïs
&&x<Ûps; 
	}
}

15 
ölöe
 
ñem_t
 
	$Àn
(
poöt
 
a
,poöà
b
)

17  
	`sqπ
((
b
.
x
-
a
.x)*(b.x-a.x)+(b.
y
-a.y)*(b.y-a.y));

18 
	}
}

19 
ölöe
 
ñem_t
 
	$xmu…
(
poöt
 
a
,poöà
b
,poöà
c
)

21  (
a
.
x
-
c
.x)*(
b
.
y
-c.y)-(a.y-c.y)*(b.x-c.x);

22 
	}
}

24 
	$cmp
(
poöt
 
a
,poöà
b
)

26 
ñem_t
 
x
;

27 
x
=
	`xmu…
(
a
,
b
,
p1
);

28 if(
	`zîo
(
x
))

29  
	`Àn
(
a
,
p1
)<Àn(
b
,p1);

30  
x
>0;

31 
	}
}

33 
	$_c⁄vîx
(
n
,
poöt
 
p
[],poöà
c⁄
[])

35 
i
,
s
;

36 
p1
.
x
ı1.
y
=
öf
;

37 
i
=0; i<
n
; i++)

39 if(
p
[
i
].
y
<
p1
.y)

40 
p1
=
p
[
i
];

41 if(
p
[
i
].
y
==
p1
.y&&p[i].
x
<p1.x)

42 
p1
=
p
[
i
];

44 
	`s‹t
(
p
,p+
n
,
cmp
);

45 
c⁄
[0]=
p
[0],c⁄[1]ı[1],
s
=2;

46 
i
=0; i<
n
; 
c⁄
[
s
++]=
p
[i++])

47 ; 
s
>1&&
	`xmu…
(
c⁄
[s-1],
p
[
i
],c⁄[s-2])<=
ïs
; s--);

49  
s
;

50 
	}
}

	@template_back/SELF_TEMP/date.cpp

2 
	~<c°dio
>

4 
	gdays
[12]={31,28,31,30,31,30,31,31,30,31,30,31};

5 
	sd©e
{ 
	my
,
	mm
,
	md
; };

8 
ölöe
 
	$À≠
(
yór
)

10  (
yór
%4==0 && year%100!=0)||0==year%400;

11 
	}
}

14 
ölöe
 
	$ÀgÆ
(
d©e
 
a
)

16 if(
a
.
m
<0 ||á.m>12)  0;

17 if(
a
.
m
==2Ëá.
d
>0 &&á.d<=28+
	`À≠
◊.
y
);

18  
a
.
d
>0 &&á.d<=
days
[a.
m
-1];

19 
	}
}

22 
ölöe
 
	$d©ecmp
(
d©e
 
a
,d©ê
b
)

24 if(
a
.
y
 !
b
.y) á.y-b.y;

25 if(
a
.
m
 !
b
.m) á.m-b.m;

26  
a
.
d
-
b
.d;

27 
	}
}

32 
	$wìkday
(
d©e
 
a
)

34 
tm
=
a
.
m
>=3? (a.m-2):(a.m+10);

35 
ty
=
a
.
m
>=3?á.
y
:(a.y-1);

36  (
ty
+ty/4-ty/100+ty/400+()(2.6*
tm
-0.2)+
a
.
d
)%7;

37 
	}
}

41 
	$d©e2öt
(
d©e
 
a
)

43 
ªt
=
a
.
y
*365+◊.y-1)/4-◊.y-1)/100+◊.y-1)/400,
i
;

44 
days
[1]+=
	`À≠
(
a
.
y
);

45 
i
=0; i<
a
.
m
-1; 
ªt
+=
days
[i++]);

46 
days
[1]=28;

47  
ªt
+
a
.
d
;

48 
	}
}

53 
d©e
 
	$öt2d©e
(
a
)

55 
d©e
 
ªt
;

56 
ªt
.
y
=
a
/146097*400;

57 
a
%=146097;á>=365+
	`À≠
(
ªt
.
y
);á-=365+leap(ret.y),ret.y++);

58 
days
[1]+=
	`À≠
(
ªt
.
y
);

59 
ªt
.
m
=1; 
a
>=
days
[ret.m-1];á-=days[ret.m-1],ret.m++);

60 
days
[1]=28;

61 
ªt
.
d
=
a
+1;

62  
ªt
;

63 
	}
}

	@template_back/SELF_TEMP/dijkstra.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

5 c⁄° 
	gMAXN
=1001;

6 c⁄° 
	göf
=1000000000;

7 
	tñem_i
;

8 
	gmö1
[
MAXN
],
	gmö2
[MAXN],
	gm©
[MAXN][MAXN];

14 
	$dijk°ø
(
n
,
ñem_i
 
m©
[][
MAXN
],
s
,ñem_ò
mö
[],
¥e
[])

16 
v
[
MAXN
],
i
,
j
,
k
;

17 
i
=0;i<
n
;i++Ë
v
[i]=0,
mö
[i]=
öf
,
¥e
[i]=-1;

18 
mö
[
s
]=0,
i
=0;i<
n
;i++){

19 
k
=-1,
j
=0;j<
n
;j++)

20 i‡(!
v
[
j
]&&((
k
==-1)||
mö
[j]<min[k]))

21 
k
=
j
;

22 
v
[
k
]=1,
j
=0;j<
n
;j++)

23 if(!
v
[
j
] && 
mö
[
k
]+
m©
[k][j]<min[j])

24 
mö
[
j
]=mö[
k
]+
m©
[
¥e
[j]=k][j];

26 
	}
}

33 
	~<c°dio
>

34 
	~<queue
>

35 
	#MAXN
 1000

	)

36 
	#MAXS
 2000000

	)

37 
	#öf
 100000000

	)

38 
usög
 
«me•a˚
 
	g°d
;

39 
	tñem_t
;

40 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

41 
	shóp_t


43 
	mv
; 
ñem_t
 
	ml
;

44 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

45 }
	gh_t
;

46 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	g¥e
[MAXN];

47 
ñem_t
 
	gmö_l
[
MAXN
];

48 
	g¥i‹ôy_queue
<
	ghóp_t
> 
	gq
;

50 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

52 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

53 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

54 
	}
}

56 
	$dijk°ø
(
n
,
s
)

58 
i
;

59 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö_l
[i]=
öf
,
¥e
[i]=-1;

60 
mö_l
[
h_t
.
v
=
s
]=h_t.
l
=0; 
q
.
	`push
(h_t);

61 ; !
q
.
	`em±y
();)

63 
h_t
=
q
.
	`t›
(),q.
	`p›
();

64 if(!
v
[
h_t
.v])

65 
v
[
h_t
.v]=1,
i
=
li°
[h_t.v]; i!=-1; i=
e
[i].
n
)

66 if(!
v
[
e
[
i
].
t
]&&
mö_l
[e[i].
f
]+e[i].
l
<min_l[e[i].t])

67 
¥e
[
e
[
i
].
t
]Û[i].
f
,
mö_l
[
h_t
.
v
Û[i].t]=h_t.
l
=mö_l[e[i].f]+e[i].l,
q
.
	`push
(h_t);

69 
	}
}

	@template_back/SELF_TEMP/find_components.cpp

4 
	~<c°dio
>

5 
	~<c°rög
>

6 
	#MAXN
 5010

	)

7 
	#MAXS
 100000

	)

8 
	tñem_t
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

11 
	gv
[
MAXN
],
	gli°
[MAXN],
	gid
[MAXN],
	g°
[MAXN],
	gd‚
[MAXN],
	glow
[MAXN],
	g˙t
,
	gt›
;

13 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

15 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$£¨ch
(
n
,
now
,&
ªt
)

21 
i
;

22 
d‚
[
°
[°[0]++]=
now
]=
low
[now]=++
˙t
; 
v
[now]=1;

23 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

24 if(!
d‚
[
e
[
i
].
t
])

26 
	`£¨ch
(
n
,
e
[
i
].
t
,
ªt
);

27 if(
low
[
e
[
i
].
t
]<low[
now
])Üow[now]=low[e[i].t];

29 if(
d‚
[
e
[
i
].
t
]<d‚[
now
])

31 if(
v
[
e
[
i
].
t
]&&
d‚
[e[i].t]<
low
[
now
])

32 
low
[
now
]=
d‚
[
e
[
i
].
t
];

34 if(
low
[
now
]==
d‚
[now])

35 
ªt
++; 
°
[°[0]]!=
now
; 
id
[°[--°[0]]]Ùë,
v
[st[st[0]]]=0);

36 
	}
}

38 
	$föd_comp⁄íts
(
n
)

40 
ªt
=0,
i
;

41 
i
=0; i<=
n
+1; i++Ë
°
[i]=-1,
d‚
[i]=0;

42 
°
[0]=1,
˙t
=
i
=0; i<
n
; i++)

43 if(!
d‚
[
i
])

44 
	`£¨ch
(
n
,
i
,
ªt
);

45  
ªt
;

46 
	}
}

	@template_back/SELF_TEMP/floyd_warshall.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

5 
	tñem_i
;

6 
	#MAXN
 200

	)

7 
	#öf
 1000000000

	)

8 
ñem_i
 
	gm©
[
MAXN
][MAXN],
	gmö
[MAXN][MAXN];

9 
	g¥e
[
MAXN
][MAXN];

15 
	$Êoyd_w¨shÆl
(
n
,
ñem_i
 
m©
[][
MAXN
],ñem_ò
mö
[][MAXN],
¥e
[][MAXN])

17 
i
,
j
,
k
;

18 
i
=0;i<
n
;i++)

19 
j
=0;j<
n
;j++)

20 
mö
[
i
][
j
]=
m©
[i][j],
¥e
[i][j]=(i==j)?-1:i;

21 
k
=0;k<
n
;k++)

22 
i
=0;i<
n
;i++)

23 
j
=0;j<
n
;j++)

24 if(
mö
[
i
][
k
]+mö[k][
j
]<min[i][j])

25 
mö
[
i
][
j
]=mö[i][
k
]+mö[k][j],
¥e
[i][j]=pre[k][j];

26 
	}
}

	@template_back/SELF_TEMP/gen_comb.cpp

2 
	~<c°dio
>

3 
	#MAXN
 1000

	)

5 
	gd©
[
MAXN
],
	gtmp
[MAXN];

7 
	$show
(
n
,
tmp
[])

9 
i
;

10 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

11 
	`puts
("");

12 
	}
}

14 
	$gícomb
(
s
,
e
,
m
,
˙t
)

16 
i
;

17 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

19 
i
=
s
; i+
m
-
˙t
<=
e
; i++)

20 
tmp
[
˙t
++]=
d©
[
i
],
	`gícomb
(i+1,
e
,
m
,cnt),cnt--;

21 
	}
}

23 
	$gí_comb
(
n
,
m
)

25 
i
;

26 
i
=0; i<
n
; i++Ë
d©
[i]=i+1;

27 
	`gícomb
(0,
n
,
m
,0);

28 
	}
}

	@template_back/SELF_TEMP/gen_perm.cpp

2 
	~<c°dio
>

3 
	#MAXN
 1000

	)

5 
	gèg
[
MAXN
],
	gtmp
[MAXN],
	ga
[MAXN];

7 
	$show
(
m
,
tmp
[])

9 
i
;

10 
i
=0; i<
m
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

11 
	`puts
("");

12 
	}
}

14 
	$gí≥rm
(
n
,
m
,
˙t
)

16 
i
;

17 if(
˙t
==
m
Ë
	`show
(m,
tmp
);

19 
i
=0; i<
n
; i++)

20 if(!
èg
[
i
])

21 
èg
[
i
]=1,
tmp
[
˙t
]=
a
[i],
	`gí≥rm
(
n
,
m
,cnt+1),tag[i]=0;

22 
	}
}

24 
	$gí_≥rm
(
n
,
m
)

26 
i
;

27 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
èg
[i]=0;

28 
	`gí≥rm
(
n
,
m
,0);

29 
	}
}

	@template_back/SELF_TEMP/gen_perm_swap.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

4 
	#MAXN
 1000

	)

6 
	gpos
[
MAXN
],
	gdú
[MAXN],
	ga
[MAXN];

8 
	$show
(
n
,
tmp
[])

10 
i
;

11 
i
=0; i<
n
; i++Ë
	`¥ötf
("%d ",
tmp
[i]);

12 
	`puts
("");

13 
	}
}

15 
	$_gí_≥rm_sw≠
(
n
,
l
)

17 
p1
,
p2
,
i
,
t
;

18 if(
l
==
n
Ë
	`show
“,
a
);

21 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

22 
i
=0; i<
l
; i++)

24 
p2
=(
p1
=
pos
[
l
])+
dú
[l];

25 
t
=
a
[
p2
],a[p2]˜[
p1
],a[p1]=t;

26 
pos
[
a
[
p1
]-1]ı1,pos[a[
p2
]-1]=p2;

27 
	`_gí_≥rm_sw≠
(
n
,
l
+1);

30 
dú
[
l
]=-dir[l];

31 
	}
}

33 
	$gí_≥rm_sw≠
(
n
)

35 
i
;

36 
i
=0; i<
n
; i++Ë
a
[i]=i+1,
dú
[i]=-1,
pos
[i]=i;

37 
	`_gí_≥rm_sw≠
(
n
,0);

38 
	}
}

	@template_back/SELF_TEMP/hungary.cpp

5 
	~<c°dio
>

6 
	#MAXN
 220

	)

7 
	#MAXS
 100000

	)

8 
	tñem_t
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

11 
	gt›
,
	gm©ch1
[
MAXN
],
	gq
[
MAXS
],
	gm©ch2
[MAXN],
	gli°
[MAXN],
	gtmp2
[MAXN];

13 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

15 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

16 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

17 
	}
}

19 
	$hung¨y
(
m
,
n
)

21 
i
,
j
,
k
,
l
,
r
,
mx
=(
m
>
n
)?m:n,
ªt
=0,
x
,
y
,
t
;

22 
i
=0; i<
mx
; i++Ë
m©ch1
[i]=
m©ch2
[i]=-1;

23 
i
=0; i<
m
; 
ªt
+=(
m©ch1
[i++]>-1))

25 
j
=0; j<
n
; j++Ë
tmp2
[j]=-1;

26 
q
[
l
=
r
=0]=
i
;Ü<Ù&&
m©ch1
[i]<0;Ü++)

27 
k
=
q
[
l
],
j
=
li°
[k]; j!=-1&&
m©ch1
[
i
]<0; j=
e
[j].
n
)

28 if(
tmp2
[
e
[
j
].
t
]<0)

30 
q
[++
r
]=
m©ch2
[
e
[
j
].
t
],
tmp2
[e[j].t]=
k
;

31 if(
q
[
r
]<0)

32 
y
=
e
[
j
].
t
; y>=0; y=t)

33 
m©ch2
[
y
]=
x
=
tmp2
[y],
t
=
m©ch1
[x],match1[x]=y;

36  
ªt
;

37 
	}
}

43 
	~<c°dio
>

44 
	#N
 1001

	)

45 
	#S
 1000001

	)

47 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

48 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N];

50 
	$föd
(
now
)

52 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

54 
to
=
e
[
i
].
t
;

55 if(!
y
[
to
])

57 
y
[
to
]=1;

58 if(
m©ch
[
to
]<0||
	`föd
(match[to]))

60 
m©ch
[
to
]=
now
;

66 
	}
}

68 
	$hung¨y
(
m
,
n
)

70 
ªt
=0;

71 
	`mem£t
(
m©ch
,-1,(match));

72 
i
=0; i<
m
; i++)

74 
	`mem£t
(
y
,0,(y));

75 if(
	`föd
(
i
))

76 
ªt
++;

78  
ªt
;

79 
	}
}

	@template_back/SELF_TEMP/max_clique.cpp

1 
	~<c°dio
>

2 
	#MAXN
 60

	)

9 
	$˛ique
(
n
,
u
[],
m©
[][
MAXN
],
size
,& 
max
,& 
bb
,
ªs
[],
º
[],
c
[])

11 
i
,
j
,
vn
,
v
[
MAXN
];

12 if(
n
)

14 if(
size
+
c
[
u
[0]]<=
max
) ;

15 
i
=0; i<
n
+
size
-
max
 && i<n; ++i)

17 
j
=
i
+1,
vn
=0; j<
n
; ++j)

18 if(
m©
[
u
[
i
]][u[
j
]])

19 
v
[
vn
++]=
u
[
j
];

20 
º
[
size
]=
u
[
i
];

21 
	`˛ique
(
vn
,
v
,
m©
,
size
+1,
max
,
bb
,
ªs
,
º
,
c
);

22 if(
bb
) ;

25 if(
size
>
max
)

27 
max
=
size
;

28 
i
=0; i<
size
; ++i)

29 
ªs
[
i
]=
º
[i];

30 
bb
=1;

32 
	}
}

34 
	$max˛ique
(
n
,
m©
[][
MAXN
],
ªt
[])

36 
max
=0,
bb
,
c
[
MAXN
],
i
,
j
,
vn
,
v
[MAXN],
º
[MAXN];

37 
c
[
i
=
n
-1]=0; i>=0; --i)

39 
vn
=0,
j
=
i
+1; j<
n
; ++j)

40 if(
m©
[
i
][
j
])

41 
v
[
vn
++]=
j
;

42 
bb
=0, 
º
[0]=
i
;

43 
	`˛ique
(
vn
,
v
,
m©
,1,
max
,
bb
,
ªt
,
º
,
c
);

44 
c
[
i
]=
max
;

46  
max
;

47 
	}
}

	@template_back/SELF_TEMP/maxflow_dicnic.cpp

3 
	~<c°dio
>

4 
	#MAXN
 20100

	)

5 
	#MAXS
 880100

	)

6 
	#öf
 0x7fffffff

	)

7 
	tñem_t
;

9 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	mw
; }
	ge
[
MAXS
];

10 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gœy
[MAXN];

12 
	$ö£π
(
f
,
t
,
ñem_t
 
w
)

14 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
w
=w;

15 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

16 
	}
}

18 
ölöe
 
	$™ti
(
öd
){  ind^1; 
	}
}

19 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

21 
	$bfs
(
s
,
t
,
n
)

23 
l
,
r
,
i
,
j
;

24 
i
=0; i<
n
; i++Ë
œy
[i]=-1;

25 
q
[
l
=
r
=0]=
s
; 
œy
[s]=0;

26 ; 
l
<=
r
; )

28 
i
=
q
[
l
++];

29 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

31 if(
œy
[
e
[
j
].
t
]<0&&e[j].
w
>0)

32 
œy
[
e
[
j
].
t
]ˆay[
i
]+1,
q
[++
r
]=e[j].t;

35  
œy
[
t
]>=0;

36 
	}
}

38 
ñem_t
 
	$dfs
(
now
,
t
,
ñem_t
 
now_Êow
)

40 
âl
=0,
sögÀ
,
i
,
j
;

41 if(
now
==
t
Ë 
now_Êow
;

42 
i
=
li°
[
now
]; i!=-1&&
âl
<
now_Êow
; i=
e
[i].
n
)

43 if(
œy
[
e
[
i
].
t
]=ˆay[
now
]+1&&e[i].
w
>0&&(
sögÀ
=
	`dfs
”[i].t,t,
	`mö
”[i].w,
now_Êow
-
âl
))))

45 
e
[
i
].
w
-=
sögÀ
;

46 
e
[
	`™ti
(
i
)].
w
+=
sögÀ
;

47 
âl
+=
sögÀ
;

49 if(
âl
==0Ë
œy
[
now
]=-1;

50  
âl
;

51 
	}
}

53 
ñem_t
 
	$di˙ic
(
s
,
t
,
n
)

55 
ñem_t
 
ªt
=0;

56 
	`bfs
(
s
,
t
,
n
))

57 
ªt
+=
	`dfs
(
s
,
t
,
öf
);

58  
ªt
;

59 
	}
}

	@template_back/SELF_TEMP/mcmf.cpp

3 
	~<c°dio
>

4 
	#öf
 1000000000

	)

5 
	#MAXN
 200

	)

6 
	#MAXS
 160000

	)

8 
	sedge
{ 
	mf
,
	mt
,
	mc
,
	mÊow
,
	mn
; }
	ge
[
MAXS
];

9 
	gli°
[
MAXN
],
	gt›
,
	gq
[
MAXS
],
	gv
[MAXN],
	g¥e
[MAXN],
	gmö
[MAXN],
	gmax_Êow
;

11 
	$s_ö£π
(
f
,
t
,
c
,
Êow
)

13 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
c
=c,e[t›].
Êow
=flow;

14 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

15 
	}
}

17 
	$ö£π
(
f
,
t
,
c
,
Êow
)

19 
	`s_ö£π
(
f
,
t
,
c
,
Êow
);

20 
	`s_ö£π
(
t
,
f
,-
c
,0);

21 
	}
}

23 
	$•Á
(
n
,
s
,
t
)

25 
i
,
l
,
r
,
j
;

26 
i
=0; i<
n
; i++Ë
¥e
[i]=-1,
mö
[i]=
öf
,
v
[i]=0;

27 
q
[
l
=
r
=0]=
s
;

28 
mö
[
s
]=0,
v
[s]=1;

29 ; 
l
<=
r
; )

31 
i
=
q
[
l
++];

32 
v
[
i
]=0;

33 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

34 if(
e
[
j
].
Êow
>0&&
mö
[
i
]+e[j].
c
<mö[e[j].
t
])

36 
¥e
[
e
[
j
].
t
]=j;

37 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
c
;

38 if(!
v
[
e
[
j
].
t
])

39 
v
[
e
[
j
].
t
]=1,
q
[++
r
]=e[j].t;

42  
mö
[
t
]!=
öf
;

43 
	}
}

45 
	$mcmf
(
n
,
s
,
t
)

47 
ªt
=0,
i
,
now_Êow
;

48 
max_Êow
=0;

49 ; 
	`•Á
(
n
,
s
,
t
); )

51 
now_Êow
=
öf
;

52 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

53 if(
now_Êow
>
e
[
i
].
Êow
)

54 
now_Êow
=
e
[
i
].
Êow
;

55 
i
=
¥e
[
t
]; i!=-1; iıª[
e
[i].
f
])

56 
e
[
i
].
Êow
-=
now_Êow
,e[i^1].flow+=now_flow;

57 
max_Êow
+=
now_Êow
;

58 
ªt
+=
now_Êow
*
mö
[
t
];

60  
ªt
;

61 
	}
}

65 
	~<c°dio
>

66 
	~<cm©h
>

67 
	~<ve˘‹
>

68 
	~<queue
>

69 
	~<utûôy
>

71 
usög
 
«me•a˚
 
	g°d
;

72 c⁄° 
	gN
 = 460;

73 c⁄° 
	göf
 = 0x3fffffff;

75 
	sedge
 {

76 
	mto
,
	mco°
,
	mÊow
,
	m™ti
;

77 
edge
(){}

78 
edge
(
t
,
c
,
f
,
a
):
to
—),
co°
(c),
Êow
(f),
™ti
(a){}

81 
	gve˘‹
<
	gedge
> 
	ggr
[
N
+2];

82 
	gqueue
<> 
	gq
;

83 
	g∑ú
<,> 
	g¥e
[
N
];

84 
	gdis
[
N
],
	gvis
[N],
	gmax_Êow
;

86 
	$ö£π
(
f
,
t
,
c
,
Êow
) {

87 
gr
[
f
].
	`push_back
(
	`edge
(
t
,
c
,
Êow
,gr[t].
	`size
()));

88 
gr
[
t
].
	`push_back
(
	`edge
(
f
,-
c
,0,gr[f].
	`size
()-1));

89 
	}
}

91 
	$•Á
(
n
,
s
,
t
) {

92 ; !
q
.
	`em±y
(); ) {

93 
q
.
	`p›
();

95 
i
=0; i<
n
; i++) {

96 
dis
[
i
]=
öf
,
vis
[i]=0;

97 
¥e
[
i
]=
	`make_∑ú
(-1,-1);

99 
q
.
	`push
(
s
);

100 
dis
[
s
]=0,
vis
[s]=1;

101 ; !
q
.
	`em±y
();) {

102 
now
=
q
.
	`‰⁄t
();

103 
q
.
	`p›
();

104 
vis
[
now
]=0;

105 
i
=0; i<
gr
[
now
].
	`size
(); i++) {

106 
to
=
gr
[
now
][
i
].to;

107 if(
gr
[
now
][
i
].
Êow
>0 && 
dis
[
to
]>dis[now]+gr[now][i].
co°
) {

108 
dis
[
to
]=dis[
now
]+
gr
[now][
i
].
co°
;

109 
¥e
[
to
]=
	`make_∑ú
(
now
,
i
);

110 if(!
vis
[
to
]) {

111 
vis
[
to
]=1;

112 
q
.
	`push
(
to
);

117  
¥e
[
t
].
fú°
>=0;

118 
	}
}

120 
	$mcmf
(
n
,
s
,
t
) {

121 
ªt
=0;

122 
max_Êow
=0;

123 ; 
	`•Á
(
n
,
s
,
t
);) {

124 
now_Êow
=
öf
;

125 
i
=
t
; 
¥e
[i].
fú°
 != -1; i=pre[i].first) {

126 
x
=
¥e
[
i
].
fú°
,
y
ıª[i].
£c⁄d
;

127 
now_Êow
=
	`mö
“ow_Êow,
gr
[
x
][
y
].
Êow
);

129 
i
=
t
; 
¥e
[i].
fú°
 != -1; i=pre[i].first) {

130 
x
=
¥e
[
i
].
fú°
,
y
ıª[i].
£c⁄d
;

131 
to
=
gr
[
x
][
y
].to;

132 
gr
[
x
][
y
].
Êow
-=
now_Êow
;

133 
gr
[
to
][gr[
x
][
y
].
™ti
].
Êow
+=
now_Êow
;

135 
max_Êow
+=
now_Êow
;

136 
ªt
+=
now_Êow
*
dis
[
t
];

138  
ªt
;

139 
	}
}

	@template_back/SELF_TEMP/miller_rabbin_pollar_rho.cpp

1 
	~<c°dio
>

2 
	~<c°dlib
>

3 
	~<˘ime
>

4 
	#N
 1001

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gli°
[
N
];

9 
	gt›
;

11 
LL
 
	$mulmod
(
LL
 
a
,LL 
b
,LL 
n
)

13 
LL
 
ªt
=0;

14 
a
˜%
n
;

15 ; 
b
; )

17 if(
b
&1)

19 
ªt
Ùë+
a
;

20 if(
ªt
>
n
)Ñet-=n;

22 
a
<<=1;

23 if(
a
>
n
)

24 
a
-=
n
;

25 
b
>>=1;

27  
ªt
;

28 
	}
}

30 
LL
 
	$expmod
(
LL
 
a
,LL 
b
,LL 
n
)

32 
LL
 
ªt
=1;

33 ; 
b
;)

35 if(
b
&1)

36 
ªt
=
	`mulmod
‘ë,
a
,
n
);

37 
a
=
	`mulmod
◊,a,
n
);

38 
b
>>=1;

40  
ªt
;

41 
	}
}

43 
	$mûÀr_øbbö
(
LL
 
n
,
times
=8)

45 if(
n
==2)  1;

46 if((
n
&1)==0||n<2)  0;

47 
LL
 
m
=
n
-1,
x
,
y
;

48 
k
=0;

49 ; (
m
&1)==0; m>>=1,
k
++);

50 
i
=0; i<
times
; i++)

52 
x
=
	`ønd
()%(
n
-2)+2;

53 
y
=
x
=
	`expmod
(x,
m
,
n
);

54 if(
x
==1) ;

55 
j
=0; j<
k
; j++)

57 
y
=
	`mulmod
(
x
,x,
n
);

58 if(
y
==1&&
x
!=
n
-1&&x!=1)  0;

59 
x
=
y
;

61 if(
y
!=1)  0;

64 
	}
}

66 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

68 
LL
 
	$pﬁœr_rho
(
LL
 
n
,
c
)

70 
LL
 
x
,
y
,
p
;

71 
i
=1,
k
=2;

72 
y
=
x
=
	`ønd
()%(
n
-1)+1;

75 
i
++;

76 
x
=(
	`mulmod
(x,x,
n
)+
c
)%n;

77 if(
x
==
y
Ë 
n
;

78 
p
=
	`gcd
(
x
-
y
,
n
);

79 if(1<
p
&&p<
n
) Ö;

80 if(
i
==
k
)

82 
k
<<=1;

83 
y
=
x
;

86 
	}
}

89 
	$föd_Ác
(
LL
 
n
,
c
)

91 if(
n
==1)

93 if(
	`mûÀr_øbbö
(
n
))

95 
li°
[
t›
++]=
n
;

98 
LL
 
x
=
n
;

99 
nc
=
c
;

100 ; 
x
>=
n
; )

101 
x
=
	`pﬁœr_rho
(
n
,
nc
--);

102 
	`föd_Ác
(
n
/
x
,
c
);

103 
	`föd_Ác
(
x
,
c
);

104 
	}
}

	@template_back/SELF_TEMP/modular_exponent.cpp

1 
	~<c°dio
>

2 
	tLL
;

5 
LL
 
	$exp⁄ít
(
LL
 
m
,LL 
a
)

7 
LL
 
ªt
=1;

8 ; 
a
;á>>=1,
m
*=m)

9 if(
a
&1)

10 
ªt
*=
m
;

11  
ªt
;

12 
	}
}

15 
LL
 
	$moduœr_exp⁄ít
(
LL
 
a
,LL 
b
,LL 
m
)

17 
LL
 
ªt
=1;

18 ; 
b
; b>>=1,
a
=◊%
m
*(a%m))%m)

19 if(
b
&1)

20 
ªt
Ùë%
m
*(
a
%m)%m;

21  
ªt
;

22 
	}
}

	@template_back/SELF_TEMP/modular_linear_system.cpp

1 
	~<c°dio
>

2 
	#MAXN
 100

	)

3 
	tLL
;

5 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

6 
LL
 
	$lcm
(
LL
 
a
,LL 
b
){ á*b/
	`gcd
◊,b); 
	}
}

9 
LL
 
	$ext_gcd
(
LL
 
a
,LL 
b
,LL &
x
,LL &
y
)

11 if(!
b
Ë 
x
=1,
y
=0,
a
;

12 
LL
 
g
=
	`ext_gcd
(
b
,
a
%b,
y
,
x
);

13 
y
-=
a
/
b
*
x
;

14  
g
;

15 
	}
}

19 
LL
 
	$moduœr_löór
(
LL
 
a
,LL 
b
,LL 
m
,LL 
sﬁ
[])

21 
LL
 
d
,
e
,
x
,
y
,
i
;

22 
d
=
	`ext_gcd
(
a
,
m
,
x
,
y
);

23 if(
b
%
d
)  0;

24 
e
=(
x
*(
b
/
d
)%
m
+m)%m;

25 
i
=0; i<
d
; i++)

26 
sﬁ
[
i
]=(
e
+i*(
m
/
d
))%m;

27  
d
;

28 
	}
}

36 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

38 
LL
 
d
,
x
,
y
,
ªt
=0,
m
,
n
=1,
i
;

39 
i
=0; i<
k
; i++Ë
n
*=
w
[i];

40 
i
=0; i<
k
; i++)

42 
m
=
n
/
w
[
i
];

43 
d
=
	`ext_gcd
(
w
[
i
],
m
,
x
,
y
);

44 
ªt
=‘ë+
y
*
m
*
b
[
i
])%
n
;

46  (
ªt
+
n
)%n;

47 
	}
}

55 
LL
 
	$moduœr_löór_sy°em
(
LL
 
b
[],LL 
w
[],LL 
k
)

57 
LL
 
t
,
d
,
x
,
y
,
ªt
=
b
[0],
m
=
w
[0],
â
,
Ác
,
√xtm
,
i
;

58 
i
=1; i<
k
; i++)

60 
d
=
	`ext_gcd
(
m
,
w
[
i
],
x
,
y
);

61 
t
=
b
[
i
]-
ªt
;

62 if(
t
%
d
)  -1;

63 
â
=
w
[
i
]/
d
;

64 
Ác
=(
x
*(
t
/
d
)%
â
+tt)%tt;

65 
√xtm
=
m
/
d
*
w
[
i
];

66 
ªt
=(‘ë+
m
*
Ác
)%
√xtm
+nextm)%nextm;

67 
m
=
√xtm
;

69  (
ªt
%
m
+m)%m;

70 
	}
}

	@template_back/SELF_TEMP/mst_kruskal.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	~<queue
>

6 
	#MAXN
 10010

	)

7 
	#MAXS
 200020

	)

8 
	#öf
 1000000000

	)

9 
	tñem_t
;

10 
usög
 
«me•a˚
 
	g°d
;

12 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
;

13 
‰õnd
 
boﬁ
 
	m›î©‹
<(
edge
 
	ma
,edgê
	mb
){ á.
	ml
>b.l; }

14 }
	ge
[
MAXS
],
	ge_t
;

15 
	suföd


17 
	mp
[
MAXN
],
	mt
;

18 
öi
(){ 
mem£t
(
p
,0,(p)); }

19 
run
(&
x
){ ; 
	mp
[
t
=x]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));}

20 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

21 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

22 }
	guf
;

23 
	gt›
,
	gli°
[
MAXN
];

25 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

27 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

28 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

29 
	}
}

31 
ñem_t
 
	$kruskÆ
(
n
)

33 
¥i‹ôy_queue
<
edge
> 
q
;

34 
uf
.
	`öi
(); 
ñem_t
 
ªt
=0;

35 
i
,
j
;

36 
i
=0; i<
n
; i++)

37 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

38 
q
.
	`push
(
e
[
j
]);

39 
i
=0; i<
n
-1&&!
q
.
	`em±y
(); )

41 
e_t
=
q
.
	`t›
(); q.
	`p›
();

42 if(!
uf
.
	`is‰õnd
(
e_t
.
f
+1,e_t.
t
+1))

43 
ªt
+=
e_t
.
l
,
uf
.
	`£t‰õnd
”_t.
f
+1,e_t.
t
+1),
i
++;

45  
ªt
;

46 
	}
}

48 
	$maö
()

50 
n
,
i
,
m
,
l
,
x
,
y
; 
ñem_t
 
ªt
;

51 
	`sˇnf
("%d%d",&
n
,&
m
);

52 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

53 
i
=0; i<
m
; i++)

54 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
),
	`ö£π
(x-1,y-1,l),insert(y-1,x-1,l);

56 
ªt
=
	`kruskÆ
(
n
);

57 
	`¥ötf
("%d\n",
ªt
);

59 
	}
}

	@template_back/SELF_TEMP/mst_prim.cpp

3 
	~<c°dio
>

4 
	~<queue
>

5 
usög
 
«me•a˚
 
	g°d
;

6 
	#MAXN
 10010

	)

7 
	#MAXS
 200020

	)

8 
	#öf
 1000000000

	)

9 
	tñem_t
;

11 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

12 
	shóp_t
{ 
	mv
; 
ñem_t
 
	ml
;

13 
‰õnd
 
boﬁ
 
	m›î©‹
<(
hóp_t
 
	ma
,hóp_à
	mb
){ á.
	ml
>b.l; }

14 }
	gh_t
;

15 
	gt›
,
	g¥e
[
MAXN
],
	gv
[MAXN],
	gli°
[MAXN];

16 
ñem_t
 
	gmö_l
[
MAXN
];

18 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

20 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

21 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

22 
	}
}

24 
ñem_t
 
	$¥im
(
n
)

26 
i
,
j
; 
ñem_t
 
ªt
=0;

27 
¥i‹ôy_queue
<
hóp_t
> 
q
;

28 
i
=0; i<
n
; i++Ë
mö_l
[i]=
öf
,
v
[i]=0,
¥e
[i]=-1;

29 
h_t
.
v
=h_t.
l
=0; 
q
.
	`push
(h_t);

30 ; !
q
.
	`em±y
(); )

32 
h_t
=
q
.
	`t›
(),q.
	`p›
(); 
i
=h_t.
v
;

33 if(!
v
[
i
])

34 
v
[
i
]=1,
ªt
+=
h_t
.
l
,
j
=
li°
[i]; j!=-1; j=
e
[j].
n
)

35 if(!
v
[
e
[
j
].
t
]&&
mö_l
[e[j].t]>e[j].
l
)

36 
¥e
[
e
[
j
].
t
]=
i
,
mö_l
[
h_t
.
v
Û[j].t]=h_t.
l
Û[j].l,
q
.
	`push
(h_t);

38  
ªt
;

39 
	}
}

41 
	$maö
()

43 
n
,
m
,
l
,
i
,
x
,
y
; 
ñem_t
 
ªt
;

44 
	`sˇnf
("%d%d",&
n
,&
m
);

45 
t›
=
i
=0; i<
n
; i++Ë
li°
[i]=-1;

46 
i
=0; i<
m
; i++)

48 
	`sˇnf
("%d%d%d",&
x
,&
y
,&
l
);

49 
	`ö£π
(
x
-1,
y
-1,
l
);

50 
	`ö£π
(
y
-1,
x
-1,
l
);

52 
ªt
=
	`¥im
(
n
);

53 
	`¥ötf
("%d\n",
ªt
);

55 
	}
}

	@template_back/SELF_TEMP/multi_hungary.cpp

1 
	~<c°dio
>

2 
	#N
 1001

	)

3 
	#S
 100001

	)

5 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

6 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N][N],
	g˙t
[N],
	glim
[N];

8 
	$ö£π
(
f
,
t
)

10 
e
[
t›
].
f
=f,e[t›].
t
=t;

11 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

12 
	}
}

14 
	$föd
(
now
)

16 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

18 
to
=
e
[
i
].to;

19 if(!
y
[
to
])

21 
v
[
to
]=1;

22 if(
˙t
[
to
]<
lim
[to])

24 
m©ch
[
to
][
˙t
[to]++]=
now
;

27 
j
=0; j<
˙t
[
to
]; j++)

28 if(
	`föd
(
m©ch
[
to
][
j
]))

30 
m©ch
[
to
][
j
]=
now
;

36 
	}
}

38 
	$mu…i_hung¨y
(
m
,
n
)

40 
ªt
=0;

41 
	`mem£t
(
˙t
,0,(cnt));

42 
i
=0; i<
m
; i++)

44 
	`mem£t
(
y
,0,(y));

45 if(
	`föd
(
i
))

46 
ªt
++;

48  
ªt
;

49 
	}
}

	@template_back/SELF_TEMP/num2comb.cpp

1 
	~<c°dio
>

2 
	tLL
;

4 
LL
 
	$comb
(
n
,
m
)

6 
LL
 
ªt
=1; 
i
=
n
;

7 ; 
i
>
n
-
m
; i--Ë
ªt
*=i,ret/=n-i+1;

8  
ªt
;

9 
	}
}

12 
	$num2comb
(
n
,
m
,
LL
 
t
,
c
[])

14 
i
,
j
=1,
p
;

15 
i
=0; i<
m
; 
c
[i++]=
j
++)

16 ; 
t
>(
p
=
	`comb
(
n
-
j
,
m
-
i
-1));Å-=p,j++);

17 
	}
}

	@template_back/SELF_TEMP/num2perm.cpp

1 
	~<c°dio
>

4 
	$num2≥rm
(
n
,
t
,
p
[])

6 
i
,
j
;

7 
i
=
n
-1; i>=0; i--)

8 
p
[
i
]=
t
%(
n
-i),t/=n-i;

9 
i
=
n
-1; i>=0; i--)

10 
j
=
i
-1; j>=0; j--)

11 if(
p
[
j
]<ı[
i
])

12 
p
[
i
]++;

13 
	}
}

	@template_back/SELF_TEMP/partition_tree.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 100011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	g≥rm
[
N
],
	gd©
[N],
	g˙t
[20][N],
	gåì
[20][N];

7 
	$cmp
(
a
,
b
){ á<b; 
	}
}

9 
	$buûd
(
c
,
l
,
r
)

11 
mid
=(
l
+
r
)>>1,
lc
=mid-l+1,
Õ
ˆ,
Ω
=mid+1;

12 if(
l
==
r
) ;

13 
i
=
l
; i<=
mid
; i++)

14 if(
≥rm
[
i
]<≥rm[
mid
])

15 
lc
--;

16 
i
=
l
; i<=
r
; i++)

18 if(
i
==
l
)

19 
˙t
[
c
][
i
]=0;

21 
˙t
[
c
][
i
]=cnt[c][i-1];

22 if(
åì
[
c
][
i
]==
≥rm
[
mid
])

24 if(
lc
>0)

26 
lc
--;

27 
˙t
[
c
][
i
]++;

28 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

31 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

33 if(
åì
[
c
][
i
]<
≥rm
[
mid
])

35 
˙t
[
c
][
i
]++;

36 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

39 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

41 
	`buûd
(
c
+1,
l
,
mid
);

42 
	`buûd
(
c
+1,
mid
+1,
r
);

43 
	}
}

45 
	$quîy
(
c
,
l
,
r
,
ql
,
qr
,
k
)

47 if(
l
==
r
Ë 
≥rm
[l];

48 
c1
,
c2
=
˙t
[
c
][
qr
],
mid
=(
l
+
r
)>>1,
d1
=
ql
-l,
d2
=qr-ql+1;

49 if(
ql
==
l
Ë
c1
=0;

50 
c1
=
˙t
[
c
][
ql
-1];

51 
c2
-=
c1
;

52 if(
k
<=
c2
)

53  
	`quîy
(
c
+1,
l
,
mid
,l+
c1
,l+c1+
c2
-1,
k
);

55  
	`quîy
(
c
+1,
mid
+1,
r
,mid+1+
d1
-
c1
,mid+d1+
d2
-c1-
c2
,
k
-c2);

56 
	}
}

	@template_back/SELF_TEMP/perm2num.cpp

1 
	~<c°dio
>

4 
	$≥rm2num
(
n
,
p
[])

6 
ªt
=1,
k
=1,
i
,
j
;

7 
i
=
n
-2; i>=0; 
k
*=(n-(i--)))

8 
j
=
i
+1; j<
n
; j++)

9 if(
p
[
j
]<p[
i
])

10 
ªt
+=
k
;

11  
ªt
;

12 
	}
}

	@template_back/SELF_TEMP/point_binary_connect_component.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	#MAXS
 8000800

	)

6 
	#MAXN
 1010

	)

8 
	sedge
{ 
	mf
,
	mt
,
	mn
,
	mv
; }
	ge
[
MAXS
];

9 
	gli°
[
MAXN
],
	gt›
,
	g°
[
MAXS
],
	gs_t›
,
	gd‚
[MAXN],
	glow
[MAXN],
	gid
,
	gcomp
[MAXN];

11 
	$s_ö£π
(
f
,
t
,
v
)

13 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
v
=v;

14 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

15 
	}
}

17 
	$ö£π
(
f
,
t
,
v
)

19 
	`s_ö£π
(
f
,
t
,0);

20 
	`s_ö£π
(
t
,
f
,0);

21 
	}
}

23 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

26 
	$ªc‹d
(
now
,
n
)

28 
i
;

29 
id
++; ;)

31 
i
=
°
[
s_t›
--];

32 
comp
[
e
[
i
].
f
]=comp[e[i].
t
]=
id
;

33 if(
e
[
i
].
f
==
now
) ;

35 
	}
}

37 
	$dfs
(
now
,&
˙t
,
n
)

39 
i
,
t
;

40 
d‚
[
now
]=
low
[now]=++
˙t
;

41 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

42 if(!
e
[
i
].
v
)

44 
e
[
i
].
v
=e[i^1].v=1;

45 
t
=
e
[
i
].t;

46 
°
[++
s_t›
]=
i
;

47 if(!
d‚
[
t
])

49 
	`dfs
(
t
,
˙t
,
n
);

50 
low
[
now
]=
	`mö
÷ow[now],low[
t
]);

51 if(
low
[
t
]>=
d‚
[
now
])

52 
	`ªc‹d
(
now
,
n
);

54 
low
[
now
]=
	`mö
÷ow[now],
d‚
[
t
]);

56 
	}
}

58 
	$p_b_comp⁄ít
(
n
)

60 
i
,
˙t
=0; 
s_t›
=-1,
id
=0;

61 
	`mem£t
(
°
,0,(st));

62 
	`mem£t
(
d‚
,0,(dfn));

63 
i
=0; i<
n
; i++)

64 if(!
d‚
[
i
])

65 
	`dfs
(
i
,
˙t
,
n
);

66 
	}
}

	@template_back/SELF_TEMP/segment_tree.cpp

8 
	~<c°dio
>

9 
	~<cm©h
>

10 
	~<c°rög
>

11 
	~<Æg‹ôhm
>

12 
usög
 
	g°d
::
s‹t
;

13 
	#N
 10110

	)

15 
	slöe
{ 
	mx
,
	my1
,
	my2
,
	mèg
; }
	gl
[
N
<<1];

16 
	s£g_åì


18 
	ml
,
	mr
,
	mcﬁ
,
	mÀn
,
	m˙t
,
	mbl
,
	mbr
;

19 }
	g£gt
[
N
<<2];

25 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

26 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

27 
ölöe
 
	$mö
(
a
,
b
){ á<b?a:b; 
	}
}

28 
ölöe
 
	$max
(
a
,
b
){ á>b?a:b; 
	}
}

29 
ölöe
 
	$Àngth
(
l
,
r
){  
co‹
[r]-co‹[l]; 
	}
}

31 
	gco‹
[
N
<<1],
	gâl
,
	gt›
;

34 
	$gë_id
(
x
)

36 
l
,
r
,
m
;

37 
l
=1,
r
=
t›
;Ü<=r; )

39 
m
=(
l
+
r
)>>1;

40 if(
co‹
[
m
]<
x
)

41 
l
=
m
+1;

42 if(
co‹
[
m
]>
x
)

43 
r
=
m
-1;

45  
m
;

48 
	}
}

50 
	$¸óã_åì
(
id
,
l
,
r
)

52 
m
=(
l
+
r
)>>1;

53 
£gt
[
id
].
l
ˆ,£gt[id].
r
=r;

54 
£gt
[
id
].
cﬁ
=£gt[id].
Àn
=0;

55 
£gt
[
id
].
bl
=£gt[id].
br
=£gt[id].
˙t
=0;

56 if(
r
-
l
<=1)

58 
	`¸óã_åì
(
	`L
(
id
),
l
,
m
);

59 
	`¸óã_åì
(
	`R
(
id
),
m
,
r
);

60 
	}
}

62 
	$upd©e
(
id
,
l
,
r
)

64 if(
£gt
[
id
].
cﬁ
||
r
==
l
)

66 
£gt
[
id
].
Àn
=
	`Àngth
(
l
,
r
);

67 
£gt
[
id
].
˙t
=£gt[id].
bl
=£gt[id].
br
=1;

71 
£gt
[
id
].
Àn
=£gt[
	`L
(id)].Àn+£gt[
	`R
(id)].len;

72 
£gt
[
id
].
˙t
=£gt[
	`L
(id)].˙t+£gt[
	`R
(id)].cnt;

73 if(
£gt
[
	`L
(
id
)].
br
&&£gt[
	`R
(id)].
bl
)

74 
£gt
[
id
].
˙t
--;

75 
£gt
[
id
].
bl
=£gt[
	`L
(id)].bl;

76 
£gt
[
id
].
br
=£gt[
	`R
(id)].br;

78 
	}
}

81 
	$ö£π_£g
(
id
,
Œ
,
º
)

83 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

84 if(
Œ
==
l
&&
º
==
r
)

85 
£gt
[
id
].
cﬁ
++;

88 if(
Œ
<
m
)

89 
	`ö£π_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

90 if(
º
>
m
)

91 
	`ö£π_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

92 if(
£gt
[
	`L
(
id
)].
cﬁ
&&£gt[
	`R
(id)].col)

94 
£gt
[
	`L
(
id
)].
cﬁ
--;

95 
	`upd©e
(
	`L
(
id
),
l
,
m
);

96 
£gt
[
	`R
(
id
)].
cﬁ
--;

97 
	`upd©e
(
	`R
(
id
),
m
,
r
);

98 
£gt
[
id
].
cﬁ
++;

101 
	`upd©e
(
id
,
l
,
r
);

102 
	}
}

105 
	$dñ_£g
(
id
,
Œ
,
º
)

107 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=(l+r)>>1;

108 if(
Œ
==
l
&&
º
==
r
)

109 
£gt
[
id
].
cﬁ
--;

110 if(
£gt
[
id
].
cﬁ
)

112 
£gt
[
id
].
cﬁ
--;

113 if(
Œ
>
l
)

114 
	`ö£π_£g
(
id
,
l
,
Œ
);

115 if(
º
<
r
)

116 
	`ö£π_£g
(
id
,
º
,
r
);

120 if(
Œ
<
m
)

121 
	`dñ_£g
(
	`L
(
id
),
Œ
,
	`mö
(
m
,
º
));

122 if(
º
>
m
)

123 
	`dñ_£g
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

125 
	`upd©e
(
id
,
l
,
r
);

126 
	}
}

129 
	$£g_Àn
(
id
,
Œ
,
º
)

131 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

132 if(
£gt
[
id
].
cﬁ
||(
Œ
==
l
&&
º
==
r
))

133  
£gt
[
id
].
Àn
;

134 if(
Œ
<
m
)

135 
ªt
+=
	`£g_Àn
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

136 if(
º
>
m
)

137 
ªt
+=
	`£g_Àn
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

138  
ªt
;

139 
	}
}

142 
	$£g_˙t
(
id
,
Œ
,
º
)

144 
l
=
£gt
[
id
].l,
r
=£gt[id].r,
m
=÷+r)>>1,
ªt
=0;

145 if(
£gt
[
id
].
cﬁ
)

147 if(
l
==
Œ
&&
r
==
º
)

148  
£gt
[
id
].
˙t
;

149 if(
Œ
<
m
)

150 
ªt
+=
	`£g_˙t
(
	`L
(
id
),
Œ
,
	`mö
(
º
,
m
));

151 if(
º
>
m
)

152 
ªt
+=
	`£g_˙t
(
	`R
(
id
),
	`max
(
Œ
,
m
),
º
);

153  
ªt
;

154 
	}
}

	@template_back/SELF_TEMP/spfa.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

4 
	~<cm©h
>

5 
	~<queue
>

6 
	#öf
 1e8

	)

7 
	#MAXS
 2000001

	)

8 
	#MAXN
 1001

	)

10 
	tñem_t
;

11 
	sedge
{ 
	mf
,
	mt
,
	mn
; 
ñem_t
 
	ml
; }
	ge
[
MAXS
];

12 
	gli°
[
MAXN
],
	gt›
=0,
	gv
[MAXN],
	gö
[MAXN],
	gq
[
MAXS
];

13 
ñem_t
 
	gmö
[
MAXN
];

15 
	$ö£π
(
f
,
t
,
ñem_t
 
l
)

17 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
boﬁ
 
	$•Á
(
n
,
s
)

23 
i
,
j
,
l
,
r
;

24 
i
=0; i<
n
; i++Ë
v
[i]=0,
mö
[i]=
öf
,
ö
[i]=0;

25 
l
=
r
=
mö
[
s
]=0,
q
[l]=s,
ö
[s]++;

26 ; 
l
<=
r
; )

28 
i
=
q
[
l
++],
v
[i]=0;

29 if(
ö
[
i
]>
n
)  0;

30 
j
=
li°
[
i
]; j!=-1; j=
e
[j].
n
)

31 if(
mö
[
i
]+
e
[
j
].
l
<mö[e[j].
t
])

33 
mö
[
e
[
j
].
t
]=mö[
i
]+e[j].
l
;

34 if(!
v
[
e
[
j
].
t
])

36 
v
[
e
[
j
].
t
]=1;

37 
ö
[
e
[
j
].
t
]++;

38 
q
[++
r
]=
e
[
j
].
t
;

43 
	}
}

	@template_back/SELF_TEMP/suffix_array.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	#N
 100001

	)

6 
	gs
[
N
];

7 
	gß
[
N
],
	gsb
[N],
	g˙t
[N],
	gønk
[N],
	gd©
[N],
	gdp
[N][20],
	gheight
[N];

8 
	$equÆ
(
i
,
j
,
l
,*
y
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

10 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

12 
	$ødix_s‹t
(
n
,
m
,
l
,*
x
,*
y
)

14 
k
,
i
;

15 
k
=0,
i
=
n
-
l
; i<n; i++Ë
y
[k++]=i;

16 
i
=0; i<
n
; i++)

17 if(
ß
[
i
]>=
l
Ë
y
[
k
++]=sa[i]-l;

18 
	`mem£t
(
˙t
,0,(cnt));

19 
i
=0; i<
n
; i++Ë
˙t
[
x
[i]]++;

20 
i
=1; i<
m
; i++Ë
˙t
[i]+=cnt[i-1];

21 
i
=
n
-1; i>=0; i--Ë
ß
[--
˙t
[
x
[
y
[i]]]]=y[i];

22 
	}
}

24 
	$da
(
n
,
m
)

26 *
t
,*
x
=
ønk
,*
y
=
sb
,
l
,
k
,
i
;

27 
i
=0; i<
n
; i++Ë
x
[i]=
s
[i],
ß
[i]=i;

28 
	`ødix_s‹t
(
n
,
m
,0,
x
,
y
);

29 
k
=
l
=1; k<
n
;Ü<<=1)

31 
	`ødix_s‹t
(
n
,
m
,
l
,
x
,
y
);

32 
t
=
x
,x=
y
,y=t;

33 
x
[
ß
[0]]=0,
k
=1;

34 
i
=1; i<
n
; i++)

35 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
l
,
y
)?
k
-1:k++;

36 
m
=
k
;

38 
i
=0; i<
n
; i++Ë
ønk
[
ß
[i]]=i;

39 
	}
}

41 
	$ˇlc_height
(
n
)

43 
k
=0;

44 
i
=0; i<
n
-1; i++)

46 
k
=(k>0)?k-1:0;

47 
j
=
ß
[
ønk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

48 
height
[
ønk
[
i
]]=
k
;

50 
height
[0]=0;

51 
	}
}

53 
	$RMQ
(
n
)

55 
k
=(
	`log
(1.0*
n
)/log(2.0)),
a
,
b
;

56 
i
=1; i<=
n
; i++)

57 
d©
[
i
]=
height
[i-1],
dp
[i][0]=i;

58 
j
=1; j<=
k
; j++)

59 
i
=1; i+
	`B
(
j
)-1<=
n
; i++)

61 
a
=
dp
[
i
][
j
-1];

62 
b
=
dp
[
i
+
	`B
(
j
-1)][j-1];

63 if(
d©
[
a
]<d©[
b
]Ë
dp
[
i
][
j
]=a;

64 
dp
[
i
][
j
]=
b
;

66 
	}
}

68 
	$RMQ_quîy
(
a
,
b
)

70 
k
=(
	`log
(1.0*(
b
-
a
+1))/log(2.0));

71 
a
=
dp
[a][
k
],
b
=dp[b-
	`B
(k)+1][k];

72  
d©
[
a
]>d©[
b
]?b:a;

73 
	}
}

75 
	$l˝
(
a
,
b
)

77 
t
;

78 
a
=
ønk
[a],
b
=rank[b];

79 if(
a
>
b
Ë
t
=a,a=b,b=t;

80  
height
[
	`RMQ_quîy
(
a
+1,
b
)];

81 
	}
}

	@template_back/SELF_TEMP/suffix_auto_mation.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	~<ve˘‹
>

6 
	~<Æg‹ôhm
>

7 
	#N
 2000100

	)

8 
	#X
 26

	)

10 
usög
 
«me•a˚
 
	g°d
;

12 
	snode
 {

13 
	mf
,
	ml
,
	mnum
,
	mnx
[
X
],
	mÊag
;

14 
node
() {

15 
	mf
=-1,
	ml
=0,
	mnum
=0,
	mÊag
=-1;

16 
	mi
=0; i<
	mX
; i++) {

17 
	mnx
[
i
]=-1;

20 }
	gno
[
N
];

22 
	gT
,
	gèû
,
	ghód
,
	gt›
;

23 
	gs
[
N
],
	gqs
[N];

24 
	gve˘‹
<> 
	gvec
[
N
];

26 
	$ö£π
(
x
,
l
) {

27 
p
=
èû
,
q
=
t›
++;

28 
èû
=
q
;

29 
no
[
q
].
l
=l;

30 
no
[
q
].
num
=1;

31 
p
!=-1 && 
no
[p].
nx
[
x
]==-1) {

32 
no
[
p
].
nx
[
x
]=
q
;

33 
p
=
no
[p].
f
;

35 if(
p
==-1) {

36 
no
[
q
].
f
=
hód
;

39 if(
no
[no[
p
].
nx
[
x
]].
l
==no[p].l+1) {

40 
no
[
q
].
f
Úo[
p
].
nx
[
x
];

43 
u
=
t›
++,
≈
=
no
[
p
].
nx
[
x
];

44 
no
[
u
]Úo[
≈
];

45 
no
[
u
].
num
=0;

46 
no
[
u
].
l
Úo[
p
].l+1;

47 
no
[
≈
].
f
Úo[
q
].f=
u
;

48 ; 
p
!=-1 && 
no
[p].
nx
[
x
]==
≈
;ÖÚo[p].
f
) {

49 
no
[
p
].
nx
[
x
]=
u
;

51 
	}
}

53 
	$buûd_ßm
(
s
[]) {

54 
l
=
	`°æí
(
s
);

55 
èû
=
hód
=0;

56 
t›
=1;

57 
i
=0; i<
l
; i++) {

58 
	`ö£π
(
s
[
i
]-'a',i+1);

60 
	}
}

62 
	$quîy
(
qs
[]) {

63 
Àn
=
	`°æí
(
qs
);

64 
ªt
=0;

65 
i
=0; i<
Àn
; i++)

66 
qs
[
Àn
+
i
]=qs[i];

67 
qs
[
Àn
+len]=0;

68 
now
=
hód
,
nowl
=0;

69 
i
=0; i<
Àn
+len; i++) {

70 
x
=
qs
[
i
]-'a';

71 
now
!=-1 && 
no
[now].
nx
[
x
]==-1) {

72 
now
=
no
[now].
f
;

73 
nowl
=
now
>=0?
no
[now].
l
:0;

75 if(
now
==-1) {

76 
now
=
hód
;

77 
nowl
=0;

80 
now
=
no
[now].
nx
[
x
];

81 
nowl
++;

82 if(
nowl
>=
Àn
) {

83 
p
=
now
;

84 ; 
no
[
p
].
f
>=0 &&Ço[no[p].f].
l
>=
Àn
;)

85 
p
=
no
[p].
f
;

86 if(
no
[
p
].
Êag
!=
T
) {

87 
no
[
p
].
Êag
=
T
;

88 
ªt
+=
no
[
p
].
num
;

92  
ªt
;

93 
	}
}

95 
	$maö
() {

96 
	`sˇnf
("%s",
s
);

97 
	`buûd_ßm
(
s
);

98 
i
=0; i<
t›
; i++) {

99 
vec
[
no
[
i
].
l
].
	`push_back
(i);

101 
i
=
N
-1; i>=0; i--) {

102 
j
=0; j<
vec
[
i
].
	`size
(); j++) {

103 
x
=
vec
[
i
][
j
];

104 if(
no
[
x
].
f
>=0)

105 
no
[no[
x
].
f
].
num
+=no[x].num;

108 
q
;

109 
	`sˇnf
("%d",&
q
);

110 
i
=0; i<
q
; i++) {

111 
	`sˇnf
("%s",
qs
);

112 
T
=
i
;

113 
	`¥ötf
("%d\n",
	`quîy
(
qs
));

116 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/AC_Auto_Machine.cpp

1 
	~<c°rög
>

2 
	~<c°dio
>

3 
	#N
 52

	)

4 
	#S
 1000

	)

6 
	snode
{ 
	m√xt
[
N
],
	mÁû
,
	mis
; }
	gno
[
S
];

7 
	gt›
,
	gq
[
S
];

9 
ölöe
 
	$gë_öd
(
x
){  x-'a'; 
	}
}

11 
	$öô
()

13 
t›
=1;

14 
i
=0; i<
S
; i++)

16 
no
[
i
].
is
=0,no[i].
Áû
=-1;

17 
j
=0; j<
N
; j++)

18 
no
[
i
].
√xt
[
j
]=-1;

20 
	}
}

22 
	$ö£π
(
s
[])

24 
l
=
	`°æí
(
s
),
p
=0;

25 
i
=0; i<
l
; i++)

27 
ii
=
	`gë_öd
(
s
[
i
]);

28 if(
no
[
p
].
is
)

30 if(
no
[
p
].
√xt
[
ii
]==-1)

31 
no
[
p
].
√xt
[
ii
]=
t›
++;

32 
p
=
no
[p].
√xt
[
ii
];

34 
no
[
p
].
is
=1;

35 
	}
}

37 
	$buûd_ac
(
n
)

39 
l
,
r
;

40 
q
[
l
=
r
=0]=0;

41 ; 
l
<=
r
;)

43 
now
=
q
[
l
++];

44 
i
=0; i<
n
; i++)

46 
ii
=
no
[
now
].
√xt
[
i
];

47 if(
ii
==-1)

49 if(
now
==0)

50 
no
[
now
].
√xt
[
i
]=0;

52 
no
[
now
].
√xt
[
i
]Úo[no[now].
Áû
].next[i];

56 if(
now
==0)

57 
no
[
ii
].
Áû
=0;

60 
no
[
ii
].
Áû
Úo[no[
now
].Áû].
√xt
[
i
];

61 if(
no
[no[
ii
].
Áû
].
is
)

62 
no
[
ii
].
is
=1;

64 
q
[++
r
]=
ii
;

68 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/KM_match.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	~<Æg‹ôhm
>

4 
	#öf
 0x3fffffff

	)

5 
	#N
 1001

	)

6 
	#S
 1000100

	)

8 
usög
 
«me•a˚
 
	g°d
;

10 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

12 
	g¶ack
[
N
],
	gvÆx
[N],
	gvÆy
[N],
	gm©
[N][N],
	gm2y
[N],
	gvx
[N],
	gvy
[N],
	gli°
[N],
	gt›
;

14 
	$ö£π
(
f
,
t
)

16 
e
[
t›
].
f
=f,e[t›].
t
=t;

17 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

18 
	}
}

20 
	$föd_∑th
(
now
)

22 
t
,
i
,
v
;

23 
vx
[
now
]=1;

24 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

26 
t
=
e
[
i
].t;

27 
v
=
vÆx
[
now
]+
vÆy
[
t
]-
m©
[now][t];

28 if(!
vy
[
t
]&&
v
==0)

30 
vy
[
t
]=1;

31 if(
m2y
[
t
]==-1||
	`föd_∑th
(m2y[t]))

33 
m2y
[
t
]=
now
;

37 if(
¶ack
[
t
]>
v
)

38 
¶ack
[
t
]=
v
;

41 
	}
}

43 
	$km_m©ch
(
n
)

45 
i
,
j
,
k
,
ªt
=0,
d
;

46 
i
=0; i<
n
; i++)

48 
m2y
[
i
]=-1;

49 
vÆx
[
i
]=-
öf
,
vÆy
[i]=0;

50 
j
=0; j<
n
; j++)

51 
vÆx
[
i
]=
	`max
(vÆx[i],
m©
[i][
j
]);

53 
i
=0; i<
n
; i++)

55 
	`mem£t
(
vx
,0,(vx));

56 
	`mem£t
(
vy
,0,(vy));

57 
k
=0; k<
n
; k++)

58 
¶ack
[
k
]=
öf
;

59 ; !
	`föd_∑th
(
i
); )

61 
d
=
öf
;

62 
k
=0; k<
n
; k++)

63 if(!
vy
[
k
]&&
¶ack
[k]<
d
)

64 
d
=
¶ack
[
k
];

65 
k
=0; k<
n
; k++)

67 if(
vx
[
k
])

68 
vÆx
[
k
]-=
d
,
vx
[k]=0;

69 if(
vy
[
k
])

70 
vÆy
[
k
]+=
d
,
vy
[k]=0;

74 
i
=0; i<
n
; i++)

75 
ªt
+=
vÆx
[
i
]+
vÆy
[i];

76  
ªt
;

77 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/LCA_online.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	#N
 20000

	)

4 
	#S
 100000

	)

6 
	tLL
;

8 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

9 
	snode
{ 
	mh
,
	mi
; }
	gno
[
N
];

10 
	gv
[
N
],
	gt›
,
	gli°
[N],
	gç
,
	gdp
[N][17],
	gpos
[N];

12 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

13 
	$big
(
i
,
j
){  
no
[i].
h
>no[j].h?i:j; 
	}
}

14 
	$smÆl
(
i
,
j
){  
no
[i].
h
<no[j].h?i:j; 
	}
}

16 
	$ö£π
(
f
,
t
)

18 
e
[
t›
].
f
=f,e[t›].
t
=t;

19 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

20 
	}
}

22 
	$dfs
(
now
,
l
)

24 
v
[
now
]=1;

25 
pos
[
now
]=
ç
;

26 
no
[
ç
].
i
=
now
;

27 
no
[
ç
++].
h
=
l
;

28 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

30 
to
=
e
[
i
].
t
;

31 if(!
v
[
to
])

33 
	`dfs
(
to
,
l
+1);

34 
no
[
ç
].
i
=
now
;

35 
no
[
ç
++].
h
=
l
;

38 
	}
}

40 
	$RMQ
(
n
)

42 
k
=(
	`log
(1.0*
n
)/log(2.0));

43 
i
=1; i<=
n
; i++)

44 
dp
[
i
][0]=i;

45 
j
=1; j<=
k
; j++)

46 
i
=1; i<=
n
; i++)

48 if(
i
+
	`B
(
j
)-1>
n
)

50 
dp
[
i
][
j
]=
	`smÆl
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

52 
	}
}

54 
	$quîy
(
l
,
r
)

56 
d
,
k
;

57 if(
l
>
r
Ë
d
=l,l=r,r=d;

58 
d
=
r
-
l
+1;

59 
k
=(
	`log
(1.0*
d
)/log(2.0));

60  
	`smÆl
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

61 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/LCA_tarjan.cpp

1 
	~<c°dio
>

2 
	~<ve˘‹
>

3 
	#N
 50000

	)

4 
	#S
 200000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	sedge
{ 
	mf
,
	mt
,
	ml
,
	mn
; }
	ge
[
S
];

9 
	snode
{ 
	mt
,
	mr
,
	mi
;

10 
node
(
a
,
b
,
c
){ 
	mt
˜,
	mr
=b,
	mi
=c; }

12 
	gve˘‹
<
	gnode
> 
	gq
[
N
];

13 
	gv
[
N
],
	gvis
[N],
	gÀn
[N],
	gªt
[N],
	gli°
[N],
	gt›
;

15 
	$ö£π
(
f
,
t
,
l
)

17 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

18 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

19 
	}
}

21 
	suföd


23 
	mp
[
N
],
	mt
;

24 
öô
(){ 
	mi
=0; i<
	mN
; 
	mp
[
i
]=i++); }

25 
run
(&
x
)

27 
	my
=
x
;

28 ; (
	mt
=
p
[
x
])!=x; 
	mx
ı[x],
	mp
[
t
]=p[x]);

29 ; 
	mp
[
t
=
y
]!=
x
;Ö[y]=x,
	my
=
p
[t]);

31 
is‰õnd
(
i
,
j
)

33 
run
(
i
);Ñun(
j
);

34  
	mi
==
j
;

36 
£t‰õnd
(
i
,
j
)

38 
run
(
i
);Ñun(
j
);

39 
	mp
[
i
]=
j
;

41 }
	guf
;

43 
	$èrj™
(
now
,
l
)

45 
Àn
[
now
]=
l
;

46 
v
[
now
]=1;

47 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

49 
to
=
e
[
i
].
t
;

50 if(
v
[
to
])

52 
	`èrj™
(
to
,
l
+
e
[
i
].l);

53 
uf
.
	`£t‰õnd
(
to
,
now
);

55 
vis
[
now
]=1;

56 
i
=0; i<
q
[
now
].
	`size
(); i++)

58 
to
=
q
[
now
][
i
].
t
;

59 if(!
vis
[
to
])

61 
p
=
to
,
ii
=
q
[
now
][
i
].i;

62 
uf
.
	`run
(
p
);

63 
ªt
[
ii
]=
l
+
Àn
[
to
]-2*Àn[
p
];

64 
q
[
now
][
i
].
r
=
l
+
Àn
[
to
]-2*Àn[
p
];

66 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/MST_cnt.cpp

1 
	~<ve˘‹
>

2 
	~<c°rög
>

3 
	~<c°dio
>

4 
	~<Æg‹ôhm
>

5 
	#M
 1011

	)

6 
	#N
 111

	)

7 
	tLL
;

8 
usög
 
«me•a˚
 
	g°d
;

10 
	gn
,
	gm
,
	gmod
,
	gvis
[
N
];

11 
	sedge
{ 
	mf
,
	mt
,
	ml
; }
	ge
[
M
];

13 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
<b.l; 
	}
}

14 
	gö
[
N
][N];

15 
LL
 
	gm©
[
N
][N];

16 
	gve˘‹
<> 
	gvec
[
N
];

18 
	suföd


20 
	mp
[101];

21 
öô
(
n
)

23 
	mi
=0; i<
	mn
; i++Ë
	mp
[
i
]=i;

25 
Á
(
x
)

27 
	my
=
x
,
	mt
;

28 ; 
	mx
!=
p
[
x
]; x=p[x]);

29 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

30  
	mx
;

32 
£tf
(
a
,
b
)

34 
	ma
=
Á
(
a
),
	mb
=Á(
b
);

35 
	mp
[
a
]=
b
;

36  
	ma
!=
b
;

38 }
	guf
,
	gnowu
;

40 
LL
 
	$ˇlm©
(
LL
 
m©
[][
N
],
n
)

42 
i
=0;i<
n
;i++)

43 
j
=0;j<
n
;j++)

44 
m©
[
i
][
j
]%=
mod
;

45 
LL
 
ªt
=1;

46 
i
=1; i<
n
; i++)

48 
j
=
i
+1; j<
n
; j++)

49 
m©
[
j
][
i
]!=0)

51 
LL
 
t
=
m©
[
i
][i]/m©[
j
][i];

52 
k
=
i
; k<
n
; k++)

53 
m©
[
i
][
k
]=(m©[i][k]-m©[
j
][k]*
t
)%
mod
;

54 
k
=
i
; k<
n
; k++)

55 
	`sw≠
(
m©
[
i
][
k
],m©[
j
][k]);

56 
ªt
=-ret;

58 if(
m©
[
i
][i]==0)

60 
ªt
Ùë*
m©
[
i
][i]%
mod
;

62  (
ªt
+
mod
)%mod;

63 
	}
}

65 
	$maö
()

67 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
mod
)!=
EOF
)

69 if(
n
==0&&
m
==0&&
mod
==0)

71 
i
=0; i<
m
; i++)

73 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
l
);

74 
e
[
i
].
f
--,e[i].
t
--;

76 
	`s‹t
(
e
,e+
m
,
cmp
);

77 
uf
.
	`öô
(
n
);

78 
nowu
.
	`öô
(
n
);

79 
	`mem£t
(
vis
,0,(vis));

80 
	`mem£t
(
ö
,0,(in));

81 
j
,
nowl
;

82 
LL
 
ªt
=1;

83 
i
=0; i<
m
; i=
j
)

85 
nowu
=
uf
;

86 
nowl
=
e
[
i
].
l
;

87 
j
=
i
; j<
m
; j++)

88 if(
e
[
j
].
l
!=
nowl
)

90 
	`mem£t
(
vis
,0,(vis));

91 
k
=
i
; k<
j
; k++)

93 
x
=
e
[
k
].
f
,
y
Û[k].
t
,
px
=
uf
.
	`Á
(x),
py
=uf.fa(y);

94 if(
px
==
py
)

96 
vis
[
px
]=vis[
py
]=1;

97 
nowu
.
	`£tf
(
px
,
py
);

98 
ö
[
px
][
py
]++;

99 
ö
[
py
][
px
]++;

101 
j
=0; j<
n
; j++)

102 
vec
[
j
].
	`˛ór
();

103 
j
=0; j<
n
; j++)

104 if(
vis
[
j
])

106 
u
=
nowu
.
	`Á
(
j
);

107 
vec
[
u
].
	`push_back
(
j
);

108 
vis
[
j
]=0;

110 
j
=0; j<
n
; j++)

111 if(
vec
[
j
].
	`size
()>0)

113 
u
=0; u<
n
; u++)

114 
v
=0; v<
n
; v++)

115 
m©
[
u
][
v
]=mat[v][u]=0;

117 
sz
=
vec
[
j
].
	`size
();

118 
u
=0; u<
sz
; u++)

119 
v
=
u
+1; v<
sz
; v++)

121 
pu
=
vec
[
j
][
u
],
pv
=vec[j][
v
];

122 
m©
[
v
][
u
]-=
ö
[
pu
][
pv
];

123 
m©
[
u
][
v
]=mat[v][u];

124 
m©
[
u
][u]+=
ö
[
pu
][
pv
];

125 
m©
[
v
][v]+=
ö
[
pu
][
pv
];

127 
LL
 
nowc
=
	`ˇlm©
(
m©
,
sz
);

128 
ªt
Ùë*
nowc
%
mod
;

130 
uf
=
nowu
;

132 
	`mem£t
(
vis
,0,(vis));

133 
i
=0; i<
n
; i++)

134 
vis
[
uf
.
	`Á
(
i
)]=1;

135 
num
=0;

136 
i
=0; i<
n
; i++)

137 if(
vis
[
i
])

138 
num
++;

139 
ªt
=‘ë%
mod
+mod)%mod;

140 
™s
=(
ªt
);

141 if(
num
!=1)

142 
	`puts
("0");

144 
	`¥ötf
("%d\n",
™s
);

147 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/RMQ.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<Æg‹ôhm
>

4 
	#N
 50000

	)

6 
usög
 
«me•a˚
 
	g°d
;

8 
	gd©
[
N
],
	gdp
[N][18],
	gmi
[N][18];

10 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

11 
ölöe
 
	$big
(
a
,
b
){ á>b?a:b; 
	}
}

12 
ölöe
 
	$smÆl
(
a
,
b
){ á<b?a:b; 
	}
}

14 
	$RMQ
(
n
)

16 
k
=(
	`log
(1.0*
n
)/log(2.0));

17 
i
=1; i<=
n
; i++)

18 
dp
[
i
][0]=
mi
[i][0]=
d©
[i];

19 
j
=1; j<=
k
; j++)

20 
i
=1; i<=
n
; i++)

22 if(
i
+
	`B
(
j
)-1>
n
)

24 
dp
[
i
][
j
]=
	`big
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

25 
mi
[
i
][
j
]=
	`smÆl
(mi[i][j-1],mi[i+
	`B
(j-1)][j-1]);

27 
	}
}

29 
	$quîy
(
l
,
r
,
èg
)

31 
k
=(
	`log
(1.0*(
r
-
l
+1))/log(2.0));

32 if(
èg
==1)

33  
	`big
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

35  
	`smÆl
(
mi
[
l
][
k
],mi[
r
-
	`B
(k)+1][k]);

36 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/ZL_MST.cpp

2 
	~<c°dio
>

3 
	~<c°rög
>

4 
	#öf
 1e8

	)

5 
	#S
 1000001

	)

6 
	#N
 1001

	)

8 
	tñem_t
;

10 
	sedge
{ 
	mf
,
	mt
; 
ñem_t
 
	ml
; }
	ge
[
S
];

11 
	gt›
,
	gli°
[
N
],
	gid
[N],
	gv
[N],
	g¥e
[N];

12 
ñem_t
 
	gÀn
[
N
];

14 
ñem_t
 
	$ZL_MST
(
r
,
n
)

16 
√xä
,
f
,
t
;

17 
ñem_t
 
ªt
=0;

20 
	`mem£t
(
¥e
,-1,(pre));

21 
	`mem£t
(
v
,-1,(v));

22 
	`mem£t
(
id
,-1,(id));

23 
i
=0; i<
n
; i++)

24 
Àn
[
i
]=
öf
;

25 
i
=0; i<
t›
; i++)

27 
f
=
e
[
i
].f,
t
=e[i].t;

28 if(
f
==
t
) ;

29 if(
Àn
[
t
]>
e
[
i
].
l
)

30 
Àn
[
t
]=
e
[
i
].
l
,
¥e
[t]=
f
;

32 
i
=0; i<
n
; i++)

33 if(
¥e
[
i
]==-1&&i!=
r
)

35 
√xä
=0;

36 
Àn
[
r
]=0;

37 
i
=0; i<
n
; i++)

39 
ªt
+=
Àn
[
i
];

40 
now
=
i
;

41 ; 
v
[
now
]!=
i
&&
id
[now]==-1&&now!=
r
; )

43 
v
[
now
]=
i
;

44 
now
=
¥e
[now];

46 if(
now
!=
r
&&
id
[now]==-1)

48 
f
=
¥e
[
now
]; f!=now; f=pre[f])

49 
id
[
f
]=
√xä
;

50 
id
[
now
]=
√xä
++;

53 if(
√xä
==0) ;

54 
i
=0; i<
n
; i++)

55 if(
id
[
i
]<0)

56 
id
[
i
]=
√xä
++;

57 
i
=0; i<
t›
; i++)

59 
f
=
e
[
i
].f,
t
=e[i].t;

60 
e
[
i
].
f
=
id
[f];

61 
e
[
i
].
t
=
id
[t];

62 if(
f
==
t
) ;

63 
e
[
i
].
l
-=
Àn
[
t
];

65 
n
=
√xä
;

66 
r
=
id
[r];

68  
ªt
;

69 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/miller_rabbin_pollar_rho.cpp

1 
	~<c°dio
>

2 
	~<c°dlib
>

3 
	~<˘ime
>

4 
	#N
 1001

	)

5 
	tLL
;

6 
usög
 
«me•a˚
 
	g°d
;

8 
LL
 
	gli°
[
N
];

9 
	gt›
;

11 
LL
 
	$mulmod
(
LL
 
a
,LL 
b
,LL 
n
)

13 
LL
 
ªt
=0;

14 
a
˜%
n
;

15 ; 
b
; )

17 if(
b
&1)

19 
ªt
Ùë+
a
;

20 if(
ªt
>
n
)Ñet-=n;

22 
a
<<=1;

23 if(
a
>
n
)

24 
a
-=
n
;

25 
b
>>=1;

27  
ªt
;

28 
	}
}

30 
LL
 
	$expmod
(
LL
 
a
,LL 
b
,LL 
n
)

32 
LL
 
ªt
=1;

33 ; 
b
;)

35 if(
b
&1)

36 
ªt
=
	`mulmod
‘ë,
a
,
n
);

37 
a
=
	`mulmod
◊,a,
n
);

38 
b
>>=1;

40  
ªt
;

41 
	}
}

43 
	$mûÀr_øbbö
(
LL
 
n
,
times
=8)

45 if(
n
==2)  1;

46 if((
n
&1)==0||n<2)  0;

47 
LL
 
m
=
n
-1,
x
,
y
;

48 
k
=0;

49 ; (
m
&1)==0; m>>=1,
k
++);

50 
i
=0; i<
times
; i++)

52 
x
=
	`ønd
()%(
n
-2)+2;

53 
y
=
x
=
	`expmod
(x,
m
,
n
);

54 if(
x
==1) ;

55 
j
=0; j<
k
; j++)

57 
y
=
	`mulmod
(
x
,x,
n
);

58 if(
y
==1&&
x
!=
n
-1&&x!=1)  0;

59 
x
=
y
;

61 if(
y
!=1)  0;

64 
	}
}

66 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

68 
LL
 
	$pﬁœr_rho
(
LL
 
n
,
c
)

70 
LL
 
x
,
y
,
p
;

71 
i
=1,
k
=2;

72 
y
=
x
=
	`ønd
()%(
n
-1)+1;

75 
i
++;

76 
x
=(
	`mulmod
(x,x,
n
)+
c
)%n;

77 if(
x
==
y
Ë 
n
;

78 
p
=
	`gcd
(
x
-
y
,
n
);

79 if(1<
p
&&p<
n
) Ö;

80 if(
i
==
k
)

82 
k
<<=1;

83 
y
=
x
;

86 
	}
}

89 
	$föd_Ác
(
LL
 
n
,
c
)

91 if(
n
==1)

93 if(
	`mûÀr_øbbö
(
n
))

95 
li°
[
t›
++]=
n
;

98 
LL
 
x
=
n
;

99 
nc
=
c
;

100 ; 
x
>=
n
; )

101 
x
=
	`pﬁœr_rho
(
n
,
nc
--);

102 
	`föd_Ác
(
n
/
x
,
c
);

103 
	`föd_Ác
(
x
,
c
);

104 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/multi_hungary.cpp

1 
	~<c°dio
>

2 
	#N
 1001

	)

3 
	#S
 100001

	)

5 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

6 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N][N],
	g˙t
[N],
	glim
[N];

8 
	$ö£π
(
f
,
t
)

10 
e
[
t›
].
f
=f,e[t›].
t
=t;

11 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

12 
	}
}

14 
	$föd
(
now
)

16 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

18 
to
=
e
[
i
].to;

19 if(!
y
[
to
])

21 
v
[
to
]=1;

22 if(
˙t
[
to
]<
lim
[to])

24 
m©ch
[
to
][
˙t
[to]++]=
now
;

27 
j
=0; j<
˙t
[
to
]; j++)

28 if(
	`föd
(
m©ch
[
to
][
j
]))

30 
m©ch
[
to
][
j
]=
now
;

36 
	}
}

38 
	$mu…i_hung¨y
(
m
,
n
)

40 
ªt
=0;

41 
	`mem£t
(
˙t
,0,(cnt));

42 
i
=0; i<
m
; i++)

44 
	`mem£t
(
y
,0,(y));

45 if(
	`föd
(
i
))

46 
ªt
++;

48  
ªt
;

49 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/partition_tree.cpp

1 
	~<c°dio
>

2 
	~<Æg‹ôhm
>

3 
	#N
 100011

	)

4 
usög
 
«me•a˚
 
	g°d
;

6 
	g≥rm
[
N
],
	gd©
[N],
	g˙t
[20][N],
	gåì
[20][N];

7 
	$cmp
(
a
,
b
){ á<b; 
	}
}

9 
	$buûd
(
c
,
l
,
r
)

11 
mid
=(
l
+
r
)>>1,
lc
=mid-l+1,
Õ
ˆ,
Ω
=mid+1;

12 if(
l
==
r
) ;

13 
i
=
l
; i<=
mid
; i++)

14 if(
≥rm
[
i
]<≥rm[
mid
])

15 
lc
--;

16 
i
=
l
; i<=
r
; i++)

18 if(
i
==
l
)

19 
˙t
[
c
][
i
]=0;

21 
˙t
[
c
][
i
]=cnt[c][i-1];

22 if(
åì
[
c
][
i
]==
≥rm
[
mid
])

24 if(
lc
>0)

26 
lc
--;

27 
˙t
[
c
][
i
]++;

28 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

31 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

33 if(
åì
[
c
][
i
]<
≥rm
[
mid
])

35 
˙t
[
c
][
i
]++;

36 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

39 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

41 
	`buûd
(
c
+1,
l
,
mid
);

42 
	`buûd
(
c
+1,
mid
+1,
r
);

43 
	}
}

45 
	$quîy
(
c
,
l
,
r
,
ql
,
qr
,
k
)

47 if(
l
==
r
Ë 
≥rm
[l];

48 
c1
,
c2
=
˙t
[
c
][
qr
],
mid
=(
l
+
r
)>>1,
d1
=
ql
-l,
d2
=qr-ql+1;

49 if(
ql
==
l
Ë
c1
=0;

50 
c1
=
˙t
[
c
][
ql
-1];

51 
c2
-=
c1
;

52 if(
k
<=
c2
)

53  
	`quîy
(
c
+1,
l
,
mid
,l+
c1
,l+c1+
c2
-1,
k
);

55  
	`quîy
(
c
+1,
mid
+1,
r
,mid+1+
d1
-
c1
,mid+d1+
d2
-c1-
c2
,
k
-c2);

56 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/suffix_array.cpp

1 
	~<c°dio
>

2 
	~<cm©h
>

3 
	~<c°rög
>

4 
	#N
 100001

	)

6 
	gs
[
N
];

7 
	gß
[
N
],
	gsb
[N],
	g˙t
[N],
	gønk
[N],
	gd©
[N],
	gdp
[N][20],
	gheight
[N];

8 
	$equÆ
(
i
,
j
,
l
,*
y
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

10 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

12 
	$ødix_s‹t
(
n
,
m
,
l
,*
x
,*
y
)

14 
k
,
i
;

15 
k
=0,
i
=
n
-
l
; i<n; i++Ë
y
[k++]=i;

16 
i
=0; i<
n
; i++)

17 if(
ß
[
i
]>=
l
Ë
y
[
k
++]=sa[i]-l;

18 
	`mem£t
(
˙t
,0,(cnt));

19 
i
=0; i<
n
; i++Ë
˙t
[
x
[i]]++;

20 
i
=1; i<
m
; i++Ë
˙t
[i]+=cnt[i-1];

21 
i
=
n
-1; i>=0; i--Ë
ß
[--
˙t
[
x
[
y
[i]]]]=y[i];

22 
	}
}

24 
	$da
(
n
,
m
)

26 *
t
,*
x
=
ønk
,*
y
=
sb
,
l
,
k
,
i
;

27 
i
=0; i<
n
; i++Ë
x
[i]=
s
[i],
ß
[i]=i;

28 
	`ødix_s‹t
(
n
,
m
,0,
x
,
y
);

29 
k
=
l
=1; k<
n
;Ü<<=1)

31 
	`ødix_s‹t
(
n
,
m
,
l
,
x
,
y
);

32 
t
=
x
,x=
y
,y=t;

33 
x
[
ß
[0]]=0,
k
=1;

34 
i
=1; i<
n
; i++)

35 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
l
,
y
)?
k
-1:k++;

36 
m
=
k
;

38 
i
=0; i<
n
; i++Ë
ønk
[
ß
[i]]=i;

39 
	}
}

41 
	$ˇlc_height
(
n
)

43 
k
=0;

44 
i
=0; i<
n
-1; i++)

46 
k
=(k>0)?k-1:0;

47 
j
=
ß
[
ønk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

48 
height
[
ønk
[
i
]]=
k
;

50 
height
[0]=0;

51 
	}
}

53 
	$RMQ
(
n
)

55 
k
=(
	`log
(1.0*
n
)/log(2.0)),
a
,
b
;

56 
i
=1; i<=
n
; i++)

57 
d©
[
i
]=
height
[i-1],
dp
[i][0]=i;

58 
j
=1; j<=
k
; j++)

59 
i
=1; i+
	`B
(
j
)-1<=
n
; i++)

61 
a
=
dp
[
i
][
j
-1];

62 
b
=
dp
[
i
+
	`B
(
j
-1)][j-1];

63 if(
d©
[
a
]<d©[
b
]Ë
dp
[
i
][
j
]=a;

64 
dp
[
i
][
j
]=
b
;

66 
	}
}

68 
	$RMQ_quîy
(
a
,
b
)

70 
k
=(
	`log
(1.0*(
b
-
a
+1))/log(2.0));

71 
a
=
dp
[a][
k
],
b
=dp[b-
	`B
(k)+1][k];

72  
d©
[
a
]>d©[
b
]?b:a;

73 
	}
}

75 
	$l˝
(
a
,
b
)

77 
t
;

78 
a
=
ønk
[a],
b
=rank[b];

79 if(
a
>
b
Ë
t
=a,a=b,b=t;

80  
height
[
	`RMQ_quîy
(
a
+1,
b
)];

81 
	}
}

	@template_back/SELF_TEMP/topaint_2012_10_11/ttl.cpp

1 
	~<c°rög
>

2 
	~<c°dio
>

3 
	#N
 52

	)

4 
	#S
 1000

	)

6 
	snode
{ 
	m√xt
[
N
],
	mÁû
,
	mis
; }
	gno
[
S
];

7 
	gt›
,
	gq
[
S
];

9 
ölöe
 
	$gë_öd
(
x
){  x-'a'; 
	}
}

11 
	$öô
()

13 
t›
=1;

14 
i
=0; i<
S
; i++)

16 
no
[
i
].
is
=0,no[i].
Áû
=-1;

17 
j
=0; j<
N
; j++)

18 
no
[
i
].
√xt
[
j
]=-1;

20 
	}
}

22 
	$ö£π
(
s
[])

24 
l
=
	`°æí
(
s
),
p
=0;

25 
i
=0; i<
l
; i++)

27 
ii
=
	`gë_öd
(
s
[
i
]);

28 if(
no
[
p
].
is
)

30 if(
no
[
p
].
√xt
[
ii
]==-1)

31 
no
[
p
].
√xt
[
ii
]=
t›
++;

32 
p
=
no
[p].
√xt
[
ii
];

34 
no
[
p
].
is
=1;

35 
	}
}

37 
	$buûd_ac
(
n
)

39 
l
,
r
;

40 
q
[
l
=
r
=0]=0;

41 ; 
l
<=
r
;)

43 
now
=
q
[
l
++];

44 
i
=0; i<
n
; i++)

46 
ii
=
no
[
now
].
√xt
[
i
];

47 if(
ii
==-1)

49 if(
now
==0)

50 
no
[
now
].
√xt
[
i
]=0;

52 
no
[
now
].
√xt
[
i
]Úo[no[now].
Áû
].next[i];

56 if(
now
==0)

57 
no
[
ii
].
Áû
=0;

60 
no
[
ii
].
Áû
Úo[no[
now
].Áû].
√xt
[
i
];

61 if(
no
[no[
ii
].
Áû
].
is
)

62 
no
[
ii
].
is
=1;

64 
q
[++
r
]=
ii
;

68 
	}
}

69 
	~<c°dio
>

70 
	~<c°rög
>

71 
	~<Æg‹ôhm
>

72 
	#öf
 0x3fffffff

	)

73 
	#N
 1001

	)

74 
	#S
 1000100

	)

76 
usög
 
«me•a˚
 
	g°d
;

78 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

80 
	g¶ack
[
N
],
	gvÆx
[N],
	gvÆy
[N],
	gm©
[N][N],
	gm2y
[N],
	gvx
[N],
	gvy
[N],
	gli°
[N],
	gt›
;

82 
	$ö£π
(
f
,
t
)

84 
e
[
t›
].
f
=f,e[t›].
t
=t;

85 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

86 
	}
}

88 
	$föd_∑th
(
now
)

90 
t
,
i
,
v
;

91 
vx
[
now
]=1;

92 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

94 
t
=
e
[
i
].t;

95 
v
=
vÆx
[
now
]+
vÆy
[
t
]-
m©
[now][t];

96 if(!
vy
[
t
]&&
v
==0)

98 
vy
[
t
]=1;

99 if(
m2y
[
t
]==-1||
	`föd_∑th
(m2y[t]))

101 
m2y
[
t
]=
now
;

105 if(
¶ack
[
t
]>
v
)

106 
¶ack
[
t
]=
v
;

109 
	}
}

111 
	$km_m©ch
(
n
)

113 
i
,
j
,
k
,
ªt
=0,
d
;

114 
i
=0; i<
n
; i++)

116 
m2y
[
i
]=-1;

117 
vÆx
[
i
]=-
öf
,
vÆy
[i]=0;

118 
j
=0; j<
n
; j++)

119 
vÆx
[
i
]=
	`max
(vÆx[i],
m©
[i][
j
]);

121 
i
=0; i<
n
; i++)

123 
	`mem£t
(
vx
,0,(vx));

124 
	`mem£t
(
vy
,0,(vy));

125 
k
=0; k<
n
; k++)

126 
¶ack
[
k
]=
öf
;

127 ; !
	`föd_∑th
(
i
); )

129 
d
=
öf
;

130 
k
=0; k<
n
; k++)

131 if(!
vy
[
k
]&&
¶ack
[k]<
d
)

132 
d
=
¶ack
[
k
];

133 
k
=0; k<
n
; k++)

135 if(
vx
[
k
])

136 
vÆx
[
k
]-=
d
,
vx
[k]=0;

137 if(
vy
[
k
])

138 
vÆy
[
k
]+=
d
,
vy
[k]=0;

142 
i
=0; i<
n
; i++)

143 
ªt
+=
vÆx
[
i
]+
vÆy
[i];

144  
ªt
;

145 
	}
}

146 
	~<c°dio
>

147 
	~<cm©h
>

148 
	#N
 20000

	)

149 
	#S
 100000

	)

151 
	tLL
;

153 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

154 
	snode
{ 
	mh
,
	mi
; }
	gno
[
N
];

155 
	gv
[
N
],
	gt›
,
	gli°
[N],
	gç
,
	gdp
[N][17],
	gpos
[N];

157 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

158 
	$big
(
i
,
j
){  
no
[i].
h
>no[j].h?i:j; 
	}
}

159 
	$smÆl
(
i
,
j
){  
no
[i].
h
<no[j].h?i:j; 
	}
}

161 
	$ö£π
(
f
,
t
)

163 
e
[
t›
].
f
=f,e[t›].
t
=t;

164 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

165 
	}
}

167 
	$dfs
(
now
,
l
)

169 
v
[
now
]=1;

170 
pos
[
now
]=
ç
;

171 
no
[
ç
].
i
=
now
;

172 
no
[
ç
++].
h
=
l
;

173 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

175 
to
=
e
[
i
].
t
;

176 if(!
v
[
to
])

178 
	`dfs
(
to
,
l
+1);

179 
no
[
ç
].
i
=
now
;

180 
no
[
ç
++].
h
=
l
;

183 
	}
}

185 
	$RMQ
(
n
)

187 
k
=(
	`log
(1.0*
n
)/log(2.0));

188 
i
=1; i<=
n
; i++)

189 
dp
[
i
][0]=i;

190 
j
=1; j<=
k
; j++)

191 
i
=1; i<=
n
; i++)

193 if(
i
+
	`B
(
j
)-1>
n
)

195 
dp
[
i
][
j
]=
	`smÆl
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

197 
	}
}

199 
	$quîy
(
l
,
r
)

201 
d
,
k
;

202 if(
l
>
r
Ë
d
=l,l=r,r=d;

203 
d
=
r
-
l
+1;

204 
k
=(
	`log
(1.0*
d
)/log(2.0));

205  
	`smÆl
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

206 
	}
}

207 
	~<c°dio
>

208 
	~<ve˘‹
>

209 
	#N
 50000

	)

210 
	#S
 200000

	)

212 
usög
 
«me•a˚
 
	g°d
;

214 
	sedge
{ 
	mf
,
	mt
,
	ml
,
	mn
; }
	ge
[
S
];

215 
	snode
{ 
	mt
,
	mr
,
	mi
;

216 
node
(
a
,
b
,
c
){ 
	mt
˜,
	mr
=b,
	mi
=c; }

218 
	gve˘‹
<
	gnode
> 
	gq
[
N
];

219 
	gv
[
N
],
	gvis
[N],
	gÀn
[N],
	gªt
[N],
	gli°
[N],
	gt›
;

221 
	$ö£π
(
f
,
t
,
l
)

223 
e
[
t›
].
f
=f,e[t›].
t
Ò,e[t›].
l
=l;

224 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

225 
	}
}

227 
	suföd


229 
	mp
[
N
],
	mt
;

230 
öô
(){ 
	mi
=0; i<
	mN
; 
	mp
[
i
]=i++); }

231 
run
(&
x
)

233 
	my
=
x
;

234 ; (
	mt
=
p
[
x
])!=x; 
	mx
ı[x],
	mp
[
t
]=p[x]);

235 ; 
	mp
[
t
=
y
]!=
x
;Ö[y]=x,
	my
=
p
[t]);

237 
is‰õnd
(
i
,
j
)

239 
run
(
i
);Ñun(
j
);

240  
	mi
==
j
;

242 
£t‰õnd
(
i
,
j
)

244 
run
(
i
);Ñun(
j
);

245 
	mp
[
i
]=
j
;

247 }
	guf
;

249 
	$èrj™
(
now
,
l
)

251 
Àn
[
now
]=
l
;

252 
v
[
now
]=1;

253 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

255 
to
=
e
[
i
].
t
;

256 if(
v
[
to
])

258 
	`èrj™
(
to
,
l
+
e
[
i
].l);

259 
uf
.
	`£t‰õnd
(
to
,
now
);

261 
vis
[
now
]=1;

262 
i
=0; i<
q
[
now
].
	`size
(); i++)

264 
to
=
q
[
now
][
i
].
t
;

265 if(!
vis
[
to
])

267 
p
=
to
,
ii
=
q
[
now
][
i
].i;

268 
uf
.
	`run
(
p
);

269 
ªt
[
ii
]=
l
+
Àn
[
to
]-2*Àn[
p
];

270 
q
[
now
][
i
].
r
=
l
+
Àn
[
to
]-2*Àn[
p
];

272 
	}
}

273 
	~<c°dio
>

274 
	~<c°dlib
>

275 
	~<˘ime
>

276 
	#N
 1001

	)

277 
	tLL
;

278 
usög
 
«me•a˚
 
	g°d
;

280 
LL
 
	gli°
[
N
];

281 
	gt›
;

283 
LL
 
	$mulmod
(
LL
 
a
,LL 
b
,LL 
n
)

285 
LL
 
ªt
=0;

286 
a
˜%
n
;

287 ; 
b
; )

289 if(
b
&1)

291 
ªt
Ùë+
a
;

292 if(
ªt
>
n
)Ñet-=n;

294 
a
<<=1;

295 if(
a
>
n
)

296 
a
-=
n
;

297 
b
>>=1;

299  
ªt
;

300 
	}
}

302 
LL
 
	$expmod
(
LL
 
a
,LL 
b
,LL 
n
)

304 
LL
 
ªt
=1;

305 ; 
b
;)

307 if(
b
&1)

308 
ªt
=
	`mulmod
‘ë,
a
,
n
);

309 
a
=
	`mulmod
◊,a,
n
);

310 
b
>>=1;

312  
ªt
;

313 
	}
}

315 
	$mûÀr_øbbö
(
LL
 
n
,
times
=8)

317 if(
n
==2)  1;

318 if((
n
&1)==0||n<2)  0;

319 
LL
 
m
=
n
-1,
x
,
y
;

320 
k
=0;

321 ; (
m
&1)==0; m>>=1,
k
++);

322 
i
=0; i<
times
; i++)

324 
x
=
	`ønd
()%(
n
-2)+2;

325 
y
=
x
=
	`expmod
(x,
m
,
n
);

326 if(
x
==1) ;

327 
j
=0; j<
k
; j++)

329 
y
=
	`mulmod
(
x
,x,
n
);

330 if(
y
==1&&
x
!=
n
-1&&x!=1)  0;

331 
x
=
y
;

333 if(
y
!=1)  0;

336 
	}
}

338 
LL
 
	$gcd
(
LL
 
a
,LL 
b
){  b?
	`gcd
(b,a%b):a; 
	}
}

340 
LL
 
	$pﬁœr_rho
(
LL
 
n
,
c
)

342 
LL
 
x
,
y
,
p
;

343 
i
=1,
k
=2;

344 
y
=
x
=
	`ønd
()%(
n
-1)+1;

347 
i
++;

348 
x
=(
	`mulmod
(x,x,
n
)+
c
)%n;

349 if(
x
==
y
Ë 
n
;

350 
p
=
	`gcd
(
x
-
y
,
n
);

351 if(1<
p
&&p<
n
) Ö;

352 if(
i
==
k
)

354 
k
<<=1;

355 
y
=
x
;

358 
	}
}

361 
	$föd_Ác
(
LL
 
n
,
c
)

363 if(
n
==1)

365 if(
	`mûÀr_øbbö
(
n
))

367 
li°
[
t›
++]=
n
;

370 
LL
 
x
=
n
;

371 
nc
=
c
;

372 ; 
x
>=
n
; )

373 
x
=
	`pﬁœr_rho
(
n
,
nc
--);

374 
	`föd_Ác
(
n
/
x
,
c
);

375 
	`föd_Ác
(
x
,
c
);

376 
	}
}

377 
	~<ve˘‹
>

378 
	~<c°rög
>

379 
	~<c°dio
>

380 
	~<Æg‹ôhm
>

381 
	#M
 1011

	)

382 
	#N
 111

	)

383 
	tLL
;

384 
usög
 
«me•a˚
 
	g°d
;

386 
	gn
,
	gm
,
	gmod
,
	gvis
[
N
];

387 
	sedge
{ 
	mf
,
	mt
,
	ml
; }
	ge
[
M
];

389 
	$cmp
(
edge
 
a
,edgê
b
){ á.
l
<b.l; 
	}
}

390 
	gö
[
N
][N];

391 
LL
 
	gm©
[
N
][N];

392 
	gve˘‹
<> 
	gvec
[
N
];

394 
	suföd


396 
	mp
[101];

397 
öô
(
n
)

399 
	mi
=0; i<
	mn
; i++Ë
	mp
[
i
]=i;

401 
Á
(
x
)

403 
	my
=
x
,
	mt
;

404 ; 
	mx
!=
p
[
x
]; x=p[x]);

405 ; 
	mp
[
t
=
y
]!=
x
; 
	my
=
p
[y],p[t]=x);

406  
	mx
;

408 
£tf
(
a
,
b
)

410 
	ma
=
Á
(
a
),
	mb
=Á(
b
);

411 
	mp
[
a
]=
b
;

412  
	ma
!=
b
;

414 }
	guf
,
	gnowu
;

416 
LL
 
	$ˇlm©
(
LL
 
m©
[][
N
],
n
)

418 
i
=0;i<
n
;i++)

419 
j
=0;j<
n
;j++)

420 
m©
[
i
][
j
]%=
mod
;

421 
LL
 
ªt
=1;

422 
i
=1; i<
n
; i++)

424 
j
=
i
+1; j<
n
; j++)

425 
m©
[
j
][
i
]!=0)

427 
LL
 
t
=
m©
[
i
][i]/m©[
j
][i];

428 
k
=
i
; k<
n
; k++)

429 
m©
[
i
][
k
]=(m©[i][k]-m©[
j
][k]*
t
)%
mod
;

430 
k
=
i
; k<
n
; k++)

431 
	`sw≠
(
m©
[
i
][
k
],m©[
j
][k]);

432 
ªt
=-ret;

434 if(
m©
[
i
][i]==0)

436 
ªt
Ùë*
m©
[
i
][i]%
mod
;

438  (
ªt
+
mod
)%mod;

439 
	}
}

441 
	$maö
()

443 
	`sˇnf
("%d%d%d",&
n
,&
m
,&
mod
)!=
EOF
)

445 if(
n
==0&&
m
==0&&
mod
==0)

447 
i
=0; i<
m
; i++)

449 
	`sˇnf
("%d%d%d",&
e
[
i
].
f
,&e[i].
t
,&e[i].
l
);

450 
e
[
i
].
f
--,e[i].
t
--;

452 
	`s‹t
(
e
,e+
m
,
cmp
);

453 
uf
.
	`öô
(
n
);

454 
nowu
.
	`öô
(
n
);

455 
	`mem£t
(
vis
,0,(vis));

456 
	`mem£t
(
ö
,0,(in));

457 
j
,
nowl
;

458 
LL
 
ªt
=1;

459 
i
=0; i<
m
; i=
j
)

461 
nowu
=
uf
;

462 
nowl
=
e
[
i
].
l
;

463 
j
=
i
; j<
m
; j++)

464 if(
e
[
j
].
l
!=
nowl
)

466 
	`mem£t
(
vis
,0,(vis));

467 
k
=
i
; k<
j
; k++)

469 
x
=
e
[
k
].
f
,
y
Û[k].
t
,
px
=
uf
.
	`Á
(x),
py
=uf.fa(y);

470 if(
px
==
py
)

472 
vis
[
px
]=vis[
py
]=1;

473 
nowu
.
	`£tf
(
px
,
py
);

474 
ö
[
px
][
py
]++;

475 
ö
[
py
][
px
]++;

477 
j
=0; j<
n
; j++)

478 
vec
[
j
].
	`˛ór
();

479 
j
=0; j<
n
; j++)

480 if(
vis
[
j
])

482 
u
=
nowu
.
	`Á
(
j
);

483 
vec
[
u
].
	`push_back
(
j
);

484 
vis
[
j
]=0;

486 
j
=0; j<
n
; j++)

487 if(
vec
[
j
].
	`size
()>0)

489 
u
=0; u<
n
; u++)

490 
v
=0; v<
n
; v++)

491 
m©
[
u
][
v
]=mat[v][u]=0;

493 
sz
=
vec
[
j
].
	`size
();

494 
u
=0; u<
sz
; u++)

495 
v
=
u
+1; v<
sz
; v++)

497 
pu
=
vec
[
j
][
u
],
pv
=vec[j][
v
];

498 
m©
[
v
][
u
]-=
ö
[
pu
][
pv
];

499 
m©
[
u
][
v
]=mat[v][u];

500 
m©
[
u
][u]+=
ö
[
pu
][
pv
];

501 
m©
[
v
][v]+=
ö
[
pu
][
pv
];

503 
LL
 
nowc
=
	`ˇlm©
(
m©
,
sz
);

504 
ªt
Ùë*
nowc
%
mod
;

506 
uf
=
nowu
;

508 
	`mem£t
(
vis
,0,(vis));

509 
i
=0; i<
n
; i++)

510 
vis
[
uf
.
	`Á
(
i
)]=1;

511 
num
=0;

512 
i
=0; i<
n
; i++)

513 if(
vis
[
i
])

514 
num
++;

515 
ªt
=‘ë%
mod
+mod)%mod;

516 
™s
=(
ªt
);

517 if(
num
!=1)

518 
	`puts
("0");

520 
	`¥ötf
("%d\n",
™s
);

523 
	}
}

524 
	~<c°dio
>

525 
	#N
 1001

	)

526 
	#S
 100001

	)

528 
	sedge
{ 
	mf
,
	mt
,
	mn
; }
	ge
[
S
];

529 
	gli°
[
N
],
	gt›
,
	gy
[N],
	gm©ch
[N][N],
	g˙t
[N],
	glim
[N];

531 
	$ö£π
(
f
,
t
)

533 
e
[
t›
].
f
=f,e[t›].
t
=t;

534 
e
[
t›
].
n
=
li°
[
f
],list[f]=top++;

535 
	}
}

537 
	$föd
(
now
)

539 
i
=
li°
[
now
]; i!=-1; i=
e
[i].
n
)

541 
to
=
e
[
i
].to;

542 if(!
y
[
to
])

544 
v
[
to
]=1;

545 if(
˙t
[
to
]<
lim
[to])

547 
m©ch
[
to
][
˙t
[to]++]=
now
;

550 
j
=0; j<
˙t
[
to
]; j++)

551 if(
	`föd
(
m©ch
[
to
][
j
]))

553 
m©ch
[
to
][
j
]=
now
;

559 
	}
}

561 
	$mu…i_hung¨y
(
m
,
n
)

563 
ªt
=0;

564 
	`mem£t
(
˙t
,0,(cnt));

565 
i
=0; i<
m
; i++)

567 
	`mem£t
(
y
,0,(y));

568 if(
	`föd
(
i
))

569 
ªt
++;

571  
ªt
;

572 
	}
}

573 
	~<c°dio
>

574 
	~<Æg‹ôhm
>

575 
	#N
 100011

	)

576 
usög
 
«me•a˚
 
	g°d
;

578 
	g≥rm
[
N
],
	gd©
[N],
	g˙t
[20][N],
	gåì
[20][N];

579 
	$cmp
(
a
,
b
){ á<b; 
	}
}

581 
	$buûd
(
c
,
l
,
r
)

583 
mid
=(
l
+
r
)>>1,
lc
=mid-l+1,
Õ
ˆ,
Ω
=mid+1;

584 if(
l
==
r
) ;

585 
i
=
l
; i<=
mid
; i++)

586 if(
≥rm
[
i
]<≥rm[
mid
])

587 
lc
--;

588 
i
=
l
; i<=
r
; i++)

590 if(
i
==
l
)

591 
˙t
[
c
][
i
]=0;

593 
˙t
[
c
][
i
]=cnt[c][i-1];

594 if(
åì
[
c
][
i
]==
≥rm
[
mid
])

596 if(
lc
>0)

598 
lc
--;

599 
˙t
[
c
][
i
]++;

600 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

603 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

605 if(
åì
[
c
][
i
]<
≥rm
[
mid
])

607 
˙t
[
c
][
i
]++;

608 
åì
[
c
+1][
Õ
++]Òªe[c][
i
];

611 
åì
[
c
+1][
Ω
++]Òªe[c][
i
];

613 
	`buûd
(
c
+1,
l
,
mid
);

614 
	`buûd
(
c
+1,
mid
+1,
r
);

615 
	}
}

617 
	$quîy
(
c
,
l
,
r
,
ql
,
qr
,
k
)

619 if(
l
==
r
Ë 
≥rm
[l];

620 
c1
,
c2
=
˙t
[
c
][
qr
],
mid
=(
l
+
r
)>>1,
d1
=
ql
-l,
d2
=qr-ql+1;

621 if(
ql
==
l
Ë
c1
=0;

622 
c1
=
˙t
[
c
][
ql
-1];

623 
c2
-=
c1
;

624 if(
k
<=
c2
)

625  
	`quîy
(
c
+1,
l
,
mid
,l+
c1
,l+c1+
c2
-1,
k
);

627  
	`quîy
(
c
+1,
mid
+1,
r
,mid+1+
d1
-
c1
,mid+d1+
d2
-c1-
c2
,
k
-c2);

628 
	}
}

629 
	~<c°dio
>

630 
	~<cm©h
>

631 
	~<Æg‹ôhm
>

632 
	#N
 50000

	)

634 
usög
 
«me•a˚
 
	g°d
;

636 
	gd©
[
N
],
	gdp
[N][18],
	gmi
[N][18];

638 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

639 
ölöe
 
	$big
(
a
,
b
){ á>b?a:b; 
	}
}

640 
ölöe
 
	$smÆl
(
a
,
b
){ á<b?a:b; 
	}
}

642 
	$RMQ
(
n
)

644 
k
=(
	`log
(1.0*
n
)/log(2.0));

645 
i
=1; i<=
n
; i++)

646 
dp
[
i
][0]=
mi
[i][0]=
d©
[i];

647 
j
=1; j<=
k
; j++)

648 
i
=1; i<=
n
; i++)

650 if(
i
+
	`B
(
j
)-1>
n
)

652 
dp
[
i
][
j
]=
	`big
(dp[i][j-1],dp[i+
	`B
(j-1)][j-1]);

653 
mi
[
i
][
j
]=
	`smÆl
(mi[i][j-1],mi[i+
	`B
(j-1)][j-1]);

655 
	}
}

657 
	$quîy
(
l
,
r
,
èg
)

659 
k
=(
	`log
(1.0*(
r
-
l
+1))/log(2.0));

660 if(
èg
==1)

661  
	`big
(
dp
[
l
][
k
],dp[
r
-
	`B
(k)+1][k]);

663  
	`smÆl
(
mi
[
l
][
k
],mi[
r
-
	`B
(k)+1][k]);

664 
	}
}

665 
	~<c°dio
>

666 
	~<cm©h
>

667 
	~<c°rög
>

668 
	#N
 100001

	)

670 
	gs
[
N
];

671 
	gß
[
N
],
	gsb
[N],
	g˙t
[N],
	gønk
[N],
	gd©
[N],
	gdp
[N][20],
	gheight
[N];

672 
	$equÆ
(
i
,
j
,
l
,*
y
){  y[i]==y[j]&&y[i+l]==y[j+l]; 
	}
}

674 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

676 
	$ødix_s‹t
(
n
,
m
,
l
,*
x
,*
y
)

678 
k
,
i
;

679 
k
=0,
i
=
n
-
l
; i<n; i++Ë
y
[k++]=i;

680 
i
=0; i<
n
; i++)

681 if(
ß
[
i
]>=
l
Ë
y
[
k
++]=sa[i]-l;

682 
	`mem£t
(
˙t
,0,(cnt));

683 
i
=0; i<
n
; i++Ë
˙t
[
x
[i]]++;

684 
i
=1; i<
m
; i++Ë
˙t
[i]+=cnt[i-1];

685 
i
=
n
-1; i>=0; i--Ë
ß
[--
˙t
[
x
[
y
[i]]]]=y[i];

686 
	}
}

688 
	$da
(
n
,
m
)

690 *
t
,*
x
=
ønk
,*
y
=
sb
,
l
,
k
,
i
;

691 
i
=0; i<
n
; i++Ë
x
[i]=
s
[i],
ß
[i]=i;

692 
	`ødix_s‹t
(
n
,
m
,0,
x
,
y
);

693 
k
=
l
=1; k<
n
;Ü<<=1)

695 
	`ødix_s‹t
(
n
,
m
,
l
,
x
,
y
);

696 
t
=
x
,x=
y
,y=t;

697 
x
[
ß
[0]]=0,
k
=1;

698 
i
=1; i<
n
; i++)

699 
x
[
ß
[
i
]]=
	`equÆ
(ß[i],ß[i-1],
l
,
y
)?
k
-1:k++;

700 
m
=
k
;

702 
i
=0; i<
n
; i++Ë
ønk
[
ß
[i]]=i;

703 
	}
}

705 
	$ˇlc_height
(
n
)

707 
k
=0;

708 
i
=0; i<
n
-1; i++)

710 
k
=(k>0)?k-1:0;

711 
j
=
ß
[
ønk
[
i
]-1]; 
s
[i+
k
]==s[j+k]; k++);

712 
height
[
ønk
[
i
]]=
k
;

714 
height
[0]=0;

715 
	}
}

717 
	$RMQ
(
n
)

719 
k
=(
	`log
(1.0*
n
)/log(2.0)),
a
,
b
;

720 
i
=1; i<=
n
; i++)

721 
d©
[
i
]=
height
[i-1],
dp
[i][0]=i;

722 
j
=1; j<=
k
; j++)

723 
i
=1; i+
	`B
(
j
)-1<=
n
; i++)

725 
a
=
dp
[
i
][
j
-1];

726 
b
=
dp
[
i
+
	`B
(
j
-1)][j-1];

727 if(
d©
[
a
]<d©[
b
]Ë
dp
[
i
][
j
]=a;

728 
dp
[
i
][
j
]=
b
;

730 
	}
}

732 
	$RMQ_quîy
(
a
,
b
)

734 
k
=(
	`log
(1.0*(
b
-
a
+1))/log(2.0));

735 
a
=
dp
[a][
k
],
b
=dp[b-
	`B
(k)+1][k];

736  
d©
[
a
]>d©[
b
]?b:a;

737 
	}
}

739 
	$l˝
(
a
,
b
)

741 
t
;

742 
a
=
ønk
[a],
b
=rank[b];

743 if(
a
>
b
Ë
t
=a,a=b,b=t;

744  
height
[
	`RMQ_quîy
(
a
+1,
b
)];

745 
	}
}

747 
	~<c°dio
>

748 
	~<c°rög
>

749 
	#öf
 1e8

	)

750 
	#S
 1000001

	)

751 
	#N
 1001

	)

753 
	tñem_t
;

755 
	sedge
{ 
	mf
,
	mt
; 
ñem_t
 
	ml
; }
	ge
[
S
];

756 
	gt›
,
	gli°
[
N
],
	gid
[N],
	gv
[N],
	g¥e
[N];

757 
ñem_t
 
	gÀn
[
N
];

759 
ñem_t
 
	$ZL_MST
(
r
,
n
)

761 
√xä
,
f
,
t
;

762 
ñem_t
 
ªt
=0;

765 
	`mem£t
(
¥e
,-1,(pre));

766 
	`mem£t
(
v
,-1,(v));

767 
	`mem£t
(
id
,-1,(id));

768 
i
=0; i<
n
; i++)

769 
Àn
[
i
]=
öf
;

770 
i
=0; i<
t›
; i++)

772 
f
=
e
[
i
].f,
t
=e[i].t;

773 if(
f
==
t
) ;

774 if(
Àn
[
t
]>
e
[
i
].
l
)

775 
Àn
[
t
]=
e
[
i
].
l
,
¥e
[t]=
f
;

777 
i
=0; i<
n
; i++)

778 if(
¥e
[
i
]==-1&&i!=
r
)

780 
√xä
=0;

781 
Àn
[
r
]=0;

782 
i
=0; i<
n
; i++)

784 
ªt
+=
Àn
[
i
];

785 
now
=
i
;

786 ; 
v
[
now
]!=
i
&&
id
[now]==-1&&now!=
r
; )

788 
v
[
now
]=
i
;

789 
now
=
¥e
[now];

791 if(
now
!=
r
&&
id
[now]==-1)

793 
f
=
¥e
[
now
]; f!=now; f=pre[f])

794 
id
[
f
]=
√xä
;

795 
id
[
now
]=
√xä
++;

798 if(
√xä
==0) ;

799 
i
=0; i<
n
; i++)

800 if(
id
[
i
]<0)

801 
id
[
i
]=
√xä
++;

802 
i
=0; i<
t›
; i++)

804 
f
=
e
[
i
].f,
t
=e[i].t;

805 
e
[
i
].
f
=
id
[f];

806 
e
[
i
].
t
=
id
[t];

807 if(
f
==
t
) ;

808 
e
[
i
].
l
-=
Àn
[
t
];

810 
n
=
√xä
;

811 
r
=
id
[r];

813  
ªt
;

814 
	}
}

	@template_back/SELF_TEMP/trie_tree.cpp

3 
	~<c°dio
>

4 
	~<c°rög
>

5 
	#MAXN
 100011

	)

6 
	#MAXC
 11

	)

7 
	gt›
;

9 
	$gë_öd
(
x
){  x-'0'; 
	}
}

10 
	såõ_node
{ 
boﬁ
 
	mis
; 
	mn
[
MAXC
]; }
	gno
[
MAXN
];

12 
	såõ_åì


14 
åõ_node
 
	mr
;

15 
åõ_åì
(){ 
	mr
=
no
[0]; }

16 
ö£π
(
s
[])

18 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

19 
	mi
=0; i<
	ml
; i++)

21 if(
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]<0)

23 
	mno
[
t›
].
	mis
=0;

24 
	mno
[
p
].
	mn
[
gë_öd
(
s
[
i
])]=
t›
++;

26 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

28 
	mno
[
p
].
	mis
=1;

31 
£¨ch
(
s
[])

33 
	mi
,
	ml
=
°æí
(
s
),
	mp
=0;

34 
	mi
=0; i<
	ml
&&
	mp
!=-1; i++)

35 
	mp
=
no
[
p
].
n
[
gë_öd
(
s
[
i
])];

36  
	mp
!=-1&&
no
[
p
].
is
==1;

38 }
	gåõ
;

40 
	$öô
()

42 
i
,
j
;

43 
i
=0; i<
MAXN
; i++)

44 
no
[
i
].
is
=
j
=0; j<
MAXC
; j++)

45 
no
[
i
].
n
[
j
]=-1;

46 
t›
=1;

47 
	}
}

49 
	$maö
()

52 
	}
}

	@template_back/SELF_TEMP/union_find_set.cpp

1 
	~<c°dio
>

2 
	~<c°rög
>

3 
	#MAXN
 100011

	)

6 
	suföd


8 
	mp
[
MAXN
],
	mt
;

9 
öi
(){ 
mem£t
(
p
,0,(p)); }

10 
run
(&
x
)

12 
	my
=
x
;

13 ; 
	mp
[
t
=
x
]; 
	mx
=
p
[x],p[t]=(p[x]?p[x]:x));

14 ; 
	mp
[
t
=
y
];Ö[y]=
x
,
	my
=
p
[t]);

16 
is‰õnd
(
i
,
j
){ 
run
(i);Ñun(j);  
	mi
==j&&i; }

17 
£t‰õnd
(
i
,
j
){ 
run
(i);Ñun(j); 
	mp
[i]=(i==j)?0:j; }

18 }
	guf
;

21 
	suföd


23 
	mp
[
N
],
	mt
;

24 
öô
()

26 
	mi
=0; i<=
N
; i++)

27 
	mp
[
i
]=i;

29 
run
(&
x
)

31 
	my
=
x
;

32 ; 
	mp
[
t
=
x
]!=x; 
	mx
=
p
[x],p[t]=p[x]);

33 ; 
	mp
[
t
=
y
]!=
x
;Ö[y]=x,
	my
=
p
[t]);

35 
is‰õnd
(
i
,
j
)

37 
run
(
i
);Ñun(
j
);

38  
	mi
==
j
;

40 
£t‰õnd
(
i
,
j
)

42 
run
(
i
);Ñun(
j
);

43 
	mp
[
i
]=
p
[
j
];

45 }
	guf
;

48 
ölöe
 
	$sig
(
x
){  x>0?1:-1; 
	}
}

49 
ölöe
 
	$abs
(
x
){  x>0?x:-x; 
	}
}

51 
	suföd


53 
	mp
[
MAXN
],
	mt
;

55 
öô
(){ 
mem£t
(
p
,0,(p)); }

57 
_run
(&
x
)

59  ; 
	mp
[
t
=
abs
(
x
)]; 
	mx
=
sig
(x)*
p
[abs(x)],p[t]=sig(p[t])*(p[abs(x)]?p[abs(x)]:abs(p[t])));

62 
_run_bŸh
(&
i
,&
j
)

64 
_run
(
i
); _run(
j
);

67 
_£t_side
(
x
,
i
,
j
)

69 
	mp
[
abs
(
i
)]=
sig
(i)*◊bs(i)=˜bs(
j
)?0:(
x
*j));

73 
_judge_side
(
x
,
i
,
j
)

75  ((
	mi
==
x
*
j
)&&
i
);

78 
£t_‰õnd
(
i
,
j
)

80 
_run_bŸh
(
i
,
j
);

81 
_£t_side
(1,
i
,
j
);

82  !
_judge_side
(-1,
i
,
j
);

85 
£t_íemy
(
i
,
j
)

87 
_run_bŸh
(
i
,
j
);

88 
_£t_side
(-1,
i
,
j
);

89  !
_judge_side
(1,
i
,
j
);

92 
is_‰õnd
(
i
,
j
)

94 
_run_bŸh
(
i
,
j
);

95  
_judge_side
(1,
i
,
j
);

98 
is_íemy
(
i
,
j
)

100 
_run_bŸh
(
i
,
j
);

101  
_judge_side
(-1,
i
,
j
);

103 }
	guf
;

	@template_back/STL/string.cpp

1 
	g°rög
Á±ªÁöÑÊûÑÈÄ†ÂáΩÊï∞Ôºö

2 
°rög
(c⁄° *
s
);

3 
°rög
(
n
,
c
);

4 Ê≠§Â§ñÔºå
	g°rög
Á±ªËøòÊîØÊåÅÈªòËÆ§ÊûÑÈÄ†ÂáΩÊï∞ÂíåÂ§çÂà∂ÊûÑÈÄ†ÂáΩÊï∞ÔºåÂ¶Ç
°rög
 
	gs1
Ôºõ°rög 
	gs2
="hñlo"ÔºõÈÉΩÊòØÊ≠£Á°ÆÁöÑÂÜôÊ≥ï„ÄÇÂΩìÊûÑÈÄ†ÁöÑ°rögÂ§™ÈïøËÄåÊó†Ê≥ïË°®ËææÊó∂‰ºöÊäõÂá∫
Àngth_îr‹
ÂºÇÂ∏∏

6 
°rög
Á±ªÁöÑÂ≠óÁ¨¶Êìç‰ΩúÔºö

7 c⁄° &
›î©‹
[](
n
)const;

8 c⁄° &
	$©
(
n
)const;

9 &
›î©‹
[](
n
);

10 &
	`©
(
n
);

11 
›î©‹
[]Âíå
	`©
()ÂùáËøîÂõûÂΩìÂâçÂ≠óÁ¨¶‰∏≤‰∏≠Á¨¨
n
‰∏™Â≠óÁ¨¶ÁöÑ‰ΩçÁΩÆÔºå‰ΩÜ
©
ÂáΩÊï∞Êèê‰æõËåÉÂõ¥Ê£ÄÊü•ÔºåÂΩìË∂äÁïåÊó∂‰ºöÊäõÂá∫
out_of_ønge
ÂºÇÂ∏∏Ôºå‰∏ãÊ†áËøêÁÆóÁ¨¶[]‰∏çÊèê‰æõÊ£ÄÊü•ËÆøÈóÆ„ÄÇ

12 c⁄° *
	$d©a
()const;

13 c⁄° *
	$c_°r
()const;

14 
	$c›y
(*
s
, 
n
, 
pos
 = 0) const;

16 
°rög
ÁöÑÁâπÊÄßÊèèËø∞:

17 
	$ˇ∑côy
()const;

18 
	$max_size
()const;

19 
	$size
()const;

20 
	$Àngth
()const;

21 
boﬁ
 
	$em±y
()const;

22 
	`ªsize
(
Àn
,
c
);

24 
°rög
Á±ªÁöÑËæìÂÖ•ËæìÂá∫Êìç‰Ωú:

25 
°rög
Á±ªÈáçËΩΩËøêÁÆóÁ¨¶
›î©‹
>>Áî®‰∫éËæìÂÖ•ÔºåÂêåÊ†∑ÈáçËΩΩËøêÁÆóÁ¨¶operator<<Áî®‰∫éËæìÂá∫Êìç‰Ωú„ÄÇ

26 ÂáΩÊï∞
	`gëlöe
(
i°ªam
 &
ö
,
°rög
 &
s
);Áî®‰∫é‰ªéËæìÂÖ•ÊµÅin‰∏≠ËØªÂèñÂ≠óÁ¨¶‰∏≤Âà∞s‰∏≠Ôºå‰ª•Êç¢Ë°åÁ¨¶'\n'ÂàÜÂºÄ„ÄÇ

28 
°rög
ÁöÑËµãÂÄºÔºö

29 
°rög
 &
›î©‹
=(c⁄° såög &
s
);

30 
°rög
 &
	`assign
(c⁄° *
s
);

31 
°rög
 &
	`assign
(c⁄° *
s
,
n
);

32 
°rög
 &
	`assign
(c⁄° såög &
s
);

33 
°rög
 &
	`assign
(
n
,
c
);

34 
°rög
 &
	`assign
(c⁄° såög &
s
,
°¨t
,
n
);

35 
°rög
 &
	`assign
(
c⁄°_ôî©‹
 
fú°
,
c⁄°_ôît‹
 
œ°
);

37 
°rög
ÁöÑËøûÊé•Ôºö

38 
°rög
 &
›î©‹
+=(c⁄° såög &
s
);

39 
°rög
 &
	`≠≥nd
(c⁄° *
s
);

40 
°rög
 &
	`≠≥nd
(c⁄° *
s
,
n
);

41 
°rög
 &
	`≠≥nd
(c⁄° såög &
s
);

42 
°rög
 &
	`≠≥nd
(c⁄° såög &
s
,
pos
,
n
);

43 
°rög
 &
	`≠≥nd
(
n
,
c
);

44 
°rög
 &
	`≠≥nd
(
c⁄°_ôî©‹
 
fú°
,c⁄°_ôî©‹ 
œ°
);

46 
°rög
ÁöÑÊØîËæÉÔºö

47 
boﬁ
 
›î©‹
==(c⁄° 
°rög
 &
s1
,c⁄° såög &
s2
)const;

49 
	$com∑ª
(c⁄° 
°rög
 &
s
) const;

50 
	$com∑ª
(
pos
, 
n
,c⁄° 
°rög
 &
s
)const;

51 
	$com∑ª
(
pos
, 
n
,c⁄° 
°rög
 &
s
,
pos2
,
n2
)const;

52 
	$com∑ª
(c⁄° *
s
) const;

53 
	$com∑ª
(
pos
, 
n
,c⁄° *
s
) const;

54 
	$com∑ª
(
pos
, 
n
,c⁄° *
s
, 
pos2
) const;

55 
com∑ª
ÂáΩÊï∞Âú®>Êó∂ËøîÂõû1Ôºå<Êó∂ËøîÂõû-1Ôºå==Êó∂ËøîÂõû0

57 
°rög
ÁöÑÂ≠ê‰∏≤Ôºö

58 
°rög
 
	$sub°r
(
pos
 = 0,
n
 = 
≈os
) const;

61 
°rög
ÁöÑ‰∫§Êç¢Ôºö

62 
	`sw≠
(
°rög
 &
s2
);

64 
°rög
Á±ªÁöÑÊü•ÊâæÂáΩÊï∞Ôºö

66 
	$föd
(
c
, 
pos
 = 0) const;

67 
	$föd
(c⁄° *
s
, 
pos
 = 0) const;

68 
	$föd
(c⁄° *
s
, 
pos
, 
n
) const;

69 
	$föd
(c⁄° 
°rög
 &
s
, 
pos
 = 0) const;

72 
	$rföd
(
c
, 
pos
 = 
≈os
) const;

73 
	$rföd
(c⁄° *
s
, 
pos
 = 
≈os
) const;

74 
	$rföd
(c⁄° *
s
, 
pos
, 
n
 = 
≈os
) const;

75 
	$rföd
(c⁄° 
°rög
 &
s
,
pos
 = 
≈os
) const;

78 
	$föd_fú°_of
(
c
, 
pos
 = 0) const;

79 
	$föd_fú°_of
(c⁄° *
s
, 
pos
 = 0) const;

80 
	$föd_fú°_of
(c⁄° *
s
, 
pos
, 
n
) const;

81 
	$föd_fú°_of
(c⁄° 
°rög
 &
s
,
pos
 = 0) const;

84 
	$föd_fú°_nŸ_of
(
c
, 
pos
 = 0) const;

85 
	$föd_fú°_nŸ_of
(c⁄° *
s
, 
pos
 = 0) const;

86 
	$föd_fú°_nŸ_of
(c⁄° *
s
, 
pos
,
n
) const;

87 
	$föd_fú°_nŸ_of
(c⁄° 
°rög
 &
s
,
pos
 = 0) const;

90 
	$föd_œ°_of
(
c
, 
pos
 = 
≈os
) const;

91 
	$föd_œ°_of
(c⁄° *
s
, 
pos
 = 
≈os
) const;

92 
	$föd_œ°_of
(c⁄° *
s
, 
pos
, 
n
 = 
≈os
) const;

93 
	$föd_œ°_of
(c⁄° 
°rög
 &
s
,
pos
 = 
≈os
) const;

95 
	$föd_œ°_nŸ_of
(
c
, 
pos
 = 
≈os
) const;

96 
	$föd_œ°_nŸ_of
(c⁄° *
s
, 
pos
 = 
≈os
) const;

97 
	$föd_œ°_nŸ_of
(c⁄° *
s
, 
pos
, 
n
) const;

98 
	$föd_œ°_nŸ_of
(c⁄° 
°rög
 &
s
,
pos
 = 
≈os
) const;

101 
°rög
Á±ªÁöÑÊõøÊç¢ÂáΩÊï∞Ôºö

103 
°rög
 &
	`ª∂a˚
(
p0
, 
n0
,c⁄° *
s
);

104 
°rög
 &
	`ª∂a˚
(
p0
, 
n0
,c⁄° *
s
, 
n
);

105 
°rög
 &
	`ª∂a˚
(
p0
, 
n0
,c⁄° såög &
s
);

106 
°rög
 &
	`ª∂a˚
(
p0
, 
n0
,c⁄° såög &
s
, 
pos
, 
n
);

107 
°rög
 &
	`ª∂a˚
(
p0
, 
n0
,
n
, 
c
);

108 
°rög
 &
	`ª∂a˚
(
ôî©‹
 
fú°0
, iãøt‹ 
œ°0
,c⁄° *
s
);

109 
°rög
 &
	`ª∂a˚
(
ôî©‹
 
fú°0
, iãøt‹ 
œ°0
,c⁄° *
s
, 
n
);

110 
°rög
 &
	`ª∂a˚
(
ôî©‹
 
fú°0
, iãøt‹ 
œ°0
,c⁄° såög &
s
);

111 
°rög
 &
	`ª∂a˚
(
ôî©‹
 
fú°0
, iãøt‹ 
œ°0
,
n
, 
c
);

112 
°rög
 &
	`ª∂a˚
(
ôî©‹
 
fú°0
, iãøt‹ 
œ°0
,
c⁄°_ôî©‹
 
fú°
, c⁄°_ôî©‹ 
œ°
);

114 
°rög
Á±ªÁöÑÊèíÂÖ•ÂáΩÊï∞Ôºö

116 
°rög
 &
	`ö£π
(
p0
, c⁄° *
s
);

117 
°rög
 &
	`ö£π
(
p0
, c⁄° *
s
, 
n
);

118 
°rög
 &
	`ö£π
(
p0
,c⁄° såög &
s
);

119 
°rög
 &
	`ö£π
(
p0
,c⁄° såög &
s
, 
pos
, 
n
);

121 
°rög
 &
	`ö£π
(
p0
, 
n
, 
c
);

122 
ôî©‹
 
	`ö£π
(ôî©‹ 
ô
, 
c
);

123 
	`ö£π
(
ôî©‹
 
ô
, 
c⁄°_ôî©‹
 
fú°
, c⁄°_ôî©‹ 
œ°
);

124 
	`ö£π
(
ôî©‹
 
ô
, 
n
, 
c
);

126 
°rög
Á±ªÁöÑÂà†Èô§ÂáΩÊï∞

128 
ôî©‹
 
	`îa£
(ôî©‹ 
fú°
, iãøt‹ 
œ°
);

129 
ôî©‹
 
	`îa£
(ôî©‹ 
ô
);

130 
°rög
 &
	`îa£
(
pos
 = 0, 
n
 = 
≈os
);

132 
°rög
Á±ªÁöÑËø≠‰ª£Âô®Â§ÑÁêÜÔºö

134 
°rög
Á±ªÊèê‰æõ‰∫ÜÂêëÂâçÂíåÂêëÂêéÈÅçÂéÜÁöÑËø≠‰ª£Âô®
ôî©‹
ÔºåËø≠‰ª£Âô®Êèê‰æõ‰∫ÜËÆøÈóÆÂêÑ‰∏™Â≠óÁ¨¶ÁöÑËØ≠Ê≥ïÔºåÁ±ª‰ºº‰∫éÊåáÈíàÊìç‰ΩúÔºåËø≠‰ª£Âô®‰∏çÊ£ÄÊü•ËåÉÂõ¥„ÄÇ

135 Áî®
°rög
::
ôî©‹
Êàñ°rög::
c⁄°_ôî©‹
Â£∞ÊòéËø≠‰ª£Âô®ÂèòÈáèÔºåconst_iterator‰∏çÂÖÅËÆ∏ÊîπÂèòËø≠‰ª£ÁöÑÂÜÖÂÆπ„ÄÇÂ∏∏Áî®Ëø≠‰ª£Âô®ÂáΩÊï∞ÊúâÔºö

136 
c⁄°_ôî©‹
 
	$begö
()const;

137 
ôî©‹
 
	`begö
();

138 
c⁄°_ôî©‹
 
	$íd
()const;

139 
ôî©‹
 
	`íd
();

140 
c⁄°_ôî©‹
 
	$rbegö
()const;

141 
ôî©‹
 
	`rbegö
();

142 
c⁄°_ôî©‹
 
	$ªnd
()const;

143 
ôî©‹
 
	`ªnd
();

144 
rbegö
Âíå
ªnd
Áî®‰∫é‰ªéÂêéÂêëÂâçÁöÑËø≠‰ª£ËÆøÈóÆÔºåÈÄöËøáËÆæÁΩÆËø≠‰ª£Âô®
°rög
::
ªvî£_ôî©‹
,°rög::
c⁄°_ªvî£_ôî©‹
ÂÆûÁé∞

148 ÈÄöËøáÂÆö‰πâ
o°rög°ªam
Âíå
i°rög°ªam
ÂèòÈáèÂÆûÁé∞Ôºå<
s°ªam
>Â§¥Êñá‰ª∂‰∏≠

150 
°rög
 
	`öput
("hello,this isáÅest");

151 
i°rög°ªam
 
	`is
(
öput
);

152 
°rög
 
s1
,
s2
,
s3
,
s4
;

153 
is
>>
s1
>>
s2
>>
s3
>>
s4
;

154 
o°rög°ªam
 
os
;

155 
os
<<
s1
<<
s2
<<
s3
<<
s4
;

156 
cout
<<
os
.
	`°r
();

	@topcoder/srm_codes/srm550/EasyConversionMachine.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 ˛as†
	cEasyC⁄vîsi⁄Machöe


37 
	mpublic
:

38 
°rög
 
	$isItPossibÀ
(
°rög
 
‹igöÆW‹d
, såög 
föÆW‹d
, 
k
)

40 
n
=
‹igöÆW‹d
.
	`Àngth
();

41 
d
=0;

42 
i
=0; i<
n
; i++)

43 if(
‹igöÆW‹d
[
i
]!=
föÆW‹d
[i])

44 
d
++;

45 if(
d
>
k
)

47 if((
k
-
d
)%2)

53 
public
:

54 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

55 
	g¥iv©e
:

56 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

57 
	$vîify_ˇ£
(
Ca£
, c⁄° 
°rög
 &
Ex≥˘ed
, c⁄° såög &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

58 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Arg0
 = "Øbabba"; såög 
Arg1
 = "bbbbbbb"; 
Arg2
 = 2; såög 
Arg3
 = "IMPOSSIBLE"; 
	`vîify_ˇ£
(0, Arg3, 
	`isItPossibÀ
(Arg0, Arg1, Arg2)); 
	}
}

59 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Arg0
 = "Øbb"; såög 
Arg1
 = "Øbb"; 
Arg2
 = 1; såög 
Arg3
 = "IMPOSSIBLE"; 
	`vîify_ˇ£
(1, Arg3, 
	`isItPossibÀ
(Arg0, Arg1, Arg2)); 
	}
}

60 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Arg0
 = "ØØabØ"; såög 
Arg1
 = "bbbbbabb"; 
Arg2
 = 8; såög 
Arg3
 = "POSSIBLE"; 
	`vîify_ˇ£
(2, Arg3, 
	`isItPossibÀ
(Arg0, Arg1, Arg2)); 
	}
}

61 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Arg0
 = "Øa"; såög 
Arg1
 = "bab"; 
Arg2
 = 4; såög 
Arg3
 = "POSSIBLE"; 
	`vîify_ˇ£
(3, Arg3, 
	`isItPossibÀ
(Arg0, Arg1, Arg2)); 
	}
}

62 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Arg0
 = "ØbabbabØ"; såög 
Arg1
 = "abbbbØbab"; 
Arg2
 = 9; såög 
Arg3
 = "IMPOSSIBLE"; 
	`vîify_ˇ£
(4, Arg3, 
	`isItPossibÀ
(Arg0, Arg1, Arg2)); 
	}
}

69 
	$maö
()

71 
EasyC⁄vîsi⁄Machöe
 
___ã°
;

72 
___ã°
.
	`run_ã°
(-1);

74 
	}
}

	@topcoder/srm_codes/srm550/RotatingBot.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 2010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
	gm©
[
N
][N];

36 
	snode
{ 
	mx
,
	my
; }
	g°
,
	gnow
;

37 
	gdú
[4][2]={{0,1},{-1,0},{0,-1},{1,0}},
	gl
,
	gr
,
	gh
,
	gb
;

39 ˛as†
	cRŸ©ögBŸ


41 
	mpublic
:

42 
ˇn
(
ve˘‹
<> 
moves
,
n
)

44 
	mx
=0,
	my
=0,
	md
;

45 
	m°
.
	mx
=
°
.
y
=1000;

46 
	mnow
.
	mx
=
now
.
y
=1000;

47 
mem£t
(
m©
,0,(mat));

48 
	mm©
[
°
.
x
][°.
y
]=1;

49 
	mi
=0; i<
	mn
; i++)

51 
	md
=
i
%4;

52 
	mj
=1; j<=
moves
[
i
]; j++)

54 
	mx
=
now
.
x
+
j
*
dú
[
d
][0],
	my
Úow.
y
+j*dir[d][1];

55 if(
	mm©
[
x
][
y
])

57 
	mm©
[
x
][
y
]=1;

59 
	mnow
.
	mx
=
x
,now.
	my
=
y
;

64 
	$öbﬂrd
(
x
,
y
)

66  
l
<=
y
&&y<=
r
&&
h
<=
x
&&x<=
b
;

67 
	}
}

69 
imp
(
ve˘‹
<> 
moves
,
n
)

72 
	gx
=0,
	gy
=0,
	gd
;

73 
	g°
.
	gx
=
°
.
y
=1000;

74 
	gnow
.
	gx
=
now
.
y
=1000;

75 
mem£t
(
m©
,0,(mat));

76 
	gm©
[
°
.
x
][°.
y
]=1;

77 
	gi
=0; i<
	gn
; i++)

79 
	gd
=
i
%4;

80 
	gj
=1; j<=
moves
[
i
]; j++)

82 
	gx
=
now
.
x
+
j
*
dú
[
d
][0],
	gy
Úow.
y
+j*dir[d][1];

83 
	gm©
[
x
][
y
]=1;

85 
	gnow
.
	gx
=
x
,now.
	gy
=
y
;

86 
	gx
=
x
+
dú
[
d
][0],
	gy
=
y
+dir[d][1];

88 if(
öbﬂrd
(
x
,
y
)&&(!
	gm©
[x][y])&&(
	gi
+1<
	gn
))

94 
möAªa
(
ve˘‹
 <> 
moves
)

96 
	gn
=
moves
.
size
();

97 if(!
ˇn
(
moves
,
n
))

99 
	gl
=
N
,
	gr
=-N,
	gh
=N,
	gb
=-N;

100 
	gi
=0; i<
	gN
; i++)

101 
	gj
=0; j<
	gN
; j++)

102 if(
	gm©
[
i
][
j
])

104 
	gl
=
mö
(
j
,
l
);

105 
	gr
=
max
(
j
,
r
);

106 
	gh
=
mö
(
h
,
i
);

107 
	gb
=
max
(
b
,
i
);

109 if(
imp
(
moves
,
n
))

111  (
	gr
-
	gl
+1)*(
	gb
-
	gh
+1);

115 
	gpublic
:

116 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); i‡((Ca£ =-1Ë|| (Ca£ =5)Ë
	`ã°_ˇ£_5
(); i‡((Ca£ =-1Ë|| (Ca£ =6)Ë
	`ã°_ˇ£_6
(); i‡((Ca£ =-1Ë|| (Ca£ =7)Ë
	`ã°_ˇ£_7
(); 
	}
}

117 
	g¥iv©e
:

118 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

119 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

120 
	$ã°_ˇ£_0
(Ë{ 
Aº0
[] = {15}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 16; 
	`vîify_ˇ£
(0, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

121 
	$ã°_ˇ£_1
(Ë{ 
Aº0
[] = {3,10}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 44; 
	`vîify_ˇ£
(1, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

122 
	$ã°_ˇ£_2
(Ë{ 
Aº0
[] = {1,1,1,1}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = -1; 
	`vîify_ˇ£
(2, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

123 
	$ã°_ˇ£_3
(Ë{ 
Aº0
[] = {9,5,11,10,11,4,10}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 132; 
	`vîify_ˇ£
(3, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

124 
	$ã°_ˇ£_4
(Ë{ 
Aº0
[] = {12,1,27,14,27,12,26,11,25,10,24,9,23,8,22,7,21,6,20,5,19,4,18,3,17,2,16,1,15}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 420; 
	`vîify_ˇ£
(4, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

125 
	$ã°_ˇ£_5
(Ë{ 
Aº0
[] = {8,6,6,1}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = -1; 
	`vîify_ˇ£
(5, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

126 
	$ã°_ˇ£_6
(Ë{ 
Aº0
[] = {8,6,6}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 63; 
	`vîify_ˇ£
(6, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

127 
	$ã°_ˇ£_7
(Ë{ 
Aº0
[] = {5,4,5,3,3}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 30; 
	`vîify_ˇ£
(7, Arg1, 
	`möAªa
(
Arg0
)); 
	}
}

134 
	$maö
()

136 
RŸ©ögBŸ
 
___ã°
;

137 
___ã°
.
	`run_ã°
(-1);

139 
	}
}

	@topcoder/srm_codes/srm550/TopView.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
	gm©
[
N
][N];

31 
	gvis
[
N
],
	gö
[N],
	gèg
[N];

32 
	gmp
[
N
][N];

33 
	gve˘‹
<> 
	gñe
;

34 
°rög
 
	gªt
;

36 
	$cmp
(
a
,
b
){ á<b; 
	}
}

38 ˛as†
	cT›Võw


40 
	mpublic
:

41 
	$t›os‹t
()

43 
˙t
=0,
âl
=
ñe
.
	`size
(),
i
,
now
;

44 
	`mem£t
(
èg
,0,(tag));

45 ; 
˙t
<
âl
; )

47 
i
=0; i<
âl
; i++)

48 if(!
èg
[
i
]&&
ö
[
ñe
[i]]==0)

50 if(
i
>=
âl
)  0;

51 
now
=
i
;

52 
èg
[
now
]=1;

53 
ªt
.
	`push_back
(
ñe
[
now
]+'0');

54 
˙t
++;

55 
i
=0; i<
âl
; i++)

56 if(
mp
[
ñe
[
now
]][ñe[
i
]]&&!
èg
[i])

57 
ö
[
ñe
[
i
]]--;

62 
°rög
 
	`födOrdî
(
ve˘‹
 <°rög> 
grid
)

64 
m
=
grid
.
	`size
(),
n
=grid[0].
	`Àngth
();

65 
	`mem£t
(
vis
,0,(vis));

66 
	`mem£t
(
mp
,0,(mp));

67 
	`mem£t
(
ö
,0,(in));

68 
ñe
.
	`˛ór
();

69 
ªt
.
	`˛ór
();

70 
i
=0; i<
m
; i++)

71 
j
=0; j<
n
; j++)

73 if(
grid
[
i
][
j
]=='.')

75 
m©
[
i
][
j
]=-1;

78 if(!
vis
[
grid
[
i
][
j
]])

80 
m©
[
i
][
j
]=
grid
[i][j]-'0';

81 
vis
[
grid
[
i
][
j
]]=1;

82 
ñe
.
	`push_back
(
m©
[
i
][
j
]);

85 
m©
[
i
][
j
]=
grid
[i][j]-'0';

87 
	`s‹t
(
ñe
.
	`begö
(),ñe.
	`íd
(),
cmp
);

88 
k
=0; k<
ñe
.
	`size
(); k++)

90 
mxx
=-1,
mix
=
N
,
mxy
=-1,
miy
=N;

91 
i
=0; i<
m
; i++)

92 
j
=0; j<
n
; j++)

93 if(
m©
[
i
][
j
]==
ñe
[
k
])

95 
mxx
=
	`max
(mxx,
i
);

96 
mix
=
	`mö
(mix,
i
);

97 
mxy
=
	`max
(mxy,
j
);

98 
miy
=
	`mö
(miy,
j
);

100 
i
=
mix
; i<=
mxx
; i++)

101 
j
=
miy
; j<=
mxy
; j++)

103 if(
m©
[
i
][
j
]<0)

105 
ö
[
ñe
[
k
]]=
öf
;

107 if(
m©
[
i
][
j
]!=
ñe
[
k
])

109 
mp
[
ñe
[
k
]][
m©
[
i
][
j
]]=1;

112 
i
=0; i<
ñe
.
	`size
(); i++)

113 if(
mp
[
ñe
[
k
]][ñe[
i
]])

114 
ö
[
ñe
[
i
]]++;

116 if(
	`t›os‹t
())

117  
ªt
;

120 
	}
}

123 
	gpublic
:

124 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
();

125 i‡((
Ca£
 =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
();

126 
	}
}

128 
	g¥iv©e
:

129 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

130 
	$vîify_ˇ£
(
Ca£
, c⁄° 
°rög
 &
Ex≥˘ed
, c⁄° såög &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

131 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Aº0
[] = {"..AA..",

133 ".CAAC."}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); såög 
Arg1
 = "CA"; 
	`vîify_ˇ£
(0, Arg1, 
	`födOrdî
(
Arg0
)); 
	}
}

134 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Aº0
[] = {"..47..",

136 ; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); såög 
Arg1
 = "ERROR!"; 
	`vîify_ˇ£
(1, Arg1, 
	`födOrdî
(
Arg0
)); 
	}
}

137 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Aº0
[] = {"bbb666",

141 "a65555"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); såög 
Arg1
 = "65AXab"; 
	`vîify_ˇ£
(2, Arg1, 
	`födOrdî
(
Arg0
)); 
	}
}

142 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Aº0
[] = {"aabbaaaaaaaaaaaaaaaaaa",

154 "ØØØØØØØØØØØ"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); såög 
Arg1
 = "ERROR!"; 
	`vîify_ˇ£
(3, Arg1, 
	`födOrdî
(
Arg0
)); 
	}
}

155 
	$ã°_ˇ£_4
(){ 
°rög
 
Aº0
[]={"aabbaaaaaaaaaaaaaaaaaa", "aabbccccccccccccccaaaa", "aab11111ccccccccccaaaa", "aab12221ccccccccccaaaa", "aab12221ccccccccccaaaa", "aab12221ccccccccccaaaa", "aab12221ccccccccccaaaa", "aab12221ccccccccccaaaa", "aab12221ddddddddddaaaa", "aab13331DDDDDDDDDDaaaa", "aab13331DDDDDDDDDDaaaa", "aa.11111DDDDDDDDDDaaaa", "aaaaaaaaaaaaaaaaaaaaaa"};

156 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); såög 
Arg1
 = "ERROR!"; 
	`vîify_ˇ£
(4, Arg1, 
	`födOrdî
(
Arg0
));

157 
	}
}

163 
	$maö
()

165 
T›Võw
 
___ã°
;

166 
___ã°
.
	`run_ã°
(-1);

168 
	}
}

	@topcoder/srm_codes/srm553/PlatypusDuckAndBeaver.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 ˛as†
	cPœtypusDuckAndBóvî


37 
	mpublic
:

38 
	$möimumAnimÆs
(
webbedFìt
, 
duckBûls
, 
bóvîTaûs
)

40 
f
=
webbedFìt
,
d
=
duckBûls
,
b
=
bóvîTaûs
;

41 
tf
,
td
,
tb
;

42 
a
,
bb
,
c
;

43 
i
=0; 4*i<=
f
; i++)

45 
tf
=
f
-4*
i
,
td
=
d
-i,
tb
=
b
-i;

46 if(2*
td
+4*
tb
==
tf
)

48 
a
=
td
,
bb
=
tb
,
c
=
i
;

52  
a
+
bb
+
c
;

55 
public
:

56 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

57 
	g¥iv©e
:

58 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

59 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

60 
	$ã°_ˇ£_0
(Ë{ 
Arg0
 = 4; 
Arg1
 = 1; 
Arg2
 = 1; 
Arg3
 = 1; 
	`vîify_ˇ£
(0, Arg3, 
	`möimumAnimÆs
(Arg0, Arg1, Arg2)); 
	}
}

61 
	$ã°_ˇ£_1
(Ë{ 
Arg0
 = 0; 
Arg1
 = 0; 
Arg2
 = 0; 
Arg3
 = 0; 
	`vîify_ˇ£
(1, Arg3, 
	`möimumAnimÆs
(Arg0, Arg1, Arg2)); 
	}
}

62 
	$ã°_ˇ£_2
(Ë{ 
Arg0
 = 10; 
Arg1
 = 2; 
Arg2
 = 2; 
Arg3
 = 3; 
	`vîify_ˇ£
(2, Arg3, 
	`möimumAnimÆs
(Arg0, Arg1, Arg2)); 
	}
}

63 
	$ã°_ˇ£_3
(Ë{ 
Arg0
 = 60; 
Arg1
 = 10; 
Arg2
 = 10; 
Arg3
 = 20; 
	`vîify_ˇ£
(3, Arg3, 
	`möimumAnimÆs
(Arg0, Arg1, Arg2)); 
	}
}

64 
	$ã°_ˇ£_4
(Ë{ 
Arg0
 = 1000; 
Arg1
 = 200; 
Arg2
 = 200; 
Arg3
 = 300; 
	`vîify_ˇ£
(4, Arg3, 
	`möimumAnimÆs
(Arg0, Arg1, Arg2)); 
	}
}

71 
	$maö
()

73 
PœtypusDuckAndBóvî
 
___ã°
;

74 
___ã°
.
	`run_ã°
(-1);

76 
	}
}

	@topcoder/srm_codes/srm553/SafeRemoval.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
	gdp
[51][51][51][51];

36 
	gd©
[
N
],
	gªt
,
	gn
,
	gsum
[4][51],
	gnum
[4];

37 
	$cmp
(
a
,
b
){ á>b; 
	}
}

39 ˛as†
	cSa„RemovÆ


41 
	mpublic
:

42 
	$dfs
(
now
,
a
,
b
,
c
,
d
,
k
)

44 
ªs
=0;

45 if(
dp
[
a
][
b
][
c
][
d
]>=0)

46  
dp
[
a
][
b
][
c
][
d
];

47 if((
b
*1+
c
*2+
d
*3)%4==0)

48  
dp
[
a
][
b
][
c
][
d
]=0;

49 if(
now
==
k
)

51 
ªt
=
	`max
‘ë,
sum
[0][
a
]+sum[1][
b
]+sum[2][
c
]+sum[3][
d
]);

52  
dp
[
a
][
b
][
c
][
d
]=1;

54 if(
a
>0)

55 
ªs
=
	`max
(
	`dfs
(
now
+1,
a
-1,
b
,
c
,
d
,
k
),res);

56 if(
b
>0)

57 
ªs
=
	`max
(
	`dfs
(
now
+1,
a
,
b
-1,
c
,
d
,
k
),res);

58 if(
c
>0)

59 
ªs
=
	`max
(
	`dfs
(
now
+1,
a
,
b
,
c
-1,
d
,
k
),res);

60 if(
d
>0)

61 
ªs
=
	`max
(
	`dfs
(
now
+1,
a
,
b
,
c
,
d
-1,
k
),res);

62  
dp
[
a
][
b
][
c
][
d
]=
ªs
;

65 
	`ªmoveThem
(
ve˘‹
 <> 
£q
, 
k
)

67 
n
=
£q
.
	`size
();

68 
	`mem£t
(
dp
,-1,(dp));

69 
i
=0; i<
£q
.
	`size
(); i++)

70 
d©
[
i
]=
£q
[i];

71 
	`s‹t
(
d©
,d©+
n
,
cmp
);

72 
i
=0; i<4; i++)

73 
sum
[
i
][0]=0,
num
[i]=0;

74 
i
=0; i<
n
; i++)

76 
x
=
d©
[
i
]%4;

77 
sum
[
x
][
num
[x]+1]=sum[x][num[x]]+
d©
[
i
];

78 
num
[
x
]++;

80 
ªt
=0;

81 if(
	`dfs
(0,
num
[0],num[1],num[2],num[3],
k
))

83  
ªt
;

87 
	}
}

90 
	gpublic
:

91 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); 
	}
}

92 
	g¥iv©e
:

93 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

94 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

95 
	$ã°_ˇ£_0
(Ë{ 
Aº0
[] = {3, 8, 4}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1; 
Arg2
 = 11; 
	`vîify_ˇ£
(0, Arg2, 
	`ªmoveThem
(
Arg0
, Arg1)); 
	}
}

96 
	$ã°_ˇ£_1
(Ë{ 
Aº0
[] = {1,1,1,1,1,1}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
Arg2
 = -1; 
	`vîify_ˇ£
(1, Arg2, 
	`ªmoveThem
(
Arg0
, Arg1)); 
	}
}

97 
	$ã°_ˇ£_2
(Ë{ 
Aº0
[] = {1,6,1,10,1,2,7,11}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 6; 
Arg2
 = 21; 
	`vîify_ˇ£
(2, Arg2, 
	`ªmoveThem
(
Arg0
, Arg1)); 
	}
}

98 
	$ã°_ˇ£_3
(Ë{ 
Aº0
[] = {1,1,1,1,1,1,1,1,7}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
Arg2
 = 6; 
	`vîify_ˇ£
(3, Arg2, 
	`ªmoveThem
(
Arg0
, Arg1)); 
	}
}

105 
	$maö
()

107 
Sa„RemovÆ
 
___ã°
;

108 
___ã°
.
	`run_ã°
(-1);

110 
	}
}

	@topcoder/srm_codes/srm553/Suminator.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 101

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
LL
 
	gd©
[
N
],
	gn
,
	g°
[N]; 
	gt›
;

36 
	gèg
[
N
][N];

38 ˛as†
	cSumö©‹


40 
	mpublic
:

41 
	$ok
(
x
)

43 
t›
=-1;

44 
LL
 
a
,
b
;

45 
i
=0; i<
n
; i++)

47 if(
d©
[
i
]==0)

49 if(
t›
<0)

50 
°
[
t›
=0]=0;

51 if(
t›
==0)

53 
°
[
t›
=0]=st[0];

57 
a
=
°
[
t›
--];

58 
b
=
°
[
t›
--];

59 
°
[++
t›
]=
a
+
b
;

64 
°
[++
t›
]=
d©
[
i
];

67 
LL
 
ªt
=-1;

68 if(
t›
<0)

69 
ªt
=0;

71 
ªt
=
°
[
t›
];

72  
ªt
==
x
;

75 
	$sﬁve
(
x
,
id
)

77 
t›
=-1;

78 
LL
 
a
,
b
;

79 
	`mem£t
(
èg
,0,(tag));

80 
d©
[
id
]=-1;

81 
i
=0; i<
n
; i++)

83 if(
d©
[
i
]==0)

85 if(
t›
<0)

86 
°
[
t›
=0]=0;

87 if(
t›
==0)

89 
°
[
t›
=0]=st[0];

93 
a
=
°
[
t›
--];

94 
b
=
°
[
t›
--];

95 
°
[++
t›
]=
a
+
b
;

96 
j
=0; j<=
n
; j++)

98 if(
èg
[
t›
+1][
j
]||tag[top][j])

99 
èg
[
t›
][
j
]=1;

100 
èg
[
t›
+1][
j
]=0;

106 
°
[++
t›
]=
d©
[
i
];

107 
èg
[
t›
][
i
]=1;

110 
LL
 
ªt
=0;

111 if(
èg
[
t›
][
id
]==1)

113 
ªt
=
x
-
°
[
t›
]-1;

114 if(
ªt
<=0)

116  
ªt
;

120 
ªt
=
°
[
t›
];

121 if(
ªt
!=
x
)

125 
	}
}

127 
födMissög
(
ve˘‹
 <> 
¥ogøm
, 
w™ãdResu…
)

129 
	gn
=
¥ogøm
.
size
();

130 
	gid
=-1;

131 
	gi
=0; i<
	gn
; i++)

133 
	gd©
[
i
]=
¥ogøm
[i];

134 if(
	g¥ogøm
[
i
]==-1)

135 
id
=
i
;

137 
	gd©
[
id
]=0;

138 if(
ok
(
w™ãdResu…
))

140  
sﬁve
(
w™ãdResu…
,
id
);

144 
	gpublic
:

145 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); i‡((Ca£ =-1Ë|| (Ca£ =5)Ë
	`ã°_ˇ£_5
(); 
	}
}

146 
	g¥iv©e
:

147 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

148 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

149 
	$ã°_ˇ£_0
(Ë{ 
Aº0
[] = {7,-1,0}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 10; 
Arg2
 = 3; 
	`vîify_ˇ£
(0, Arg2, 
	`födMissög
(
Arg0
, Arg1)); 
	}
}

150 
	$ã°_ˇ£_1
(Ë{ 
Aº0
[] = {100, 200, 300, 0, 100, -1}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 600; 
Arg2
 = 0; 
	`vîify_ˇ£
(1, Arg2, 
	`födMissög
(
Arg0
, Arg1)); 
	}
}

151 
	$ã°_ˇ£_2
(Ë{ 
Aº0
[] = {-1, 7, 3, 0, 1, 2, 0, 0}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 13; 
Arg2
 = 0; 
	`vîify_ˇ£
(2, Arg2, 
	`födMissög
(
Arg0
, Arg1)); 
	}
}

152 
	$ã°_ˇ£_3
(Ë{ 
Aº0
[] = {-1, 8, 4, 0, 1, 2, 0, 0}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 16; 
Arg2
 = -1; 
	`vîify_ˇ£
(3, Arg2, 
	`födMissög
(
Arg0
, Arg1)); 
	}
}

153 
	$ã°_ˇ£_4
(Ë{ 
Aº0
[] = {1000000000, 1000000000, 1000000000, 1000000000, -1, 0, 0, 0, 0}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1000000000; 
Arg2
 = -1; 
	`vîify_ˇ£
(4, Arg2, 
	`födMissög
(
Arg0
, Arg1)); 
	}
}

154 
	$ã°_ˇ£_5
(Ë{ 
Aº0
[] = {7, -1, 3, 0}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
Arg2
 = -1; 
	`vîify_ˇ£
(5, Arg2, 
	`födMissög
(
Arg0
, Arg1)); 
	}
}

161 
	$maö
()

163 
Sumö©‹
 
___ã°
;

164 
___ã°
.
	`run_ã°
(-1);

166 
	}
}

	@topcoder/srm_codes/srm554/TheBrickTowerEasyDivOne.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 ˛as†
	cTheBrickTowîEasyDivO√


37 
	mpublic
:

38 
	$föd
(
ªdCou¡
, 
ªdHeight
, 
blueCou¡
, 
blueHeight
)

40 
rc
=
ªdCou¡
,
rh
=
ªdHeight
,
bc
=
blueCou¡
,
bh
=
blueHeight
;

41 
LL
 
ªt
=0;

42 if(
rh
==
bh
)

44  2*
	`mö
(
rc
,
bc
)+(rc!=bc);

48  3*
	`mö
(
rc
,
bc
)+(rc!=bc);

52 
public
:

53 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); 
	}
}

54 
	g¥iv©e
:

55 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

56 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

57 
	$ã°_ˇ£_0
(Ë{ 
Arg0
 = 1; 
Arg1
 = 2; 
Arg2
 = 3; 
Arg3
 = 4; 
Arg4
 = 4; 
	`vîify_ˇ£
(0, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

58 
	$ã°_ˇ£_1
(Ë{ 
Arg0
 = 4; 
Arg1
 = 4; 
Arg2
 = 4; 
Arg3
 = 7; 
Arg4
 = 12; 
	`vîify_ˇ£
(1, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

59 
	$ã°_ˇ£_2
(Ë{ 
Arg0
 = 7; 
Arg1
 = 7; 
Arg2
 = 4; 
Arg3
 = 4; 
Arg4
 = 13; 
	`vîify_ˇ£
(2, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

60 
	$ã°_ˇ£_3
(Ë{ 
Arg0
 = 47; 
Arg1
 = 47; 
Arg2
 = 47; 
Arg3
 = 47; 
Arg4
 = 94; 
	`vîify_ˇ£
(3, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

67 
	$maö
()

69 
TheBrickTowîEasyDivO√
 
___ã°
;

70 
___ã°
.
	`run_ã°
(-1);

72 
	}
}

	@topcoder/srm_codes/srm554/TheBrickTowerEasyDivTwo.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 100010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
	gvis
[
N
];

37 ˛as†
	cTheBrickTowîEasyDivTwo


39 
	mpublic
:

40 
	$föd
(
ªdCou¡
, 
ªdHeight
, 
blueCou¡
, 
blueHeight
)

42 
rc
=
ªdCou¡
,
bc
=
blueCou¡
,
rh
=
ªdHeight
,
bh
=
blueHeight
;

43 
ªt
=0;

44 
	`mem£t
(
vis
,0,(vis));

45 
i
=0; i<=
rc
; i++)

47 
j
=
i
-1; j<=i+1&&j<=
bc
; j++)

49 if(
j
<0||(
i
+j==0)) ;

50 
x
=
i
*
rh
+
j
*
bh
;

51 if(
vis
[
x
])

53 
vis
[
x
]=1;

54 
ªt
++;

57  
ªt
;

61 
public
:

62 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); 
	}
}

63 
	g¥iv©e
:

64 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

65 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

66 
	$ã°_ˇ£_0
(Ë{ 
Arg0
 = 1; 
Arg1
 = 2; 
Arg2
 = 3; 
Arg3
 = 4; 
Arg4
 = 4; 
	`vîify_ˇ£
(0, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

67 
	$ã°_ˇ£_1
(Ë{ 
Arg0
 = 4; 
Arg1
 = 4; 
Arg2
 = 4; 
Arg3
 = 7; 
Arg4
 = 12; 
	`vîify_ˇ£
(1, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

68 
	$ã°_ˇ£_2
(Ë{ 
Arg0
 = 7; 
Arg1
 = 7; 
Arg2
 = 4; 
Arg3
 = 4; 
Arg4
 = 13; 
	`vîify_ˇ£
(2, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

69 
	$ã°_ˇ£_3
(Ë{ 
Arg0
 = 47; 
Arg1
 = 47; 
Arg2
 = 47; 
Arg3
 = 47; 
Arg4
 = 94; 
	`vîify_ˇ£
(3, Arg4, 
	`föd
(Arg0, Arg1, Arg2, Arg3)); 
	}
}

76 
	$maö
()

78 
TheBrickTowîEasyDivTwo
 
___ã°
;

79 
___ã°
.
	`run_ã°
(-1);

81 
	}
}

	@topcoder/srm_codes/srm554/TheBrickTowerHardDivTwo.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1234567891

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
LL
 
	gdp
[50][10][400],
	gº
;

36 
	gc
,
	gk
,
	gh
;

38 
LL
 
	$dfs
(
l
,
us
,
¥e
)

40 
p
[4];

41 if(
dp
[
l
][
us
][
¥e
]>=0)

42  
dp
[
l
][
us
][
¥e
];

43 if(
l
==
h
)

44  
dp
[
l
][
us
][
¥e
]=1;

45 if(
¥e
==399)

47 
i
=0; i<4; i++)

48 
p
[
i
]=-1;

52 
y
=
¥e
;

53 
i
=3; i>=0; i--)

54 
p
[
i
]=
y
%
c
,y/=c;

56 
ii
[4];

57 
LL
 
ªt
=0;

58 if(
¥e
==399)

59 
º
=‘r+
	`dfs
(
l
+1,0,399))%
MOD
;

60 
ii
[0]=0; ii[0]<
c
; ii[0]++)

61 
ii
[1]=0; ii[1]<
c
; ii[1]++)

62 
ii
[2]=0; ii[2]<
c
; ii[2]++)

63 
ii
[3]=0; ii[3]<
c
; ii[3]++)

65 
˙t
=0,
now
=0;

66 
i
=0; i<4; i++)

68 if(
ii
[
i
]==
p
[i])

69 
˙t
++;

70 
now
*=
c
,now+=
ii
[
i
];

72 if(
ii
[0]==ii[1]Ë
˙t
++;

73 if(
ii
[0]==ii[2]Ë
˙t
++;

74 if(
ii
[1]==ii[3]Ë
˙t
++;

75 if(
ii
[2]==ii[3]Ë
˙t
++;

76 if(
us
+
˙t
>
k
)

78 
ªt
=‘ë+
	`dfs
(
l
+1,
us
+
˙t
,
now
))%
MOD
;

80  
dp
[
l
][
us
][
¥e
]=
ªt
;

81 
	}
}

83 ˛as†
	cTheBrickTowîH¨dDivTwo


85 
	mpublic
:

86 
	$föd
(
C
, 
K
, 
H
)

88 
c
=
C
,
k
=
K
;

89 
h
=
H
;

90 
º
=0;

91 
	`mem£t
(
dp
,-1,(dp));

92  ((
º
+
	`dfs
(0,0,399)-1)%
MOD
+MOD)%MOD;

96 
public
:

97 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); 
	}
}

98 
	g¥iv©e
:

99 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

100 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

101 
	$ã°_ˇ£_0
(Ë{ 
Arg0
 = 2; 
Arg1
 = 0; 
Arg2
 = 2; 
Arg3
 = 4; 
	`vîify_ˇ£
(0, Arg3, 
	`föd
(Arg0, Arg1, Arg2)); 
	}
}

102 
	$ã°_ˇ£_1
(Ë{ 
Arg0
 = 1; 
Arg1
 = 7; 
Arg2
 = 19; 
Arg3
 = 1; 
	`vîify_ˇ£
(1, Arg3, 
	`föd
(Arg0, Arg1, Arg2)); 
	}
}

103 
	$ã°_ˇ£_2
(Ë{ 
Arg0
 = 2; 
Arg1
 = 3; 
Arg2
 = 1; 
Arg3
 = 14; 
	`vîify_ˇ£
(2, Arg3, 
	`föd
(Arg0, Arg1, Arg2)); 
	}
}

104 
	$ã°_ˇ£_3
(Ë{ 
Arg0
 = 4; 
Arg1
 = 7; 
Arg2
 = 47; 
Arg3
 = 1008981254; 
	`vîify_ˇ£
(3, Arg3, 
	`föd
(Arg0, Arg1, Arg2)); 
	}
}

111 
	$maö
()

113 
TheBrickTowîH¨dDivTwo
 
___ã°
;

114 
___ã°
.
	`run_ã°
(-1);

116 
	}
}

	@topcoder/srm_codes/srm554/TheBrickTowerMediumDivOne.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
	gve˘‹
<> 
	gªt
;

36 
	gvis
[
N
];

38 ˛as†
	cTheBrickTowîMediumDivO√


40 
	mpublic
:

41 
ve˘‹
 <> 
föd
(ve˘‹ <> 
heights
)

43 
n
=
heights
.
size
();

44 
	mªt
.
˛ór
();

45 
	mªt
.
push_back
(0);

46 
mem£t
(
vis
,0,(vis));

47 
	mvis
[0]=1;

50 
	mi
;

51 
	mi
=0; i<
	mn
; i++)

53 if(!
	mvis
[
i
]&&(
	mheights
[i]<=
heights
[
ªt
[ªt.
size
()-1]]))

56 if(
	mi
>=
n
) ;

57 
	mªt
.
push_back
(
i
);

58 
	mvis
[
i
]=1;

62 
	mi
,
	mk
=-1;

63 
	mi
=0; i<
	mn
; i++)

64 if(!
	mvis
[
i
]&&(
	mk
==-1||
heights
[i]<heights[
k
]))

65 
k
=
i
;

66 if(
	mk
==-1) ;

67 
	mªt
.
push_back
(
k
);

68 
	mvis
[
k
]=1;

70  
	mªt
;

74 
	gpublic
:

75 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); 
	}
}

76 
	g¥iv©e
:

77 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

78 
vîify_ˇ£
(
Ca£
, c⁄° 
ve˘‹
 <> &
Ex≥˘ed
, c⁄° ve˘‹ <> &
Re˚ived
Ë{ 
	g˚º
 << "Te° Ca£ #" << 
	gCa£
 << "..."; i‡(
	gEx≥˘ed
 =Re˚ivedË
˚º
 << "PASSED" << 
ídl
; { cî∏<< "FAILED" << 
	gídl
; cî∏<< "\tEx≥˘ed: " << 
¥öt_¨øy
(Expected) <<Éndl; cerr << "\tReceived: " <<Örint_array(Received) <<Éndl; } }

79 
	$ã°_ˇ£_0
(Ë{ 
Aº0
[] = {4, 7, 5}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 2, 1 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(0, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

80 
	$ã°_ˇ£_1
(Ë{ 
Aº0
[] = {4, 4, 4, 4, 4, 4, 4}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 1, 2, 3, 4, 5, 6 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(1, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

81 
	$ã°_ˇ£_2
(Ë{ 
Aº0
[] = {2, 3, 3, 2}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 3, 1, 2 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(2, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

82 
	$ã°_ˇ£_3
(Ë{ 
Aº0
[] = {13, 32, 38, 25, 43, 47, 6}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 6, 3, 1, 2, 4, 5 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(3, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

89 
	$maö
()

91 
TheBrickTowîMediumDivO√
 
___ã°
;

92 
___ã°
.
	`run_ã°
(-1);

94 
	}
}

	@topcoder/srm_codes/srm554/TheBrickTowerMediumDivTwo.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

34 
	gn
,
	gd©
[1000],
	gnow
[1000],
	gvis
[1000],
	gªt
;

35 
	gve˘‹
<> 
	g™s
;

37 ˛as†
	cTheBrickTowîMediumDivTwo


39 
	mpublic
:

40 
	$dfs
(
l
)

42 if(
l
==
n
)

44 
˙t
=0;

45 
i
=0; i<
n
-1; i++)

46 
˙t
+=
	`max
(
d©
[
now
[
i
]],dat[now[i+1]]);

47 if(
˙t
<
ªt
)

49 
ªt
=
˙t
;

50 
™s
.
	`˛ór
();

51 
i
=0; i<
n
; i++)

52 
™s
.
	`push_back
(
now
[
i
]);

56 
i
=0; i<
n
; i++)

57 if(!
vis
[
i
])

59 
vis
[
i
]=1;

60 
now
[
l
]=
i
;

61 
	`dfs
(
l
+1);

62 
vis
[
i
]=0;

66 
ve˘‹
 <> 
	`föd
(ve˘‹ <> 
heights
)

68 
	`mem£t
(
vis
,0,(vis));

69 
n
=
heights
.
	`size
();

70 
ªt
=
öf
;

71 
i
=0; i<
n
; i++)

72 
d©
[
i
]=
heights
[i];

73 
	`dfs
(0);

74  
™s
;

75 
	}
}

78 
	gpublic
:

79 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); 
	}
}

80 
	g¥iv©e
:

81 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

82 
vîify_ˇ£
(
Ca£
, c⁄° 
ve˘‹
 <> &
Ex≥˘ed
, c⁄° ve˘‹ <> &
Re˚ived
Ë{ 
	g˚º
 << "Te° Ca£ #" << 
	gCa£
 << "..."; i‡(
	gEx≥˘ed
 =Re˚ivedË
˚º
 << "PASSED" << 
ídl
; { cî∏<< "FAILED" << 
	gídl
; cî∏<< "\tEx≥˘ed: " << 
¥öt_¨øy
(Expected) <<Éndl; cerr << "\tReceived: " <<Örint_array(Received) <<Éndl; } }

83 
	$ã°_ˇ£_0
(Ë{ 
Aº0
[] = {4, 7, 5}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 2, 1 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(0, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

84 
	$ã°_ˇ£_1
(Ë{ 
Aº0
[] = {4, 4, 4, 4, 4, 4, 4}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 1, 2, 3, 4, 5, 6 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(1, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

85 
	$ã°_ˇ£_2
(Ë{ 
Aº0
[] = {2, 3, 3, 2}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 3, 1, 2 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(2, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

86 
	$ã°_ˇ£_3
(Ë{ 
Aº0
[] = {13, 32, 38, 25, 43, 47, 6}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Aº1
[] = {0, 6, 3, 1, 2, 4, 5 }; ve˘‹ <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
	`vîify_ˇ£
(3, 
Arg1
, 
	`föd
(
Arg0
)); 
	}
}

93 
	$maö
()

95 
TheBrickTowîMediumDivTwo
 
___ã°
;

96 
___ã°
.
	`run_ã°
(-1);

98 
	}
}

	@topcoder/srm_codes/srm555/CuttingBitString.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 55

	)

17 
	#M
 1000010

	)

18 
	#ïs
 1e-8

	)

19 
	#öf
 0x3fffffff

	)

20 
	#MOD
 1000000007

	)

21 
	#PB
 
push_back


	)

22 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

23 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

24 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

26 
	tLL
;

27 
usög
 
«me•a˚
 
	g°d
;

29 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

30 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

31 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

32 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

34 
	gdp
[
N
],
	gn
;

35 
°rög
 
	gs
;

37 ˛as†
	cCuâögBôSåög


39 
	mpublic
:

40 
	$ok
(
l
,
r
)

42 
LL
 
x
=0;

43 if(
s
[
l
]=='0')

45 
i
=
l
; i<=
r
; i++)

46 
x
<<=1LL,x+=
s
[
i
]-'0';

47 ; 
x
%5==0; ) x/=5;

48  
x
==1;

51 
	$gëmö
(
°rög
 
S
)

53 
s
=
S
;

54 
n
=
S
.
	`Àngth
();

55 
i
=0; i<
n
; i++)

56 
dp
[
i
]=
öf
;

57 
i
=0; i<
n
; i++)

59 if(
	`ok
(0,
i
))

61 
dp
[
i
]=1;

64 
j
=1; j<=
i
; j++)

66 if(
	`ok
(
j
,
i
)&&
dp
[j-1]<
öf
)

67 
dp
[
i
]=
	`mö
(dp[i],dp[
j
-1]+1);

70  
dp
[
n
-1]<
öf
?dp[n-1]:-1;

71 
	}
}

74 
	gpublic
:

75 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); i‡((Ca£ =-1Ë|| (Ca£ =5)Ë
	`ã°_ˇ£_5
(); 
	}
}

76 
	g¥iv©e
:

77 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

78 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

79 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Arg0
 = "101101101"; 
Arg1
 = 3; 
	`vîify_ˇ£
(0, Arg1, 
	`gëmö
(Arg0)); 
	}
}

80 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Arg0
 = "1111101"; 
Arg1
 = 1; 
	`vîify_ˇ£
(1, Arg1, 
	`gëmö
(Arg0)); 
	}
}

81 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Arg0
 = "00000"; 
Arg1
 = -1; 
	`vîify_ˇ£
(2, Arg1, 
	`gëmö
(Arg0)); 
	}
}

82 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Arg0
 = "110011011"; 
Arg1
 = 3; 
	`vîify_ˇ£
(3, Arg1, 
	`gëmö
(Arg0)); 
	}
}

83 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Arg0
 = "1000101011"; 
Arg1
 = -1; 
	`vîify_ˇ£
(4, Arg1, 
	`gëmö
(Arg0)); 
	}
}

84 
	$ã°_ˇ£_5
(Ë{ 
°rög
 
Arg0
 = "111011100110101100101110111"; 
Arg1
 = 5; 
	`vîify_ˇ£
(5, Arg1, 
	`gëmö
(Arg0)); 
	}
}

91 
	$maö
()

93 
CuâögBôSåög
 
___ã°
;

94 
___ã°
.
	`run_ã°
(-1);

96 
	}
}

	@topcoder/srm_codes/srm555/MuddyRoad2.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#M
 1000010

	)

17 
	#S
 1000100

	)

18 
	#ïs
 1e-8

	)

19 
	#öf
 0x3fffffff

	)

20 
	#MOD
 555555555

	)

21 
	#PB
 
push_back


	)

22 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

23 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

24 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

26 
	tLL
;

27 
usög
 
«me•a˚
 
	g°d
;

29 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

30 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

31 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

32 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

34 
LL
 
	gc
[600][600];

35 
LL
 
	gdp
[600][600][3];

37 ˛as†
	cMuddyRﬂd2


39 
	mpublic
:

40 
	$theCou¡
(
N
, 
muddyCou¡
)

42 
˙t
=
muddyCou¡
;

43 
c
[0][0]=1;

44 
i
=1; i<600; i++)

46 
c
[
i
][0]=1;

47 
j
=1; j<=
i
; j++)

48 
c
[
i
][
j
]=(c[i-1][j]+c[i-1][j-1])%
MOD
;

50 
	`mem£t
(
dp
,0,(dp));

51 
i
=1; i<=
N
-
˙t
; i++)

53 
dp
[
i
][1][i%3]=1;

54 
j
=2; j<=
i
; j++)

56 
k
=1; k<=
i
; k++)

58 
dp
[
i
][
j
][
k
%3]=(dp[i][j][k%3]+dp[i-k][j-1][1]+dp[i-k][j-1][2])%
MOD
;

63  ((
c
[
N
-2][
˙t
]-
dp
[N-˙t][˙t+1][2]-dp[N-˙t][˙t+1][1])%
MOD
+MOD)%MOD;

67 
public
:

68 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

69 
	g¥iv©e
:

70 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

71 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

72 
	$ã°_ˇ£_0
(Ë{ 
Arg0
 = 5; 
Arg1
 = 1; 
Arg2
 = 2; 
	`vîify_ˇ£
(0, Arg2, 
	`theCou¡
(Arg0, Arg1)); 
	}
}

73 
	$ã°_ˇ£_1
(Ë{ 
Arg0
 = 5; 
Arg1
 = 2; 
Arg2
 = 2; 
	`vîify_ˇ£
(1, Arg2, 
	`theCou¡
(Arg0, Arg1)); 
	}
}

74 
	$ã°_ˇ£_2
(Ë{ 
Arg0
 = 10; 
Arg1
 = 4; 
Arg2
 = 65; 
	`vîify_ˇ£
(2, Arg2, 
	`theCou¡
(Arg0, Arg1)); 
	}
}

75 
	$ã°_ˇ£_3
(Ë{ 
Arg0
 = 314; 
Arg1
 = 78; 
Arg2
 = 498142902; 
	`vîify_ˇ£
(3, Arg2, 
	`theCou¡
(Arg0, Arg1)); 
	}
}

76 
	$ã°_ˇ£_4
(Ë{ 
Arg0
 = 555; 
Arg1
 = 222; 
Arg2
 = 541606281; 
	`vîify_ˇ£
(4, Arg2, 
	`theCou¡
(Arg0, Arg1)); 
	}
}

83 
	$maö
()

85 
MuddyRﬂd2
 
___ã°
;

86 
___ã°
.
	`run_ã°
(-1);

88 
	}
}

	@topcoder/srm_codes/srm555/XorBoardDivTwo.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 ˛as†
	cX‹BﬂrdDivTwo


37 
	mpublic
:

38 
theMax
(
ve˘‹
 <
°rög
> 
bﬂrd
)

40 
n
=
bﬂrd
.
size
(),
	mm
=bﬂrd[0].
Àngth
(),
	mâl
=0;

41 
	mi
=0; i<
	mn
; i++)

42 
	mj
=0; j<
	mm
; j++)

43 
	mâl
+=
bﬂrd
[
i
][
j
]-'0';

44 
	mªt
=0;

45 
	mi
=0; i<
	mn
; i++)

46 
	mj
=0; j<
	mm
; j++)

48 
	mtmp
=0;

49 
	mk
=0; k<
	mm
; k++)

51 if(
	mbﬂrd
[
i
][
k
]=='0')

52 
tmp
++;

54 
	mtmp
--;

56 
	mk
=0; k<
	mn
; k++)

58 if(
	mbﬂrd
[
k
][
j
]=='0')

59 
tmp
++;

61 
	mtmp
--;

63 if(
	mbﬂrd
[
i
][
j
]=='0')

64 
tmp
-=2;

66 
	mtmp
+=2;

67 
	mªt
=
max
(
ªt
,
âl
+
tmp
);

69  
	mªt
;

73 
	gpublic
:

74 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

75 
	g¥iv©e
:

76 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

77 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

78 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Aº0
[] = {"101",

80 "101"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 9; 
	`vîify_ˇ£
(0, Arg1, 
	`theMax
(
Arg0
)); 
	}
}

81 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Aº0
[] = {"111",

83 "111"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 5; 
	`vîify_ˇ£
(1, Arg1, 
	`theMax
(
Arg0
)); 
	}
}

84 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Aº0
[] = {"0101001",

85 "1101011"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 9; 
	`vîify_ˇ£
(2, Arg1, 
	`theMax
(
Arg0
)); 
	}
}

86 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Aº0
[] = {"000",

93 "111"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 15; 
	`vîify_ˇ£
(3, Arg1, 
	`theMax
(
Arg0
)); 
	}
}

94 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Aº0
[] = {"000000000000000000000000",

105 ; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 105; 
	`vîify_ˇ£
(4, Arg1, 
	`theMax
(
Arg0
)); 
	}
}

112 
	$maö
()

114 
X‹BﬂrdDivTwo
 
___ã°
;

115 
___ã°
.
	`run_ã°
(-1);

117 
	}
}

	@topcoder/srm_codes/srm598/BinPacking.cpp

71 
	~<c°dlib
>

72 
	~<c˘y≥
>

73 
	~<c°rög
>

74 
	~<c°dio
>

75 
	~<cm©h
>

76 
	~<Æg‹ôhm
>

77 
	~<ve˘‹
>

78 
	~<°rög
>

79 
	~<io°ªam
>

80 
	~<s°ªam
>

81 
	~<m≠
>

82 
	~<£t
>

83 
	~<queue
>

84 
	~<°ack
>

85 
	~<f°ªam
>

86 
	~<numîic
>

87 
	~<iom™ù
>

88 
	~<bô£t
>

89 
	~<li°
>

90 
	~<°dex˚±
>

91 
	~<fun˘i⁄Æ
>

92 
	~<utûôy
>

93 
	~<˘ime
>

95 
usög
 
«me•a˚
 
	g°d
;

96 
	tLL
;

98 
	gèg
[1000];

100 ˛as†
	cBöPackög


102 
	mpublic
:

103 
möBös
(
ve˘‹
 <> 
ôem
)

105 
ªt
=0,
	mtwo
=0,
	m⁄e
=0;

106 
	mve˘‹
<> 
	mvec
;

107 
	mi
=
ôem
.
size
()-1; i>=0; i--) {

108 if(
	môem
[
i
]>200) {

109 
	mªt
++;

110 } if(
	môem
[
i
]==100) {

111 
⁄e
++;

112 } if(
	môem
[
i
]==200) {

113 
two
++;

115 
	mvec
.
push_back
(
ôem
[
i
]);

118 
	mªt
+=
two
;

119 
	m⁄e
-=
two
;

120 if(
	m⁄e
<0) one=0;

121 
	mi
=0; i<
	m⁄e
; i++)

122 
	mvec
.
push_back
(100);

123 
s‹t
(
vec
.
begö
(),vec.
íd
());

124 
mem£t
(
èg
,0,(tag));

125 
	mi
=
vec
.
size
()-1; i>=0; i--) {

126 if(
	mvec
[
i
]==100) ;

127 if(
	mèg
[
i
]) ;

128 
	mnowj
=-1;

129 
	mj
=
i
-1; j>=0; j--) {

130 if(
	mèg
[
j
]) ;

131 if(
	mvec
[
i
]+vec[
j
]<=300) {

132 
nowj
=
j
;

136 if(
	mnowj
==-1) {

137 
èg
[
i
]=1;

138 
	mªt
++;

140 
	mèg
[
i
]=
èg
[
nowj
]=1;

141 
	mªt
++;

144 
	m⁄e
=0;

145 
	mi
=0; i<
	mvec
.
size
(); i++)

146 if(!
	mèg
[
i
])

147 
	m⁄e
++;

148 if(
	m⁄e
%3)

149 
	mªt
++;

150  
	mªt
+
	m⁄e
/3;

154 
	gpublic
:

155 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

156 
	g¥iv©e
:

157 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

158 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

159 
	$ã°_ˇ£_0
(Ë{ 
Aº0
[] = {150, 150, 150, 150, 150}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
	`vîify_ˇ£
(0, Arg1, 
	`möBös
(
Arg0
)); 
	}
}

160 
	$ã°_ˇ£_1
(Ë{ 
Aº0
[] = {130, 140, 150, 160}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
	`vîify_ˇ£
(1, Arg1, 
	`möBös
(
Arg0
)); 
	}
}

161 
	$ã°_ˇ£_2
(Ë{ 
Aº0
[] = {100, 100, 100, 100, 100, 100, 100, 100, 100}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
	`vîify_ˇ£
(2, Arg1, 
	`möBös
(
Arg0
)); 
	}
}

162 
	$ã°_ˇ£_3
(Ë{ 
Aº0
[] = {100, 200, 100, 100, 100, 100, 200, 100, 200}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 4; 
	`vîify_ˇ£
(3, Arg1, 
	`möBös
(
Arg0
)); 
	}
}

163 
	$ã°_ˇ£_4
(Ë{ 
Aº0
[] = {157, 142, 167, 133, 135, 157, 143, 160, 141, 123, 162, 159, 165, 137, 138, 152}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 8; 
	`vîify_ˇ£
(4, Arg1, 
	`möBös
(
Arg0
)); 
	}
}

170 
	$maö
()

172 
BöPackög
 
___ã°
;

173 
___ã°
.
	`run_ã°
(-1);

175 
	}
}

	@topcoder/srm_codes/srm598/FoxAndFencing.cpp

2 
	~<c°dlib
>

3 
	~<c˘y≥
>

4 
	~<c°rög
>

5 
	~<c°dio
>

6 
	~<cm©h
>

7 
	~<Æg‹ôhm
>

8 
	~<ve˘‹
>

9 
	~<°rög
>

10 
	~<io°ªam
>

11 
	~<s°ªam
>

12 
	~<m≠
>

13 
	~<£t
>

14 
	~<queue
>

15 
	~<°ack
>

16 
	~<f°ªam
>

17 
	~<numîic
>

18 
	~<iom™ù
>

19 
	~<bô£t
>

20 
	~<li°
>

21 
	~<°dex˚±
>

22 
	~<fun˘i⁄Æ
>

23 
	~<utûôy
>

24 
	~<˘ime
>

26 
usög
 
«me•a˚
 
	g°d
;

27 
	tLL
;

29 ˛as†
	cFoxAndFícög


31 
	mpublic
:

32 
°rög
 
	$WhoC™Wö
(
mov1
, 
mov2
, 
∫g1
, 
∫g2
, 
d
)

34 if(
mov1
+
∫g1
>=
d
Ë 
	`°rög
("Ciel");

35 if(
mov1
+
∫g1
>
mov2
+
∫g2
) {

36 if(
mov1
<=
mov2
Ë 
	`°rög
("Draw");

38 if(
mov2
+
∫g2
+1+mov2<=
mov1
+
∫g1
)

39  
	`°rög
("Ciel");

41  
	`°rög
("Draw");

43 } if(
mov1
+
∫g1
==
mov2
+
∫g2
) {

44  
	`°rög
("Draw");

46 if(
mov1
==
mov2
) {

47 if(
mov2
+
∫g2
>=
mov1
+
d
)

48  
	`°rög
("Liss");

50  
	`°rög
("Draw");

52 if(
mov1
>
mov2
) {

53 if(
mov2
+
∫g2
>=
mov1
+
d
)

54  
	`°rög
("Liss");

55  
	`°rög
("Draw");

58 if(
mov2
+
∫g2
>=
mov1
+
d
)

59  
	`°rög
("Liss");

60 if(
mov2
+
∫g2
>=
mov1
+
∫g1
+1+mov1)

61  
	`°rög
("Liss");

62  
	`°rög
("Draw");

68 
	}
};

	@topcoder/srm_codes/srm598/TPS.cpp

165 
	~<c°dlib
>

166 
	~<c˘y≥
>

167 
	~<c°rög
>

168 
	~<c°dio
>

169 
	~<cm©h
>

170 
	~<Æg‹ôhm
>

171 
	~<ve˘‹
>

172 
	~<°rög
>

173 
	~<io°ªam
>

174 
	~<s°ªam
>

175 
	~<m≠
>

176 
	~<£t
>

177 
	~<queue
>

178 
	~<°ack
>

179 
	~<f°ªam
>

180 
	~<numîic
>

181 
	~<iom™ù
>

182 
	~<bô£t
>

183 
	~<li°
>

184 
	~<°dex˚±
>

185 
	~<fun˘i⁄Æ
>

186 
	~<utûôy
>

187 
	~<˘ime
>

189 
usög
 
«me•a˚
 
	g°d
;

190 
	tLL
;

193 ˛as†
	cTPS


195 
	mpublic
:

196 
ve˘‹
<
°rög
> 
m©
;

197 
	mdp
[55][55][2];

198 
	mn
;

200 
	$dfs
(
now
,
p
,
°
) {

201 if(
dp
[
now
][
p
][
°
]>=0)

202  
dp
[
now
][
p
][
°
];

203 
sum
=0,
tmp
=
n
,
c
=0,
ªt
=n;

204 
i
=0; i<
n
; i++)

205 if(
i
!=
p
&&
m©
[
now
][i]=='Y') {

206 
c
++;

207 
sum
+=
	`dfs
(
i
,
now
,1);

209 if(
c
==0) {

210  
dp
[
now
][
p
][
°
]=st;

212 
i
=0; i<
n
; i++)

213 if(
i
!=
p
&&
m©
[
now
][i]=='Y')

214 
tmp
=
	`mö
—mp,
sum
-
	`dfs
(
i
,
now
,1)+dfs(i,now,0));

215 
ªt
=
	`mö
‘ë,1+
tmp
);

216 if(
p
!=
n
) {

217 if(
c
==1&&
°
==1)

218 
ªt
=
	`mö
‘ë,
sum
);

220 
ªt
=
	`mö
‘ë,
tmp
);

222  
dp
[
now
][
p
][
°
]=
ªt
;

225 
	`möimÆBóc⁄s
(
ve˘‹
 <
°rög
> 
löked
) {

226 
	`mem£t
(
dp
,-1,(dp));

227 
m©
=
löked
;

228 
n
=
löked
.
	`size
();

229 
ªt
=
n
;

230 
i
=0; i<
n
; i++) {

231 
ªt
=
	`mö
‘ë,
	`dfs
(
i
,
n
,0));

233  
ªt
;

234 
	}
}

237 
	gpublic
:

238 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); i‡((Ca£ =-1Ë|| (Ca£ =5)Ë
	`ã°_ˇ£_5
(); 
	}
}

239 
	g¥iv©e
:

240 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

241 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

242 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Aº0
[] = {"NYNN",

245 "NNYN"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1; 
	`vîify_ˇ£
(0, Arg1, 
	`möimÆBóc⁄s
(
Arg0
)); 
	}
}

246 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Aº0
[] = {"NYYY",

249 "YNNN"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
	`vîify_ˇ£
(1, Arg1, 
	`möimÆBóc⁄s
(
Arg0
)); 
	}
}

250 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Aº0
[] = {"NNYNNNNNNN",

260 ; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
	`vîify_ˇ£
(2, Arg1, 
	`möimÆBóc⁄s
(
Arg0
)); 
	}
}

261 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Aº0
[] = {"NYNYNNYNN",

269 "NNYNNNNNN"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
	`vîify_ˇ£
(3, Arg1, 
	`möimÆBóc⁄s
(
Arg0
)); 
	}
}

270 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Aº0
[] = {"NYYYYYYYYY",

280 ; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 8; 
	`vîify_ˇ£
(4, Arg1, 
	`möimÆBóc⁄s
(
Arg0
)); 
	}
}

281 
	$ã°_ˇ£_5
(Ë{ 
°rög
 
Aº0
[] = {"N"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 0; 
	`vîify_ˇ£
(5, Arg1, 
	`möimÆBóc⁄s
(
Arg0
)); 
	}
}

288 
	$maö
()

290 
TPS
 
___ã°
;

291 
___ã°
.
	`run_ã°
(-1);

293 
	}
}

	@topcoder/srm_codes/tco2013_r1A/DirectionBoard.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 ˛as†
	cDúe˘i⁄Bﬂrd


37 
	mpublic
:

38 
gëMöimum
(
ve˘‹
 <
°rög
> 
bﬂrd
)

40 
$CARETPOSITION$


44 
public
:

45 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); i‡((Ca£ =-1Ë|| (Ca£ =5)Ë
	`ã°_ˇ£_5
(); 
	}
}

46 
	g¥iv©e
:

47 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

48 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

49 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Aº0
[] = {"RRRD",

52 "ULLL"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 0; 
	`vîify_ˇ£
(0, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

53 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Aº0
[] = {"RRRD",

55 "LRRR"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
	`vîify_ˇ£
(1, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

56 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Aº0
[] = {"RRD",

58 "ULL"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
	`vîify_ˇ£
(2, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

59 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Aº0
[] = {"ULRLRD",

60 "UDDLRR"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 4; 
	`vîify_ˇ£
(3, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

61 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Aº0
[] = {"UDLRLDLD",

64 "UUURRRDD"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 9; 
	`vîify_ˇ£
(4, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

65 
	$ã°_ˇ£_5
(Ë{ 
°rög
 
Aº0
[] = {"UDUDUUDUDUDUDUR",

80 ; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 73; 
	`vîify_ˇ£
(5, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

87 
	$maö
()

89 
Dúe˘i⁄Bﬂrd
 
___ã°
;

90 
___ã°
.
	`run_ã°
(-1);

92 
	}
}

	@topcoder/srm_codes/tco2013_r1A/HouseBuilding.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
°rög
 
	gs
;

36 
	gdp
[2555][11][11];

38 ˛as†
	cHou£Buûdög


40 
	mpublic
:

41 
	$gao
(
id
,
l
,
r
)

43 if(
dp
[
id
][
l
][
r
]>=0)

44  
dp
[
id
][
l
][
r
];

45 if(
id
==
s
.
	`size
())

46  
dp
[
id
][
l
][
r
]=0;

47 
x
=
s
[
id
]-'0',
ªt
=100000000;

48 if(
l
==10)

50 
i
=0; i<10; i++)

51 
ªt
=
	`mö
‘ë,
	`gao
(
id
+1,
i
,i)+
	`abs
(
x
-i));

53 if(
l
==
r
)

55 
ªt
=
	`mö
‘ë,
	`gao
(
id
+1,
l
,l)+
	`abs
(
x
-l));

56 if(
l
<9)

57 
ªt
=
	`mö
‘ë,
	`gao
(
id
+1,
l
,l+1)+
	`abs
(
x
-l-1));

58 if(
l
>0)

59 
ªt
=
	`mö
‘ë,
	`gao
(
id
+1,
l
-1,l)+
	`abs
(
x
-l+1));

63 
ªt
=
	`mö
‘ë,
	`gao
(
id
+1,
l
,
r
)+
	`abs
(
x
-l));

64 
ªt
=
	`mö
‘ë,
	`gao
(
id
+1,
l
,
r
)+
	`abs
(
x
-r));

66  
dp
[
id
][
l
][
r
]=
ªt
;

69 
	`gëMöimum
(
ve˘‹
 <
°rög
> 
¨ó
)

71 
s
.
	`˛ór
();

72 
i
=0; i<
¨ó
.
	`size
(); i++)

73 
s
+=
¨ó
[
i
];

74 
	`mem£t
(
dp
,-1,(dp));

75  
	`gao
(0,10,10);

76 
	}
}

79 
	gpublic
:

80 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

81 
	g¥iv©e
:

82 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

83 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

84 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Aº0
[] = {"10",

85 "31"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
	`vîify_ˇ£
(0, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

86 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Aº0
[] = {"54454",

87 "61551"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 7; 
	`vîify_ˇ£
(1, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

88 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Aº0
[] = {"989"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 0; 
	`vîify_ˇ£
(2, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

89 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Aº0
[] = {"90"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 8; 
	`vîify_ˇ£
(3, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

90 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Aº0
[] = {"5781252",

93 "1212489"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 53; 
	`vîify_ˇ£
(4, Arg1, 
	`gëMöimum
(
Arg0
)); 
	}
}

100 
	$maö
()

102 
Hou£Buûdög
 
___ã°
;

103 
___ã°
.
	`run_ã°
(-1);

105 
	}
}

	@topcoder/srm_codes/tco2013_r1A/TheFrog.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#MOD
 1000000007

	)

17 
	#N
 30001

	)

19 
	tLL
;

20 
usög
 
«me•a˚
 
	g°d
;

22 
	snode
{ 
	ml
,
	mr
; }
	gno
[
N
],
	gtmp
[N];

23 
	$cmp
(
node
 
a
,nodê
b
){ á.
l
==b.l?a.
r
<b.r:a.l<b.l; 
	}
}

25 ˛as†
	cTheFrog


27 
	mpublic
:

28 
ªt
;

29 
	mn
;

31 
ok
(
x
,
y
,
ve˘‹
<> 
L
,ve˘‹<> 
R
)

33 
	mi
=0; i<
	mn
; i++)

34 if(
	mL
[
i
]*
	my
/
x
*
	mx
+x<
	mR
[i]*y)

39 
gao
(
x
,
ve˘‹
<> 
L
,ve˘‹<> 
R
)

41 if(
	gx
==0)  ;

42 
	gi
=
N
-1; i>0; i--)

44 if(
ok
(
x
,
i
,
L
,
R
))

46 
	gªt
=
mö
(
ªt
,1.0*
x
/
i
);

52 
gëMöimum
(
D
, 
ve˘‹
 <> 
L
, ve˘‹ <> 
R
)

54 
	gn
=
L
.
size
();

55 
	gªt
=
D
;

56 
gao
(
D
,
L
,
R
);

57 
	gi
=0; i<
	gn
; i++)

59 
gao
(
L
[
i
],L,
R
);

60 
gao
(
R
[
i
],
L
,R);

62  
	gªt
;

66 
	gpublic
:

67 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

68 
	g¥iv©e
:

69 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

70 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

71 
	$ã°_ˇ£_0
(Ë{ 
Arg0
 = 16; 
Aº1
[] = {2}; 
ve˘‹
 <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
Aº2
[] = {7}; ve˘‹ <> 
	`Arg2
(Aº2, Aº2 + ((Aº2Ë/ (Aº2[0]))); 
Arg3
 = 7.0; 
	`vîify_ˇ£
(0, Arg3, 
	`gëMöimum
(Arg0, 
Arg1
, 
Arg2
)); 
	}
}

72 
	$ã°_ˇ£_1
(Ë{ 
Arg0
 = 25; 
Aº1
[] = {11, 3}; 
ve˘‹
 <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
Aº2
[] = {21, 7}; ve˘‹ <> 
	`Arg2
(Aº2, Aº2 + ((Aº2Ë/ (Aº2[0]))); 
Arg3
 = 10.5; 
	`vîify_ˇ£
(1, Arg3, 
	`gëMöimum
(Arg0, 
Arg1
, 
Arg2
)); 
	}
}

73 
	$ã°_ˇ£_2
(Ë{ 
Arg0
 = 100; 
Aº1
[] = {0}; 
ve˘‹
 <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
Aº2
[] = {100}; ve˘‹ <> 
	`Arg2
(Aº2, Aº2 + ((Aº2Ë/ (Aº2[0]))); 
Arg3
 = 100.0; 
	`vîify_ˇ£
(2, Arg3, 
	`gëMöimum
(Arg0, 
Arg1
, 
Arg2
)); 
	}
}

74 
	$ã°_ˇ£_3
(Ë{ 
Arg0
 = 100; 
Aº1
[] = {0, 50}; 
ve˘‹
 <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
Aº2
[] = {50, 100}; ve˘‹ <> 
	`Arg2
(Aº2, Aº2 + ((Aº2Ë/ (Aº2[0]))); 
Arg3
 = 50.0; 
	`vîify_ˇ£
(3, Arg3, 
	`gëMöimum
(Arg0, 
Arg1
, 
Arg2
)); 
	}
}

75 
	$ã°_ˇ£_4
(Ë{ 
Arg0
 = 30000; 
Aº1
[] = {17, 25281, 5775, 2825, 14040}; 
ve˘‹
 <> 
	`Arg1
(Aº1, Aº1 + ((Aº1Ë/ (Aº1[0]))); 
Aº2
[] = {55, 26000, 5791, 3150, 14092}; ve˘‹ <> 
	`Arg2
(Aº2, Aº2 + ((Aº2Ë/ (Aº2[0]))); 
Arg3
 = 787.8787878787879; 
	`vîify_ˇ£
(4, Arg3, 
	`gëMöimum
(Arg0, 
Arg1
, 
Arg2
)); 
	}
}

82 
	$maö
()

84 
TheFrog
 
___ã°
;

85 
___ã°
.
	`run_ã°
(-1);

87 
	}
}

	@topcoder/srm_codes/tco2013_r1B/EllysFigurines.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
	gs
[20][20];

36 
	gm
,
	gn
;

38 ˛as†
	cEŒysFiguröes


40 
	mpublic
:

41 
ölöe
 
	$B
(
i
){  1<<i; }

43 
r
[20],
c
[20],
tmp
[20];

45 
	`gëMoves
(
ve˘‹
 <
°rög
> 
bﬂrd
, 
R
, 
C
)

47 
m
=
bﬂrd
.
	`size
(),
n
=bﬂrd[0].
	`Àngth
();

48 
i
=0; i<
m
; i++)

49 
j
=0; j<
n
; j++)

50 
s
[
i
][
j
]=
bﬂrd
[i][j];

51 
ªt
=
N
;

52 
°
=0; st<
	`B
(
m
); st++)

54 
now
=0;

55 
	`mem£t
(
r
,0,(r));

56 
	`mem£t
(
c
,0,(c));

57 
	`mem£t
(
tmp
,0,(tmp));

58 
u
=0; u<
m
; u++)

59 if(
°
&
	`B
(
u
))

60 
tmp
[
u
]=1,
now
++;

61 
i
=0; i<
m
; i++)

62 if(
tmp
[
i
]==1)

63 
j
=
i
; j<i+
R
&&j<
m
; j++)

64 
r
[
j
]=1;

65 
i
=0; i<
n
; i++)

67 
èg
=0;

68 
j
=0; j<
m
; j++)

69 if(
s
[
j
][
i
]=='X'&&
r
[j]==0)

70 
èg
=1;

71 if(
èg
Ë
c
[
i
]=1;

73 
i
=0; i<
n
; i++)

74 if(
c
[
i
])

75 
now
++,
i
+=
C
-1;

76 
ªt
=
	`mö
‘ë,
now
);

78  
ªt
;

79 
	}
}

82 
	gpublic
:

83 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); if((Ca£ =-1Ë|| (Ca£==5)Ë
	`ã°_ˇ£_5
(); 
	}
}

84 
	g¥iv©e
:

85 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

86 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

87 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Aº0
[] = {".X.X.",

91 ".X.XX"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1; 
Arg2
 = 2; 
Arg3
 = 3; 
	`vîify_ˇ£
(0, Arg3, 
	`gëMoves
(
Arg0
, Arg1, Arg2)); 
	}
}

92 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Aº0
[] = {".X.X.",

96 ".X.XX"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
Arg2
 = 2; 
Arg3
 = 2; 
	`vîify_ˇ£
(1, Arg3, 
	`gëMoves
(
Arg0
, Arg1, Arg2)); 
	}
}

97 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Aº0
[] = {"XXXXXXX"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
Arg2
 = 3; 
Arg3
 = 1; 
	`vîify_ˇ£
(2, Arg3, 
	`gëMoves
(
Arg0
, Arg1, Arg2)); 
	}
}

98 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Aº0
[] = {"XXXXX",

102 "XXXXX"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1; 
Arg2
 = 1; 
Arg3
 = 4; 
	`vîify_ˇ£
(3, Arg3, 
	`gëMoves
(
Arg0
, Arg1, Arg2)); 
	}
}

103 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Aº0
[] = {"XXX..XXX..XXX.",

113 "...XXX..XXX..."}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1; 
Arg2
 = 2; 
Arg3
 = 7; 
	`vîify_ˇ£
(4, Arg3, 
	`gëMoves
(
Arg0
, Arg1, Arg2)); 
	}
}

115 
	$ã°_ˇ£_5
()

117 
°rög
 
Aº0
[] = {

133 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
,Arr0+(((Arr0))/(Arr0[0])));

134 
Arg1
 = 1;

135 
Arg2
 = 1;

136 
Arg3
 = 14;

137 
	`vîify_ˇ£
(5,
Arg3
,
	`gëMoves
(
Arg0
,
Arg1
,
Arg2
));

138 
	}
}

145 
	$maö
()

147 
EŒysFiguröes
 
___ã°
;

148 
___ã°
.
	`run_ã°
(-1);

150 
	}
}

	@topcoder/srm_codes/tco2013_r1B/EllysPairs.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 ˛as†
	cEŒysPaús


37 
	mpublic
:

38 
sﬁve
(
ve˘‹
<> 
v
)

40 
n
=
v
.
size
();

41 
s‹t
(
v
.
begö
(),v.
íd
());

42 
	mmx
=0,
	mmi
=10000;

43 
	mi
=0; i<
	mn
; i++)

45 
	mmx
=
max
(
mx
,
v
[
i
]+v[
n
-i-1]);

46 
	mmi
=
mö
(
mi
,
v
[
i
]+v[
n
-i-1]);

48  
	mmx
-
	mmi
;

51 
gëDif„ªn˚
(
ve˘‹
 <> 
knowÀdge
)

53  
sﬁve
(
knowÀdge
);

57 
	gpublic
:

58 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); 
	}
}

59 
	g¥iv©e
:

60 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

61 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

62 
	$ã°_ˇ£_0
(Ë{ 
Aº0
[] = {2, 6, 4, 3}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1; 
	`vîify_ˇ£
(0, Arg1, 
	`gëDif„ªn˚
(
Arg0
)); 
	}
}

63 
	$ã°_ˇ£_1
(Ë{ 
Aº0
[] = {1, 1, 1, 1, 1, 1}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 0; 
	`vîify_ˇ£
(1, Arg1, 
	`gëDif„ªn˚
(
Arg0
)); 
	}
}

64 
	$ã°_ˇ£_2
(Ë{ 
Aº0
[] = {4, 2, 4, 2, 1, 3, 3, 7}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 2; 
	`vîify_ˇ£
(2, Arg1, 
	`gëDif„ªn˚
(
Arg0
)); 
	}
}

65 
	$ã°_ˇ£_3
(Ë{ 
Aº0
[] = {5, 1, 8, 8, 13, 7, 6, 2, 1, 9, 5, 11, 3, 4}; 
ve˘‹
 <> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
	`vîify_ˇ£
(3, Arg1, 
	`gëDif„ªn˚
(
Arg0
)); 
	}
}

72 
	$maö
()

74 
EŒysPaús
 
___ã°
;

75 
___ã°
.
	`run_ã°
(-1);

77 
	}
}

	@topcoder/srm_codes/tco2013_r1B/EllysReversals.cpp

5 
	~<c°rög
>

6 
	~<c°dio
>

7 
	~<ve˘‹
>

8 
	~<£t
>

9 
	~<m≠
>

10 
	~<queue
>

11 
	~<°rög
>

12 
	~<cm©h
>

13 
	~<s°ªam
>

14 
	~<io°ªam
>

15 
	~<Æg‹ôhm
>

16 
	#N
 1010

	)

17 
	#M
 1000010

	)

18 
	#S
 1000100

	)

19 
	#ïs
 1e-8

	)

20 
	#öf
 0x3fffffff

	)

21 
	#MOD
 1000000007

	)

22 
	#PB
 
push_back


	)

23 
	#SZ
(
a
Ë(()(◊).
	`size
()))

	)

24 
	#ALL
(
a
Ë◊).
	`begö
(),◊).
	`íd
()

	)

25 
	#CLR
(
a
,
x
Ë
	`mem£t
◊,x,◊))

	)

27 
	tLL
;

28 
usög
 
«me•a˚
 
	g°d
;

30 
ölöe
 
	$L
(
i
){  i<<1; 
	}
}

31 
ölöe
 
	$R
(
i
){  (i<<1)|1; 
	}
}

32 
ölöe
 
	$B
(
i
){  1<<i; 
	}
}

33 
ölöe
 
	$low_bô
(
x
){  x&(-x); 
	}
}

35 
	g˙t
[51][27*27],
	gèg
[51];

37 ˛as†
	cEŒysRevîßls


39 
	mpublic
:

40 
	$gë
(
a
,
b
)

42 
a
-='a',
b
-='a';

43  
	`mö
(
a
,
b
)*27+
	`max
(a,b);

46 
	$equ
(
u
,
v
)

48 
n
=27*27;

49 
i
=0; i<
n
; i++)

50 if(
˙t
[
u
][
i
]!=˙t[
v
][i])  0;

52 
	}
}

54 
sﬁve
(
ve˘‹
<
°rög
> 
s
)

56 
mem£t
(
˙t
,0,(cnt));

57 
	gn
=
s
.
size
();

58 
	gi
=0; i<
	gn
; i++)

60 
	gl
=
s
[
i
].
Àngth
();

61 if(
	gl
&1Ë
	gs
[
i
].
push_back
('z'+1),l++;

62 
	gj
=0; j<
	gl
; j+=2)

63 
˙t
[
i
][
gë
(
s
[i][
j
],s[i][j+1])]++;

65 
mem£t
(
èg
,0,(tag));

66 
	gªt
=0;

67 
	gi
=0; i<
	gn
; i++)

69 if(
	gèg
[
i
]) ;

70 
	gnow
=1;

71 
	gj
=
i
+1; j<
	gn
; j++)

73 if(
	gèg
[
j
]) ;

74 if(
equ
(
i
,
j
))

76 
	gèg
[
i
]=
èg
[
j
]=1;

77 
	gnow
=0;

81 
	gªt
+=
now
;

83  
	gªt
;

86 
gëMö
(
ve˘‹
 <
°rög
> 
w‹ds
)

88  
sﬁve
(
w‹ds
);

92 
	gpublic
:

93 
	$run_ã°
(
Ca£
Ë{ i‡((Ca£ =-1Ë|| (Ca£ =0)Ë
	`ã°_ˇ£_0
(); i‡((Ca£ =-1Ë|| (Ca£ =1)Ë
	`ã°_ˇ£_1
(); i‡((Ca£ =-1Ë|| (Ca£ =2)Ë
	`ã°_ˇ£_2
(); i‡((Ca£ =-1Ë|| (Ca£ =3)Ë
	`ã°_ˇ£_3
(); i‡((Ca£ =-1Ë|| (Ca£ =4)Ë
	`ã°_ˇ£_4
(); 
	}
}

94 
	g¥iv©e
:

95 
ãm∂©e
 <
ty≥«me
 
T
> 
°rög
 
¥öt_¨øy
(c⁄° 
ve˘‹
<T> &
V
Ë{ 
o°rög°ªam
 
os
; 
	gos
 << "{ "; ty≥«mê
	gve˘‹
<
	gT
>::
c⁄°_ôî©‹
 
ôî
 = V.
begö
(); 
	gôî
 !V.
íd
(); ++ôîËo†<< '\"' << *ôî << "\","; o†<< " }";  os.
°r
(); }

96 
	$vîify_ˇ£
(
Ca£
, c⁄° &
Ex≥˘ed
, c⁄° &
Re˚ived
Ë{ 
˚º
 << "Te° Ca£ #" << Ca£ << "..."; i‡(Ex≥˘ed =Re˚ivedË˚º << "PASSED" << 
ídl
; { cî∏<< "FAILED" <<Éndl; cî∏<< "\tEx≥˘ed: \"" << Ex≥˘ed << '\"' <<Éndl; cî∏<< "\tRe˚ived: \"" << Re˚ived << '\"' <<Éndl; } 
	}
}

97 
	$ã°_ˇ£_0
(Ë{ 
°rög
 
Aº0
[] = {"e•rô", "god", "ªdŸ›c", "od˝Ÿî", "dog"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 3; 
	`vîify_ˇ£
(0, Arg1, 
	`gëMö
(
Arg0
)); 
	}
}

98 
	$ã°_ˇ£_1
(Ë{ 
°rög
 
Aº0
[] = {"no", "z≠hod", "ju°", "vîy", "im¥obabÀ"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 5; 
	`vîify_ˇ£
(1, Arg1, 
	`gëMö
(
Arg0
)); 
	}
}

99 
	$ã°_ˇ£_2
(Ë{ 
°rög
 
Aº0
[] = {"øts", "live", "°ªs£d", "to", "a˘", "as", "°¨", "des£πs", "of", "evû", "ˇt", "ß", "fo", "Ÿ"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 0; 
	`vîify_ˇ£
(2, Arg1, 
	`gëMö
(
Arg0
)); 
	}
}

100 
	$ã°_ˇ£_3
(Ë{ 
°rög
 
Aº0
[] = {"t›codî", "ªdo˝Ÿ", "d‹ë›c", "˝Ÿd€r", "h¨Àmshake"}; 
ve˘‹
 <°rög> 
	`Arg0
(Aº0, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 1; 
	`vîify_ˇ£
(3, Arg1, 
	`gëMö
(
Arg0
)); 
	}
}

101 
	$ã°_ˇ£_4
(Ë{ 
°rög
 
Aº0
[] = {"iprlzgukfggzg", "bmhxvjbrtkbxy", "khapjiabbny", "nqlwgmcyvdikt",

105 "yhwbkzupcux", "hkbab«pjiy", "zqsqe‰rzehtxn", "yovöyguyudmv"}; 
ve˘‹
 <
°rög
> 
	`Arg0
(
Aº0
, Aº0 + ((Aº0Ë/ (Aº0[0]))); 
Arg1
 = 16; 
	`vîify_ˇ£
(4, Arg1, 
	`gëMö
(
Arg0
)); 
	}
}

112 
	$maö
()

114 
EŒysRevîßls
 
___ã°
;

115 
___ã°
.
	`run_ã°
(-1);

117 
	}
}

	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/bits/huge_val.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VAL
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

35 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

39 
	~<ídün.h
>

41 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

50 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

51 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

28 #ñi‡
__GNUC_PREREQ
(2,96)

29 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#HUGE_VALF
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7f800000UL }).
__d
)

	)

39 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

48 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

49 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

20 #i‚de‡
_MATH_H


24 #i‡
__GNUC_PREREQ
(3,3)

25 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

26 #ñi‡
__GNUC_PREREQ
(2,96)

27 
	#HUGE_VALL
 (
__exãnsi⁄__
 0x1.0
p32767L
)

	)

30 
	#__HUGE_VALL_byãs
 { 0, 0, 0, 0, 0, 0, 0, 0x80, 0xff, 0x7f, 0, 0 }

	)

32 
	#__huge_vÆl_t
 uni⁄ { 
__c
[12]; 
__ld
; }

	)

33 #ifde‡
__GNUC__


34 
	#HUGE_VALL
 (
__exãnsi⁄__
 \

35 ((
__huge_vÆl_t
Ë{ 
__c
: 
__HUGE_VALL_byãs
 }).
__ld
)

	)

37 
__huge_vÆl_t
 
	g__huge_vÆl
 = { 
__HUGE_VALL_byãs
 };

38 
	#HUGE_VALL
 (
__huge_vÆl
.
__ld
)

	)

	@/usr/include/bits/inf.h

19 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#INFINITY
 (
	`__buûtö_öff
())

	)

28 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


24 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

25 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

26 #ifde‡
__MATH_DECLARE_LDOUBLE


27 #ifde‡
__NO_LONG_DOUBLE_MATH


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__acos_föôe
);

30 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

34 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


36 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

37 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

38 #ifde‡
__MATH_DECLARE_LDOUBLE


39 #ifde‡
__NO_LONG_DOUBLE_MATH


40 
__REDIRECT_NTH
 (
acoshl
, (), 
__acosh_föôe
);

42 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

48 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

49 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 #ifde‡
__NO_LONG_DOUBLE_MATH


52 
__REDIRECT_NTH
 (
asöl
, (), 
__asö_föôe
);

54 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

59 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

60 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

61 #ifde‡
__MATH_DECLARE_LDOUBLE


62 #ifde‡
__NO_LONG_DOUBLE_MATH


63 
__REDIRECT_NTH
 (
©™2l
, (, ),

64 
__©™2_föôe
);

66 
__REDIRECT_NTH
 (
©™2l
, (, ),

67 
__©™2l_föôe
);

71 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


73 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

74 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

75 #ifde‡
__MATH_DECLARE_LDOUBLE


76 #ifde‡
__NO_LONG_DOUBLE_MATH


77 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™h_föôe
);

79 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

85 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

86 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

87 #ifde‡
__MATH_DECLARE_LDOUBLE


88 #ifde‡
__NO_LONG_DOUBLE_MATH


89 
__REDIRECT_NTH
 (
coshl
, (), 
__cosh_föôe
);

91 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

96 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

97 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
__REDIRECT_NTH
 (
ex∂
, (), 
__exp_föôe
);

102 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

106 #ifde‡
__USE_GNU


108 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

109 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

110 #ifde‡
__MATH_DECLARE_LDOUBLE


111 #ifde‡
__NO_LONG_DOUBLE_MATH


112 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10_föôe
);

114 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

119 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

120 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

121 #ifde‡
__MATH_DECLARE_LDOUBLE


122 #ifde‡
__NO_LONG_DOUBLE_MATH


123 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10_föôe
);

125 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

130 #ifde‡
__USE_ISOC99


132 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

133 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

134 #ifde‡
__MATH_DECLARE_LDOUBLE


135 #ifde‡
__NO_LONG_DOUBLE_MATH


136 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2_föôe
);

138 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

144 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

145 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 #ifde‡
__NO_LONG_DOUBLE_MATH


148 
__REDIRECT_NTH
 (
fmodl
, (, ),

149 
__fmod_föôe
);

151 
__REDIRECT_NTH
 (
fmodl
, (, ),

152 
__fmodl_föôe
);

156 #ifde‡
__USE_ISOC99


158 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

159 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 #ifde‡
__NO_LONG_DOUBLE_MATH


162 
__REDIRECT_NTH
 (
hypŸl
, (, ),

163 
__hypŸ_föôe
);

165 
__REDIRECT_NTH
 (
hypŸl
, (, ),

166 
__hypŸl_föôe
);

171 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


173 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

174 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

175 #ifde‡
__MATH_DECLARE_LDOUBLE


176 #ifde‡
__NO_LONG_DOUBLE_MATH


177 
__REDIRECT_NTH
 (
j0l
, (), 
__j0_föôe
);

179 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

184 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

185 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

186 #ifde‡
__MATH_DECLARE_LDOUBLE


187 #ifde‡
__NO_LONG_DOUBLE_MATH


188 
__REDIRECT_NTH
 (
y0l
, (), 
__y0_föôe
);

190 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

195 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

196 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

197 #ifde‡
__MATH_DECLARE_LDOUBLE


198 #ifde‡
__NO_LONG_DOUBLE_MATH


199 
__REDIRECT_NTH
 (
j1l
, (), 
__j1_föôe
);

201 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

206 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

207 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

208 #ifde‡
__MATH_DECLARE_LDOUBLE


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
__REDIRECT_NTH
 (
y1l
, (), 
__y1_föôe
);

212 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

217 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

218 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

219 #ifde‡
__MATH_DECLARE_LDOUBLE


220 #ifde‡
__NO_LONG_DOUBLE_MATH


221 
__REDIRECT_NTH
 (
j∆
, (, ), 
__jn_föôe
);

223 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

228 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

229 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

230 #ifde‡
__MATH_DECLARE_LDOUBLE


231 #ifde‡
__NO_LONG_DOUBLE_MATH


232 
__REDIRECT_NTH
 (
y∆
, (, ), 
__yn_föôe
);

234 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

239 #ifde‡
__USE_MISC


241 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

242 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

243 #ifde‡
__MATH_DECLARE_LDOUBLE


244 #ifde‡
__NO_LONG_DOUBLE_MATH


245 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

246 
__lgamma_r_föôe
);

248 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

249 
__lgammÆ_r_föôe
);

254 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


256 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

258 #ifde‡
__USE_ISOC99


259 
__loˇl_signgam
 = 0;

260  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

262  
	`lgamma_r
 (
__d
, &
signgam
);

264 
	}
}

265 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

267 #ifde‡
__USE_ISOC99


268 
__loˇl_signgam
 = 0;

269  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

271  
	`lgammaf_r
 (
__d
, &
signgam
);

273 
	}
}

274 #ifde‡
__MATH_DECLARE_LDOUBLE


275 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

277 #ifde‡
__USE_ISOC99


278 
__loˇl_signgam
 = 0;

279  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

281  
	`lgammÆ_r
 (
__d
, &
signgam
);

283 
	}
}

287 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


289 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

291 #ifde‡
__USE_ISOC99


292 
__loˇl_signgam
 = 0;

293  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

295  
	`lgamma_r
 (
__d
, &
signgam
);

297 
	}
}

298 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

300 #ifde‡
__USE_ISOC99


301 
__loˇl_signgam
 = 0;

302  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

304  
	`lgammaf_r
 (
__d
, &
signgam
);

306 
	}
}

307 #ifde‡
__MATH_DECLARE_LDOUBLE


308 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

310 #ifde‡
__USE_ISOC99


311 
__loˇl_signgam
 = 0;

312  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

314  
	`lgammÆ_r
 (
__d
, &
signgam
);

316 
	}
}

321 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

322 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

323 #ifde‡
__MATH_DECLARE_LDOUBLE


324 #ifde‡
__NO_LONG_DOUBLE_MATH


325 
__REDIRECT_NTH
 (
logl
, (), 
__log_föôe
);

327 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

332 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

333 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

334 #ifde‡
__MATH_DECLARE_LDOUBLE


335 #ifde‡
__NO_LONG_DOUBLE_MATH


336 
__REDIRECT_NTH
 (
log10l
, (), 
__log10_föôe
);

338 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

342 #ifde‡
__USE_ISOC99


344 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

345 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

346 #ifde‡
__MATH_DECLARE_LDOUBLE


347 #ifde‡
__NO_LONG_DOUBLE_MATH


348 
__REDIRECT_NTH
 (
log2l
, (), 
__log2_föôe
);

350 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

356 
__REDIRECT_NTH
 (
ldexp
, (, ), 
sˇlbn
);

357 
__REDIRECT_NTH
 (
ldexpf
, (, ), 
sˇlbnf
);

358 #ifde‡
__MATH_DECLARE_LDOUBLE


359 
__REDIRECT_NTH
 (
ldex∂
, (, ), 
sˇlb∆
);

363 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

364 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

365 #ifde‡
__MATH_DECLARE_LDOUBLE


366 #ifde‡
__NO_LONG_DOUBLE_MATH


367 
__REDIRECT_NTH
 (
powl
, (, ),

368 
__pow_föôe
);

370 
__REDIRECT_NTH
 (
powl
, (, ),

371 
__powl_föôe
);

376 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

377 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

378 #ifde‡
__MATH_DECLARE_LDOUBLE


379 #ifde‡
__NO_LONG_DOUBLE_MATH


380 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

381 
__ªmaödî_föôe
);

383 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

384 
__ªmaödîl_föôe
);

388 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


390 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

391 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

392 #ifde‡
__MATH_DECLARE_LDOUBLE


393 #ifde‡
__NO_LONG_DOUBLE_MATH


394 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

395 
__sˇlb_föôe
);

397 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

398 
__sˇlbl_föôe
);

404 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

405 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

406 #ifde‡
__MATH_DECLARE_LDOUBLE


407 #ifde‡
__NO_LONG_DOUBLE_MATH


408 
__REDIRECT_NTH
 (
söhl
, (), 
__söh_föôe
);

410 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

415 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

416 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

417 #ifde‡
__MATH_DECLARE_LDOUBLE


418 #ifde‡
__NO_LONG_DOUBLE_MATH


419 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπ_föôe
);

421 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

425 #ifde‡
__USE_ISOC99


427 
__gamma_r_föôe
 (, *);

428 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

430 
__loˇl_signgam
 = 0;

431 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

432  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

433 
	}
}

434 
__gammaf_r_föôe
 (, *);

435 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

437 
__loˇl_signgam
 = 0;

438 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

439  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

440 
	}
}

441 #ifde‡
__MATH_DECLARE_LDOUBLE


442 
__gammÆ_r_föôe
 (, *);

443 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

445 
__loˇl_signgam
 = 0;

446 #ifde‡
__NO_LONG_DOUBLE_MATH


447 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

449 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

451  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

452 
	}
}

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


52 
_MdoubÀ_BEGIN_NAMESPACE


54 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

56 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

58 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

60 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

63 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

65 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

67 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

72 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

74 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

76 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 
	g_MdoubÀ_END_NAMESPACE


79 #ifde‡
__USE_GNU


81 
__MATHDECL
 (,
söcos
,,

82 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

85 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


86 
__BEGIN_NAMESPACE_C99


88 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

90 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

92 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

93 
	g__END_NAMESPACE_C99


98 
_MdoubÀ_BEGIN_NAMESPACE


100 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

103 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

106 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

109 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

112 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

115 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

116 
	g_MdoubÀ_END_NAMESPACE


118 #ifde‡
__USE_GNU


120 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

125 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

131 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

134 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

135 
	g__END_NAMESPACE_C99


138 #ifde‡
__USE_ISOC99


139 
__BEGIN_NAMESPACE_C99


141 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

144 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

145 
	g__END_NAMESPACE_C99


151 
_MdoubÀ_BEGIN_NAMESPACE


153 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

156 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

157 
	g_MdoubÀ_END_NAMESPACE


159 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


160 
__BEGIN_NAMESPACE_C99


162 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

163 
	g__END_NAMESPACE_C99


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


167 
__BEGIN_NAMESPACE_C99


169 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

170 
	g__END_NAMESPACE_C99


176 
_MdoubÀ_BEGIN_NAMESPACE


178 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

181 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

184 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

187 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

192 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

195 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

196 
	g_MdoubÀ_END_NAMESPACE


198 #ifde‡
__USE_MISC


201 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

204 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

207 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

211 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


215 
__BEGIN_NAMESPACE_C99


217 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

218 
	g__END_NAMESPACE_C99


221 #ifde‡
__USE_ISOC99


222 
__BEGIN_NAMESPACE_C99


224 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

225 
	g__END_NAMESPACE_C99


230 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

237 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

238 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

239 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

240 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

242 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

246 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


247 
__BEGIN_NAMESPACE_C99


249 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

250 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

251 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

252 
	g__END_NAMESPACE_C99


255 #ifde‡
__USE_ISOC99


256 
__BEGIN_NAMESPACE_C99


258 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

259 
	g__END_NAMESPACE_C99


262 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


264 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

267 #ifde‡
__USE_MISC


271 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


276 
__BEGIN_NAMESPACE_C99


279 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

282 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

283 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


284 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

288 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

290 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


292 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

296 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

299 #ifde‡
__USE_ISOC99


301 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

305 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

309 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

313 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

318 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

325 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

326 
__exãnsi⁄__


327 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

331 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

332 
__exãnsi⁄__


333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

343 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #ifde‡
__USE_GNU


365 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

366 
__©åibuã__
 ((
__c⁄°__
));

369 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


371 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

18 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


22 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


23 
	#_MATH_H_MATHDEF
 1

	)

25 #i‡
deföed
 
__x86_64__
 || (deföed 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

28 
	tÊﬂt_t
;

29 
	tdoubÀ_t
;

35 
	tÊﬂt_t
;

37 
	tdoubÀ_t
;

42 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

43 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

47 #i‡
__FP_FAST_FMA


48 
	#FP_FAST_FMA
 1

	)

51 #i‡
__FP_FAST_FMAF


52 
	#FP_FAST_FMAF
 1

	)

55 #i‡
__FP_FAST_FMAL


56 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

30 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__
 && __GNUC__ >= 2

32 #i‡!
__GNUC_PREREQ
 (2,97)

37 #unde‡
isgª©î


38 #unde‡
isgª©îequÆ


39 #unde‡
i¶ess


40 #unde‡
i¶es£quÆ


41 #unde‡
i¶essgª©î


42 #unde‡
isun‹dîed


43 #ifde‡
__i686__


46 
	#isgª©î
(
x
, 
y
) \

47 ({ 
__ªsu…
; \

48 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

49 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

50 
__ªsu…
; })

	)

51 
	#isgª©îequÆ
(
x
, 
y
) \

52 ({ 
__ªsu…
; \

53 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

54 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

55 
__ªsu…
; })

	)

57 
	#i¶ess
(
x
, 
y
) \

58 ({ 
__ªsu…
; \

59 
	`__asm__
 ("fucomip %%st(1), %%st; seta %%al" \

60 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

61 
__ªsu…
; })

	)

63 
	#i¶es£quÆ
(
x
, 
y
) \

64 ({ 
__ªsu…
; \

65 
	`__asm__
 ("fucomip %%st(1), %%st; setae %%al" \

66 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st"); \

67 
__ªsu…
; })

	)

69 
	#i¶essgª©î
(
x
, 
y
) \

70 ({ 
__ªsu…
; \

71 
	`__asm__
 ("fucomip %%st(1), %%st; setne %%al" \

72 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

73 
__ªsu…
; })

	)

75 
	#isun‹dîed
(
x
, 
y
) \

76 ({ 
__ªsu…
; \

77 
	`__asm__
 ("fucomip %%st(1), %%st; setp %%al" \

78 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st"); \

79 
__ªsu…
; })

	)

82 
	#isgª©î
(
x
, 
y
) \

83 ({ 
__ªsu…
; \

84 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

85 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

86 
__ªsu…
; })

	)

88 
	#isgª©îequÆ
(
x
, 
y
) \

89 ({ 
__ªsu…
; \

90 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

91 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

92 
__ªsu…
; })

	)

94 
	#i¶ess
(
x
, 
y
) \

95 ({ 
__ªsu…
; \

96 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x45, %%ah; setz %%al" \

97 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

98 
__ªsu…
; })

	)

100 
	#i¶es£quÆ
(
x
, 
y
) \

101 ({ 
__ªsu…
; \

102 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x05, %%ah; setz %%al" \

103 : "˜" (
__ªsu…
Ë: "u" (
x
), "t" (
y
) : "cc", "st", "st(1)"); \

104 
__ªsu…
; })

	)

106 
	#i¶essgª©î
(
x
, 
y
) \

107 ({ 
__ªsu…
; \

108 
	`__asm__
 ("fucompp; fnstsw;Åestb $0x44, %%ah; setz %%al" \

109 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

110 
__ªsu…
; })

	)

112 
	#isun‹dîed
(
x
, 
y
) \

113 ({ 
__ªsu…
; \

114 
	`__asm__
 ("fucompp; fnstsw; sahf; setp %%al" \

115 : "˜" (
__ªsu…
Ë: "u" (
y
), "t" (
x
) : "cc", "st", "st(1)"); \

116 
__ªsu…
; })

	)

122 #i‡
__GNUC_PREREQ
 (2, 8)

123 
__BEGIN_NAMESPACE_C99


126 
__MATH_INLINE
 

127 
__NTH
 (
	$__signbôf
 (
__x
))

129 #ifde‡
__SSE2_MATH__


130 
__m
;

131 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

132  (
__m
 & 0x8) != 0;

134 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

135  
__u
.
__i
 < 0;

137 
	}
}

138 
__MATH_INLINE
 

139 
__NTH
 (
	$__signbô
 (
__x
))

141 #ifde‡
__SSE2_MATH__


142 
__m
;

143 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

144  (
__m
 & 0x80) != 0;

146 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

147  
__u
.
__i
[1] < 0;

149 
	}
}

150 
__MATH_INLINE
 

151 
__NTH
 (
	$__signbôl
 (
__x
))

153 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

154  (
__u
.
__i
[2] & 0x8000) != 0;

155 
	}
}

157 
	g__END_NAMESPACE_C99


164 #i‡
__GNUC_PREREQ
 (2, 8)

165 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

166 && 
deföed
 
	g__OPTIMIZE__


170 #ifde‡
__USE_ISOC99


171 
	g__BEGIN_NAMESPACE_C99


174 #ifde‡
__SSE_MATH__


175 
__MATH_INLINE
 

176 
__NTH
 (
	$Ãötf
 (
__x
))

178 
__ªs
;

183 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

187 #ifde‡
__SSE2_MATH__


188 
__MATH_INLINE
 

189 
__NTH
 (
	$Ãöt
 (
__x
))

191 
__ªs
;

196 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

197  
__ªs
;

198 
	}
}

200 #ifde‡
__x86_64__


201 
__exãnsi⁄__


202 
__MATH_INLINE
 

203 
__NTH
 (
	$Œrötf
 (
__x
))

205 
__ªs
;

210 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

213 
__exãnsi⁄__


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Œröt
 (
__x
))

217 
__ªs
;

222 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

223  
__ªs
;

224 
	}
}

227 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

228 && 
deföed
 
__SSE2_MATH__


230 
__MATH_INLINE
 

231 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

233 #ifde‡
__AVX__


234 
__ªs
;

235 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

236  
__ªs
;

238 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

239  
__x
;

241 
	}
}

242 
__MATH_INLINE
 

243 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

245 #ifde‡
__AVX__


246 
__ªs
;

247 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

248  
__ªs
;

250 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

251  
__x
;

253 
	}
}

256 
__MATH_INLINE
 

257 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

259 #ifde‡
__AVX__


260 
__ªs
;

261 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

262  
__ªs
;

264 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

265  
__x
;

267 
	}
}

268 
__MATH_INLINE
 

269 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

271 #ifde‡
__AVX__


272 
__ªs
;

273 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

274  
__ªs
;

276 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

277  
__x
;

279 
	}
}

282 
	g__END_NAMESPACE_C99


285 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


286 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


287 
__BEGIN_NAMESPACE_C99


290 
__MATH_INLINE
 

291 
__NTH
 (
	$röt
 (
__x
))

293 
__ªs
;

298 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

299  
__ªs
;

300 
	}
}

301 
__MATH_INLINE
 

302 
__NTH
 (
	$rötf
 (
__x
))

304 
__ªs
;

309 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

310  
__ªs
;

311 
	}
}

313 #ifde‡
__USE_ISOC99


315 
__MATH_INLINE
 

316 
__NTH
 (
	$√¨byöt
 (
__x
))

318 
__ªs
;

323 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

324  
__ªs
;

325 
	}
}

326 
__MATH_INLINE
 

327 
__NTH
 (
	$√¨byötf
 (
__x
))

329 
__ªs
;

334 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

335  
__ªs
;

336 
	}
}

339 
	g__END_NAMESPACE_C99


342 
__BEGIN_NAMESPACE_STD


344 
__MATH_INLINE
 

345 
__NTH
 (
	$˚û
 (
__x
))

347 
__ªs
;

348 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

349  
__ªs
;

350 
	}
}

351 
__END_NAMESPACE_STD


353 
__BEGIN_NAMESPACE_C99


354 
__MATH_INLINE
 

355 
__NTH
 (
	$˚ûf
 (
__x
))

357 
__ªs
;

358 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

359  
__ªs
;

360 
	}
}

361 
__END_NAMESPACE_C99


363 
__BEGIN_NAMESPACE_STD


365 
__MATH_INLINE
 

366 
__NTH
 (
	$Êo‹
 (
__x
))

368 
__ªs
;

369 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

370  
__ªs
;

371 
	}
}

372 
__END_NAMESPACE_STD


374 
__BEGIN_NAMESPACE_C99


375 
__MATH_INLINE
 

376 
__NTH
 (
	$Êo‹f
 (
__x
))

378 
__ªs
;

379 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

380  
__ªs
;

381 
	}
}

382 
	g__END_NAMESPACE_C99


387 #i‚de‡
__SSE2_MATH__


388 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

389 && 
deföed
 
	g__OPTIMIZE__
)

393 #unde‡
m©h_îrh™dlög


402 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


403 
	#__ölöe_m©h›
(
func
, 
›
) \

404 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

405 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

406 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

407 
	#__ölöe_m©h›NP
(
func
, 
›
) \

408 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

409 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

410 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

412 
	#__ölöe_m©h›
(
func
, 
›
) \

413 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

414 
	#__ölöe_m©h›NP
(
func
, 
›
) \

415 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

418 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

419 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

420 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

421 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

424 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


425 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

426 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

427 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

428 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

429 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

430 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

431 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

432 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

434 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

435 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

436 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

437 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

440 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

441 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

442 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

444 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

445 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

447 
Êﬂt_ty≥
 
__ªsu…
; \

448 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

449  
__ªsu…
; \

450 }

	)

453 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


454 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

455 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

456 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

457 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

458 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

459 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

460 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

461 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

462 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

463 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

464 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

465 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

466 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

467 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

468 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

469 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

470 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

471 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

472 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

473 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

474 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

475 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

476 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

477 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

479 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

480 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

481 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

482 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

483 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

484 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

485 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

486 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

487 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

488 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

489 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

490 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

493 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

494 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

495 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

497 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

498 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

500 
code
; \

501 }

	)

504 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

505 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

506 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

508 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

509 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

511 
code
; \

512 }

	)

514 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

515 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

516 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

518 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

519 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

520 
Êﬂt_ty≥
 
¨g3
)) \

522 
code
; \

523 }

	)

527 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


531 #ifde‡
__FAST_MATH__


532 #ifde‡
__USE_GNU


533 
	#__söcos_code
 \

534 
__co§
; \

535 
__sör
; \

536 
__swtmp
; \

537 
__asm
 
__vﬁ©ûe__
 \

552 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

553 *
__söx
 = 
__sör
; \

554 *
__cosx
 = 
__co§


	)

556 
__MATH_INLINE
 

557 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

559 
__söcos_code
;

560 
	}
}

562 
__MATH_INLINE
 

563 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

565 
__söcos_code
;

566 
	}
}

568 
__MATH_INLINE
 

569 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

571 
__söcos_code
;

572 
	}
}

579 #i‡
__GNUC_PREREQ
 (3, 5)

580 
	#__expm1_code
 \

581 
__ãmp
; \

582 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

583  
__ãmp
 ? __ãm∞: 
__x


	)

585 
	#__expm1_code
 \

586 
__vÆue
; \

587 
__exp⁄ít
; \

588 
__ãmp
; \

589 
__asm
 
__vﬁ©ûe__
 \

598 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

599 
__asm
 
__vﬁ©ûe__
 \

601 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

602 
__ãmp
 -= 1.0; \

603 
__ãmp
 +
__vÆue
; \

604  
__ãmp
 ? __ãm∞: 
__x


	)

606 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

608 #i‡
	`__GNUC_PREREQ
 (3, 4)

609 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

611 
	#__exp_code
 \

612 
__vÆue
; \

613 
__exp⁄ít
; \

614 
__asm
 
__vﬁ©ûe__
 \

622 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

623 
__vÆue
 += 1.0; \

624 
__asm
 
__vﬁ©ûe__
 \

626 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

627  
__vÆue


	)

628 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

629 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

633 #i‡!
	`__GNUC_PREREQ
 (3, 5)

634 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

635 
__vÆue
; \

636 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

637 
__asm
 
__vﬁ©ûe__
 \

639 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

640  
__vÆue
)

645 #i‡
	`__GNUC_PREREQ
 (3, 4)

646 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

647  
	$__buûtö_©™2l
 (
__y
, 
__x
))

649 
	#__©™2_code
 \

650 
__vÆue
; \

651 
__asm
 
__vﬁ©ûe__
 \

653 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

654  
__vÆue


	)

655 #ifde‡
__FAST_MATH__


656 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

658 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

662 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

663 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

664 
__vÆue
; \

665 
__asm
 
__vﬁ©ûe__
 \

670 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

671  
__vÆue
)

675 #ifde‡
__FAST_MATH__


676 #i‡!
	`__GNUC_PREREQ
 (3,3)

677 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

678 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

679 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

681 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

685 #i‡
	`__GNUC_PREREQ
 (2, 8)

686 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

687 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


688 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

689 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

691 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

693 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

694 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

697 #ifde‡
__FAST_MATH__


698 #i‡!
	`__GNUC_PREREQ
 (3, 4)

700 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

702 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

704 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

707 #i‡!
	`__GNUC_PREREQ
 (3, 5)

708 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

710 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

711 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

714 #i‡!
	`__GNUC_PREREQ
 (3, 4)

715 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

719 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

720 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

721 { 
__xld
: 
__x
 
	}
}; \

722 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

723 
	g__n
.
	g__xi
[1] = 0x80000000; \

724 
	g__n
.
	g__xi
[0] = 0; \

725  
	g__n
.
	g__xld
)

728 #ifde‡
__FAST_MATH__


730 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

731 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

732  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

734 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

735 
__ex
 = 
	`__ex∂
 (
__x
); \

736  0.5 * (
__ex
 + 1.0 / __ex))

738 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

739 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

740  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

743 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

744 
__vÆue
; \

745 
__ign‹e
; \

746 
__cw
; \

747 
__cwtmp
; \

748 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

756 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

757 "=m" (
__cw
) \

758 : "0" (
__x
)); \

759  
__vÆue
)

761 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

762 
__vÆue
; \

763 
__ign‹e
; \

764 
__cw
; \

765 
__cwtmp
; \

766 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

774 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

775 "=m" (
__cw
) \

776 : "0" (
__x
)); \

777  
__vÆue
)

779 #ifde‡
__FAST_MATH__


780 
	#__ldexp_code
 \

781 
__vÆue
; \

782 
__asm
 
__vﬁ©ûe__
 \

784 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

785  
__vÆue


	)

787 
__MATH_INLINE
 

788 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

790 
__ldexp_code
;

791 
	}
}

796 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


798 #ifde‡
__FAST_MATH__


799 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

803 
	#__M_SQRT2
 1.41421356237309504880L

	)

805 #i‡!
	`__GNUC_PREREQ
 (3, 5)

806 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

807 
__vÆue
; \

808 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

809 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

811 
__asm
 
__vﬁ©ûe__
 \

815 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

816  
__vÆue
)

821 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

822 
__y
 = 
	`__Áb¶
 (
__x
); \

823  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

824 * 
	$__sgn1l
 (
__x
)))

826 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

827  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

829 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

830 
__y
 = 
	`__Áb¶
 (
__x
); \

831  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

834 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

835  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

837 #i‡!
	`__GNUC_PREREQ
 (3, 5)

838 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

839 
__vÆue
; \

840 
__junk
; \

841 
__asm
 
__vﬁ©ûe__
 \

843 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

844  
__vÆue
)

850 #ifde‡
__USE_ISOC99


851 #ifde‡
__FAST_MATH__


853 #i‡!
	`__GNUC_PREREQ
 (3, 5)

854 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

857 
__MATH_INLINE
 

858 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

860 
__ldexp_code
;

861 
	}
}

863 
__MATH_INLINE
 

864 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

866 
__ldexp_code
;

867 
	}
}

869 
__ölöe_m©h›NP
 (
röt
, "frndint")

872 
	#__Ãöt_code
 \

873 
__Ãöåes
; \

874 
__asm__
 
__vﬁ©ûe__
 \

876 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

877  
__Ãöåes


	)

878 
__MATH_INLINE
 

879 
__NTH
 (
	$Ãötf
 (
__x
))

881 
__Ãöt_code
;

882 
	}
}

883 
__MATH_INLINE
 

884 
__NTH
 (
	$Ãöt
 (
__x
))

886 
__Ãöt_code
;

887 
	}
}

888 
__MATH_INLINE
 

889 
__NTH
 (
	$Ãöé
 (
__x
))

891 
__Ãöt_code
;

892 
	}
}

893 #unde‡
__Ãöt_code


895 
	#__Œröt_code
 \

896 
__Œröåes
; \

897 
__asm__
 
__vﬁ©ûe__
 \

899 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

900  
__Œröåes


	)

901 
__exãnsi⁄__


902 
__MATH_INLINE
 

903 
__NTH
 (
	$Œrötf
 (
__x
))

905 
__Œröt_code
;

906 
	}
}

907 
__exãnsi⁄__


908 
__MATH_INLINE
 

909 
__NTH
 (
	$Œröt
 (
__x
))

911 
__Œröt_code
;

912 
	}
}

913 
__exãnsi⁄__


914 
__MATH_INLINE
 

915 
__NTH
 (
	$Œröé
 (
__x
))

917 
__Œröt_code
;

918 
	}
}

919 #unde‡
__Œröt_code


924 #ifde‡
__USE_MISC


926 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

927 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

928 
__vÆue
; \

929 
__˛obbîed
; \

930 
__asm
 
__vﬁ©ûe__
 \

935 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

936  
__vÆue
)

941 
__MATH_INLINE
 

942 
__NTH
 (
	$__föôe
 (
__x
))

944  (
__exãnsi⁄__


945 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

947 
	}
}

952 #unde‡
__©™2_code


953 #ifde‡
__FAST_MATH__


954 #unde‡
__expm1_code


955 #unde‡
__exp_code


956 #unde‡
__söcos_code


963 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


964 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

965 
__ölöe_m©hcode2
 (
__õì754_©™2
, 
__y
, 
__x
,

966 
__vÆue
;

967 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

968 : "Ò" (
__vÆue
)

969 : "0" (
__x
), "u" (
__y
) : "st(1)");

970  
__vÆue
;)

	@/usr/include/bits/nan.h

19 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

28 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

30 #ñi‡
deföed
 
__GNUC__


32 
	#NAN
 \

33 (
__exãnsi⁄__
 \

34 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

35 { 
__l
: 0x7fc00000UL }).
__d
)

	)

39 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#__q«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

44 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


45 
	#__q«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

48 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__q«n_uni⁄


49 
__©åibuã__
 ((
__unu£d__
)Ë{ 
__q«n_byãs
 };

50 
	#NAN
 (
__q«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_BSD


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_GNU


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

340 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

341 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

342 #ñi‡!
__GNUC_PREREQ
 (4, 1)

343 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


344 #ñi‡
_FORTIFY_SOURCE
 > 1

345 
	#__USE_FORTIFY_LEVEL
 2

	)

347 
	#__USE_FORTIFY_LEVEL
 1

	)

350 #i‚de‡
__USE_FORTIFY_LEVEL


351 
	#__USE_FORTIFY_LEVEL
 0

	)

356 
	~<°dc-¥edef.h
>

364 #unde‡
__GNU_LIBRARY__


365 
	#__GNU_LIBRARY__
 6

	)

369 
	#__GLIBC__
 2

	)

370 
	#__GLIBC_MINOR__
 19

	)

372 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

373 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

376 #i‚de‡
__ASSEMBLER__


377 #i‚de‡
_SYS_CDEFS_H


378 
	~<sys/cdefs.h
>

383 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


384 
	#__USE_LARGEFILE
 1

	)

385 
	#__USE_LARGEFILE64
 1

	)

391 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

392 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

393 && 
deföed
 
	g__exã∫_ölöe


394 
	#__USE_EXTERN_INLINES
 1

	)

402 
	~<gnu/°ubs.h
>

	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

136 #i‡
__GNUC_PREREQ
 (4,3)

137 
	#__w¨nde˛
(
«me
, 
msg
) \

138 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

139 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

140 
	#__îr‹de˛
(
«me
, 
msg
) \

141 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

143 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

149 #i‡
__GNUC_PREREQ
 (2,97)

151 
	#__Êex¨r
 []

	)

153 #ifde‡
__GNUC__


154 
	#__Êex¨r
 [0]

	)

156 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

157 
	#__Êex¨r
 []

	)

160 
	#__Êex¨r
 [1]

	)

176 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

178 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

179 #ifde‡
__˝lu•lus


180 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

181 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

187 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

188 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

190 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

191 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

204 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

205 
	#__©åibuã__
(
xyz
Ë

	)

211 #i‡
__GNUC_PREREQ
 (2,96)

212 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

214 
	#__©åibuã_mÆloc__


	)

219 #i‡
__GNUC_PREREQ
 (4, 3)

220 
	#__©åibuã_Æloc_size__
(
∑øms
) \

221 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

223 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

321 #ifde‡
__GNUC__


326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 
	#__exã∫_Æways_ölöe
 \

329 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

331 
	#__exã∫_ölöe
 
__ölöe


	)

332 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

335 
	#__exã∫_ölöe


	)

336 
	#__exã∫_Æways_ölöe


	)

341 #i‡
__GNUC_PREREQ
 (4,3)

342 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

343 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

350 #i‡!
__GNUC_PREREQ
 (2,8)

351 
	#__exãnsi⁄__


	)

355 #i‡!
__GNUC_PREREQ
 (2,92)

356 
	#__ª°ri˘


	)

362 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


363 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

365 #ifde‡
__GNUC__


366 
	#__ª°ri˘_¨r


	)

368 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

369 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

372 
	#__ª°ri˘_¨r


	)

377 #i‡
__GNUC__
 >= 3

378 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

379 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

381 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

382 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	#__PTHREAD_MUTEX_HAVE_ELISION
 1

	)

110 
	m__nu£rs
;

111 
__exãnsi⁄__
 union

115 
	m__e•ös
;

116 
	m__ñisi⁄
;

117 
	#__•ös
 
d
.
__e•ös


	)

118 
	#__ñisi⁄
 
d
.
__ñisi⁄


	)

119 
	#__PTHREAD_MUTEX_HAVE_ELISION
 2

	)

120 } 
	md
;

121 
__±hªad_¶i°_t
 
	m__li°
;

124 } 
	m__d©a
;

125 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

126 
	m__Æign
;

127 } 
	t±hªad_muãx_t
;

131 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

132 
	m__Æign
;

133 } 
	t±hªad_muãx©å_t
;

142 
	m__lock
;

143 
	m__fuãx
;

144 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

145 
__exãnsi⁄__
 
	m__wakeup_£q
;

146 
__exãnsi⁄__
 
	m__wokí_£q
;

147 *
	m__muãx
;

148 
	m__nwaôîs
;

149 
	m__brﬂdˇ°_£q
;

150 } 
	m__d©a
;

151 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

152 
__exãnsi⁄__
 
	m__Æign
;

153 } 
	t±hªad_c⁄d_t
;

157 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

158 
	m__Æign
;

159 } 
	t±hªad_c⁄d©å_t
;

163 
	t±hªad_key_t
;

167 
	t±hªad_⁄˚_t
;

170 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


175 #ifde‡
__x86_64__


178 
	m__lock
;

179 
	m__ƒ_ªadîs
;

180 
	m__ªadîs_wakeup
;

181 
	m__wrôî_wakeup
;

182 
	m__ƒ_ªadîs_queued
;

183 
	m__ƒ_wrôîs_queued
;

184 
	m__wrôî
;

185 
	m__sh¨ed
;

186 
	m__∑d1
;

187 
	m__∑d2
;

190 
	m__Êags
;

191 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

192 } 
	m__d©a
;

196 
	m__lock
;

197 
	m__ƒ_ªadîs
;

198 
	m__ªadîs_wakeup
;

199 
	m__wrôî_wakeup
;

200 
	m__ƒ_ªadîs_queued
;

201 
	m__ƒ_wrôîs_queued
;

204 
	m__Êags
;

205 
	m__sh¨ed
;

206 
	m__∑d1
;

207 
	m__∑d2
;

208 
	m__wrôî
;

209 } 
	m__d©a
;

211 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

212 
	m__Æign
;

213 } 
	t±hªad_rwlock_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_rwlock©å_t
;

223 #ifde‡
__USE_XOPEN2K


225 vﬁ©ûê
	t±hªad_•ölock_t
;

232 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

233 
	m__Æign
;

234 } 
	t±hªad_b¨rõr_t
;

238 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

239 
	m__Æign
;

240 } 
	t±hªad_b¨rõøâr_t
;

244 #i‚de‡
__x86_64__


246 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@
1
.
1
/usr/include
832
34320
problems/ac_dream/2012_7_21/ac_dream_a.cpp
problems/ac_dream/2012_7_21/ac_dream_b.cpp
problems/ac_dream/2012_7_21/ac_dream_h.cpp
problems/ac_dream/2012_7_21/ac_dream_k.cpp
problems/ac_dream/2012_8_11/hust_C.cpp
problems/ac_dream/2012_8_11/hust_D.cpp
problems/ac_dream/2012_8_11/hust_E.cpp
problems/ac_dream/2012_8_11/hust_K.cpp
problems/acm_diy/2012/ACM_DIY_3.cpp
problems/acm_diy/2012/ACM_DIY_4.cpp
problems/acm_diy/2012/ACM_DIY_9.cpp
problems/acm_diy/2012/ACM_DIY_A.cpp
problems/acm_diy/2012/ACM_DIY_B.cpp
problems/acm_icpc_contest/2013_changchun_online/1004.cpp
problems/acm_icpc_contest/2013_changchun_online/1005.cpp
problems/acm_icpc_contest/2013_changsha_invite/a.cpp
problems/acm_icpc_contest/2013_changsha_invite/b.cpp
problems/acm_icpc_contest/2013_changsha_invite/c.cpp
problems/acm_icpc_contest/2013_changsha_invite/d.cpp
problems/acm_icpc_contest/2013_changsha_invite/e.cpp
problems/acm_icpc_contest/2013_changsha_invite/f.cpp
problems/acm_icpc_contest/2013_changsha_invite/g.cpp
problems/acm_icpc_contest/2013_changsha_invite/h.cpp
problems/acm_icpc_contest/2013_changsha_invite/j.cpp
problems/acm_icpc_contest/2013_changsha_invite/k_tle.cpp
problems/acm_icpc_contest/2013_changsha_invite/r.cpp
problems/acm_icpc_contest/2013_changsha_online/e.wa.cpp
problems/acm_icpc_contest/2013_changsha_online/g.cpp
problems/acm_icpc_contest/2013_changsha_online/g_dp.cpp
problems/acm_icpc_contest/2013_changsha_online/g_dp_ok.cpp
problems/acm_icpc_contest/2013_chengdu_regional/a.cpp
problems/acm_icpc_contest/2013_chengdu_regional/b.cpp
problems/acm_icpc_contest/2013_chengdu_regional/d.cpp
problems/acm_icpc_contest/2013_chengdu_regional/f.cpp
problems/acm_icpc_contest/2013_chengdu_regional/h.cpp
problems/acm_icpc_contest/2013_chengdu_regional/j.cpp
problems/acm_icpc_contest/2013_nanjing_invite/e.cpp
problems/acm_icpc_contest/2013_nanjing_invite/g.cpp
problems/acm_icpc_contest/2013_nanjing_invite/j.cpp
problems/acm_icpc_contest/2013_nanjing_online/1004.cpp
problems/acm_icpc_contest/2013_nanjing_online/1004_ok.cpp
problems/acm_icpc_contest/2013_nanjing_online/1006.cpp
problems/acm_icpc_contest/2013_nanjing_online/1006_ok.cpp
problems/acm_icpc_contest/2013_neerc/b.cpp
problems/acm_icpc_contest/2013_neerc/c.cpp
problems/acm_icpc_contest/2013_neerc/d.cpp
problems/acm_icpc_contest/2013_neerc/f.cpp
problems/acm_icpc_contest/2013_neerc/h.cpp
problems/acm_icpc_contest/2013_tonhua_invite/a.cpp
problems/acm_icpc_contest/2013_tonhua_invite/b.cpp
problems/acm_icpc_contest/2013_tonhua_invite/c.cpp
problems/acm_icpc_contest/2013_tonhua_invite/d.cpp
problems/acm_icpc_contest/2013_tonhua_invite/e.cpp
problems/acm_icpc_contest/2013_tonhua_invite/f.cpp
problems/acm_icpc_contest/2013_tonhua_invite/g.cpp
problems/acm_icpc_contest/2013_tonhua_invite/h.cpp
problems/acm_icpc_contest/2013_tonhua_invite/i.cpp
problems/acm_icpc_contest/2013_tonhua_invite/j.cpp
problems/baidu/2012_1st/astar_b.cpp
problems/baidu/2012_1st/astar_c.cpp
problems/baidu/2012_qual/astar_a.cpp
problems/baidu/2012_qual/astar_c.cpp
problems/bnu/bnu_A.cpp
problems/bnu/bnu_B.cpp
problems/codeforces/beta_round/round1/BR1_A.cpp
problems/codeforces/beta_round/round1/BR1_B.cpp
problems/codeforces/beta_round/round1/BR1_C.cpp
problems/codeforces/beta_round/round2/BR2_A.cpp
problems/codeforces/beta_round/round2/BR2_B.cpp
problems/codeforces/beta_round/round2/BR2_C.cpp
problems/codeforces/beta_round/round3/BR3A.cpp
problems/codeforces/beta_round/round3/BR3B.cpp
problems/codeforces/beta_round/round3/BR3C.cpp
problems/codeforces/beta_round/round3/BR3D.cpp
problems/codeforces/croc_cup/croc2013_qua/CROC2013_A.cpp
problems/codeforces/croc_cup/croc2013_qua/CROC2013_B.cpp
problems/codeforces/croc_cup/croc2013_qua/CROC2013_C.cpp
problems/codeforces/croc_cup/croc2013_qua/CROC2013_D.cpp
problems/codeforces/croc_cup/croc2013_qua/CROC2013_E.cpp
problems/codeforces/div1_codes/cf_div1_r146/a.cpp
problems/codeforces/div1_codes/cf_div1_r146/b.cpp
problems/codeforces/div1_codes/cf_div1_r146/c.cpp
problems/codeforces/div1_codes/cf_div1_r146/e.cpp
problems/codeforces/div1_codes/cf_r168_d1/a.cpp
problems/codeforces/div1_codes/cf_r168_d1/b.cpp
problems/codeforces/div1_codes/cf_r168_d1/d.cpp
problems/codeforces/div1_codes/cf_r168_d1/e.cpp
problems/codeforces/div1_codes/cf_r204_div1/a.cpp
problems/codeforces/div1_codes/cf_r204_div1/b.cpp
problems/codeforces/div1_codes/cf_r204_div1/c.cpp
problems/codeforces/div1_codes/cf_r204_div1/d.cpp
problems/codeforces/div1_codes/cf_r204_div1/e.cpp
problems/codeforces/div1_codes/cf_r219_div1/a.cpp
problems/codeforces/div1_codes/cf_r219_div1/b.cpp
problems/codeforces/div1_codes/round129/R129D1_D.cpp
problems/codeforces/div1_codes/round131/R131D1A.cpp
problems/codeforces/div1_codes/round131/R131D1B.cpp
problems/codeforces/div1_codes/round131/R131D1C.cpp
problems/codeforces/div1_codes/round140/R140D1A.cpp
problems/codeforces/div1_codes/round140/R140D1B.cpp
problems/codeforces/div1_codes/round140/R140D1C.cpp
problems/codeforces/div1_codes/round140/R140D1D.cpp
problems/codeforces/div1_codes/round145/R145D1A.cpp
problems/codeforces/div1_codes/round145/R145D1B.cpp
problems/codeforces/div1_codes/round145/R145D1C.cpp
problems/codeforces/div1_codes/round145/R145D1D.cpp
problems/codeforces/div1_codes/round145/R145D1E.cpp
problems/codeforces/div1_codes/round145/R145D1F.cpp
problems/codeforces/div1_codes/round162/R162D1A.cpp
problems/codeforces/div1_codes/round162/R162D1B.cpp
problems/codeforces/div1_codes/round162/R162D1C.cpp
problems/codeforces/div1_codes/round162/R162D1D.cpp
problems/codeforces/div1_codes/round162/R162D1E.cpp
problems/codeforces/div1_codes/round170_div1/R170D1A.cpp
problems/codeforces/div1_codes/round170_div1/R170D1B.cpp
problems/codeforces/div1_codes/round170_div1/R170D1C.cpp
problems/codeforces/div1_codes/round174_div1/R174D1A.cpp
problems/codeforces/div1_codes/round174_div1/R174D1B.cpp
problems/codeforces/div1_codes/round174_div1/R174D1C.cpp
problems/codeforces/div1_codes/round176_div1/R176D1A.cpp
problems/codeforces/div1_codes/round176_div1/R176D1B.cpp
problems/codeforces/div1_codes/round176_div1/R176D1C.cpp
problems/codeforces/div1_codes/round180_div1/R180D1A.cpp
problems/codeforces/div1_codes/round180_div1/R180D1B.cpp
problems/codeforces/div1_codes/round180_div1/R180D1C.cpp
problems/codeforces/div1_codes/round94/round94_div1_D.cpp
problems/codeforces/div2_codes/cf_div2_r167/R167D2A.cpp
problems/codeforces/div2_codes/cf_div2_r167/R167D2B.cpp
problems/codeforces/div2_codes/cf_div2_r167/R167D2C.cpp
problems/codeforces/div2_codes/cf_div2_r167/R167D2D.cpp
problems/codeforces/div2_codes/cf_div2_r167/R167D2E.cpp
problems/codeforces/div2_codes/cf_div2_r211/a.cpp
problems/codeforces/div2_codes/cf_div2_r211/b.cpp
problems/codeforces/div2_codes/cf_div2_r211/c.cpp
problems/codeforces/div2_codes/cf_div2_r211/d.cpp
problems/codeforces/div2_codes/cf_div2_r211/e.cpp
problems/codeforces/div2_codes/cf_r254_d2/a.cpp
problems/codeforces/div2_codes/cf_r254_d2/b.cpp
problems/codeforces/div2_codes/cf_r254_d2/c.cpp
problems/codeforces/div2_codes/round103/round103_E.cpp
problems/codeforces/div2_codes/round105/round105_C.cpp
problems/codeforces/div2_codes/round105/round105_D.cpp
problems/codeforces/div2_codes/round105/round105_E.cpp
problems/codeforces/div2_codes/round105/round105_div2_B.cpp
problems/codeforces/div2_codes/round107/round107_div2_E.cpp
problems/codeforces/div2_codes/round108/round108_A.cpp
problems/codeforces/div2_codes/round108/round108_B.cpp
problems/codeforces/div2_codes/round108/round108_C.cpp
problems/codeforces/div2_codes/round108/round108_D.cpp
problems/codeforces/div2_codes/round108/round108_E.cpp
problems/codeforces/div2_codes/round112/round112_div2_A.cpp
problems/codeforces/div2_codes/round112/round112_div2_B.cpp
problems/codeforces/div2_codes/round112/round112_div2_C.cpp
problems/codeforces/div2_codes/round112/round112_div2_D.cpp
problems/codeforces/div2_codes/round112/round112_div2_E.cpp
problems/codeforces/div2_codes/round113/round113_div2_A.cpp
problems/codeforces/div2_codes/round113/round113_div2_B.cpp
problems/codeforces/div2_codes/round113/round113_div2_C.cpp
problems/codeforces/div2_codes/round113/round113_div2_D.cpp
problems/codeforces/div2_codes/round113/round113_div2_E.cpp
problems/codeforces/div2_codes/round114/round114_div2_A.cpp
problems/codeforces/div2_codes/round114/round114_div2_B.cpp
problems/codeforces/div2_codes/round114/round114_div2_C.cpp
problems/codeforces/div2_codes/round114/round114_div2_D.cpp
problems/codeforces/div2_codes/round114/round114_div2_E.cpp
problems/codeforces/div2_codes/round117/round117_div2_A.cpp
problems/codeforces/div2_codes/round117/round117_div2_B.cpp
problems/codeforces/div2_codes/round117/round117_div2_C.cpp
problems/codeforces/div2_codes/round117/round117_div2_D.cpp
problems/codeforces/div2_codes/round117/round117_div2_E.cpp
problems/codeforces/div2_codes/round119/round_119_A.cpp
problems/codeforces/div2_codes/round119/round_119_B.cpp
problems/codeforces/div2_codes/round119/round_119_C.cpp
problems/codeforces/div2_codes/round119/round_119_D.cpp
problems/codeforces/div2_codes/round119/round_119_E.cpp
problems/codeforces/div2_codes/round120/round_120_A.cpp
problems/codeforces/div2_codes/round120/round_120_B.cpp
problems/codeforces/div2_codes/round120/round_120_C.cpp
problems/codeforces/div2_codes/round120/round_120_D.cpp
problems/codeforces/div2_codes/round120/round_120_E.cpp
problems/codeforces/div2_codes/round121/round121_A.cpp
problems/codeforces/div2_codes/round121/round121_B.cpp
problems/codeforces/div2_codes/round121/round121_C.cpp
problems/codeforces/div2_codes/round121/round121_D.cpp
problems/codeforces/div2_codes/round121/round121_E_classic.cpp
problems/codeforces/div2_codes/round122/round122_A.cpp
problems/codeforces/div2_codes/round122/round122_B.cpp
problems/codeforces/div2_codes/round122/round122_C.cpp
problems/codeforces/div2_codes/round122/round122_D.cpp
problems/codeforces/div2_codes/round122/round122_E_gauss_classic.cpp
problems/codeforces/div2_codes/round124/round_124_A.cpp
problems/codeforces/div2_codes/round124/round_124_B.cpp
problems/codeforces/div2_codes/round124/round_124_C.cpp
problems/codeforces/div2_codes/round124/round_124_D.cpp
problems/codeforces/div2_codes/round124/round_124_E.cpp
problems/codeforces/div2_codes/round129/round129_A.cpp
problems/codeforces/div2_codes/round129/round129_B.cpp
problems/codeforces/div2_codes/round129/round129_C.cpp
problems/codeforces/div2_codes/round129/round129_D.cpp
problems/codeforces/div2_codes/round129/round129_E.cpp
problems/codeforces/div2_codes/round130/round_130_A.cpp
problems/codeforces/div2_codes/round130/round_130_B.cpp
problems/codeforces/div2_codes/round130/round_130_C.cpp
problems/codeforces/div2_codes/round130/round_130_D.cpp
problems/codeforces/div2_codes/round130/round_130_E.cpp
problems/codeforces/div2_codes/round131/R131D2A.cpp
problems/codeforces/div2_codes/round131/R131D2B.cpp
problems/codeforces/div2_codes/round132/R132D2A.cpp
problems/codeforces/div2_codes/round132/R132D2B.cpp
problems/codeforces/div2_codes/round132/R132D2C.cpp
problems/codeforces/div2_codes/round132/R132D2D.cpp
problems/codeforces/div2_codes/round132/R132D2E.cpp
problems/codeforces/div2_codes/round133/R133D2A.cpp
problems/codeforces/div2_codes/round133/R133D2B.cpp
problems/codeforces/div2_codes/round133/R133D2C.cpp
problems/codeforces/div2_codes/round133/R133D2D.cpp
problems/codeforces/div2_codes/round133/R133D2E.cpp
problems/codeforces/div2_codes/round134/R134D1_A.cpp
problems/codeforces/div2_codes/round134/R134D1_B.cpp
problems/codeforces/div2_codes/round134/R134D1_C.cpp
problems/codeforces/div2_codes/round134/R134D2_A.cpp
problems/codeforces/div2_codes/round134/R134D2_B.cpp
problems/codeforces/div2_codes/round135/R135D2A.cpp
problems/codeforces/div2_codes/round135/R135D2B.cpp
problems/codeforces/div2_codes/round135/R135D2C.cpp
problems/codeforces/div2_codes/round135/R135D2D.cpp
problems/codeforces/div2_codes/round135/R135D2E.cpp
problems/codeforces/div2_codes/round137/R137D2A.cpp
problems/codeforces/div2_codes/round137/R137D2B.cpp
problems/codeforces/div2_codes/round137/R137D2C.cpp
problems/codeforces/div2_codes/round137/R137D2D.cpp
problems/codeforces/div2_codes/round137/R137D2E.cpp
problems/codeforces/div2_codes/round138/R138D2A.cpp
problems/codeforces/div2_codes/round138/R138D2B.cpp
problems/codeforces/div2_codes/round138/R138D2C.cpp
problems/codeforces/div2_codes/round138/R138D2D.cpp
problems/codeforces/div2_codes/round138/R138D2E.cpp
problems/codeforces/div2_codes/round139/R139D2A.cpp
problems/codeforces/div2_codes/round139/R139D2B.cpp
problems/codeforces/div2_codes/round139/R139D2C.cpp
problems/codeforces/div2_codes/round139/R139D2D.cpp
problems/codeforces/div2_codes/round139/R139D2E.cpp
problems/codeforces/div2_codes/round141/R141D2B.cpp
problems/codeforces/div2_codes/round141/R141D2C.cpp
problems/codeforces/div2_codes/round141/R141D2D.cpp
problems/codeforces/div2_codes/round141/R141D2E.cpp
problems/codeforces/div2_codes/round143/R143D2A.cpp
problems/codeforces/div2_codes/round143/R143D2B.cpp
problems/codeforces/div2_codes/round143/R143D2C.cpp
problems/codeforces/div2_codes/round143/R143D2D.cpp
problems/codeforces/div2_codes/round143/R143D2E.cpp
problems/codeforces/div2_codes/round147/R147D2A.cpp
problems/codeforces/div2_codes/round147/R147D2B.cpp
problems/codeforces/div2_codes/round147/R147D2C.cpp
problems/codeforces/div2_codes/round147/R147D2D.cpp
problems/codeforces/div2_codes/round147/R147D2E.cpp
problems/codeforces/div2_codes/round160/R160D2A.cpp
problems/codeforces/div2_codes/round160/R160D2B.cpp
problems/codeforces/div2_codes/round160/R160D2C.cpp
problems/codeforces/div2_codes/round160/R160D2D.cpp
problems/codeforces/div2_codes/round160/R160D2E.cpp
problems/codeforces/div2_codes/round163/R163D2A.cpp
problems/codeforces/div2_codes/round163/R163D2B.cpp
problems/codeforces/div2_codes/round163/R163D2C.cpp
problems/codeforces/div2_codes/round163/R163D2D.cpp
problems/codeforces/div2_codes/round163/R163D2E.cpp
problems/codeforces/div2_codes/round169/R169D2A.cpp
problems/codeforces/div2_codes/round169/R169D2B.cpp
problems/codeforces/div2_codes/round169/R169D2C.cpp
problems/codeforces/div2_codes/round169/R169D2D.cpp
problems/codeforces/div2_codes/round169/R169D2E.cpp
problems/codeforces/div2_codes/round171_div2/R171D2A.cpp
problems/codeforces/div2_codes/round171_div2/R171D2B.cpp
problems/codeforces/div2_codes/round171_div2/R171D2C.cpp
problems/codeforces/div2_codes/round171_div2/R171D2E.cpp
problems/codeforces/div2_codes/round173/R173D2A.cpp
problems/codeforces/div2_codes/round173/R173D2B.cpp
problems/codeforces/div2_codes/round173/R173D2C.cpp
problems/codeforces/div2_codes/round173/R173D2D.cpp
problems/codeforces/div2_codes/round173/R173D2E.cpp
problems/codeforces/div2_codes/round175_div2/R175D2A.cpp
problems/codeforces/div2_codes/round175_div2/R175D2B.cpp
problems/codeforces/div2_codes/round175_div2/R175D2C.cpp
problems/codeforces/div2_codes/round175_div2/R175D2D.cpp
problems/codeforces/div2_codes/round178_div2/R178D2A.cpp
problems/codeforces/div2_codes/round178_div2/R178D2C.cpp
problems/codeforces/div2_codes/round94/round94_div2_C_Status.cpp
problems/codeforces/div2_codes/round94/round94_div2_D_String.cpp
problems/codeforces/div2_codes/round94/round94_div2_E_Games_with_rectangle_dp.cpp
problems/codeforces/div2_codes/round95/round95_div2_A.cpp
problems/codeforces/div2_codes/round95/round95_div2_C.cpp
problems/codeforces/div2_codes/round95/round95_div2_E.cpp
problems/codeforces/div2_codes/round95/round95_div2_F.cpp
problems/codeforces/div2_codes/round96/round96_D.cpp
problems/codeforces/div2_codes/round96/round_96_E_dp.cpp
problems/codeforces/div2_codes/round97/round97_E.cpp
problems/codeforces/div2_codes/round98/round98_A.cpp
problems/codeforces/div2_codes/round98/round98_D_dp.cpp
problems/codeforces/div2_codes/round98/round98_E_dp.cpp
problems/codeforces/div2_codes/round99/round99_C.cpp
problems/codeforces/div2_codes/round99/round99_D.cpp
problems/codeforces/div2_codes/round99/round99_E.cpp
problems/codeforces/test_round/test_round_3/testround_3_B.cpp
problems/codeforces/test_round/test_round_3/testround_3_C.cpp
problems/codeforces/vk_cup/round1/vk_cup_1stR_A.cpp
problems/codeforces/vk_cup/round1/vk_cup_1stR_B.cpp
problems/codeforces/vk_cup/round1/vk_cup_1stR_C.cpp
problems/codeforces/vk_cup/round1/vk_cup_1stR_D.cpp
problems/codeforces/vk_cup/round1/vk_cup_1stR_E.cpp
problems/codeforces/vk_cup/round2/vk_cup_2012_round2_A.cpp
problems/codeforces/vk_cup/round2/vk_cup_2012_round2_B.cpp
problems/codeforces/vk_cup/round2/vk_cup_2012_round2_C.cpp
problems/codeforces/vk_cup/round2_unofficial/vk_cup_2012_round2_unofficial_A.cpp
problems/codeforces/vk_cup/round2_unofficial/vk_cup_2012_round2_unofficial_B.cpp
problems/fzu/fzu_2012_3/fzu_2012_3_A.cpp
problems/fzu/fzu_2012_3/fzu_2012_3_B_unsolved.cpp
problems/fzu/fzu_2012_3/fzu_2012_3_C.cpp
problems/fzu/fzu_2012_3/fzu_2012_3_D.cpp
problems/fzu/fzu_2012_3/fzu_2012_3_F.cpp
problems/fzu/fzu_2012_3/fzu_2012_3_G_unsolved.cpp
problems/fzu/fzu_2012_school/fzu_A.cpp
problems/fzu/fzu_2012_school/fzu_B.cpp
problems/fzu/fzu_2012_school/fzu_C.cpp
problems/fzu/fzu_2012_school/fzu_D.cpp
problems/fzu/fzu_2012_school/fzu_E.cpp
problems/fzu/fzu_2012_school/fzu_F.cpp
problems/fzu/fzu_2012_school/fzu_G.cpp
problems/google/2014_google_china_RA/a.cpp
problems/google/2014_google_china_RA/b.cpp
problems/google/2014_google_china_RA/c.cpp
problems/google/gcj2013/R1B/a.cpp
problems/google/gcj2013/R1B/gcj_2013_R1B_A.cpp
problems/google/gcj2013/qualification/qua_a.cpp
problems/google/gcj2013/qualification/qua_b.cpp
problems/google/gcj2013/qualification/qua_c.cpp
problems/google/gcj_1A_2012/gcj2012_round_1A_A.cpp
problems/google/gcj_1A_2012/gcj2012_round_1A_B.cpp
problems/google/gcj_qualification_2011/2011_qualification/A.cpp
problems/google/gcj_qualification_2012/google_2012_qualification_A.cpp
problems/google/gcj_qualification_2012/google_2012_qualification_B.cpp
problems/google/gcj_qualification_2012/google_2012_qualification_C.cpp
problems/hackup/2013/HackupQuaA.cpp
problems/hackup/2013/HackupQuaB.cpp
problems/hackup/2013/HackupQuaC.cpp
problems/hackup/2013/HackupR1A.cpp
problems/hackup/2013/HackupR1B.cpp
problems/hackup/2013/HackupR1C.cpp
problems/hackup/2013_facebook_hack_cup/qua_round/a.cpp
problems/hackup/2013_facebook_hack_cup/qua_round/b.cpp
problems/hackup/2013_facebook_hack_cup/qua_round/c.wa.cpp
problems/hdoj/4379.cpp
problems/hdoj/hd_4365.cpp
problems/hdoj/hdoj_3722.cpp
problems/hdoj/hdoj_3831_DICS_dp.cpp
problems/hdoj/hdoj_3832_Earth_hour.cpp
problems/hdoj/hdoj_3833_YYs_new_problem.cpp
problems/hdoj/hdoj_3859.cpp
problems/hdoj/hdoj_3874.cpp
problems/hdoj/hdoj_3936.cpp
problems/hdoj/hdoj_3939.cpp
problems/hdoj/hdoj_4300.cpp
problems/hdoj/hdu_1166.cpp
problems/hdoj/hdu_1255.cpp
problems/hdoj/hdu_1394.cpp
problems/hdoj/hdu_1698.cpp
problems/hdoj/hdu_1754.cpp
problems/hdoj/hdu_1823_2wei_segmentTree.cpp
problems/hdoj/hdu_2795.cpp
problems/hdoj/hdu_2871.cpp
problems/hdoj/hdu_3016.cpp
problems/hdoj/hdu_3899.cpp
problems/hdoj/hdu_4055.cpp
problems/hdoj/hdu_4059.cpp
problems/hdoj/hdu_4203.cpp
problems/hdoj/hdu_4245.cpp
problems/hdoj/hdu_4246.cpp
problems/hdoj/hdu_4247.cpp
problems/hdoj/hdu_4248.cpp
problems/hdoj/hdu_4249.cpp
problems/hdoj/hdu_4250_classic.cpp
problems/hdoj/hdu_4251.cpp
problems/hdoj/hdu_4252.cpp
problems/hdoj/hdu_4253.cpp
problems/hdoj/hdu_4254.cpp
problems/hdoj/hdu_4255.cpp
problems/hdoj/hdu_4256.cpp
problems/hdoj/hdu_4291.cpp
problems/hdoj/hdu_4293.cpp
problems/hdoj/hdu_4294.cpp
problems/hdoj/hdu_4301.cpp
problems/hdoj/hdu_4302.cpp
problems/hdoj/hdu_4325.cpp
problems/hdoj/hdu_4339.cpp
problems/hdoj/hdu_4342.cpp
problems/hdoj/hdu_4344.cpp
problems/hdoj/hdu_4345.cpp
problems/hdoj/hdu_4355.cpp
problems/hdoj/hdu_4359.cpp
problems/hdoj/hdu_4364.cpp
problems/hdoj/hdu_4377.cpp
problems/hdoj/hdu_4389.cpp
problems/hdoj/hdu_4403.cpp
problems/hdoj/hdu_4407.cpp
problems/hdoj/hdu_4408.cpp
problems/microsoft/ms2013qua/MsBOP2013QuaA.cpp
problems/microsoft/ms2013qua/MsBOP2013QuaB.cpp
problems/microsoft/ms2013qua/MsBOP2013QuaC.cpp
problems/microsoft/ms2013r1/MsBOP2013R1A.cpp
problems/microsoft/ms2013r1/MsBOP2013R1B.cpp
problems/microsoft/ms2013r2/Ms2013R2A.cpp
problems/microsoft/ms2013r2/Ms2013R2B.cpp
problems/microsoft/ms2013r2/ms2013R2D.cpp
problems/multi/2012/site2/Matrix_D.cpp
problems/multi/2012/site2/Meeting-point1_B.cpp
problems/multi/2012/site2/Meeting-point2_C.cpp
problems/nkoj/nkoj_2076.cpp
problems/nkoj/nkoj_2172.cpp
problems/nkoj/nkoj_2187_water.cpp
problems/nkoj/nkoj_2190_NKU_football_ufind.cpp
problems/nkoj/nkoj_2193_road_to_Mauritius_dijkstra.cpp
problems/nkoj/nkpc8/solves/nkpc8_Lees_Game_2nd.cpp
problems/nkoj/nkpc8/solves/nkpc8_Lees_Travel_4th.cpp
problems/nkoj/nkpc8/solves/nkpc8_Lees_and_the_locked_gift.cpp
problems/nkoj/nkpc8/solves/nkpc8_online_1st.cpp
problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_A.cpp
problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_B.cpp
problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_D.cpp
problems/nkoj/nkpc8/solves/onsite/nkpc8_onsite_E.cpp
problems/poj/left_probs.cpp
problems/poj/poj_1018.cpp
problems/poj/poj_1026_Cipher_Polya.cpp
problems/poj/poj_1037.cpp
problems/poj/poj_1048_Follow_My_Logic_string.cpp
problems/poj/poj_1054_The_Troublesome_Frog_force.cpp
problems/poj/poj_1066_Treasure_Hunt_geometry.cpp
problems/poj/poj_1077_EightNumber.cpp
problems/poj/poj_1087.cpp
problems/poj/poj_1101.cpp
problems/poj/poj_1143.cpp
problems/poj/poj_1151_Atlantis_segt_scanning.cpp
problems/poj/poj_1157.cpp
problems/poj/poj_1167_cut_search_classic.cpp
problems/poj/poj_1170.cpp
problems/poj/poj_1178.cpp
problems/poj/poj_1179.cpp
problems/poj/poj_1185_PaoBingZhenDi_dp.cpp
problems/poj/poj_1189.cpp
problems/poj/poj_1190.cpp
problems/poj/poj_1191_Cutting_board_dp.cpp
problems/poj/poj_1192.cpp
problems/poj/poj_1208.cpp
problems/poj/poj_1239.cpp
problems/poj/poj_1322.cpp
problems/poj/poj_1324.cpp
problems/poj/poj_1330_LCA.cpp
problems/poj/poj_1376.cpp
problems/poj/poj_1414.cpp
problems/poj/poj_1421_Peters_calculator_string.cpp
problems/poj/poj_1436.cpp
problems/poj/poj_1456.cpp
problems/poj/poj_1458.cpp
problems/poj/poj_1475.cpp
problems/poj/poj_1505.cpp
problems/poj/poj_1609.cpp
problems/poj/poj_1625_ac_machine_dp.cpp
problems/poj/poj_1639.cpp
problems/poj/poj_1644.cpp
problems/poj/poj_1655.cpp
problems/poj/poj_1664.cpp
problems/poj/poj_1684_DDL_string.cpp
problems/poj/poj_1690.cpp
problems/poj/poj_1691_Painting_A_Board_dfs.cpp
problems/poj/poj_1695.cpp
problems/poj/poj_1699.cpp
problems/poj/poj_1724_ROADS_dfs.cpp
problems/poj/poj_1733.cpp
problems/poj/poj_1737_RTC1.cpp
problems/poj/poj_1740.cpp
problems/poj/poj_1742.cpp
problems/poj/poj_1743_suffix_array_2fen.cpp
problems/poj/poj_1743_suffix_array_stack.cpp
problems/poj/poj_1765_November_Rain_scanning_line.cpp
problems/poj/poj_1819_Disks_Geometry.cpp
problems/poj/poj_1840_hash.cpp
problems/poj/poj_1870_Bee_Breding_math.cpp
problems/poj/poj_1887.cpp
problems/poj/poj_1920.cpp
problems/poj/poj_1925_Spiderman_dp.cpp
problems/poj/poj_1926.cpp
problems/poj/poj_1934.cpp
problems/poj/poj_1936.cpp
problems/poj/poj_1947_Rebuilding_Roads_TreeDp.cpp
problems/poj/poj_1952_dp.cpp
problems/poj/poj_1953.cpp
problems/poj/poj_1958.cpp
problems/poj/poj_1959.cpp
problems/poj/poj_1961_Period_kmp.cpp
problems/poj/poj_1962.cpp
problems/poj/poj_1964.cpp
problems/poj/poj_1966.cpp
problems/poj/poj_1975.cpp
problems/poj/poj_1986_LCA_tarjan.cpp
problems/poj/poj_1989.cpp
problems/poj/poj_2018_converx_dp.cpp
problems/poj/poj_2029_Get_Many_Persimmon_Trees_dp.cpp
problems/poj/poj_2039.cpp
problems/poj/poj_2043_Area_of_Polygons_geometry.cpp
problems/poj/poj_2044.cpp
problems/poj/poj_2057_The_Lost_House_TreeDp.cpp
problems/poj/poj_2063.cpp
problems/poj/poj_2081.cpp
problems/poj/poj_2082.cpp
problems/poj/poj_2104.cpp
problems/poj/poj_2112.cpp
problems/poj/poj_2151_dp.cpp
problems/poj/poj_2181.cpp
problems/poj/poj_2183.cpp
problems/poj/poj_2184.cpp
problems/poj/poj_2192.cpp
problems/poj/poj_2225.cpp
problems/poj/poj_2231.cpp
problems/poj/poj_2265_Bee_Maja_math.cpp
problems/poj/poj_2279.cpp
problems/poj/poj_2280_Amphiphilic_Carbon_Molecules_scanning.cpp
problems/poj/poj_2289.cpp
problems/poj/poj_2329.cpp
problems/poj/poj_2336.cpp
problems/poj/poj_2346.cpp
problems/poj/poj_2353.cpp
problems/poj/poj_2355.cpp
problems/poj/poj_2356.cpp
problems/poj/poj_2385.cpp
problems/poj/poj_2392.cpp
problems/poj/poj_2424.cpp
problems/poj/poj_2446_hungary.cpp
problems/poj/poj_2452_RMQ_classic.cpp
problems/poj/poj_2454_Jersey_Politics_randon.cpp
problems/poj/poj_2464_segmentTree.cpp
problems/poj/poj_2486_Apple_Tree_TreeDp.cpp
problems/poj/poj_2492_A_BUGS_LIFE_ufind.cpp
problems/poj/poj_2525_text_formalization_string.cpp
problems/poj/poj_2688.cpp
problems/poj/poj_2728.cpp
problems/poj/poj_2774.cpp
problems/poj/poj_2778_dp_on_acmachine_classic.cpp
problems/poj/poj_2892.cpp
problems/poj/poj_2948_Martian_Mining_dp.cpp
problems/poj/poj_2976_Dropping_tests_0_1_fraction_programming.cpp
problems/poj/poj_2991_classic_segmentTree.cpp
problems/poj/poj_3004_subway_planning_scanning.cpp
problems/poj/poj_3034_Whac_A_Mole_dp.cpp
problems/poj/poj_3070_Fibonacci_matrix.cpp
problems/poj/poj_3071_Football_dp.cpp
problems/poj/poj_3101_Astronomy_math.cpp
problems/poj/poj_3140_Contestants_Division_TreeDp.cpp
problems/poj/poj_3145.cpp
problems/poj/poj_3150_Cellular_Automaton_matrix.cpp
problems/poj/poj_3155.cpp
problems/poj/poj_3164_ZL_MST.cpp
problems/poj/poj_3216_hungary.cpp
problems/poj/poj_3254_Corn_Fields_dp.cpp
problems/poj/poj_3266_CowSchool_xielvyouhua.cpp
problems/poj/poj_3270_Cow_Sorting_Polya.cpp
problems/poj/poj_3277_City_Horizon_segt_scanning.cpp
problems/poj/poj_3280_Cheapest_Palindrome_dp.cpp
problems/poj/poj_3281.cpp
problems/poj/poj_3286_How_many_0s_math.cpp
problems/poj/poj_3301_Texas_Trip_recursion.cpp
problems/poj/poj_3318_Matrix_Multiplication_randon.cpp
problems/poj/poj_3335_Rotating_Scoreboard_Polygon_NeiHe.cpp
problems/poj/poj_3373_Changing_Digits_dp.cpp
problems/poj/poj_3411_Paid_Roads_dfs.cpp
problems/poj/poj_3415_suffix_array_classic.cpp
problems/poj/poj_3422_Kakas_Matrix_Travels_dp2mcmf.cpp
problems/poj/poj_3429_Geometry_with_a_ruler.cpp
problems/poj/poj_3440_Coin_Toss_math.cpp
problems/poj/poj_3468.cpp
problems/poj/poj_3667.cpp
problems/poj/poj_3924_suffix_array.cpp
problems/poj/poj_4047.cpp
problems/poj/poj_Gunman_geometry.cpp
problems/sgu/sgu_128.cpp
problems/sgu/sgu_129.cpp
problems/sgu/sgu_131.cpp
problems/sgu/sgu_132_classic_dp.cpp
problems/sgu/sgu_136.cpp
problems/sgu/sgu_137_classic_math.cpp
problems/sgu/sgu_138.cpp
problems/sgu/sgu_140.cpp
problems/sgu/sgu_141.cpp
problems/sgu/sgu_142.cpp
problems/sgu/sgu_143.cpp
problems/sgu/sgu_145.cpp
problems/sgu/sgu_176.cpp
problems/sgu/sgu_194.cpp
problems/sgu/sgu_199.cpp
problems/sgu/sgu_200.cpp
problems/sgu/sgu_242.cpp
problems/sgu/sgu_297.cpp
problems/sgu/sgu_302.cpp
problems/sgu/sgu_304_classic_dp.cpp
problems/sgu/sgu_318.cpp
problems/sgu/sgu_327.cpp
problems/sgu/sgu_339.cpp
problems/sgu/sgu_375.cpp
problems/sgu/sgu_463.cpp
problems/sgu/sgu_479.cpp
problems/sgu/sgu_484.cpp
problems/spoj/spoj_1161_string.cpp
problems/spoj/spoj_1162_string.cpp
problems/timus/timus_1922.cpp
problems/timus/timus_1923.cpp
problems/timus/timus_1924.cpp
problems/timus/timus_1926.cpp
problems/timus/timus_1927.cpp
problems/timus/timus_1928.cpp
problems/timus/timus_1929.cpp
problems/zoj/3519.cpp
problems/zoj/zoj_3497.cpp
problems/zoj/zoj_3498.cpp
problems/zoj/zoj_3499.cpp
problems/zoj/zoj_3500.cpp
problems/zoj/zoj_3501.cpp
problems/zoj/zoj_3502.cpp
problems/zoj/zoj_3504.cpp
problems/zoj/zoj_3505.cpp
problems/zoj/zoj_3506_classic_tree_dp.cpp
problems/zoj/zoj_3508.cpp
problems/zoj/zoj_3511.cpp
problems/zoj/zoj_3516.cpp
problems/zoj/zoj_3523.cpp
problems/zoj/zoj_3527.cpp
problems/zoj/zoj_3541.cpp
problems/zoj/zoj_3549.cpp
problems/zoj/zoj_3551.cpp
problems/zoj/zoj_3556.cpp
problems/zoj/zoj_3557.cpp
problems/zoj/zoj_3558.cpp
problems/zoj/zoj_3622.cpp
problems/zoj/zoj_3626.cpp
problems/zoj/zoj_3627.cpp
problems/zoj/zoj_3630.cpp
problems/zoj/zoj_3631.cpp
problems/zoj/zoj_3632.cpp
problems/zoj/zoj_3633.cpp
problems/zoj/zoj_3634.cpp
problems/zoj/zoj_3635.cpp
problems/zoj/zoj_3636.cpp
problems/zoj/zoj_3637.cpp
problems/zoj/zoj_3640.cpp
problems/zoj/zoj_3641.cpp
problems/zoj/zoj_3642.cpp
problems/zoj/zoj_3643.cpp
problems/zoj/zoj_3644.cpp
problems/zoj/zoj_3645.cpp
problems/zoj/zoj_3646.cpp
problems/zoj/zoj_3647.cpp
problems/zoj/zoj_3648.cpp
problems/zoj/zoj_3649_classic_tree.cpp
problems/zoj/zoj_3650.cpp
problems/zoj/zoj_3651.cpp
problems/zoj/zoj_3652.cpp
problems/zoj/zoj_3653.cpp
problems/zoj/zoj_3654.cpp
problems/zoj/zoj_3666.cpp
problems/zoj/zoj_3668.cpp
problems/zoj/zoj_3674.cpp
template/AC_Auto_Machine.cpp
template/KMP_match.cpp
template/KM_match.cpp
template/LCA_online.cpp
template/LCA_tarjan.cpp
template/MST_cnt.cpp
template/RMQ.cpp
template/ZL_MST.cpp
template/all_templete.cpp
template/bell_manford.cpp
template/big_integer.cpp
template/cmp_geometry.cpp
template/comb2num.cpp
template/converx_hull.cpp
template/date.cpp
template/dijkstra.cpp
template/find_components.cpp
template/floyd_warshall.cpp
template/gen_comb.cpp
template/gen_perm.cpp
template/gen_perm_swap.cpp
template/hungary.cpp
template/max_clique.cpp
template/maxflow_dicnic.cpp
template/mcmf.cpp
template/miller_rabbin_pollar_rho.cpp
template/modular_exponent.cpp
template/modular_linear_system.cpp
template/mst_kruskal.cpp
template/mst_prim.cpp
template/multi_hungary.cpp
template/num2comb.cpp
template/num2perm.cpp
template/partition_tree.cpp
template/perm2num.cpp
template/point_binary_connect_component.cpp
template/segment_tree.cpp
template/spfa.cpp
template/suffix_array.cpp
template/suffix_auto_mation.cpp
template/trie_tree.cpp
template/union_find_set.cpp
template_back/SELF_TEMP/AC_Auto_Machine.cpp
template_back/SELF_TEMP/KMP_match.cpp
template_back/SELF_TEMP/KM_match.cpp
template_back/SELF_TEMP/LCA_online.cpp
template_back/SELF_TEMP/LCA_tarjan.cpp
template_back/SELF_TEMP/MST_cnt.cpp
template_back/SELF_TEMP/RMQ.cpp
template_back/SELF_TEMP/ZL_MST.cpp
template_back/SELF_TEMP/all_templete.cpp
template_back/SELF_TEMP/bell_manford.cpp
template_back/SELF_TEMP/big_integer.cpp
template_back/SELF_TEMP/cmp_geometry.cpp
template_back/SELF_TEMP/comb2num.cpp
template_back/SELF_TEMP/converx_hull.cpp
template_back/SELF_TEMP/date.cpp
template_back/SELF_TEMP/dijkstra.cpp
template_back/SELF_TEMP/find_components.cpp
template_back/SELF_TEMP/floyd_warshall.cpp
template_back/SELF_TEMP/gen_comb.cpp
template_back/SELF_TEMP/gen_perm.cpp
template_back/SELF_TEMP/gen_perm_swap.cpp
template_back/SELF_TEMP/hungary.cpp
template_back/SELF_TEMP/max_clique.cpp
template_back/SELF_TEMP/maxflow_dicnic.cpp
template_back/SELF_TEMP/mcmf.cpp
template_back/SELF_TEMP/miller_rabbin_pollar_rho.cpp
template_back/SELF_TEMP/modular_exponent.cpp
template_back/SELF_TEMP/modular_linear_system.cpp
template_back/SELF_TEMP/mst_kruskal.cpp
template_back/SELF_TEMP/mst_prim.cpp
template_back/SELF_TEMP/multi_hungary.cpp
template_back/SELF_TEMP/num2comb.cpp
template_back/SELF_TEMP/num2perm.cpp
template_back/SELF_TEMP/partition_tree.cpp
template_back/SELF_TEMP/perm2num.cpp
template_back/SELF_TEMP/point_binary_connect_component.cpp
template_back/SELF_TEMP/segment_tree.cpp
template_back/SELF_TEMP/spfa.cpp
template_back/SELF_TEMP/suffix_array.cpp
template_back/SELF_TEMP/suffix_auto_mation.cpp
template_back/SELF_TEMP/topaint_2012_10_11/AC_Auto_Machine.cpp
template_back/SELF_TEMP/topaint_2012_10_11/KM_match.cpp
template_back/SELF_TEMP/topaint_2012_10_11/LCA_online.cpp
template_back/SELF_TEMP/topaint_2012_10_11/LCA_tarjan.cpp
template_back/SELF_TEMP/topaint_2012_10_11/MST_cnt.cpp
template_back/SELF_TEMP/topaint_2012_10_11/RMQ.cpp
template_back/SELF_TEMP/topaint_2012_10_11/ZL_MST.cpp
template_back/SELF_TEMP/topaint_2012_10_11/miller_rabbin_pollar_rho.cpp
template_back/SELF_TEMP/topaint_2012_10_11/multi_hungary.cpp
template_back/SELF_TEMP/topaint_2012_10_11/partition_tree.cpp
template_back/SELF_TEMP/topaint_2012_10_11/suffix_array.cpp
template_back/SELF_TEMP/topaint_2012_10_11/ttl.cpp
template_back/SELF_TEMP/trie_tree.cpp
template_back/SELF_TEMP/union_find_set.cpp
template_back/STL/string.cpp
topcoder/srm_codes/srm550/EasyConversionMachine.cpp
topcoder/srm_codes/srm550/RotatingBot.cpp
topcoder/srm_codes/srm550/TopView.cpp
topcoder/srm_codes/srm553/PlatypusDuckAndBeaver.cpp
topcoder/srm_codes/srm553/SafeRemoval.cpp
topcoder/srm_codes/srm553/Suminator.cpp
topcoder/srm_codes/srm554/TheBrickTowerEasyDivOne.cpp
topcoder/srm_codes/srm554/TheBrickTowerEasyDivTwo.cpp
topcoder/srm_codes/srm554/TheBrickTowerHardDivTwo.cpp
topcoder/srm_codes/srm554/TheBrickTowerMediumDivOne.cpp
topcoder/srm_codes/srm554/TheBrickTowerMediumDivTwo.cpp
topcoder/srm_codes/srm555/CuttingBitString.cpp
topcoder/srm_codes/srm555/MuddyRoad2.cpp
topcoder/srm_codes/srm555/XorBoardDivTwo.cpp
topcoder/srm_codes/srm598/BinPacking.cpp
topcoder/srm_codes/srm598/FoxAndFencing.cpp
topcoder/srm_codes/srm598/TPS.cpp
topcoder/srm_codes/tco2013_r1A/DirectionBoard.cpp
topcoder/srm_codes/tco2013_r1A/HouseBuilding.cpp
topcoder/srm_codes/tco2013_r1A/TheFrog.cpp
topcoder/srm_codes/tco2013_r1B/EllysFigurines.cpp
topcoder/srm_codes/tco2013_r1B/EllysPairs.cpp
topcoder/srm_codes/tco2013_r1B/EllysReversals.cpp
/usr/include/math.h
/usr/include/string.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/nan.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/features.h
/usr/include/xlocale.h
/usr/include/bits/types.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/stdlib.h
/usr/include/sys/cdefs.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/typesizes.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs-32.h
/usr/include/sys/types.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/pthreadtypes.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/time.h
/usr/include/bits/timex.h
